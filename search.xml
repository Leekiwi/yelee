<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>项目结构tree图</title>
      <link href="/yelee/2018/10/13/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%9B%BE/"/>
      <url>/yelee/2018/10/13/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%9B%BE/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="目录结构介绍"><a href="#目录结构介绍" class="headerlink" title="目录结构介绍"></a>目录结构介绍</h2><blockquote><p>vue-cli2.0</p></blockquote><a id="more"></a><pre><code>|-- build                            // webpack配置文件|-- config                           // 项目打包路径|-- src                              // 源码目录|   |-- components                   // 组件|       |-- common                   // 公共组件|           |-- bus.js                // Event Bus|           |-- Header.vue           // 公共头部|           |-- Home.vue                // 公共路由入口|           |-- Sidebar.vue          // 公共左边栏|           |-- Tags.vue                // 页面切换标签组件|       |-- page                        // 主要路由页面|           |-- 403.vue|           |-- 404.vue|           |-- BaseCharts.vue       // 基础图表|           |-- BaseForm.vue         // 基础表单|           |-- BaseTable.vue        // 基础表格|           |-- DashBoard.vue        // 系统首页|           |-- DragList.vue         // 拖拽列表组件|           |-- Icon.vue             // 自定义图标组件|           |-- Login.vue               // 登录|           |-- Markdown.vue         // markdown组件|           |-- Premission.vue       // 权限测试组件|           |-- Upload.vue           // 图片上传|           |-- VueEditor.vue        // 富文本编辑器|   |-- App.vue                      // 页面入口文件|   |-- main.js                      // 程序入口文件，加载各种公共组件|-- .babelrc                         // ES6语法编译配置|-- .editorconfig                    // 代码编写规格|-- .gitignore                       // 忽略的文件|-- index.html                       // 入口html文件|-- package.json                     // 项目及工具的依赖配置文件|-- README.md                        // 说明</code></pre>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实用 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>npm报错：error code EINTEGRITY</title>
      <link href="/yelee/2018/10/13/npm%E6%8A%A5%E9%94%99%EF%BC%9Aerror-code-EINTEGRITY/"/>
      <url>/yelee/2018/10/13/npm%E6%8A%A5%E9%94%99%EF%BC%9Aerror-code-EINTEGRITY/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天 npm install 时候遇到类似的错误</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法:"></a>解决办法:</h3><blockquote><p>一、升级 npm<br><code>npm i -g npm</code><br><a id="more"></a><br>二、删除 package-lock.json</p></blockquote><blockquote><p>三、删除缓存目录下的所有数据<br><code>npm cache clean –force</code></p></blockquote><blockquote><p>四、验证缓存数据的有效性和完整性，清理垃圾数据<br><code>npm cache verify</code></p></blockquote><blockquote><p>五、包问题<br>包是在 windows 下发布的，在 linux 安装错误。<br>排查方法：看日志，去除相关的包配置，再安装测试</p></blockquote><p>一般到第四步即可完美解决</p>]]></content>
      
      <categories>
          
          <category> 工作常见问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端</title>
      <link href="/yelee/2018/09/13/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"/>
      <url>/yelee/2018/09/13/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="security">  <div class="input-container">  <input type="password" class="form-control" id="pass" placeholder="请输入密码以访问" />    <label for="pass">请输入密码以访问</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/yelee/lib/crypto-js.js"></script><script src="/yelee/lib/blog-encrypt.js"></script><link href="/yelee/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      <categories>
          
          <category> 前端面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端面试 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ES6中简约强大数组操作组合</title>
      <link href="/yelee/2018/09/07/ES6%E4%B8%AD%E7%AE%80%E7%BA%A6%E5%BC%BA%E5%A4%A7%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%BB%84%E5%90%88/"/>
      <url>/yelee/2018/09/07/ES6%E4%B8%AD%E7%AE%80%E7%BA%A6%E5%BC%BA%E5%A4%A7%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%BB%84%E5%90%88/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ES6-数组新增方法"><a href="#ES6-数组新增方法" class="headerlink" title="ES6 数组新增方法"></a>ES6 数组新增方法</h2><h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h3><p><code>array.reduce(callback[, initialValue])</code></p><a id="more"></a><p>数组求和</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br><span class="line">numbers.reduce(<span class="function">(<span class="params">prev, cur, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'prev: '</span> + prev + <span class="string">'; '</span> + <span class="string">'cur: '</span> + cur + <span class="string">';'</span>)</span><br><span class="line">  <span class="keyword">return</span> prev + cur</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">prev: <span class="number">10</span></span><br><span class="line">cur: <span class="number">20</span></span><br><span class="line">prev: <span class="number">30</span></span><br><span class="line">cur: <span class="number">30</span></span><br><span class="line">prev: <span class="number">60</span></span><br><span class="line">cur: <span class="number">40</span></span><br></pre></td></tr></table></figure><p>这第二个参数就是设置 prev 的初始类型和初始值，比如为 0，就表示 prev 的初始值为 number 类型，值为 0，因此，reduce 的最终结果也会是 number 类型。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br><span class="line">numbers.reduce(<span class="function">(<span class="params">prev, cur, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'prev: '</span> + prev + <span class="string">'; '</span> + <span class="string">'cur: '</span> + cur + <span class="string">';'</span>)</span><br><span class="line">  <span class="keyword">return</span> prev + cur</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">prev: <span class="number">0</span></span><br><span class="line">cur: <span class="number">10</span></span><br><span class="line">prev: <span class="number">10</span></span><br><span class="line">cur: <span class="number">20</span></span><br><span class="line">prev: <span class="number">30</span></span><br><span class="line">cur: <span class="number">30</span></span><br><span class="line">prev: <span class="number">60</span></span><br><span class="line">cur: <span class="number">40</span></span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.zhangxinxu.com/wordpress/2013/04/es5%E6%96%B0%E5%A2%9E%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/" target="_blank" rel="noopener">https://www.zhangxinxu.com/wordpress/2013/04/es5%E6%96%B0%E5%A2%9E%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/</a></p><p><a href="https://segmentfault.com/a/1190000005921341" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005921341</a></p><p><a href="https://segmentfault.com/a/1190000013972464" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013972464</a></p><p><a href="https://segmentfault.com/a/1190000013121115" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013121115</a></p>]]></content>
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>干掉状态从session到token</title>
      <link href="/yelee/2018/09/07/%E5%B9%B2%E6%8E%89%E7%8A%B6%E6%80%81%E4%BB%8Esession%E5%88%B0token/"/>
      <url>/yelee/2018/09/07/%E5%B9%B2%E6%8E%89%E7%8A%B6%E6%80%81%E4%BB%8Esession%E5%88%B0token/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="美好的旧时光"><a href="#美好的旧时光" class="headerlink" title="美好的旧时光"></a>美好的旧时光</h2><p>我经常怀念三十年前那美好的旧时光， 工作很轻松， 生活很悠闲。</p><p>上班的时候偶尔有些 HTTP 的请求发到我这里， 我简单的看一下， 取出相对应的 html 文档，图片，发回去就可以了， 然后就可以继续喝茶聊天。</p><a id="more"></a><p>我的创造者们对我很好， 他们制定的一个简单 HTTP 协议， 就是请求加响应， 尤其是我不用记住是谁刚刚发了 HTTP 请求， 每个请求对我来说都是全新的！</p><p>邮件服务器很羡慕我， 他说：老弟，你的生活太惬意了， 哪像我， 每次有人从客户端访问邮箱， 我都得专门给他建立一个会话， 来处理他发的消息， 你倒好， 完全不用管理会话。</p><p>这是由应用的特性决定的， 如果邮件服务器不管理会话， 那多个人之间的邮件消息就会完全混到一起了， 乱作一团了。</p><p>而 30 年前的 Web 基本上就是文档的浏览而已， 既然是浏览，我作为一个服务器， 为什么要记住谁在一段时间里都浏览了什么文档呢？</p><p>2</p><h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><p>但是好日子没持续多久， 很快大家就不满足于静态的 Html 文档了， 交互式的 Web 应用开始兴起， 尤其是论坛， 在线购物等网站。</p><p>我马上就遇到了和邮件服务器一样的问题， 那就是必须管理会话，必须记住哪些人登录系统， 哪些人往自己的购物车中放了商品， 也就是说我必须把每个人区分开。</p><p>这对我来说是个不小的挑战， 由于 HTTP 协议的无状态特性， 我必须加点小手段，才能完成会话管理。</p><p>我想出的办法就是给大家发一个会话标识(session id), 说白了就是一个随机的字符串，每个人收到的都不一样， 每次大家向我发起 HTTP 请求的时候，把这个字符串给一并捎过来， 这样我就能区分开谁是谁了。</p><p>3</p><h2 id="沉重的负担"><a href="#沉重的负担" class="headerlink" title="沉重的负担"></a>沉重的负担</h2><p>大家都很高兴， 可是我就不爽了。</p><p>每个人只需要保存自己的 session id，而我需要保存所有人的 session id ！ 如果访问我的人多了， 就得由成千上万，甚至几十万个。</p><p>这对我来说是一个巨大的开销 ， 严重的限制了我的扩展能力， 比如说我用两个机器组成了一个集群， 小 F 通过机器 A 登录了系统， 那 session id 会保存在机器 A 上， 假设小 F 的下一次请求被转发到机器 B 怎么办？ 机器 B 可没有小 F 的 session id 啊。</p><p>有时候我会采用一点小伎俩： <strong>session sticky</strong> ， 就是让小 F 的请求一直粘连在机器 A 上， 但是这也不管用， 要是机器 A 挂掉了， 还得转到机器 B 去。</p><p>那我只好做 session 的复制了， 把 session id 在两个机器之间搬来搬去， 快累死了。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vNJe66yhKRkVOxqS9gxftlwCuh8yicUcPPFaMMLv0oia9Xzf5IutmIPwQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><blockquote><ul><li>后来有个叫 <strong>Memcached</strong> 的给我支了招： 把 session id 集中存储到一个地方， 所有的机器都来访问这个地方的数据， 这样一来，就不用复制了， 但是增加了单点失败的可能性， 要是那个负责 session 的机器挂了， 所有人都得重新登录一遍， 估计得被人骂死。</li></ul></blockquote><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vwDyicwnvVayaKBpxXY4W5mUgQDwHD7Iwu3yY2OhV4qXG49oMbIgQP0A/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>我也尝试把这个单点的机器也搞出集群，增加可靠性， 但不管如何， 这小小的 session 对我来说是一个沉重的负担。</p><p>4</p><h3 id="时间换空间"><a href="#时间换空间" class="headerlink" title="时间换空间"></a>时间换空间</h3><p>这几天的晚上我一直在思考， 我为什么要保存这可恶的 session 呢， 只让每个客户端去保存该多好？</p><p>可是如果我不保存这些 session id , 我怎么验证客户端发给我的 session id 的确是我生成的呢？ 如果我不去验证，我都不知道他们是不是合法登录的用户， 那些不怀好意的家伙们就可以伪造 session id , 为所欲为了。</p><p>嗯，对了，关键点就是验证 ！</p><blockquote><ul><li>比如说， 小 F 已经登录了系统， 我给他发一个 <strong>令牌(token)</strong>， 里边包含了小 F 的 user id， 下一次小 F 再次通过 Http 请求访问我的时候， 把这个 token 通过 Http header 带过来不就可以了。</li></ul></blockquote><p>不过这和 session id 没有本质区别啊， 任何人都可以可以伪造， 所以我得想点儿办法， 让别人伪造不了。</p><blockquote><ul><li><strong>那就对数据做一个签名吧， 比如说我用 HMAC-SHA256 算法，加上一个只有我才知道的密钥， 对数据做一个签名， 把这个签名和数据一起作为 token ， 由于密钥别人不知道， 就无法伪造 token 了。</strong></li></ul></blockquote><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vicfOmZHQhQ7e6Wjk7licKBMh38rPZfnEQxAibWXjY84P0icEVoFU51ibwiaQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>这个 token 我不保存， 当小 F 把这个 token 给我发过来的时候，我再用同样的 HMAC-SHA256 算法和同样的密钥，对数据再计算一次签名， 和 token 中的签名做个比较， 如果相同， 我就知道小 F 已经登录过了，并且可以直接取到小 F 的 user id , 如果不相同， 数据部分肯定被人篡改过， 我就告诉发送者： 对不起，没有认证。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vNJe66yhKRkVOxqS9gxftlwCuh8yicUcPPFaMMLv0oia9Xzf5IutmIPwQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>Token 中的数据是明文保存的（虽然我会用 Base64 做下编码， 但那不是加密）， 还是可以被别人看到的， 所以我不能在其中保存像密码这样的敏感信息。</p><p>当然， 如果一个人的 token 被别人偷走了， 那我也没办法， 我也会认为小偷就是合法用户， 这其实和一个人的 session id 被别人偷走是一样的。</p><blockquote><ul><li>这样一来， 我就不保存 session id 了， <strong>我只是生成 token , 然后验证 token ， 我用我的 CPU 计算时间获取了我的 session 存储空间 ！</strong></li></ul></blockquote><p>解除了 session id 这个负担， 可以说是无事一身轻， 我的机器集群现在可以轻松地做水平扩展， 用户访问量增大， 直接加机器就行。 这种无状态的感觉实在是太好了！</p><p>（完）</p>]]></content>
      
      <categories>
          
          <category> 状态保持 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>element-ui更换主题和按需引入组件</title>
      <link href="/yelee/2018/09/04/element-ui%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5%E7%BB%84%E4%BB%B6/"/>
      <url>/yelee/2018/09/04/element-ui%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5%E7%BB%84%E4%BB%B6/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="element-ui-使用初体验"><a href="#element-ui-使用初体验" class="headerlink" title="element-ui 使用初体验"></a>element-ui 使用初体验</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>手上有些项目用的<code>element-ui</code>，刚好有空琢磨一下怎么减小打包文件大小和打包速度方面，为了演示实验，用 vue-cli 生成初始项目，在这仅对 element-ui 主题和组件方面来优化。</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack vuecli</span><br></pre></td></tr></table></figure><h3 id="完整引入"><a href="#完整引入" class="headerlink" title="完整引入"></a>完整引入</h3><p>完整地将 ui 和样式引入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span></span><br></pre></td></tr></table></figure><p>在页面简单使用三个组件，看看效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"block"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"demonstration"</span>&gt;</span>区分颜色<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-rate</span> <span class="attr">v-model</span>=<span class="string">"value1"</span> <span class="attr">:colors</span>=<span class="string">"['#99A9BF', '#F7BA2A', '#FF9900']"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-rate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">icon</span>=<span class="string">"el-icon-search"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"success"</span> <span class="attr">icon</span>=<span class="string">"el-icon-check"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"info"</span> <span class="attr">icon</span>=<span class="string">"el-icon-message"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"warning"</span> <span class="attr">icon</span>=<span class="string">"el-icon-star-off"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"danger"</span> <span class="attr">icon</span>=<span class="string">"el-icon-delete"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/gb/element-ui更换主题和按需引入组件/0.bmp" alt=""></p><p>再看一下打包后的资源大小情况<code>npm run build --report</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: fa47514a97341329a7c0</span><br><span class="line">Version: webpack 3.11.0</span><br><span class="line">Time: 20363ms</span><br><span class="line">                                                  Asset       Size  Chunks                    Chunk Names</span><br><span class="line">                 static/fonts/element-icons.6f0a763.ttf      11 kB          [emitted]</span><br><span class="line">               static/js/vendor.5efcf828140d5dbedda9.js     714 kB       0  [emitted]  [big]  vendor</span><br><span class="line">                  static/js/app.a4a31db472f653b911e7.js      12 kB       1  [emitted]         app</span><br><span class="line">             static/js/manifest.2ae2e69a05c33dfc65f8.js  857 bytes       2  [emitted]         manifest</span><br><span class="line">    static/css/app.f24bb0ae3686720fe2e00c5a2024b8f1.css     185 kB       1  [emitted]         app</span><br><span class="line">static/css/app.f24bb0ae3686720fe2e00c5a2024b8f1.css.map     267 kB          [emitted]</span><br><span class="line">           static/js/vendor.5efcf828140d5dbedda9.js.map    2.73 MB       0  [emitted]         vendor</span><br><span class="line">              static/js/app.a4a31db472f653b911e7.js.map    22.8 kB       1  [emitted]         app</span><br><span class="line">         static/js/manifest.2ae2e69a05c33dfc65f8.js.map    4.97 kB       2  [emitted]         manifest</span><br><span class="line">                                             index.html  508 bytes          [emitted]</span><br></pre></td></tr></table></figure><p>发现打包后提取公共模块<code>static/js/vendor.js</code>有 714kb</p><p>再看一下各个模块占用情况：</p><p><img src="/gb/element-ui更换主题和按需引入组件/1.bmp" alt=""></p><p>发现<code>elment-ui.common.js</code>占用最大。所有模块资源总共有 708kb。怎么才能减小打包后的大小呢？很容易就会想到 ui 的引入和样式的引入中，实际我们只使用了三个组件，却整体都被打包了，在这里引入这三个组件即可。</p><h3 id="按需引入组件样式"><a href="#按需引入组件样式" class="headerlink" title="按需引入组件样式"></a>按需引入组件样式</h3><p>新建一个<code>element-variables.scss</code>文件（为什么是 SCSS 文件，后面自定义主题会用到）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/*icon字体路径变量*/</span><br><span class="line">$--font-path: &quot;~element-ui/lib/theme-chalk/fonts&quot;;</span><br><span class="line"></span><br><span class="line">/*按需引入用到的组件的scss文件和基础scss文件*/</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/base.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/rate.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/button.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/row.scss&quot;;</span><br></pre></td></tr></table></figure><h3 id="按需引入组件"><a href="#按需引入组件" class="headerlink" title="按需引入组件"></a>按需引入组件</h3><p>新建一个<code>elementConfig.js</code>文件，将项目用到的 element 组件引入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Rate, Row, Button &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  install(V) &#123;</span><br><span class="line">    V.use(Rate)</span><br><span class="line">    V.use(Button)</span><br><span class="line">    V.use(Row)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第一次优化后打包分析"><a href="#第一次优化后打包分析" class="headerlink" title="第一次优化后打包分析"></a>第一次优化后打包分析</h3><p>将以上<code>element-variables.scss</code>和<code>elementConfig.js</code>引入到<code>main.js</code>中。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'@/assets/js/elementConfig'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'@/assets/css/element-variables.scss'</span></span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI)</span><br></pre></td></tr></table></figure><p>貌似上面一切都很顺理成章，打包后大小会减小。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: <span class="number">3</span>ba9b74482f121efd3aa</span><br><span class="line">Version: webpack <span class="number">3.11</span><span class="number">.0</span></span><br><span class="line">Time: <span class="number">18854</span>ms</span><br><span class="line">                                                  Asset       Size  Chunks                    Chunk Names</span><br><span class="line">                 <span class="keyword">static</span>/fonts/element-icons<span class="number">.6</span>f0a763.ttf      <span class="number">11</span> kB          [emitted]</span><br><span class="line">               <span class="keyword">static</span>/js/vendor<span class="number">.11</span>c71f168a2d61b547a0.js     <span class="number">714</span> kB       <span class="number">0</span>  [emitted]  [big]  vendor</span><br><span class="line">                  <span class="keyword">static</span>/js/app.dbb5b49dad2d42b3598c.js    <span class="number">11.2</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line">             <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js  <span class="number">857</span> bytes       <span class="number">2</span>  [emitted]         manifest</span><br><span class="line">    <span class="keyword">static</span>/css/app.bf52525d6279e7fb87b4db770d119a8d.css    <span class="number">25.7</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line"><span class="keyword">static</span>/css/app.bf52525d6279e7fb87b4db770d119a8d.css.map      <span class="number">63</span> kB          [emitted]</span><br><span class="line">           <span class="keyword">static</span>/js/vendor<span class="number">.11</span>c71f168a2d61b547a0.js.map    <span class="number">2.73</span> MB       <span class="number">0</span>  [emitted]         vendor</span><br><span class="line">              <span class="keyword">static</span>/js/app.dbb5b49dad2d42b3598c.js.map      <span class="number">21</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line">         <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js.map    <span class="number">4.97</span> kB       <span class="number">2</span>  [emitted]         manifest</span><br><span class="line">                                             index.html  <span class="number">508</span> bytes          [emitted]</span><br></pre></td></tr></table></figure><p>结果可知，<code>static/js/vendor.js</code>还是 714kb！</p><p>再看各个模块占用情况：</p><p><img src="/gb/element-ui更换主题和按需引入组件/2.bmp" alt=""></p><p>WHAT?竟然模块都没什么变化，岂不是竹篮打水，事与愿违。</p><h3 id="再次打包优化尝试"><a href="#再次打包优化尝试" class="headerlink" title="再次打包优化尝试"></a>再次打包优化尝试</h3><p>后来查到有人同样遇到这个问题，提出一个<a href="https://github.com/ElemeFE/element/issues/6362#issuecomment-323517538" target="_blank" rel="noopener">issues#6362</a>，原来只引入需要的<code>element-ui</code>组件，<code>webpack</code>还是把整体的 ui 库和样式都打包了，需要一个<code>webpack</code>的<code>babel</code>插件<code>babel-plugin-component</code>，这样才能真正按需引入打包。这块其实被写到官方文档更换 <a href="http://element-cn.eleme.io/#/zh-CN/component/custom-theme" target="_blank" rel="noopener">自定义主题</a> 的配置了。</p><p>于是<code>npm i babel-pugin-componet -D</code>安装后，在增加<code>.babelrc</code>文件插件配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"presets"</span>: [</span><br><span class="line">    [<span class="string">"env"</span>, &#123;</span><br><span class="line">      <span class="string">"modules"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"targets"</span>: &#123;</span><br><span class="line">        <span class="string">"browsers"</span>: [<span class="string">"&gt; 1%"</span>, <span class="string">"last 2 versions"</span>, <span class="string">"not ie &lt;= 8"</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="string">"stage-2"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"plugins"</span>: [<span class="string">"transform-vue-jsx"</span>, <span class="string">"transform-runtime"</span>, [<span class="string">"component"</span>, &#123;</span><br><span class="line">    <span class="string">"libraryName"</span>: <span class="string">"element-ui"</span>,</span><br><span class="line">    <span class="string">"styleLibraryName"</span>: <span class="string">"theme-chalk"</span></span><br><span class="line">  &#125;]]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>页面运行正常，再次打包。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: <span class="number">9</span>cc71dead6d7646c9ed4</span><br><span class="line">Version: webpack <span class="number">3.11</span><span class="number">.0</span></span><br><span class="line">Time: <span class="number">9963</span>ms</span><br><span class="line">                                                  Asset       Size  Chunks             Chunk Names</span><br><span class="line">                 <span class="keyword">static</span>/fonts/element-icons<span class="number">.6</span>f0a763.ttf      <span class="number">11</span> kB          [emitted]</span><br><span class="line">                  <span class="keyword">static</span>/js/app<span class="number">.77</span>c0883f4f0fc0bf5cbc.js    <span class="number">11.4</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line">               <span class="keyword">static</span>/js/vendor<span class="number">.942130</span>fd13274b901889.js     <span class="number">126</span> kB       <span class="number">1</span>  [emitted]  vendor</span><br><span class="line">             <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js  <span class="number">857</span> bytes       <span class="number">2</span>  [emitted]  manifest</span><br><span class="line">    <span class="keyword">static</span>/css/app.b140020e5dbee406ae70780b43ba7ddc.css    <span class="number">27.8</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line"><span class="keyword">static</span>/css/app.b140020e5dbee406ae70780b43ba7ddc.css.map    <span class="number">91.4</span> kB          [emitted]</span><br><span class="line">              <span class="keyword">static</span>/js/app<span class="number">.77</span>c0883f4f0fc0bf5cbc.js.map    <span class="number">21.1</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line">           <span class="keyword">static</span>/js/vendor<span class="number">.942130</span>fd13274b901889.js.map     <span class="number">613</span> kB       <span class="number">1</span>  [emitted]  vendor</span><br><span class="line">         <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js.map    <span class="number">4.97</span> kB       <span class="number">2</span>  [emitted]  manifest</span><br><span class="line">                                             index.html  <span class="number">508</span> bytes          [emitted]</span><br></pre></td></tr></table></figure><p><code>static/js/vendor.js</code>确实变小了，126kB。再来看各个模块分析图。</p><p><img src="/gb/element-ui更换主题和按需引入组件/3.bmp" alt=""></p><p>模块总共 135.03KB，少了 5 倍！</p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p><code>element-ui</code>的<code>theme-chalk</code>使用<code>SCSS</code>编写，如果在自己的项目中也是用<code>SCSS</code>，那么可以直接在项目中改变样式变量，因此可以在前面新建的<code>element-variables.scss</code>文件用新的主题颜色变量覆盖即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/*主题颜色变量*/</span><br><span class="line">$--color-primary: #f0f;</span><br><span class="line"></span><br><span class="line">/*icon字体路径变量*/</span><br><span class="line">$--font-path: &quot;~element-ui/lib/theme-chalk/fonts&quot;;</span><br></pre></td></tr></table></figure><p>可能你已经注意到了，这里没有分别引入用到的组件样式了，是因为<code>babel-plugin-component</code>帮我们按需引入了对应的样式。</p><p>现在我们的主题就变成了</p><p><img src="/gb/element-ui更换主题和按需引入组件/4.bmp" alt=""></p><p>如果你没有用到<code>SCSS</code>，可以用<code>element-theme</code>主题编译插件，生成自定义主题文件引入。</p><p>完~ps：个人见解有限，欢迎指正。</p>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> element-ui </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端必备vscode插件</title>
      <link href="/yelee/2018/09/03/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87vscode%E6%8F%92%E4%BB%B6/"/>
      <url>/yelee/2018/09/03/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87vscode%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这篇文章只要让你做一些基础的配置，把 vscode 变得更加顺手；<br>插件的需求不是一成不变，有些插件我已经移除了。。在最新的 VSCODE 1.9.1 中，<br>部分以前用插件实现的功能已经集成了，那就没有必要存在了。这里就不做推荐了复制代码</p><a id="more"></a><h1 id="必备插件"><a href="#必备插件" class="headerlink" title="必备插件"></a>必备插件</h1><hr><h2 id="功能性"><a href="#功能性" class="headerlink" title="功能性"></a>功能性</h2><ol><li>Auto Close Tag : 匹配标签，关闭对应的标签。很实用【HTML/XML】 Auto</li><li>Rename Tag : sublime 和 webstorm 也有这个内置功能，改变标签的时候同时改动开闭合标签；【HTML/XML】</li><li>beautify : 良好的拓展性，可以格式化 JSON|JS|HTML|CSS|SCSS,比内置格式化好用</li><li>Code Runner : 代码编译运行看结果，支持众多语言</li><li>colorize : 会给颜色代码增加一个当前匹配代码颜色的背景，非常好</li><li>Document This : JSDOC 注解调用，值得易用</li><li>Git History : 不得不赞的插件，谁用谁知道，功能很赞</li><li>HTML CSS Support : 这个也是必备插件之一</li><li>Path Autocomplete : 路径智能补全</li><li>Path Intellisense ： 路径智能提示</li><li>SCSS IntelliSense Preview : SCSS 智能提醒，配置强大</li><li>Syncing: 这个同步插件要比官方市场那个最高下载量的要好，支持删除同步！！！</li><li>Version Lens : 可以及时看到 package.json 内部版本的变动，很实用</li><li>Output Colorizer : 可以终端日志输出着色，实用</li></ol><h2 id="代码片段插件"><a href="#代码片段插件" class="headerlink" title="代码片段插件"></a>代码片段插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JavaScript (ES6) code snippets  : ES6的代码片段，实用</span><br><span class="line">JavaScript Snippet Pack   : ES5及以下的代码片段，实用</span><br></pre></td></tr></table></figure><h2 id="语法校验"><a href="#语法校验" class="headerlink" title="语法校验"></a>语法校验</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stylelint : 比内置的要全，更智能</span><br></pre></td></tr></table></figure><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><ol><li>Panda:用了相当久的一套颜色高亮，个人感觉很耐看</li><li>Enki Theme (Material Design Inspired) : 当前用的代码高亮，个人感觉很赞</li><li>Material Icon Theme : 一套扁平化的文件图标，内置的 seti 也很优秀，还有 simple icon 和 vscode-icons</li></ol><p>作者：爱吃 kiwi<br>链接：<a href="https://leekiwi.github.io/">https://leekiwi.github.io/</a><br>来源：github<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      <categories>
          
          <category> 实用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nodejs学习笔记</title>
      <link href="/yelee/2018/08/28/node-js-study-note/"/>
      <url>/yelee/2018/08/28/node-js-study-note/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Nodejs-学习笔记"><a href="#Nodejs-学习笔记" class="headerlink" title="Nodejs 学习笔记"></a>Nodejs 学习笔记</h2><p><strong>node 内部对模块输出 module.exports 的实现</strong></p><p>变量 module 是 Node 在加载 js 文件前准备的一个变量，并将其传入加载函数</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 准备module对象</span><br><span class="line">var module = &#123;</span><br><span class="line">    id: &apos;hello&apos;,</span><br><span class="line">    exports: &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var load = function(module) &#123;</span><br><span class="line">    // 读取的hello.js代码</span><br><span class="line">    function greet(name) &#123;</span><br><span class="line">        console.log(&apos;Hello, &apos; + name + &apos;!&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    module.exports = greet;</span><br><span class="line"></span><br><span class="line">    // hello.js代码结束</span><br><span class="line">    return module.exports;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var exported = load(module);</span><br><span class="line"></span><br><span class="line">// 保存module</span><br><span class="line">save(module, exported);</span><br></pre></td></tr></table></figure><p>默认情况下，Node 准备的 exports 变量和 module.exports 变量实际上是同一个变量，所以一下两种写法都支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// method 1</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    foo: foo,</span><br><span class="line">    bar: bar</span><br><span class="line">&#125;;</span><br><span class="line">or</span><br><span class="line">module.exports.foo = foo;</span><br><span class="line">module.exports.bar = bar;</span><br><span class="line"></span><br><span class="line">// method 2</span><br><span class="line">exports.foo = foo;</span><br><span class="line">exports.bar = bar;</span><br></pre></td></tr></table></figure><p><strong>process</strong></p><p>下一轮事件循环 回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">process.nextTick(function() &#123;</span><br><span class="line">    console.log(&apos;nextTick callback&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>程序即将退出 回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">process.on(&apos;exit&apos;, function(code) &#123;</span><br><span class="line">    console.log(&apos;about to exit with code&apos; + code);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">console.log(&apos;nextTick set&apos;);</span><br></pre></td></tr></table></figure><p><strong>readFile/readFileSync writeFile/writeFileSync stat</strong></p><p>异步读取一个文本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&apos;./hello.js&apos;, &apos;utf-8&apos;, function(err, data) &#123;</span><br><span class="line">    console.log(&apos;read file start...&apos;);</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>异步读取一个二进制文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&apos;1.jpg&apos;, function(err, data) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // 返回一个buffer对象</span><br><span class="line">        console.log(data);</span><br><span class="line">        // Buffer对象转化成字符串</span><br><span class="line">        console.log(data.toString(&apos;utf-8&apos;));</span><br><span class="line">        // 文件大小</span><br><span class="line">        console.log(data.length + &apos; bytes&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同步读取一个文件直接返回，读取错误用 try…catch 捕获</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">    var data = fs.readFileSync(&apos;./1.jpg&apos;);</span><br><span class="line">    console.log(data);</span><br><span class="line">&#125;</span><br><span class="line">catch(err) &#123;</span><br><span class="line">    console.log(err);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(&apos;readFileSync ended&apos;);</span><br></pre></td></tr></table></figure><p>异步写入一个文件，默认是以 UTF-8 编码写入文本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var data = &apos;Hello,Node.js&apos;;</span><br><span class="line">// var data = fs.readFileSync(&apos;./1.jpg&apos;);</span><br><span class="line">fs.writeFile(&apos;output.txt&apos;, data, function(err) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        console.log(&apos;write file finished&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同步写入文本到一个文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var data = &apos;Hello,Node.js,I am sync data&apos;;</span><br><span class="line">fs.writeFileSync(&apos;output.txt&apos;, data);</span><br><span class="line">console.log(&apos;writeFileSync ended&apos;);</span><br></pre></td></tr></table></figure><p>获取文件信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">fs.stat(&apos;./1.jpg&apos;, function(err, stat) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // 是否是文件</span><br><span class="line">        console.log(&apos;isFile:&apos; + stat.isFile());</span><br><span class="line">        // 是否是目录</span><br><span class="line">        console.log(&apos;isDirectory:&apos; + stat.isDirectory());</span><br><span class="line"></span><br><span class="line">        if(stat.isFile()) &#123;</span><br><span class="line">            // 文件大小</span><br><span class="line">            console.log(&apos;size:&apos; + stat.size);</span><br><span class="line">            // 创建时间，Date对象</span><br><span class="line">            console.log(&apos;birth time:&apos; + stat.birthtime);</span><br><span class="line">            // 修改时间，Date对象</span><br><span class="line">            console.log(&apos;modified time:&apos; + stat.mtime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>PS:绝大部分需要在服务器运行期反复执行业务逻辑，必须使用异步代码服务器启动时如果需要读取配置文件，或者结束时需要写入到状态文件时，可以使用同步代码</p><p><strong>createReadStream createWriteStream pipe</strong></p><p>在 node.js 中，流也是一个对象，我们只需要响应流的事件就可以了。<br>data 事件表示流的数据已经可以读取了，end 事件表示这个流已经到末尾了，没有数据可以读取了，error 事件表示出错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var rs = fs.createReadStream(&apos;./data.txt&apos;, &apos;utf-8&apos;);</span><br><span class="line"></span><br><span class="line">// data事件可能有多次，每次传递的chunk是流的一部分数据</span><br><span class="line">rs.on(&apos;data&apos;, function(chunk) &#123;</span><br><span class="line">    console.log(&apos;data event:&apos;, chunk);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(&apos;end&apos;, function (chunk) &#123;</span><br><span class="line">    console.log(&apos;end event:&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(&apos;error&apos;, function (chunk) &#123;</span><br><span class="line">    console.log(&apos;error event:&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>以流的形式写入文件，只需要不断调用 write()方法，最后以 end()结束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var ws = fs.createWriteStream(&apos;./data.txt&apos;);</span><br><span class="line">ws.write(&apos;user stream write data\n&apos;);</span><br><span class="line">ws.write(&apos;loading...\n&apos;);</span><br><span class="line">ws.write(&apos;END&apos;);</span><br><span class="line">ws.end();</span><br></pre></td></tr></table></figure><p>pipe()把一个文件流和另一个文件流串起来，这样源文件的所有数据就自动写入到目标文件里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var rs = fs.createReadStream(&apos;./data.txt&apos;);</span><br><span class="line">var ors = fs.createReadStream(&apos;./output.txt&apos;);</span><br><span class="line">var ws = fs.createWriteStream(&apos;./output.txt&apos;);</span><br><span class="line">rs.pipe(ws);</span><br></pre></td></tr></table></figure><p>创建一个服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var server = http.createServer(function(request, response) &#123;</span><br><span class="line">    // http请求头的method和url</span><br><span class="line">    console.log(&apos;header meathod:&apos;, request.method);</span><br><span class="line">    console.log(&apos;header url:&apos;, request.url);</span><br><span class="line"></span><br><span class="line">    // 将http响应200写入response，同时设置content-type</span><br><span class="line">    response.writeHead(200, &#123;&apos;Content-Type&apos;: &apos;text/html&apos;&#125;);</span><br><span class="line"></span><br><span class="line">    // 将http响应的html内容写入response</span><br><span class="line">    response.end(&apos;&lt;h1&gt;Hello world!&lt;/h1&gt;&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">console.log(&apos;Server is running at http://localhost:8080&apos;);</span><br></pre></td></tr></table></figure><p>实现一个文件服务器，拼接访问路径读取本地文件，从命令参数获取 root 目录，默认是当前目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">var root = path.resolve(&apos;.&apos;);</span><br><span class="line">console.log(&apos;Static root dir:&apos; + root);</span><br><span class="line"></span><br><span class="line">// 创建服务器</span><br><span class="line"> var server = http.createServer(function (request, response) &#123;</span><br><span class="line">    // node提供url模块解析url字符串 获取url的path</span><br><span class="line"></span><br><span class="line">    var pathname = url.parse(request.url).pathname;</span><br><span class="line"></span><br><span class="line">    if (pathname === &apos;/favicon.ico&apos;) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    console.log(&apos;url:&apos;, url.parse(request.url));</span><br><span class="line"></span><br><span class="line">    // 获取对应本地文件路径</span><br><span class="line">    var filepath = path.join(root, pathname);</span><br><span class="line">    // 读取文件状态</span><br><span class="line">    fs.stat(filepath, function (err, stats) &#123;</span><br><span class="line">        // 文件出错</span><br><span class="line">        if (err) &#123;</span><br><span class="line">            console.log(&apos;file error!&apos;);</span><br><span class="line">            response.end(&apos;&lt;h1&gt;file error!&lt;/h1&gt;&apos;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 是文件</span><br><span class="line">        if (stats.isFile()) &#123;</span><br><span class="line">            console.log(&apos;200 &apos; + request.url);</span><br><span class="line">            response.writeHead(200);</span><br><span class="line">            // 将文件流导入response</span><br><span class="line">            fs.createReadStream(filepath).pipe(response);</span><br><span class="line">        &#125;</span><br><span class="line">        // 文件不存在</span><br><span class="line">        else &#123;</span><br><span class="line">            console.log(&apos;404 &apos; + request.url);</span><br><span class="line">            response.writeHead(404);</span><br><span class="line">            // 将文件流导入response</span><br><span class="line">            response.end(&apos;&lt;h1&gt;404 not found!&lt;/h1&gt;&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">console.info(&apos;Server is runing at http://localhost:8080/&apos;);</span><br></pre></td></tr></table></figure><p>express 是第一代流行的 web 框架，它对 Node.js 的 HTTP 进行封装，语法基于 ES5，要实现异步代码，只有一个方法：回调。</p><p>koa2 完全基于 ES7 开发，使用 Promise 配合 async 实现异步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">// 创建一个Koa对象</span><br><span class="line">const app = new Koa();</span><br><span class="line"></span><br><span class="line">// 对于任何请求，app将调用该异步函数处理请求</span><br><span class="line">// ctx是koa封装request和response变量</span><br><span class="line">// next是koa传入的将要处理下一个异步函数</span><br><span class="line">// 每个async函数称为middleware</span><br><span class="line">// app.use()顺序决定了middleware的顺序</span><br><span class="line"></span><br><span class="line">app.use(async(ctx, next) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">    fs.readFile(&apos;./data.txt&apos;, &apos;utf-8&apos;, function(err, data) &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 调用下一个middleware，如果没有调用，则下一个middleware不会执行</span><br><span class="line">    await next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.use(async(ctx, next) =&gt; &#123;</span><br><span class="line">    ctx.response.type = &apos;text/html&apos;;</span><br><span class="line">    ctx.response.body = &apos;&lt;h1&gt;Hello, koa!&lt;/h1&gt;&apos;;</span><br><span class="line">    console.log(&apos;response end&apos;);</span><br><span class="line">    // 调用下一个middleware</span><br><span class="line">    await next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(3000);</span><br><span class="line">console.log(&apos;app started at http://localhost:3000/&apos;);</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>对MVC、MVP和MVVM的简单认识</title>
      <link href="/yelee/2018/08/27/%E5%AF%B9MVC%E3%80%81MVP%E5%92%8CMVVM%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/"/>
      <url>/yelee/2018/08/27/%E5%AF%B9MVC%E3%80%81MVP%E5%92%8CMVVM%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="MVVM-的前世与今生"><a href="#MVVM-的前世与今生" class="headerlink" title="MVVM 的前世与今生"></a>MVVM 的前世与今生</h2><h3 id="1-先聊一下-MVC"><a href="#1-先聊一下-MVC" class="headerlink" title="1. 先聊一下 MVC"></a>1. 先聊一下 MVC</h3><p>MVC：Model（模型） View（视图） Controller（控制器），主要是基于分层的目的，让彼此的职责分开。</p><p>View 通过 Controller 和 Model 联系，Controller 是 View 和 Model 的协调者，view 和 Model 不直接联系，基本联系都是单向的。</p><a id="more"></a><h3 id="2-顺带提下-MVP"><a href="#2-顺带提下-MVP" class="headerlink" title="2. 顺带提下 MVP"></a>2. 顺带提下 MVP</h3><p>MVP：是从 MVC 模式演变而来的，都是通过 Controller/Presenter 负责逻辑的处理+Model 提供数据+View 负责显示。</p><p>在 MVP 中，Presenter 完全把 View 和 Model 进行分离，主要的程序逻辑在 Presenter 里实现。并且，Presenter 和 View 是没有直接关联的，是通过定义好的接口进行交互，从而使得在变更 View 的时候可以保持 Presenter 不变。</p><h3 id="3-再聊聊-MVVN"><a href="#3-再聊聊-MVVN" class="headerlink" title="3. 再聊聊 MVVN"></a>3. 再聊聊 MVVN</h3><p>MVVM：Model + View + ViewModel，把 MVC 中的 Controller 和 MVP 中的 Presenter 改成 ViewModel</p><p>view 的变化会自动更新到 ViewModel，ViewModel 的变化也会自动同步到 View 上显示。这种自动同步是因为 ViewModel 中的属性实现了 Observer，当属性变更时都能触发对应操作。</p><ul><li>View 是 HTML 文本的 js 模板；</li><li>ViewModel 是业务逻辑层（一切 js 可视业务逻辑，比如表单按钮提交，自定义事件的注册和处理逻辑都在 viewmodel 里面负责监控俩边的数据）；</li><li>Model 数据层，对数据的处理（与后台数据交互的增删改查）</li></ul><p>提一下我熟悉的 MVVM 框架：vue.js，Vue.js 是一个构建数据驱动的 web 界面的渐进式框架。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。核心是一个响应的数据绑定系统。</p><h3 id="4-一句话总结下不同之处"><a href="#4-一句话总结下不同之处" class="headerlink" title="4. 一句话总结下不同之处"></a>4. 一句话总结下不同之处</h3><p>MVC 中联系是单向的，MVP 中 P 和 V 通过接口交互，MVVP 的联系是双向的</p>]]></content>
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CDN原理介绍</title>
      <link href="/yelee/2018/08/27/CDN%E5%8E%9F%E7%90%86%E7%90%86%E8%A7%A3/"/>
      <url>/yelee/2018/08/27/CDN%E5%8E%9F%E7%90%86%E7%90%86%E8%A7%A3/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CDN-原理剖析"><a href="#CDN-原理剖析" class="headerlink" title="CDN 原理剖析"></a>CDN 原理剖析</h2><blockquote><blockquote><p>内容分发网络（Content delivery network 或 Content distribution network，缩写：CDN）是指一种通过互联网互相连接的电脑网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、视频、应用程序及其他文件发送给用户，来提供高性能、可扩展性及低成本的网络内容传递给用户。</p></blockquote></blockquote><a id="more"></a><blockquote><h3 id="为什么需要-CDN"><a href="#为什么需要-CDN" class="headerlink" title="为什么需要 CDN"></a>为什么需要 CDN</h3><p>根本上的原因是，访问速度对互联网应用的用户体验、口碑、甚至说直接的营收都有巨大的影响，任何的企业都渴望自己站点有更快的访问速度。而 HTTP 传输时延对 web 的访问速度的影响很大，在绝大多数情况下是起决定性作用的，这是由 TCP/IP 协议的一些特点决定的。物理层上的原因是光速有限、信道有限，协议上的原因有丢包、慢启动、拥塞控制等。</p><p>要提高访问速度，最简单的做法当然就是多设置几个服务器，让终端用户离服务器“更近”。典型的例子是各类下载网站在不同地域不同运营商设置镜像站，或者是像 Google 那样设置多个数据中心。但是多设几个服务器的问题也不少，一是多地部署时的困难，二是一致性没法保障，三则是管理困难、成本很高。实际上，在排除多地容灾等特殊需求的情况下，对大多数公司这种做法是不太可取的。当然，这种方案真正做好了，甚至是比后续所说的使用 CDN 要好的。</p><p>CDN 是一种公共服务，他本身有很多台位于不同地域、接入不同运营商的服务器，而所谓的使用 CDN 实质上就是让 CDN 作为网站的门面，用户访问到的是 CDN 服务器，而不是直接访问到网站。由于 CDN 内部对 TCP 的优化、对静态资源的缓存、预取，加上用户访问 CDN 时，会被智能地分配到最近的节点，降低大量延迟，让访问速度可以得到很大提升。</p><h3 id="CDN-的原理"><a href="#CDN-的原理" class="headerlink" title="CDN 的原理"></a>CDN 的原理</h3><blockquote><p>CDN 做了两件事，一是让用户访问最近的节点，二是从缓存或者源站获取资源</p></blockquote><p>CDN 有个源站的概念，源站就是提供内容的站点(网站的真实服务器), 从源站取内容的过程叫做回源。</p><p>每次访问的具体流程如图（以最普通的 CDN 为例）</p><p><img src="https://cloud.githubusercontent.com/assets/5894477/22008791/4edc00b0-dcb9-11e6-9663-ed19a3fa3182.png" alt="流程图"></p><p>具体举个例子：</p><p>用户在首次访问 <a href="https://assets-cdn.github.com/pinned-octocat.svg" target="_blank" rel="noopener">https://assets-cdn.github.com/pinned-octocat.svg</a> , 假设不委托 local DNS 服务器递归查询，会经历以下几个过程</p><ol><li>浏览器检查本地有没有这个东东的有效缓存，有则使用缓存，没有有效缓存则进行对<code>assets-cdn.github.com</code>的 DNS 查询，获得一个 CNAME 记录, <code>igithub.map.fastly.net</code>,值得注意的是，多个加速域名可以解析到同一个 CNAME，CDN 回源和缓存的时候考虑到了 hostname，+1；</li><li>进行对<code>github.map.fastly.net</code>的 DNS 查询，获得一个 A/AAAA 记录，给出地址<code>103.245.222.133</code>（视网站不同返回的不一样，可以有多个）, 这一步对 CDN 来说时十分重要的，它给出了离用户最近的边缘节点；</li><li>浏览器选一个返回的地址，然后进行真正的 http 请求，开始向<code>103.245.222.133</code>握手，握手完了把 http 请求头也发给了该边缘服务器;</li><li>边缘服务器检查自己的 cache 里面有没有<code>https://assets-cdn.github.com/pinned-octocat.svg</code>这个资源，有则返回给用户，如果没有，向 CDN 中心服务器发起请求;</li><li>CDN 中心服务器检查自己的 cache 里面有没有这个资源，有则返回给边缘服务器，没有则回源;</li><li>中心服务器发现客户配置了<code>github.map.fastly.net</code>的回源地址(这个只有 cdn 会知道，假设是<code>xxx.xxx.xxx.xxx</code>)，就把 http 请求发到源站地址上，源站返回后返回给请求方;</li></ol><p>可以看出 CDN 加速的原理很大部分是跟 DNS 挂钩在一起的，CDN 供应商几乎一定需要一个智能 DNS 服务器。CDN 可以拿到所有的明文数据，所以对数据安全性、保密性要求比较高的企业会选择自建 CDN 或者设置 NS 记录，指向自建的智能 DNS 服务器。</p><p>上述步骤每一步都可以缓存，注意是每一步！ 所以 CDN 要清除缓存很难，因为有很多服务器上的缓存要清除。无论是用户对边缘服务器的请求，还是 CDN 服务器的回源都可以使用 https。</p><p>注意，实际环境中图中每个服务器都可以是集群，甚至 CDN 分区域中心和总中心。</p></blockquote>]]></content>
      
      <categories>
          
          <category> 用户体验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端性能优化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vscode 实现设备上设置统一</title>
      <link href="/yelee/2018/08/24/vscode%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5/"/>
      <url>/yelee/2018/08/24/vscode%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一键同步-vscode-上的插件"><a href="#一键同步-vscode-上的插件" class="headerlink" title="一键同步 vscode 上的插件"></a>一键同步 vscode 上的插件</h2><p>准备工作：电脑上需安装 VSCode，拥有一个 github 账户。实现同步的功能主要依赖于 VSCode 插件 “Settings Sync”</p><h1 id="Setting-Sync-可同步包含的所有扩展和完整的用户文件夹"><a href="#Setting-Sync-可同步包含的所有扩展和完整的用户文件夹" class="headerlink" title="Setting Sync 可同步包含的所有扩展和完整的用户文件夹"></a>Setting Sync 可同步包含的所有扩展和完整的用户文件夹</h1><a id="more"></a><ol><li>设置文件</li><li>快捷键设置文件</li><li>Launch File</li><li>Snippets Folder</li><li>VSCode 扩展设置</li><li>工作空间</li></ol><h1 id="Setting-Sync-快捷键"><a href="#Setting-Sync-快捷键" class="headerlink" title="Setting Sync 快捷键"></a>Setting Sync 快捷键</h1><ol><li>上传： <code>Shift + Alt + U</code> (Sync: Update / Upload Settings)</li><li>下载： <code>Shift + Alt + D</code> (Sync: Download Settings)</li></ol><p>如果快捷键有冲突，可<code>Ctrl + K + S</code>快捷键设置配置其它快捷键 或 <code>Ctrl + P / F1</code> 在命令窗口输入 &gt;sync 即会出现相应命令供选择<br><img src="https://upload-images.jianshu.io/upload_images/7323128-6b887c855f200189.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170824104107261-1046727224.png"></p><h1 id="Step1-安装-同步插件”Settings-Sync”"><a href="#Step1-安装-同步插件”Settings-Sync”" class="headerlink" title="Step1. 安装 同步插件”Settings Sync”"></a>Step1. 安装 同步插件”Settings Sync”</h1><p><img src="https://upload-images.jianshu.io/upload_images/7323128-78990ea142e0f083.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823100639527-466207576.png"></p><h1 id="Step2-进入-github-gt-Settings-在左侧-Developer-settings-gt-Personal-access-tokens"><a href="#Step2-进入-github-gt-Settings-在左侧-Developer-settings-gt-Personal-access-tokens" class="headerlink" title="Step2. 进入 github -&gt; Settings 在左侧 Developer settings -&gt; Personal access tokens"></a>Step2. 进入 github -&gt; Settings 在左侧 Developer settings -&gt; Personal access tokens</h1><p><img src="https://upload-images.jianshu.io/upload_images/7323128-72b710b21917ce93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101018886-1450593067.png"></p><h1 id="Step3-点击按钮-Generate-new-token-新增一个-token"><a href="#Step3-点击按钮-Generate-new-token-新增一个-token" class="headerlink" title="Step3. 点击按钮 Generate new token 新增一个 token"></a>Step3. 点击按钮 Generate new token 新增一个 token</h1><p>图 1:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-a9e06366f6acbf24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101243980-1384930832.png"><br>图 2:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-2f69bf05699ce6a7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101418527-2001799760.png"><br>图 3:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-8d5ebc31a1a3cd97.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101508918-1034003796.png"><br>记住你自己生成的 token 值，在 VSCode 配置上回用得到，最好找个笔记保存下来。</p><h1 id="Step4-回到-VSCode-配置将-token-配置到本地"><a href="#Step4-回到-VSCode-配置将-token-配置到本地" class="headerlink" title="Step4. 回到 VSCode 配置将 token 配置到本地"></a>Step4. 回到 VSCode 配置将 token 配置到本地</h1><p>(Sync: Update / Uplaod Settings) <code>Shift + Alt + U</code> 在弹窗里输入你的 token， 回车后会生成 syncSummary.txt 文件</p><p><img src="https://upload-images.jianshu.io/upload_images/7323128-4561bc7955172c6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170824103332230-1621543570.png"></p><p>syncSummary.txt 文件会存储 VSCode 的设置及所安装的插件列表<br>有点类似 package.json 这样形式的文件<br>可以将自己的 token 分享到自己的团队里面去，这样团队可以共用一套设置。</p><h1 id="Step5-设置上同步下载设置"><a href="#Step5-设置上同步下载设置" class="headerlink" title="Step5. 设置上同步下载设置"></a>Step5. 设置上同步下载设置</h1><p>(Sync: Download Settings) <code>Shift + Alt + D</code> 在弹窗里输入你的 gist 值，稍后片刻便可同步成功</p><h1 id="Step6-如果要重置同步设置，变更其它-token"><a href="#Step6-如果要重置同步设置，变更其它-token" class="headerlink" title="Step6. 如果要重置同步设置，变更其它 token"></a>Step6. 如果要重置同步设置，变更其它 token</h1><p><code>Ctrl+P / F1</code> 弹出输入&gt;sync,即可重新配置你的其它 token 来同步</p>]]></content>
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> setting </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>正则表达式</title>
      <link href="/yelee/2018/08/22/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/yelee/2018/08/22/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="正则规则汇总"><a href="#正则规则汇总" class="headerlink" title="正则规则汇总"></a>正则规则汇总</h2><p>对字符串的处理，一般分为字符串操作和正则操作。</p><h5 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h5><ul><li>str.search(regStr) 返回 regStr 在 str 中第一个出现的位置</li><li>str.replace(regStr,newStr) 返回替换在 str 中 regStr 后字符串</li></ul><a id="more"></a><ul><li>str.substring(n1,n2) 返回 str 从 n1 位置到 n2 位置前一个字符串</li><li>str.chartAt(n) 返回 n 位置字符</li><li>str.split(regStr) 返回以 regStr 隔开的数组</li><li>str.match(reg) 返回在 str 中符合正则 reg 的字符串数组</li></ul><h5 id="正则操作"><a href="#正则操作" class="headerlink" title="正则操作"></a>正则操作</h5><p>var reg=new RegExp(regStr,’i’); //创建正则对象</p><p>var reg=/regStr/i; //隐式创建正则对象</p><ul><li>reg.test(str) str 是否包含 reg 返回 true/false</li><li>reg.exec(str) 返回匹配到的字符串和最后一次的匹配字符串最后位置的下一个索引</li></ul><h4 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h4><ol><li>/a|b/ a 或 b</li><li>/[abc]/ a 或 b 或 c</li><li>/[a-zA-Z0-9]/ 所有数字和字母</li><li>/[^a-za-z0-9]/ 除了数字和字母</li><li>/.+/ 任意字符</li><li>/\d/ 等价于/[0-9]/ 数字</li><li>/\w/ 等价于/[a-z0-9_]/ 数字、字母和下划线</li><li>/\s/ 等价于/“ “/ 空格</li><li>/\D/ 等价于/[^0-9]/ 非数字</li><li>/\W/ 等价于/[^a-z0-9_]/ 除了数字、字母和划线</li><li>/\S/ 等价于/[^” “]/ 除了空格</li><li>/\d{n,m}/ 数字最少出现 n 次，最多出现 m 次</li><li>/\d{1,}/ 等价于/\d+/ 数字最少出现 1 次</li><li>/\d{0,}/ 等价于/\d*/ 数字最少出现 0 次</li><li>/\d{0,1}/ 等价于/\d?/ 数字最多出现 1 次</li><li>/^\d$/ 以数字开头且以数字结尾</li><li>/[\u4e00-\u9fa5]/ 汉字匹配范围</li><li>\b 单词边界</li><li>\B 非单词边界</li><li>?=n 匹配任何其后紧接指定字符串 n 的字符串</li><li>?!n 匹配任何其后没有紧接指定字符串 n 的字符串</li></ol><h4 id="疑难点"><a href="#疑难点" class="headerlink" title="疑难点"></a>疑难点</h4><p>在个人接触正则过程中遇到的一些不易理解的地方</p><blockquote><p>用圆括号将所有选择项括起来，相邻的选择项之间用|分隔。但用圆括号会有一个副作用，是相关的匹配会被缓存，此时可用?:放在第一个选项前来消除这种副作用。其中?:是非捕获元之一，还有两个非捕获元是?=和?!，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。</p></blockquote><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>(?:pattern)</td><td>匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 “或” 字符 (\</td><td>) 来组合一个模式的各个部分是很有用。例如， ‘industr(?:y\</td><td>ies) 就是一个比 ‘industry\</td><td>industries’ 更简略的表达式。</td></tr><tr><td>(?=pattern</td><td>正向预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，’Windows (?=95\</td><td>98\</td><td>NT\</td><td>2000)’ 能匹配 “Windows 2000” 中的 “Windows” ，但不能匹配 “Windows 3.1” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td>(?!pattern)</td><td>负向预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如’Windows (?!95\</td><td>98\</td><td>NT\</td><td>2000)’ 能匹配 “Windows 3.1” 中的 “Windows”，但不能匹配 “Windows 2000” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr></tbody></table><p>一直对正则中的 match 和 exec 不易分清，下面来做一下比较。</p><h5 id="1-match"><a href="#1-match" class="headerlink" title="1. match"></a>1. match</h5><p>match 方法属于 String 正则表达方法</p><p>语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.match(regexp)</span><br></pre></td></tr></table></figure><p>str：要进行匹配的字符串</p><p>regexp：一个正则表达式(或者由 RegExp()构造成的正则表达式)</p><p>match 的用法主要区分就是正则表达式是否有全局标示 g</p><ol><li><p>如果有 g 全局标志，那么返回的数组保存的是，所有匹配的内容。</p></li><li><p>如果没有 g 全局标志，那么返回的数组 arr.arr[0]保存的是完整的匹配.arr[1]保存的是第一个括号里捕获的字串，依此类推 arr[n]保存的是第 n 个括号捕获的内容。</p></li></ol><h5 id="2-exec"><a href="#2-exec" class="headerlink" title="2. exec"></a>2. exec</h5><p>与 match 方法不同 exec 属于正则表达式的方法</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var result1 = regexp.exec(str);</span><br></pre></td></tr></table></figure><p>regexp：正则表达式</p><p>str：要匹配的字串</p><p>exec 与 match 的关联就是 exec（g 有没有都无影响）就等价于不含有 g 全局标志的 match，即返回数组 arr[0]为匹配的完整串，其余的为括号里捕获的字符串。</p><p>但如果有 g 对 exec 本身的影响是，当一个具有 g 的正则表达式调用 exec()时，他将该对象的 lastIndex 设置到紧接这匹配子串的字符位置。当第二次调用 exec 时将从<br>lastIndex 所指示的字符位置开始检索，利用这个特点可以反复调用 exec 遍历所有匹配，等价于 match 具有 g 标志。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arrmatch = str.match(reg);</span><br><span class="line">for(var i =0; i &lt; arrmatch.length; i++)&#123;</span><br><span class="line">    document.write(arrmatch[i] +&quot;----&gt;&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可见上面的 exec 和 match 是等价的.</p><p>reg.exec(str) 返回匹配到的字符串和最后一次的匹配字符串最后位置的下一个索引如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var str = &quot;abc123bef345olj89,ed&quot;;</span><br><span class="line">var reg = /\d+/g;</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li><p>主要区分 match 具有 g 和没有 g 的区别，没有 g 的时候与 exec 是等价的。</p></li><li><p>而 exec 返回的串类型不受 g 影响，但具有 g 时候会驱动 lastIndex 可以模拟遍历所有匹配，可以与 match 具有 g 的时候等价。</p></li></ul><h4 id="顺便加强理解"><a href="#顺便加强理解" class="headerlink" title="顺便加强理解"></a>顺便加强理解</h4><ol><li>ip 正则表达式<br>格式由”.”分割成四段，每一段范围是 0-255，拿出其中一段进行分析</li></ol><table><thead><tr><th>范围</th><th>表达式</th></tr></thead><tbody><tr><td>0-9</td><td>\d</td></tr><tr><td>10-99</td><td>[1-9]\d</td></tr><tr><td>100-199</td><td>1\d{2}</td></tr><tr><td>200-249</td><td>2[0-4]\d</td></tr><tr><td>250-255</td><td>25[0-5]</td></tr></tbody></table><p>所以，其中一段构成的正则表达式是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5]</span><br></pre></td></tr></table></figure><p>，<br>整个 ip 正则为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])$/</span><br></pre></td></tr></table></figure><ol start="2"><li>同理端口号范围是 0-65535</li></ol><table><thead><tr><th>范围</th><th>表达式</th></tr></thead><tbody><tr><td>0-9</td><td>\d</td></tr><tr><td>10-99</td><td>[1-9]\d</td></tr><tr><td>100-999</td><td>[1-9]\d{2}</td></tr><tr><td>1000-9999</td><td>[1-9]\d{3}</td></tr><tr><td>10000-59999</td><td>[1-5]\d{4}</td></tr><tr><td>60000-64999</td><td>6[0-4]\d{3}</td></tr><tr><td>65000-65499</td><td>65[0-4]\d{2}</td></tr><tr><td>65500-65529</td><td>655[0-2]\d</td></tr><tr><td>65530-65535</td><td>65553[0-5]</td></tr></tbody></table><p>所以，整个端口号正则为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/\d|[1-9]\d&#123;1,3&#125;|[1-5]d&#123;4&#125;|6[0-4]\d&#123;3&#125;|65[0-4]\d&#123;2&#125;|655[0-2]\d|65553[0-5]/</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript 正则 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>理解同步、异步和事件循环</title>
      <link href="/yelee/2018/08/20/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
      <url>/yelee/2018/08/20/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="JavaScript-运行机制"><a href="#JavaScript-运行机制" class="headerlink" title="JavaScript 运行机制"></a>JavaScript 运行机制</h2><ol><li>所有同步任务都在主线程上执行，形成一个执行栈；</li></ol><a id="more"></a><ol start="2"><li><p>主线程发起异步请求，相应的工作线程就会去执行异步任务，主线程可以继续执行后面的代码；</p></li><li><p>主线程之外，还存在一个”任务队列”（task queue）。只要异步任务有了运行结果，就在”任务队列”之中放置一个事件，也就是一个消息；</p></li><li><p>一旦”执行栈”中的所有同步任务执行完毕，系统就会读取”任务队列”，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行；</p></li><li><p>主线程把当前的事件执行完成之后，再去读取任务队列，如此反复重复执行，这样就行程了事件循环。</p></li></ol><h4 id="1、单线程"><a href="#1、单线程" class="headerlink" title="1、单线程"></a>1、单线程</h4><p>JS 引擎在解释和执行 JavaScript 代码线程只有一个，叫做<strong>主线程</strong>。<br>但实际还存在其他线程，如：处理 Ajax 请求线程，处理 DOM 事件线程，定时器线程，和文件读写线程等，叫做<strong>工作线程</strong>。</p><h4 id="2、同步和异步"><a href="#2、同步和异步" class="headerlink" title="2、同步和异步"></a>2、同步和异步</h4><p>同步：如果函数返回的时候，调用者就能够得到预期结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.sqrt(2);</span><br></pre></td></tr></table></figure><p>异步：函数返回的时候，调用者还不能够得到预期结果，而是需要通过一定手段得到。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&quot;foo.txt&quot;, &quot;utf8&quot;, function(err, data)&#123;</span><br><span class="line">    console.log(data)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上面代码中，我们希望 fs.readFile 函数读取文件，并打印出来，但是在 fs.readFile 函数返回时，我们期望的结果并不会发生，而是要等文件全部读取完成之后。</p><h5 id="异步-AJAX："><a href="#异步-AJAX：" class="headerlink" title="异步 AJAX："></a>异步 AJAX：</h5><blockquote><p>主线程：“你好，AJAX 线程。请你帮我发个 HTTP 请求吧，我把请求地址和参数都给你了。”</p></blockquote><blockquote><p>AJAX 线程：“好的，主线程。我马上去发，但可能要花点儿时间呢，你可以先去忙别的。”</p></blockquote><blockquote><p>主线程：：“谢谢，你拿到响应后告诉我一声啊。”</p></blockquote><blockquote><p>(接着，主线程做其他事情去了。一顿饭的时间后，它收到了响应到达的通知。)</p></blockquote><h5 id="同步-AJAX："><a href="#同步-AJAX：" class="headerlink" title="同步 AJAX："></a>同步 AJAX：</h5><blockquote><p>主线程：“你好，AJAX 线程。请你帮我发个 HTTP 请求吧，我把请求地址和参数都给你了。”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>主线程：：“喂，AJAX 线程，你怎么不说话？”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>主线程：：“喂！喂喂喂！”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>(一炷香的时间后)</p></blockquote><blockquote><p>主线程：：“喂！求你说句话吧！”</p></blockquote><blockquote><p>AJAX 线程：“主线程，不好意思，我在工作的时候不能说话。你的请求已经发完了，拿到响应数据了，给你。”</p></blockquote><p>正因为 JavaScript 时单线程，同步容易造成阻塞，所以，对于耗时和操作事件不确定操作，使用异步就成了必然选择。</p><h4 id="3、异步过程"><a href="#3、异步过程" class="headerlink" title="3、异步过程"></a>3、异步过程</h4><p>一个异步过程通常时这样的：</p><blockquote><p>主线程发起一个异步请求，相应的工作线程接收线程请求并告知主线程已收到；主线程可以继续执行后面的代码，同时工作线程执行异步任务；工作线程完成工作后，通知主线程；主线程收到通知后，执行一定动作（调用回调函数）。</p></blockquote><p>异步函数通常具有一下形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A(arg..., callbackFn)</span><br></pre></td></tr></table></figure><p>他可以叫做异步过程的<strong>发起函数</strong>，或者叫做异步任务<strong>注册函数</strong>。</p><p>从主线程的角度看，一个一度过程包括两个要素：</p><ul><li>发起函数（注册函数）</li><li>回到函数</li></ul><h4 id="4、消息队列和事件循环"><a href="#4、消息队列和事件循环" class="headerlink" title="4、消息队列和事件循环"></a>4、消息队列和事件循环</h4><p>异步过程中，工作线程在异步操作完成后需要通知主线程。那么这个通知机制时怎样实现的呢？答案是利用消息队列和事件循环。</p><p>一句话概括：</p><blockquote><p>工作线程将消息放到消息队列，主线程通过事件循环过程去取消息。</p></blockquote><p>消息队列：消息队列是一个先进先出的队列，放着各种消息。</p><p>事件循环：事件循环是指主线程从消息队列中取消息，执行的过程。</p><p>实际上，主线程只会做一件事，就是从消息队列里面取消息、执行消息，再去消息，再执行。当消息队列为空时，就会等待知道消息队列变成非空。而且主线程只有在将当前的消息执行完成后，才会去取下一个消息。这种机制就叫做事件循环机制，取一个消息并执行的过程叫做一次循环。</p><p>消息队列中放的消息是什么东西？消息的具体结构当然跟具体的实现有关，可以认为：</p><blockquote><p>消息就是注册异步任务时添加的回调函数。</p></blockquote><p>以异步 Ajax 为例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&apos;http://segmentfault.com&apos;, function(resp) &#123;</span><br><span class="line">    console.log(&apos;我是响应：&apos;, resp);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>主线程发起 Ajax 请求后，会继续执行其他代码。Ajax 线程负责请求 segmentfault.com，拿到响应后，它会把响应封装成一个 JavaScript 对象，然后构成一条消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var message = function() &#123;</span><br><span class="line">    callbackFn();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 callbackFn 就是前面代码中成功响应时的回调函数。</p><p>主线程在执行完当前循环中所有代码后，就会到消息队列取出这条消息（也就是 message 函数），并执行它，到此为止，就完成了工作线程对主线程的通知，回调函数也就得到了执行。如果一开始主线程就没有提供回调函数，Ajax 线程在收到 HTTP 响应后，也就没有必要通知主线程，从而没必要往消息队列放消息。</p><blockquote><p>异步过程的回调函数，一定不在当前这一轮事件循环中执行。</p></blockquote><h4 id="5、异步与事件"><a href="#5、异步与事件" class="headerlink" title="5、异步与事件"></a>5、异步与事件</h4><blockquote><p>消息队列中的每条消息实际上都对应着一个事件</p></blockquote><p>有一类很重要的异步过程：DOM 事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var button = document.getElement(&apos;#btn&apos;);</span><br><span class="line">button.addEventListener(&apos;click&apos;, function(e) &#123;</span><br><span class="line">    console.log();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>从事件的角度来看，上述代码表示：在按钮上添加了一个鼠标单击事件的事件监听器；当用户点击按钮时，鼠标单击事件触发，事件监听器函数被调用。</p><p>从异步过程的角度看，addEventListener 函数就是异步过程的发起函数，事件监听器函数就是异步过程的回调函数。事件触发时，表示异步任务完成，会将事件监听器函数封装成一条消息放到消息队列中，等待主线程执行。</p><p>事件的概念实际上并不是必须的，事件机制实际上就是异步过程的通知机制。我觉得它的存在是为了编程接口对开发者更友好。</p><p>另一方面，所有的异步过程也都可以用事件来描述。例如：setTimeout 可以看成对应一个时间到了！的事件。前文的 setTimeout(fn, 1000);可以看成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timer.addEventListener(&apos;timeout&apos;, 1000, fn);</span><br></pre></td></tr></table></figure><blockquote><p>工作线程是生产者，主线程是消费者(只有一个消费者)。工作线程执行异步任务，执行完成后把对应的回调函数封装成一条消息放到消息队列中；主线程不断地从消息队列中取消息并执行，当消息队列空时主线程阻塞，直到消息队列再次非空。</p></blockquote><h4 id="6、macrotasks-与-microtasks-的区别"><a href="#6、macrotasks-与-microtasks-的区别" class="headerlink" title="6、macrotasks 与 microtasks 的区别"></a>6、macrotasks 与 microtasks 的区别</h4><blockquote><p>macrotasks: setTimeout setInterval setImmediate I/O UI 渲染</p></blockquote><blockquote><p>microtasks: Promise process.nextTick Object.observe MutationObserver</p></blockquote><p>microtask 会在当前循环中执行完成,而 macrotask 会在下一个循环中执行</p>]]></content>
      
      <categories>
          
          <category> js高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git简记</title>
      <link href="/yelee/2018/07/27/Git%E7%AE%80%E8%AE%B0/"/>
      <url>/yelee/2018/07/27/Git%E7%AE%80%E8%AE%B0/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Git-食用手册"><a href="#Git-食用手册" class="headerlink" title="Git 食用手册"></a>Git 食用手册</h2><h3 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h3><p>最近有个项目比较赶，于是决定 8 个人一个并行完成，单独把项目拿出来用 gitea 管理，没人分一个模块开发，对应也给分支，效果不过，从中也帮助自己重新温习了一下 git 的使用，小记一下。</p><a id="more"></a><h3 id="1-安装和使用"><a href="#1-安装和使用" class="headerlink" title="1. 安装和使用"></a>1. 安装和使用</h3><ul><li><p>在 MAC 上，安装 homebrew，然后通过<a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">homebrew</a> 安装 Git。</p><blockquote><p>在 MAC 上另一种安装方法，从 AppStore 安装 Xcode，Xcode 集成了 Git，不过默认没有安装，你需要运行 Xcode，选择菜单“Xcode”-&gt;“Preferences”，在弹出窗口中找到“Downloads”，选择“Command Line Tools”，点“Install”就可以完成安装了。</p></blockquote></li><li><p>在 Windows 上，下载<a href="http://rj.baidu.com/soft/detail/40642.html" target="_blank" rel="noopener">安装包</a>，默认下一步，安装完成即可。</p></li><li><p>安装完后自报家门</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;wuwhs&quot;</span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>创建版本库<br>初始化一个 Git 仓库，使用<code>git init</code>命令。添加文件到 Git 仓库，分两步：</p><ol><li>第一步，使用命令<code>git add &lt;file&gt;</code>，注意，可反复多次使用，添加多个文件；</li><li>第二步，使用命令<code>git commit</code>，完成。</li></ol></li></ul><h3 id="2-时光穿梭"><a href="#2-时光穿梭" class="headerlink" title="2. 时光穿梭"></a>2. 时光穿梭</h3><p><img src="https://note.youdao.com/yws/public/resource/813e8f68e489060d70ccfdff42b3aecc/xmlnote/8849F03FF3934C8087DA9645B9BD9C5F/14633" alt=""></p><ul><li><p>如果<code>git status</code>告诉你有文件被修改过，用<code>git diff</code>可以查看修改内容。</p></li><li><p>HEAD 指向的版本就是当前版本，因此，Git 允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</p></li><li><p>穿梭前，用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本。</p></li><li><p>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本，<code>git log --pretty=oneline --abbrev-commit</code>在一行显示缩写提交号。</p></li><li><p>场景 1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p></li><li><p>当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD file</code>，就回到了场景 1，第二步按场景 1 操作。</p></li><li><p>命令<code>git rm</code>用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。</p></li></ul><h3 id="3-远程仓库"><a href="#3-远程仓库" class="headerlink" title="3. 远程仓库"></a>3. 远程仓库</h3><ul><li><p>创建 SSH Key。<code>$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code>。</p></li><li><p>登陆 GitHub，打开“Account settings”，“SSH Keys”页面。<br>然后，点“Add SSH Key”，填上任意 Title，在 Key 文本框里粘贴 id_rsa.pub 文件的内容。</p></li><li><p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>。</p></li><li><p>关联后，使用命令<code>git push -u origin master</code>第一次推送 master 分支的所有内容。</p></li><li><p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改。</p></li><li><p>要克隆一个仓库，首先必须知道仓库的地址，然后使用<code>git clone</code>命令克隆。</p></li></ul><h3 id="4-分支管理"><a href="#4-分支管理" class="headerlink" title="4. 分支管理"></a>4. 分支管理</h3><ul><li><p>Git 鼓励大量使用分支。</p></li><li><p>查看分支：<code>git branch</code>。</p></li><li><p>创建分支：<code>git branch &lt;name&gt;</code>。</p></li><li><p>切换分支：<code>git checkout &lt;name&gt;</code>。</p></li><li><p>创建+切换到当前分支：<code>git checkout -b &lt;name&gt;</code>。</p></li><li><p>合并某分支到当前分支：<code>git merge &lt;name&gt;</code>。</p></li><li><p>删除分支：<code>git branch -d &lt;name&gt;</code>。</p></li><li><p>当 Git 无法自动合并分支时，就必须首先剞劂冲突，解决冲突后，再提交，合并完成用<code>git log --graph</code>命令可以看到分支合并图。</p></li><li><p>合并分支时，加上<code>--no-ff</code>参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而<code>fash-forward</code>合并就看不出来曾经做过合并。</p></li><li><p>当手头工作没有完成时，先把工作现场<code>git stash</code>一下，然后去修复 bug，修复后，再<code>git stash list</code>查看历史 stash，一是用<code>git stash apply</code>恢复，但恢复后，stash 内容并不删除，你需要用<code>git stash drop</code>来删除；另一种方式是用<code>git stash pop</code>，恢复的同时把 stash 内容也删了。</p></li><li><p>查看远程库信息，使用<code>git remote -v</code>。</p></li><li><p>从本地推送分支，使用<code>git push origin branch-name</code>，如果失败，先用<code>git pull</code>抓取远程的新提交。</p></li><li><p>再本地创建和远程分支对应的分支，使用<code>git checkout -b branch-name origin/branch-name</code>，本地和远程分支的名称最好一致。</p></li><li><p>从远程抓取分支，使用<code>git pull</code>，如果有冲突，要先处理冲突。</p></li></ul><h3 id="5-标签"><a href="#5-标签" class="headerlink" title="5. 标签"></a>5. 标签</h3><ul><li><p>命令<code>git tag &lt;name&gt;</code>用于新建一个标签，默认为<code>HEAD</code>,也可以指定一个 commit id。</p></li><li><p><code>git tag -a &lt;tagname&gt; -m &quot;balabala...&quot;</code>可以指定标签信息。</p></li><li><p><code>git tag -s &lt;tagname&gt; -m &quot;balabala...&quot;</code>可以用 PGP 签名标签。</p></li><li><p>命令<code>git tag</code>可以查看所有标签。</p></li><li><p>命令<code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签。</p></li><li><p>命令<code>git push origin --tags</code>可以推送全部未推送过的本地标签。</p></li><li><p>命令<code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签。</p></li><li><p>命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>可以删除一个远程标签。</p></li></ul><h3 id="6-举个应用栗子"><a href="#6-举个应用栗子" class="headerlink" title="6. 举个应用栗子"></a>6. 举个应用栗子</h3><ol><li>最初在远程创建项目仓库有<code>master</code>和<code>develp</code>分支，参与开发人员先在自己一个文件夹下，调出<code>git Bash</code>，然后输入命令<code>git init</code>，再把仓库<code>git clone</code>下来</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www</span><br><span class="line">$ git init</span><br><span class="line">Initialized empty Git repository in D:/appSoft/wampserver/wamp64/www/.git/</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www (master)</span><br><span class="line">$ git clone git@github.com:wuwhs/demo.git</span><br><span class="line">Cloning into &apos;demo&apos;...</span><br><span class="line">Warning: Permanently added the RSA host key for IP address &apos;13.229.188.59&apos; to the list of known hosts.</span><br><span class="line">warning: You appear to have cloned an empty repository.</span><br><span class="line">Checking connectivity... done.</span><br></pre></td></tr></table></figure><ol start="2"><li><code>cd demo</code>进入<code>clone</code>下载的目录里，用<code>git branch develop</code>在本地创建一个对应的<code>develop</code>分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www (master)</span><br><span class="line">$ cd demo</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch</span><br><span class="line">* master</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch develop</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch</span><br><span class="line">  develop</span><br><span class="line">* master</span><br></pre></td></tr></table></figure><p>再次用<code>git branch</code>查看已经新建了一个<code>develop</code>分支</p><ol start="3"><li><code>git checkout develop</code>切换到当前<code>develop</code>分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git checkout develop</span><br><span class="line">Switched to branch &apos;develop&apos;</span><br></pre></td></tr></table></figure><ol start="4"><li>用<code>git pull origin develop:develop</code>，即：<code>git pull origin &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code>，当本地和远程分支名相同时，可以简写成一个，也就是<code>git pull origin develop</code>，拉取远程<code>develop</code>分支完成，然后开发人员就可以在这个分支上工作了</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull origin develop:develop</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   7ff2cb0..7ab2842  develop    -&gt; develop</span><br><span class="line">   7ff2cb0..7ab2842  develop    -&gt; origin/develop</span><br><span class="line">warning: fetch updated the current branch head.</span><br><span class="line">fast-forwarding your working tree from</span><br><span class="line">commit 7ff2cb0627be357fa15db4e38e1bfe8fc820b8ec.</span><br><span class="line">Already up-to-date.</span><br></pre></td></tr></table></figure><ol start="5"><li>当一天了工作完成，要提交到远程分支，首先要拉取一下别人提交的代码，防止版本冲突</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Compressing objects: 100% (2/2), done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   f848dc7..d696375  develop    -&gt; origin/develop</span><br><span class="line">Updating f848dc7..d696375</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><p>PS：直接偷懒<code>pull</code>可能会出现没有找到<code>tracking</code>的分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">There is no tracking information for the current branch.</span><br><span class="line">Please specify which branch you want to merge with.</span><br><span class="line">See git-pull(1) for details.</span><br><span class="line"></span><br><span class="line">git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class="line"></span><br><span class="line">If you wish to set tracking information for this branch you can do so with:</span><br><span class="line"></span><br><span class="line">git branch --set-upstream-to=origin/&lt;branch&gt; develop</span><br></pre></td></tr></table></figure><p>这时候要手动添加一下对应分支依赖<code>git branch --set-upstream-to=origin/&lt;branch&gt; develop</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git branch --set-upstream-to=origin/develop develop</span><br><span class="line">Branch develop set up to track remote branch develop from origin.</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Compressing objects: 100% (2/2), done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   f848dc7..d696375  develop    -&gt; origin/develop</span><br><span class="line">Updating f848dc7..d696375</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><ol start="6"><li>将本地分支提交到对应远程分支上，<code>git push origin develop:develop</code>，即：<code>git push origin &lt;远程主机&gt;&lt;本地分支名&gt;:&lt;远程分支名&gt;</code>，如果名称一样可以简写，也就是<code>git push origin develop</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git push origin develop:develop</span><br><span class="line">Counting objects: 9, done.</span><br><span class="line">Delta compression using up to 4 threads.</span><br><span class="line">Compressing objects: 100% (5/5), done.</span><br><span class="line">Writing objects: 100% (9/9), 759 bytes | 0 bytes/s, done.</span><br><span class="line">Total 9 (delta 1), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (1/1), done.</span><br><span class="line">To git@github.com:wuwhs/demo.git</span><br><span class="line">   d696375..3c00c0c  develop -&gt; develop</span><br></pre></td></tr></table></figure><ol start="7"><li>项目测试 OK 了，本地分支合并到<code>master</code>分支上，要用到<code>git merge &lt;branch&gt;</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git checkout master</span><br><span class="line">Switched to branch &apos;master&apos;</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git merge develop</span><br><span class="line">Updating c4d0377..3c00c0c</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 9 +++++++++</span><br><span class="line"> 1 file changed, 9 insertions(+)</span><br></pre></td></tr></table></figure><p>常用的操作就以上七步了，当然会有不同情形的应用。</p><h3 id="7-附录：git-cheat-sheet"><a href="#7-附录：git-cheat-sheet" class="headerlink" title="7. 附录：git-cheat-sheet"></a>7. 附录：git-cheat-sheet</h3><p>一般而言，常用的就是以上那些命令，有人专门的整理了一份比较全一点的文档 git-cheat-sheet，方便查阅。</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>列出当前配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --list</span><br></pre></td></tr></table></figure><p>列出 repository 配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --local --list</span><br></pre></td></tr></table></figure><p>列出全局配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global --list</span><br></pre></td></tr></table></figure><p>列出系统配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --system --list</span><br></pre></td></tr></table></figure><p>设置用户名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;[firstname lastname]&quot;</span><br></pre></td></tr></table></figure><p>设置用户邮箱：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email &quot;[valid-email]&quot;</span><br></pre></td></tr></table></figure><p>设置 git 命令输出为彩色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global color.ui auto</span><br></pre></td></tr></table></figure><p>设置 git 使用的文本编辑器设：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global core.editor vi</span><br></pre></td></tr></table></figure><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>Repository 配置对应的配置文件路径[–local]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;repo&gt;/.git/config</span><br></pre></td></tr></table></figure><p>用户全局配置对应的配置文件路径[–global]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.gitconfig</span><br></pre></td></tr></table></figure><p>系统配置对应的配置文件路径[–local]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/gitconfig</span><br></pre></td></tr></table></figure><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p>复制一个已创建的仓库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 通过 SSH</span><br><span class="line">$ git clone ssh://user@domain.com/repo.git</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#通过 HTTP</span><br><span class="line">$ git clone http://domain.com/user/repo.git</span><br></pre></td></tr></table></figure><p>创建一个新的本地仓库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><h4 id="本地修改"><a href="#本地修改" class="headerlink" title="本地修改"></a>本地修改</h4><p>显示工作路径下已修改的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure><p>显示与上次提交版本文件的不同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff</span><br></pre></td></tr></table></figure><p>把当前所有修改添加到下次提交中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure><p>把对某个文件的修改添加到下次提交中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add -p &lt;file&gt;</span><br></pre></td></tr></table></figure><p>提交本地的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -a</span><br></pre></td></tr></table></figure><p>提交之前已标记的变化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit</span><br></pre></td></tr></table></figure><p>附加消息提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &apos;message here&apos;</span><br></pre></td></tr></table></figure><p>提交，并将提交时间设置为之前的某个日期:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --date=&quot;`date --date=&apos;n day ago&apos;`&quot; -am &quot;Commit Message&quot;</span><br></pre></td></tr></table></figure><p>修改上次提交<br>（请勿修改已发布的提交记录!）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit --amend</span><br></pre></td></tr></table></figure><p>修改上次提交的 committer date：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIT_COMMITTER_DATE=&quot;date&quot; git commit --amend</span><br></pre></td></tr></table></figure><p>修改上次提交的 author date：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend --date=&quot;date&quot;</span><br></pre></td></tr></table></figure><p>把当前分支中未提交的修改移动到其他分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git checkout branch2</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><p>将 stashed changes 应用到当前分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash apply</span><br></pre></td></tr></table></figure><p>删除最新一次的 stashed changes：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash drop</span><br></pre></td></tr></table></figure><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>从当前目录的所有文件中查找文本内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git grep &quot;Hello&quot;</span><br></pre></td></tr></table></figure><p>在某一版本中搜索文本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git grep &quot;Hello&quot; v2.5</span><br></pre></td></tr></table></figure><h4 id="提交历史"><a href="#提交历史" class="headerlink" title="提交历史"></a>提交历史</h4><p>从最新提交开始，显示所有的提交记录（显示 hash， 作者信息，提交的标题和时间）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log</span><br></pre></td></tr></table></figure><p>显示所有提交（仅显示提交的 hash 和 message）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline</span><br></pre></td></tr></table></figure><p>显示某个用户的所有提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --author=&quot;username&quot;</span><br></pre></td></tr></table></figure><p>显示某个文件的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log -p &lt;file&gt;</span><br></pre></td></tr></table></figure><p>仅显示远端分支与远端分支提交记录的差集：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline &lt;origin/master&gt;..&lt;remote/master&gt; --left-right</span><br></pre></td></tr></table></figure><p>谁，在什么时间，修改了文件的什么内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git blame &lt;file&gt;</span><br></pre></td></tr></table></figure><p>显示 reflog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog show</span><br></pre></td></tr></table></figure><p>删除 reflog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog delete</span><br></pre></td></tr></table></figure><h4 id="分支与标签"><a href="#分支与标签" class="headerlink" title="分支与标签"></a>分支与标签</h4><p>列出所有的分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br></pre></td></tr></table></figure><p>列出所有的远端分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -r</span><br></pre></td></tr></table></figure><p>切换分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>创建并切换到新分支:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>基于当前分支创建新分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch &lt;new-branch&gt;</span><br></pre></td></tr></table></figure><p>基于远程分支创建新的可追溯的分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch --track &lt;new-branch&gt; &lt;remote-branch&gt;</span><br></pre></td></tr></table></figure><p>删除本地分支:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -d &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>强制删除一个本地分支：<br>将会丢失未合并的修改！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -D &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>给当前版本打标签：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><p>给当前版本打标签并附加消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><h4 id="更新与发布"><a href="#更新与发布" class="headerlink" title="更新与发布"></a>更新与发布</h4><p>列出当前配置的远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br></pre></td></tr></table></figure><p>显示远程端的信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote show &lt;remote&gt;</span><br></pre></td></tr></table></figure><p>添加新的远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add &lt;remote&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>下载远程端版本，但不合并到 HEAD 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch &lt;remote&gt;</span><br></pre></td></tr></table></figure><p>下载远程端版本，并自动与 HEAD 版本合并：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote pull &lt;remote&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>将远程端版本合并到本地版本中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin master</span><br></pre></td></tr></table></figure><p>以 rebase 方式将远端分支与本地合并：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>将本地版本发布到远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push remote &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>删除远程端分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git push &lt;remote&gt; :&lt;branch&gt; (since Git v1.5.0)</span><br><span class="line"># or</span><br><span class="line">git push &lt;remote&gt; --delete &lt;branch&gt; (since Git v1.7.0)</span><br></pre></td></tr></table></figure><p>发布标签:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push --tags</span><br></pre></td></tr></table></figure><p>合并与重置(Rebase)<br>将分支合并到当前 HEAD 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>将当前 HEAD 版本重置到分支中:<br>请勿重置已发布的提交!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>退出重置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase --abort</span><br></pre></td></tr></table></figure><p>解决冲突后继续重置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase --continue</span><br></pre></td></tr></table></figure><p>使用配置好的 merge tool 解决冲突：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git mergetool</span><br></pre></td></tr></table></figure><p>在编辑器中手动解决冲突后，标记文件为已解决冲突：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git add &lt;resolved-file&gt;</span><br><span class="line">$ git rm &lt;resolved-file&gt;</span><br></pre></td></tr></table></figure><p>合并提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase -i &lt;commit-just-before-first&gt;</span><br></pre></td></tr></table></figure><p>把上面的内容替换为下面的内容：</p><p>原内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pick &lt;commit_id&gt;</span><br><span class="line">pick &lt;commit_id2&gt;</span><br><span class="line">pick &lt;commit_id3&gt;</span><br></pre></td></tr></table></figure><p>替换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pick &lt;commit_id&gt;</span><br><span class="line">squash &lt;commit_id2&gt;</span><br><span class="line">squash &lt;commit_id3&gt;</span><br></pre></td></tr></table></figure><h4 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h4><p>放弃工作目录下的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard HEAD</span><br></pre></td></tr></table></figure><p>移除缓存区的所有文件（i.e. 撤销上次 git add）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset HEAD</span><br></pre></td></tr></table></figure><p>放弃某个文件的所有本地修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout HEAD &lt;file&gt;</span><br></pre></td></tr></table></figure><p>重置一个提交（通过创建一个截然不同的新提交）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git revert &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到指定的版本，并抛弃该版本之后的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>用远端分支强制覆盖本地分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard &lt;remote/branch&gt; e.g., upstream/master, origin/my-feature</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到上一次提交的版本，并将之后的修改标记为未添加到缓存区的修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到上一次提交的版本，并保留未提交的本地修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --keep &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>删除添加.gitignore 文件前错误提交的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git rm -r --cached .</span><br><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;remove xyz file&quot;</span><br></pre></td></tr></table></figure><p>完~</p><p>可参考文章：</p><ol><li><a href="http://rogerdudler.github.io/git-guide/" target="_blank" rel="noopener">git-guide</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰 git 教程</a></li><li><a href="https://www.git-scm.com/" target="_blank" rel="noopener">git-scm</a></li><li><a href="https://blog.csdn.net/github_37515447/article/details/56840610" target="_blank" rel="noopener">Git Cheat Sheet 中文版</a></li></ol>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>搞定css三列布局</title>
      <link href="/yelee/2018/07/22/%E6%90%9E%E5%AE%9Acss%E4%B8%89%E5%88%97%E5%B8%83%E5%B1%80/"/>
      <url>/yelee/2018/07/22/%E6%90%9E%E5%AE%9Acss%E4%B8%89%E5%88%97%E5%B8%83%E5%B1%80/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="三列布局"><a href="#三列布局" class="headerlink" title="三列布局"></a>三列布局</h2><blockquote><p>谈到布局，首先就要想到定位，当别人问我，css 的 position 定位有哪些取值，分别表示什么意思？呃…..</p></blockquote><h3 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h3><p>position 有六个属性值：static、relative、absolute、fixed、sticky 和 inherit。</p><a id="more"></a><ul><li>static（默认）：元素框正常生成。块级元素生成一个矩形框，作为文档流的一部分；行内元素则会创建一个或多个行框，置于父级元素中。</li><li>relative：元素框相对于之前正常文档流中的位置发生偏移，并且原先的位置仍然被占据。发生偏移的时候，可能会覆盖其他元素。</li><li>absolute：元素框不再占有文档位置，并且相对于包含块进行偏移（所谓包含块就是最近一级外层元素 position 不为 static 的元素）。</li><li>fixed：元素框不再占有文档流位置，并且相对于视窗进行定位。</li><li>sticky：css3 新增属性值，粘性定位，相当于 relative 和 fixed 的混合。最初会被当作是 relative，相对原来位置进行偏移；一旦超过一定的阈值，会被当成 fixed 定位，相对于视口定位。</li></ul><h3 id="三列布局-1"><a href="#三列布局-1" class="headerlink" title="三列布局"></a>三列布局</h3><p>三列布局，其中一列宽度自适应，在 PC 端最常用之一，搞定了三列布局，其他一样的套路。</p><h5 id="方式一：浮动布局"><a href="#方式一：浮动布局" class="headerlink" title="方式一：浮动布局"></a>方式一：浮动布局</h5><p>缺点：html 结构不正确,当包含区域宽度小于左右框之和，右边框会被挤下来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.float .center &#123;</span><br><span class="line">        /* left: 300px;</span><br><span class="line">        right: 300px; */</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式二：定位布局"><a href="#方式二：定位布局" class="headerlink" title="方式二：定位布局"></a>方式二：定位布局</h4><p>缺点：要求父级要有非 static 定位，如果没有，左右框容易偏移出去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.position &#123;</span><br><span class="line">        position: relative;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .left &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .right &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        right: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .center &#123;</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout position&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式三：表格布局"><a href="#方式三：表格布局" class="headerlink" title="方式三：表格布局"></a>方式三：表格布局</h4><p>缺点：没什么缺点，恐惧 table</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.table &#123;</span><br><span class="line">        display: table;</span><br><span class="line">        width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table &gt; article &#123;</span><br><span class="line">        display: table-cell;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .center &#123;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .right &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout table&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式四：flex-弹性布局"><a href="#方式四：flex-弹性布局" class="headerlink" title="方式四：flex 弹性布局"></a>方式四：flex 弹性布局</h4><p>缺点：兼容性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.flex &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        flex-shrink: 0; /* 不缩小 */</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .center &#123;</span><br><span class="line">        flex-grow: 1; /* 增大 */</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .right &#123;</span><br><span class="line">        flex-shrink: 0; /* 不缩小 */</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout flex&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式五：grid-栅格布局"><a href="#方式五：grid-栅格布局" class="headerlink" title="方式五：grid 栅格布局"></a>方式五：grid 栅格布局</h4><p>缺点：兼容性 Firefox 52, Safari 10.1, Chrome 57, Opera 44</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.grid &#123;</span><br><span class="line">        display: grid;</span><br><span class="line">        grid-template-columns: 300px 1fr 300px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .left &#123;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .center &#123;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .right &#123;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout grid&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式六：圣杯布局"><a href="#方式六：圣杯布局" class="headerlink" title="方式六：圣杯布局"></a>方式六：圣杯布局</h4><p>缺点：需要多加一层标签，html 顺序不对，占用了布局框的 margin 属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.cup:after &#123;</span><br><span class="line">        clear: both;</span><br><span class="line">        content: &quot;&quot;;</span><br><span class="line">        display: table;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .center &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line">        float: left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .center &gt; div &#123;</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        overflow: auto;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -100%;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .right &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout cup&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;h1&gt;我是圣杯布局中间框&lt;/h1&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是圣杯布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是圣杯布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> 布局 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>水平且垂直居中方法（9种）</title>
      <link href="/yelee/2018/06/01/%E6%B0%B4%E5%B9%B3%E4%B8%94%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%EF%BC%889%E7%A7%8D%EF%BC%89/"/>
      <url>/yelee/2018/06/01/%E6%B0%B4%E5%B9%B3%E4%B8%94%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%EF%BC%889%E7%A7%8D%EF%BC%89/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="水平且垂直居中方法有哪些？"><a href="#水平且垂直居中方法有哪些？" class="headerlink" title="水平且垂直居中方法有哪些？"></a>水平且垂直居中方法有哪些？</h2><p>这在实际工作中经常用到，小记一下。</p><h4 id="演示-HTML-结构"><a href="#演示-HTML-结构" class="headerlink" title="演示 HTML 结构"></a>演示 HTML 结构</h4><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span> <span class="attr">class</span>=<span class="string">"div"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>i<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/gb/水平且垂直居中方法（9种）/0.bmp" alt=""></p><p>一般的，水平居中相对垂直居中简单很多，对于内联元素，父级元素设置<code>text-align: center;</code>；对于块级元素，子级元素设置<code>margin: 0 auto;</code>。以下结合水平居中强调实现垂直居中。</p><h4 id="1、已知父级元素宽高，父级元素定位非-static，子级元素定位设为position-absolute-fixed，再利用margin、left和top属性居中。"><a href="#1、已知父级元素宽高，父级元素定位非-static，子级元素定位设为position-absolute-fixed，再利用margin、left和top属性居中。" class="headerlink" title="1、已知父级元素宽高，父级元素定位非 static，子级元素定位设为position: absolute/fixed，再利用margin、left和top属性居中。"></a>1、已知父级元素宽高，父级元素定位非 static，子级元素定位设为<code>position: absolute/fixed</code>，再利用<code>margin</code>、<code>left</code>和<code>top</code>属性居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：需要已知父级元素固定宽高，才能确定<code>margin-left</code>和<code>margin-right</code>。</p><h4 id="2、子级元素是内联元素，父级元素设置line-height属性垂直居中。"><a href="#2、子级元素是内联元素，父级元素设置line-height属性垂直居中。" class="headerlink" title="2、子级元素是内联元素，父级元素设置line-height属性垂直居中。"></a>2、子级元素是内联元素，父级元素设置<code>line-height</code>属性垂直居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">120px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: normal;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：需要已知父级元素的固定高度，才可以确定<code>line-height</code>。</p><h4 id="3、子级元素是内联元素，父级元素用display-table-cell-和vertical-align-middle-属性实现垂直居中。"><a href="#3、子级元素是内联元素，父级元素用display-table-cell-和vertical-align-middle-属性实现垂直居中。" class="headerlink" title="3、子级元素是内联元素，父级元素用display: table-cell;和vertical-align: middle;属性实现垂直居中。"></a>3、子级元素是内联元素，父级元素用<code>display: table-cell;</code>和<code>vertical-align: middle;</code>属性实现垂直居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>inline-block</code>、<code>table-cell</code>不兼容 ie67</p><h4 id="4、对于子级是块级元素，父级元素同样用display-table-cell-和vertical-align-middle-属性实现垂直居中，水平方向居中用margin-0-auto-。"><a href="#4、对于子级是块级元素，父级元素同样用display-table-cell-和vertical-align-middle-属性实现垂直居中，水平方向居中用margin-0-auto-。" class="headerlink" title="4、对于子级是块级元素，父级元素同样用display: table-cell;和vertical-align: middle;属性实现垂直居中，水平方向居中用margin: 0 auto;。"></a>4、对于子级是块级元素，父级元素同样用<code>display: table-cell;</code>和<code>vertical-align: middle;</code>属性实现垂直居中，水平方向居中用<code>margin: 0 auto;</code>。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>table-cell</code>不兼容 ie67</p><h4 id="5、利用-css3-translate特性：位移是基于元素宽高的。"><a href="#5、利用-css3-translate特性：位移是基于元素宽高的。" class="headerlink" title="5、利用 css3 translate特性：位移是基于元素宽高的。"></a>5、利用 css3 <code>translate</code>特性：位移是基于元素宽高的。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-ms-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>translate</code>属性兼容 IE9+</p><h4 id="6、当父级是浮动的，用display-table-cell-会失效，这时需要包三层，第一层display-table-，第二层display-table-cell-第三次居中层"><a href="#6、当父级是浮动的，用display-table-cell-会失效，这时需要包三层，第一层display-table-，第二层display-table-cell-第三次居中层" class="headerlink" title="6、当父级是浮动的，用display: table-cell;会失效，这时需要包三层，第一层display: table;，第二层display: table-cell; 第三次居中层"></a>6、当父级是浮动的，用<code>display: table-cell;</code>会失效，这时需要包三层，第一层<code>display: table;</code>，第二层<code>display: table-cell;</code> 第三次居中层</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="comment">/* text-align: center; */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div3</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="comment">/* display: inline-block; */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，但 HTML 标签层数较多。</p><h4 id="7、绝对定位加四边定位为-0。"><a href="#7、绝对定位加四边定位为-0。" class="headerlink" title="7、绝对定位加四边定位为 0。"></a>7、绝对定位加四边定位为 0。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，但把定位属性全用上了</p><h4 id="8、利用-flex-布局justify-content-center-和align-items-center-属性居中。"><a href="#8、利用-flex-布局justify-content-center-和align-items-center-属性居中。" class="headerlink" title="8、利用 flex 布局justify-content: center;和align-items: center;属性居中。"></a>8、利用 flex 布局<code>justify-content: center;</code>和<code>align-items: center;</code>属性居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，兼容 IE10+</p><h4 id="9、利用-grid-布局，划分成-3x3-栅格，第二行第二列格子垂直水平居中"><a href="#9、利用-grid-布局，划分成-3x3-栅格，第二行第二列格子垂直水平居中" class="headerlink" title="9、利用 grid 布局，划分成 3x3 栅格，第二行第二列格子垂直水平居中"></a>9、利用 grid 布局，划分成 3x3 栅格，第二行第二列格子垂直水平居中</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">  <span class="attribute">grid-row-start</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">grid-column-start</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，兼容性 Firefox 52, Safari 10.1, Chrome 57, Opera 44</p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>深入理解BFC</title>
      <link href="/yelee/2018/05/21/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3BFC/"/>
      <url>/yelee/2018/05/21/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3BFC/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="BFC-概念"><a href="#BFC-概念" class="headerlink" title="BFC 概念"></a>BFC 概念</h2><h2 id="1、相关定义"><a href="#1、相关定义" class="headerlink" title="1、相关定义"></a>1、相关定义</h2><h3 id="1-1-Formatting-context"><a href="#1-1-Formatting-context" class="headerlink" title="1.1 Formatting context"></a>1.1 Formatting context</h3><p>Formatting context 是 W3C CSS2.1 规定中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素如何定位，以及和其他元素的关系和相互作用。最常见的 Formatting context 有 Block formatting context（简称 BFC）和 Inline formatting context（简称 IFC）。<br>css2.1 中只有 BFC 和 IFC，css3 中还增加了 GFC 和 FFC。</p><a id="more"></a><h3 id="1-2-BFC-定义"><a href="#1-2-BFC-定义" class="headerlink" title="1.2 BFC 定义"></a>1.2 BFC 定义</h3><p>BFC(Block formatting context)直译为“块级格式化上下文”。它是独立的渲染区域，只有 Block-level box 参与，它规定了内部的 Block-level Box 如何布局，并且与这个区域外部毫不相干。</p><h3 id="1-3-BFC-布局规则："><a href="#1-3-BFC-布局规则：" class="headerlink" title="1.3 BFC 布局规则："></a>1.3 BFC 布局规则：</h3><ul><li>内部的 Box 会在垂直方向，一个接一个地放置；</li><li>Box 垂直方向地距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠</li><li>每个元素的 margin box 的左边，与包含块 border box 的左边相接触（对于从左往右的格式化，否则相反）。即便存在浮动也是如此。</li><li>BFC 的区域不会与 float box 重叠。</li><li>BFC 就是页面的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</li><li>计算 BFC 的高度时，浮动元素页参与计算。<br>-</li></ul><h2 id="2、作用"><a href="#2、作用" class="headerlink" title="2、作用"></a>2、作用</h2><h3 id="2-1-可生成-BFC-的元素"><a href="#2-1-可生成-BFC-的元素" class="headerlink" title="2.1 可生成 BFC 的元素"></a>2.1 可生成 BFC 的元素</h3><ul><li>根元素 html；</li><li>float 属性不为 none；</li><li>position 为 absolute 或 fixed；</li><li>display 为 inline-block， table-cell，table-caption，flex， inline-flex；</li><li>overflow 不为 visible；</li></ul><h3 id="2-2-场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。"><a href="#2-2-场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。" class="headerlink" title="2.2 场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。"></a>2.2 场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .left-center-right.float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: rgba(0, 0, 0, 0.7);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .left-center-right.float .center &#123;</span><br><span class="line">        background-color: rgb(13, 218, 233);</span><br><span class="line">        height: 200px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .left-center-right.float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;left-center-right float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;我是左边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;我是右边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;我是中间区域块&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p>中间自适应栏边界会延展左右浮动区域<br><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/67CD3941EFC8420AAB3D54CB766DE219/7159" alt="image"></p><p>此时需要把中间栏变成 BFC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.left-center-right.float .center &#123;</span><br><span class="line">    background-color: rgb(13, 218, 233);</span><br><span class="line">    height: 200px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/97EE88BCB7AC428E95F9F9A5580639A7/7175" alt="image"></p><h3 id="2-3-场景二：子级元素有浮动，父级元素塌陷问题"><a href="#2-3-场景二：子级元素有浮动，父级元素塌陷问题" class="headerlink" title="2.3 场景二：子级元素有浮动，父级元素塌陷问题"></a>2.3 场景二：子级元素有浮动，父级元素塌陷问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .all-children-float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: rgba(0, 0, 0, 0.7);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .all-children-float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;all-children-float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;我是左边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;我是右边区域块&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/1B737A83C8D04BF9B0ABDE2EF28DF0E6/7190" alt="image"></p><p>此时需要将父级元素变成 BFC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.all-children-float &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/D00321F3DC9C4D578E6C89DD23DB0AB2/7200" alt="image"></p><h3 id="2-3-场景三：垂直方向-margin-出现重合"><a href="#2-3-场景三：垂直方向-margin-出现重合" class="headerlink" title="2.3 场景三：垂直方向 margin 出现重合"></a>2.3 场景三：垂直方向 margin 出现重合</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .verticle-block .block1 &#123;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(13, 218, 233);</span><br><span class="line">        margin: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .verticle-block .block2 &#123;</span><br><span class="line">        width: 150px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">        margin: 30px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;verticle-block&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;block1&quot;&gt;我是区域块1&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;block2&quot;&gt;我是区域块2&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><blockquote><p>Box 垂直方向的距离 margin 决定，属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠。</p></blockquote><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/4C9FBEC4951F4006939CD8AAEC698B21/7214" alt="image"></p><p>我们的做法是包一层标签，并转化成 BFC。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.wrapper1 &#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;section class=&quot;verticle-block&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;wrapper1&quot;&gt;</span><br><span class="line">        &lt;article class=&quot;block1&quot;&gt;我是区域块1&lt;/article&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;article class=&quot;block2&quot;&gt;我是区域块2&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/56A0200CB1424C20AB9930AA4CAC44E2/7217" alt="image"></p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css BFC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>css中的一些坑</title>
      <link href="/yelee/2018/05/06/css%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
      <url>/yelee/2018/05/06/css%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CSS-踩坑记"><a href="#CSS-踩坑记" class="headerlink" title="CSS 踩坑记"></a>CSS 踩坑记</h2><h4 id="1、如果子元素全部设置为浮动，则父元素是塌陷的"><a href="#1、如果子元素全部设置为浮动，则父元素是塌陷的" class="headerlink" title="1、如果子元素全部设置为浮动，则父元素是塌陷的"></a>1、如果子元素全部设置为浮动，则父元素是塌陷的</h4><ol><li>在元素末尾加块级空元素设置 clear:both；<a id="more"></a></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.last</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- more --><ol start="2"><li>在父级容器设置 before/after 模拟一个块级空元素</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>父级容器直接设置 overflow: auto/hidden;</li></ol><h4 id="2、普通文档流中块级垂直外边距合并"><a href="#2、普通文档流中块级垂直外边距合并" class="headerlink" title="2、普通文档流中块级垂直外边距合并"></a>2、普通文档流中块级垂直外边距合并</h4><p>解决办法：用 padding 代替，或改成 inline-block，或改成 float，或绝对定位</p><h4 id="3、使用-transition-闪屏"><a href="#3、使用-transition-闪屏" class="headerlink" title="3、使用 transition 闪屏"></a>3、使用 transition 闪屏</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">  <span class="attribute">-webkit-backface-visibility</span>: hidden;</span><br><span class="line">  <span class="attribute">-webkit-perspective</span>: <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过渡动画在没有启动硬件加速的情况下，会出现抖动现象，解决方案：用 translated3d、translateZ、transform 自动启动硬件加速，即改为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translated3d</span>(0, 0, 0);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translated3d</span>(0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ps:硬件加速导致 cpu 性能占用增加，电池电量消耗加大</p><h4 id="4、超出内容用”…”表示"><a href="#4、超出内容用”…”表示" class="headerlink" title="4、超出内容用”…”表示"></a>4、超出内容用”…”表示</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line-clamp"</span>&gt;</span></span><br><span class="line">来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line-clamp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">  <span class="attribute">-webkit-line-clamp</span>: <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>-webkit-line-clamp 用来限制在一个块元素显示的文本的行数</li><li>display: -webkit-box; 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示</li><li>-webkit-box-orient 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式</li></ol><p>缺点：<br>只有移动端和 webkit 浏览器支持</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/7959E51B5140437DA4C084E6B8E7472E/12000" alt=""></p><p>还不够，最后末尾最好有点渐变到”…”</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/D7C74A4FC9624AC7A638FC223AFF6926/12008" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line-clamp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.line-clamp</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">'...'</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(to right, transparent, #fff 55%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>将 height 设置为 line-height 整数倍，防止超出文字露出</li><li>ie10+才支持 linear-gradient 属性</li></ol><p>缺点：</p><p>当文字少于区域大小时，也会出现省略号</p><h4 id="输入框-placeholder-文字带颜色"><a href="#输入框-placeholder-文字带颜色" class="headerlink" title="输入框 placeholder 文字带颜色"></a>输入框 placeholder 文字带颜色</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* WebKit browsers */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-moz-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Mozilla Firefox 19+ */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:-ms-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Internet Explorer 10+ */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>移动端适配-rem</title>
      <link href="/yelee/2018/04/27/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D-rem/"/>
      <url>/yelee/2018/04/27/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D-rem/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="通过封装-rem-js-动态获取屏幕宽度"><a href="#通过封装-rem-js-动态获取屏幕宽度" class="headerlink" title="通过封装 rem.js,动态获取屏幕宽度"></a>通过封装 rem.js,动态获取屏幕宽度</h2><blockquote><p>通过 js 去动态计算根元素的 font-size，这样所有设备分辨率都能兼容适应</p></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">//designWidth:设计稿的实际宽度值，需要根据实际设置</span><br><span class="line">//maxWidth:制作稿的最大宽度值，需要根据实际设置</span><br><span class="line">//这段js的最后面有两个参数记得要设置，一个为设计稿实际宽度，一个为制作稿最大宽度，例如设计稿为750，最大宽度为750，则为(750,750)</span><br><span class="line">;</span><br><span class="line">(function(designWidth, maxWidth) &#123;</span><br><span class="line">    var doc = document,</span><br><span class="line">        win = window,</span><br><span class="line">        docEl = doc.documentElement,</span><br><span class="line">        remStyle = document.createElement(&quot;style&quot;),</span><br><span class="line">        tid;</span><br><span class="line"></span><br><span class="line">    function refreshRem() &#123;</span><br><span class="line">        var width = docEl.getBoundingClientRect().width;</span><br><span class="line">        maxWidth = maxWidth || 540;</span><br><span class="line">        width &gt; maxWidth &amp;&amp; (width = maxWidth);</span><br><span class="line">        var rem = width * 100 / designWidth;</span><br><span class="line">        remStyle.innerHTML = &apos;html&#123;font-size:&apos; + rem + &apos;px;&#125;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (docEl.firstElementChild) &#123;</span><br><span class="line">        docEl.firstElementChild.appendChild(remStyle);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        var wrap = doc.createElement(&quot;div&quot;);</span><br><span class="line">        wrap.appendChild(remStyle);</span><br><span class="line">        doc.write(wrap.innerHTML);</span><br><span class="line">        wrap = null;</span><br><span class="line">    &#125;</span><br><span class="line">    //要等 wiewport 设置好后才能执行 refreshRem，不然 refreshRem 会执行2次；</span><br><span class="line">    refreshRem();</span><br><span class="line"></span><br><span class="line">    win.addEventListener(&quot;resize&quot;, function() &#123;</span><br><span class="line">        clearTimeout(tid); //防止执行两次</span><br><span class="line">        tid = setTimeout(refreshRem, 300);</span><br><span class="line">    &#125;, false);</span><br><span class="line"></span><br><span class="line">    win.addEventListener(&quot;pageshow&quot;, function(e) &#123;</span><br><span class="line">        if (e.persisted) &#123; // 浏览器后退的时候重新计算</span><br><span class="line">            clearTimeout(tid);</span><br><span class="line">            tid = setTimeout(refreshRem, 300);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, false);</span><br><span class="line"></span><br><span class="line">    if (doc.readyState === &quot;complete&quot;) &#123;</span><br><span class="line">        doc.body.style.fontSize = &quot;16px&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        doc.addEventListener(&quot;DOMContentLoaded&quot;, function(e) &#123;</span><br><span class="line">            doc.body.style.fontSize = &quot;16px&quot;;</span><br><span class="line">        &#125;, false);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(640, 750);</span><br></pre></td></tr></table></figure><blockquote><p>当然也可以用 media query 设置适配集中主流的屏幕尺寸</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">html &#123;</span><br><span class="line">    font-size : 20px;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 401px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 25px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 428px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 26.75px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 481px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 30px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 569px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 35px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 641px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 40px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>提供一个移动端 base.css</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">body,</span><br><span class="line">dl,</span><br><span class="line">dd,</span><br><span class="line">ul,</span><br><span class="line">ol,</span><br><span class="line">h1,</span><br><span class="line">h2,</span><br><span class="line">h3,</span><br><span class="line">h4,</span><br><span class="line">h5,</span><br><span class="line">h6,</span><br><span class="line">pre,</span><br><span class="line">form,</span><br><span class="line">input,</span><br><span class="line">textarea,</span><br><span class="line">p,</span><br><span class="line">hr,</span><br><span class="line">thead,</span><br><span class="line">tbody,</span><br><span class="line">tfoot,</span><br><span class="line">th,</span><br><span class="line">td &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ul,</span><br><span class="line">ol &#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a &#123;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html &#123;</span><br><span class="line">    -ms-text-size-adjust: none;</span><br><span class="line">    -webkit-text-size-adjust: none;</span><br><span class="line">    text-size-adjust: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    line-height: 1.5;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body,</span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">select,</span><br><span class="line">textarea &#123;</span><br><span class="line">    font-family: &apos;helvetica neue&apos;, tahoma, &apos;hiragino sans gb&apos;, stheiti, &apos;wenquanyi micro hei&apos;, \5FAE\8F6F\96C5\9ED1, \5B8B\4F53, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b,</span><br><span class="line">strong &#123;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">i,</span><br><span class="line">em &#123;</span><br><span class="line">    font-style: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table &#123;</span><br><span class="line">    border-collapse: collapse;</span><br><span class="line">    border-spacing: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table th,</span><br><span class="line">table td &#123;</span><br><span class="line">    border: 1px solid #ddd;</span><br><span class="line">    padding: 5px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table th &#123;</span><br><span class="line">    font-weight: inherit;</span><br><span class="line">    border-bottom-width: 2px;</span><br><span class="line">    border-bottom-color: #ccc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">img &#123;</span><br><span class="line">    border: 0 none;</span><br><span class="line">    width: auto\9;</span><br><span class="line">    max-width: 100%;</span><br><span class="line">    vertical-align: top;</span><br><span class="line">    height: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">select,</span><br><span class="line">textarea &#123;</span><br><span class="line">    font-family: inherit;</span><br><span class="line">    font-size: 100%;</span><br><span class="line">    margin: 0;</span><br><span class="line">    vertical-align: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">html input[type=&quot;button&quot;],</span><br><span class="line">input[type=&quot;reset&quot;],</span><br><span class="line">input[type=&quot;submit&quot;] &#123;</span><br><span class="line">    -webkit-appearance: button;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button[disabled],</span><br><span class="line">input[disabled] &#123;</span><br><span class="line">    cursor: default;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;checkbox&quot;],</span><br><span class="line">input[type=&quot;radio&quot;] &#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;search&quot;] &#123;</span><br><span class="line">    -webkit-appearance: textfield;</span><br><span class="line">    -moz-box-sizing: content-box;</span><br><span class="line">    -webkit-box-sizing: content-box;</span><br><span class="line">    box-sizing: content-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;search&quot;]::-webkit-search-decoration &#123;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input:focus &#123;</span><br><span class="line">    outline: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">select[size],</span><br><span class="line">select[multiple],</span><br><span class="line">select[size][multiple] &#123;</span><br><span class="line">    border: 1px solid #AAA;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">article,</span><br><span class="line">aside,</span><br><span class="line">details,</span><br><span class="line">figcaption,</span><br><span class="line">figure,</span><br><span class="line">footer,</span><br><span class="line">header,</span><br><span class="line">hgroup,</span><br><span class="line">main,</span><br><span class="line">nav,</span><br><span class="line">section,</span><br><span class="line">summary &#123;</span><br><span class="line">    display: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">audio,</span><br><span class="line">canvas,</span><br><span class="line">video,</span><br><span class="line">progress &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    background: #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input::-webkit-input-speech-button &#123;</span><br><span class="line">    display: none</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">textarea &#123;</span><br><span class="line">    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> mobile </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue的数据驱动原理及简单实现</title>
      <link href="/yelee/2017/09/10/vue%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E5%8E%9F%E7%90%86%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/"/>
      <url>/yelee/2017/09/10/vue%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E5%8E%9F%E7%90%86%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Vue双向数据绑定原理"><a href="#Vue双向数据绑定原理" class="headerlink" title="Vue双向数据绑定原理"></a>Vue双向数据绑定原理</h2><h3 id="1、目标实现"><a href="#1、目标实现" class="headerlink" title="1、目标实现"></a>1、目标实现</h3><ol><li>理解双向数据绑定原理；</li><li>实现 &#123;&#123; &#125;&#125;、v-model和基本事件指令v-bind（:）、v-on（@）；</li><li>新增属性的双向绑定处理；<a id="more"></a></li></ol><h3 id="2、双向数据绑定原理"><a href="#2、双向数据绑定原理" class="headerlink" title="2、双向数据绑定原理"></a>2、双向数据绑定原理</h3><p>vue实现对数据的双向绑定，通过对数据劫持结合发布者-订阅者模式实现的。</p><h4 id="2-1-Object-defineProperty"><a href="#2-1-Object-defineProperty" class="headerlink" title="2.1 Object.defineProperty"></a>2.1 Object.defineProperty</h4><p>vue通过Object.defineProperty来实现数据劫持，会对数据对象每个属性添加对应的get和set方法，对数据进行读取和赋值操作就分别调用get和set方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">    enumerable: <span class="literal">true</span>,</span><br><span class="line">    configurable: <span class="literal">true</span>,</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;,</span><br><span class="line">    set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>我们可以将一些方法放到里面，从而完成对数据的监听（劫持）和视图的同步更新。</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/F8D35A0DDA0C438990651233F3954DD3/6460" alt="image"></p><h4 id="2-2-过程说明"><a href="#2-2-过程说明" class="headerlink" title="2.2 过程说明"></a>2.2 过程说明</h4><p>实现双向数据绑定，首先要对数据进行数据监听，需要一个监听器Observer，监听所有属性。如果属性发生变化，会调用setter和getter，再去告诉订阅者Watcher是否需要更新。由于订阅者有很多个，我们需要一个消息订阅器Dep来专门收集这些订阅者，然后在监听器Observer和订阅者Watcher之间进行统一管理。还有，我们需要一个指令解析器Complie，对每个元素进行扫描和解析，将相关指令对应初始化成一个订阅者Watcher，并替换模板数据或绑定相应函数。当订阅者Watcher接收到相应属性的变化，就会执行对应的更新函数，从而更新视图。</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/A6333A71A8E243A38EAD196BB13F9EE7/6463" alt="image"></p><h3 id="3、实现Observer"><a href="#3、实现Observer" class="headerlink" title="3、实现Observer"></a>3、实现Observer</h3><p>Observer是一个数据监听器，核心方法是我们提到过的Object.defineProperty。如果要监听所有属性的话，则需要通过递归遍历，对每个子属性都defineProperty。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data || <span class="keyword">typeof</span> data !== <span class="string">"object"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = data;</span><br><span class="line">    <span class="keyword">this</span>.walk(data);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性遍历</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    walk: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="built_in">Object</span>.keys(data).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">            self.defineReactive(data, key, data[key]);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    defineReactive: <span class="function"><span class="keyword">function</span>(<span class="params">data, key, val</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        observe(val);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">            enumerable: <span class="literal">true</span>,</span><br><span class="line">            configurable: <span class="literal">true</span>,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> val;</span><br><span class="line">            &#125;,</span><br><span class="line">            set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (newVal === val) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                val = newVal;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"属性："</span> + key + <span class="string">"被监听了，现在值为："</span> + newVal);</span><br><span class="line"></span><br><span class="line">                updateView(newVal);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        updateView(val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Observer(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听数据</span></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新视图</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; val</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateView</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $name = <span class="built_in">document</span>.querySelector(<span class="string">"#name"</span>);</span><br><span class="line">    $name.innerHTML = val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myvm = <span class="keyword">new</span> MyVue(&#123;</span><br><span class="line">    el: <span class="string">"#demo"</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        name: <span class="string">"hello word"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/93FC8BA149764033996B07C9031FBE2D/6483" alt="image"></p><h3 id="4、实现Dep"><a href="#4、实现Dep" class="headerlink" title="4、实现Dep"></a>4、实现Dep</h3><p>在流程介绍中，我们需要创建一个可以订阅者的订阅器Dep，主要负责手机订阅者，属性变化的时候执行相应的订阅者，更新函数。下面稍加改造Observer，就可以插入我们的订阅器。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    defineReactive: <span class="function"><span class="keyword">function</span>(<span class="params">data, key, val</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dep = <span class="keyword">new</span> Dep();</span><br><span class="line"></span><br><span class="line">        observe(val);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">            enumerable: <span class="literal">true</span>,</span><br><span class="line">            configurable: <span class="literal">true</span>,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否需要添加订阅者 什么时候添加订阅者呢？ 与实际页面DOM有关联的data属性才添加相应的订阅者</span></span><br><span class="line">                <span class="keyword">if</span> (Dep.target) &#123;</span><br><span class="line">                    <span class="comment">// 添加一个订阅者</span></span><br><span class="line">                    dep.addSub(Dep.target);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> val;</span><br><span class="line">            &#125;,</span><br><span class="line">            set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (newVal === val) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                val = newVal;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"属性："</span> + key + <span class="string">"被监听了，现在值为："</span> + newVal);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 通知所有订阅者</span></span><br><span class="line">                dep.notify(newVal);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        updateView(val);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 订阅器标识本身实例</span></span><br><span class="line">        Dep.target = dep;</span><br><span class="line">        <span class="comment">// 强行执行getter，往订阅器中添加订阅者</span></span><br><span class="line">        <span class="keyword">var</span> v = data[key];</span><br><span class="line">        <span class="comment">// 释放自己</span></span><br><span class="line">        Dep.target = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Observer(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订阅器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Dep</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.subs = [];</span><br><span class="line">    <span class="keyword">this</span>.target = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dep.prototype = &#123;</span><br><span class="line">    addSub: <span class="function"><span class="keyword">function</span>(<span class="params">sub</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subs.push(sub);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"this.subs:"</span>, <span class="keyword">this</span>.subs);</span><br><span class="line">    &#125;,</span><br><span class="line">    notify: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subs.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">sub</span>) </span>&#123;</span><br><span class="line">            sub.update(data);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    update: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        updateView(val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>PS:将订阅器Dep添加到一个订阅者设计到getter里面，是为了让Watcher初始化进行触发。</p><h3 id="5、实现Watcher"><a href="#5、实现Watcher" class="headerlink" title="5、实现Watcher"></a>5、实现Watcher</h3><p>订阅者Watcher在初始化的时候需要将自己添加到订阅器Dep中，那该如何添加呢？我们已经知道监听器Observer是在get函数执行添加了订阅者Watcher的操作，所以我们只要在订阅者Watcher初始化的时候触发对应的get函数去执行添加订阅者操作。那么，怎样去触发get函数？很简单，只需获取对应的属性值就可以触发了，因为我们已经用Object.defineProperty监听了所有属性。vue在这里做了个技巧处理，就是咋我们添加订阅者的时候，做一个判断，判断是否是事先缓存好的Dep.target，在订阅者添加成功后，把target重置null即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订阅者</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; vm vue对象</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; exp 属性值</span></span><br><span class="line"><span class="comment"> * @param &#123;Function&#125; cb 回调函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Watcher</span>(<span class="params">vm, exp, cb</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.vm = vm;</span><br><span class="line">    <span class="keyword">this</span>.exp = exp;</span><br><span class="line">    <span class="keyword">this</span>.cb = cb;</span><br><span class="line">    <span class="comment">// 将自己添加到订阅器</span></span><br><span class="line">    <span class="keyword">this</span>.value = <span class="keyword">this</span>.get();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Watcher.prototype = &#123;</span><br><span class="line">    update: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.run();</span><br><span class="line">    &#125;,</span><br><span class="line">    run: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> value = <span class="keyword">this</span>.vm.data[<span class="keyword">this</span>.exp];</span><br><span class="line">        <span class="keyword">var</span> oldVal = <span class="keyword">this</span>.value;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (value !== oldVal) &#123;</span><br><span class="line">            <span class="keyword">this</span>.value = value;</span><br><span class="line">            <span class="keyword">this</span>.cb.call(<span class="keyword">this</span>.vm, value, oldVal);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 缓存自己 做个标记</span></span><br><span class="line">        Dep.target = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 强制执行监听器里的get函数</span></span><br><span class="line">        <span class="comment">// this.vm.data[this.exp] 调用getter，添加一个订阅者sub，存入到全局变量subs</span></span><br><span class="line">        <span class="keyword">var</span> value = <span class="keyword">this</span>.vm.data[<span class="keyword">this</span>.exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 释放自己</span></span><br><span class="line">        Dep.target = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> $name = <span class="built_in">document</span>.querySelector(<span class="string">"#name"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给name属性添加一个订阅者到订阅器中，当属性发生变化后，触发回调</span></span><br><span class="line">    <span class="keyword">var</span> w = <span class="keyword">new</span> Watcher(<span class="keyword">this</span>, <span class="string">"name"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        $name.innerHTML = val;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里，其实已经实现了我们的双向数据绑定：能够根据初始数据初始化页面特定元素，同时当数据改变也能更新视图。</p><h3 id="5、实现Compile"><a href="#5、实现Compile" class="headerlink" title="5、实现Compile"></a>5、实现Compile</h3><p>步骤4整个过程都能有去解析DOM节点，而是直接固定节点进行替换。接下来我们就来实现一个解析器，完成一些解析和绑定工作。</p><ol><li>获取页面的DOM节点，遍历存入到文档碎片对象中；</li><li>解析出文本节点，匹配&#123;&#123;&#125;&#125;（暂时只做”&#123;&#123;&#125;&#125;”的解析），用初始化数据替换，并添加相应订阅者；</li><li>分离出节点的指令v-on、v-bind和v-model，绑定相应的事件和函数；</li></ol><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/BD96748FED95467A8B44B1AFFB499D44/6764" alt="image"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编译器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; el 根元素</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; vm vue对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Compile</span>(<span class="params">el, vm</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.vm = vm;</span><br><span class="line">    <span class="keyword">this</span>.el = <span class="built_in">document</span>.querySelector(el);</span><br><span class="line">    <span class="keyword">this</span>.fragment = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>.init();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Compile.prototype = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.el) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"this.el:"</span>, <span class="keyword">this</span>.el);</span><br><span class="line">            <span class="comment">// 移除页面元素生成文档碎片</span></span><br><span class="line">            <span class="keyword">this</span>.fragment = <span class="keyword">this</span>.nodeToFragment(<span class="keyword">this</span>.el);</span><br><span class="line">            <span class="comment">// 编译文档碎片</span></span><br><span class="line">            <span class="keyword">this</span>.compileElement(<span class="keyword">this</span>.fragment);</span><br><span class="line">            <span class="keyword">this</span>.el.appendChild(<span class="keyword">this</span>.fragment);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"DOM Selector is not exist"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 页面DOM节点转化成文档碎片</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    nodeToFragment: <span class="function"><span class="keyword">function</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> fragment = <span class="built_in">document</span>.createDocumentFragment();</span><br><span class="line">        <span class="keyword">var</span> child = el.firstChild;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 此处添加打印，出来的不是页面中原始的DOM，而是编译后的？</span></span><br><span class="line">        <span class="comment">// NodeList是引用关系，在编译后相应的值被替换了，这里打印出来的NodeList是后来被引用更新了的</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"el:"</span>, el);</span><br><span class="line">        <span class="comment">// console.log("el.firstChild:", el.firstChild.nodeValue);</span></span><br><span class="line">        <span class="keyword">while</span> (child) &#123;</span><br><span class="line">            <span class="comment">// append后，原el上的子节点被删除了，挂载在文档碎片上</span></span><br><span class="line">            fragment.appendChild(child);</span><br><span class="line">            child = el.firstChild;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译文档碎片，遍历到当前是文本节点则去编译文本节点，如果当前是元素节点，并且存在子节点，则继续递归遍历</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileElement: <span class="function"><span class="keyword">function</span>(<span class="params">fragment</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> childNodes = fragment.childNodes;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        [].slice.call(childNodes).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// var reg = /\&#123;\&#123;\s*(.+)\s*\&#125;\&#125;/g;</span></span><br><span class="line">            <span class="keyword">var</span> reg = <span class="regexp">/\&#123;\&#123;\s*((?:.|\n)+?)\s*\&#125;\&#125;/g</span>;</span><br><span class="line">            <span class="keyword">var</span> text = node.textContent;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (self.isElementNode(node)) &#123;</span><br><span class="line">                self.compileAttr(node);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (self.isTextNode(node) &amp;&amp; reg.test(text)) &#123;</span><br><span class="line">                reg.lastIndex = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">/* var match;</span></span><br><span class="line"><span class="comment">                while(match = reg.exec(text)) &#123;</span></span><br><span class="line"><span class="comment">                    self.compileText(node, match[1]);</span></span><br><span class="line"><span class="comment">                &#125; */</span></span><br><span class="line"></span><br><span class="line">                self.compileText(node, reg.exec(text)[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (node.childNodes &amp;&amp; node.childNodes.length) &#123;</span><br><span class="line">                self.compileElement(node);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileAttr: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> nodeAttrs = node.attributes;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Array</span>.prototype.forEach.call(nodeAttrs, <span class="function"><span class="keyword">function</span>(<span class="params">attr</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> attrName = attr.name;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 只对vue本身指令进行操作</span></span><br><span class="line">            <span class="keyword">if</span> (self.isDirective(attrName)) &#123;</span><br><span class="line">                <span class="keyword">var</span> exp = attr.value;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// v-on指令</span></span><br><span class="line">                <span class="keyword">if</span> (self.isOnDirective(attrName)) &#123;</span><br><span class="line">                    self.compileOn(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// v-bind指令</span></span><br><span class="line">                <span class="keyword">if</span>(self.isBindDirective(attrName)) &#123;</span><br><span class="line">                    self.compileBind(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// v-model</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (self.isModelDirective(attrName)) &#123;</span><br><span class="line">                    self.compileModel(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                node.removeAttribute(attrName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译文档碎片节点文本，即对标记替换</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileText: <span class="function"><span class="keyword">function</span>(<span class="params">node, exp</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> exps = exp.split(<span class="string">"."</span>);</span><br><span class="line">        <span class="keyword">var</span> initText = <span class="keyword">this</span>.vm.data[exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化视图</span></span><br><span class="line">        <span class="keyword">this</span>.updateText(node, initText);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加一个订阅者到订阅器</span></span><br><span class="line">        <span class="keyword">var</span> w = <span class="keyword">new</span> Watcher(<span class="keyword">this</span>.vm, exp, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">            self.updateText(node, val);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-on指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileOn: <span class="function"><span class="keyword">function</span>(<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// @xxx v-on:xxx</span></span><br><span class="line">        <span class="keyword">var</span> onRE = <span class="regexp">/^@|^v-on:/</span>;</span><br><span class="line">        <span class="keyword">var</span> eventType = attrName.replace(onRE, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> cb = vm.methods[exp];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (eventType &amp;&amp; cb) &#123;</span><br><span class="line">            node.addEventListener(eventType, cb.bind(vm), <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-bind指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileBind: <span class="function"><span class="keyword">function</span> (<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// :xxx v-bind:xxx</span></span><br><span class="line">        <span class="keyword">var</span> bindRE = <span class="regexp">/^:|^v-bind:/</span>;</span><br><span class="line">        <span class="keyword">var</span> attr = attrName.replace(bindRE, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> val = vm.data[exp];</span><br><span class="line"></span><br><span class="line">        node.setAttribute(attr, val);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-model指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileModel: <span class="function"><span class="keyword">function</span>(<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> val = <span class="keyword">this</span>.vm.data[exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化视图</span></span><br><span class="line">        <span class="keyword">this</span>.modelUpdater(node, val);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加一个订阅者到订阅器</span></span><br><span class="line">        <span class="keyword">new</span> Watcher(<span class="keyword">this</span>.vm, exp, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            self.modelUpdater(node, value);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绑定input事件</span></span><br><span class="line">        node.addEventListener(<span class="string">"input"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> newVal = e.target.value;</span><br><span class="line">            <span class="keyword">if</span> (val === newVal) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            self.vm.data[exp] = newVal;</span><br><span class="line">            <span class="comment">// val = newVal;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新文档碎片相应的文本节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    updateText: <span class="function"><span class="keyword">function</span>(<span class="params">node, val</span>) </span>&#123;</span><br><span class="line">        node.textContent = <span class="keyword">typeof</span> val === <span class="string">"undefined"</span> ? <span class="string">""</span> : val;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * model更新节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    modelUpdater: <span class="function"><span class="keyword">function</span>(<span class="params">node, val, oldVal</span>) </span>&#123;</span><br><span class="line">        node.value = <span class="keyword">typeof</span> val == <span class="string">"undefined"</span> ? <span class="string">""</span> : val;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是vue指令，包括v-xxx:,:xxx,@xxx</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dirRE = <span class="regexp">/^v-|^@|^:/</span>;</span><br><span class="line">        <span class="keyword">return</span> dirRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-on指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isOnDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> onRE = <span class="regexp">/^v-on:|^@/</span>;</span><br><span class="line">        <span class="keyword">return</span> onRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-bind指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isBindDirective: <span class="function"><span class="keyword">function</span> (<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> bindRE = <span class="regexp">/^v-bind:|^:/</span>;</span><br><span class="line">        <span class="keyword">return</span> bindRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-model指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isModelDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> mdRE = <span class="regexp">/^v-model/</span>;</span><br><span class="line">        <span class="keyword">return</span> mdRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断元素节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isElementNode: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> node.nodeType == <span class="number">1</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文本节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isTextNode: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> node.nodeType == <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.methods = options.methods;</span><br><span class="line"></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Compile(options.el, <span class="keyword">this</span>.vm);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们就可以调用指令v-bind、v-on和v-model。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="undefined">            color: red;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-bind:class</span>=<span class="string">"myColor"</span>&gt;</span>&amp;#123;&amp;#123; name &amp;#125;&amp;#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">v-model</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"clickOk"</span>&gt;</span>Ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> myvm = <span class="keyword">new</span> MyVue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">"#demo"</span>,</span></span><br><span class="line"><span class="undefined">    data: &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">"hello word"</span>,</span></span><br><span class="line"><span class="javascript">        myColor: <span class="string">"red"</span></span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="javascript">        clickOk: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">"I am OK"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    myvm.data.name = <span class="string">"wawawa...vue was born"</span>;</span></span><br><span class="line"><span class="undefined">&#125;, 2000);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/0442953EE78A48C3B26FFE48B1731582/6629" alt="image"></p><h3 id="5、其他"><a href="#5、其他" class="headerlink" title="5、其他"></a>5、其他</h3><h4 id="5-1-proxy代理data"><a href="#5-1-proxy代理data" class="headerlink" title="5.1 proxy代理data"></a>5.1 proxy代理data</h4><p>可能注意到了，我们不管是在赋值还是取值，都是在myvm.data.someAttr上操作的，而在vue上我们习惯直接myvm.someAttr这种形式。怎样实现呢？同样，我们可以用Object.defineProperty对data所有属性做一个代理，即访问vue实例属性时，代理到data上。很简单，实现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 将数据拓展到vue的根，方便读取和设置</span><br><span class="line"> */</span><br><span class="line">MyVue.prototype.proxy = function(key) &#123;</span><br><span class="line">    var self = this;</span><br><span class="line"></span><br><span class="line">    Object.defineProperty(this, key, &#123;</span><br><span class="line">        enumerable: true,</span><br><span class="line">        configurable: true,</span><br><span class="line">        get: function proxyGetter() &#123;</span><br><span class="line">            return self.data[key];</span><br><span class="line">        &#125;,</span><br><span class="line">        set: function proxySetter(newVal) &#123;</span><br><span class="line">            self.data[key] = newVal;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/71B50262A5944F928CDA8CFD8944A538/6670" alt="image"></p><h4 id="5-2-parsePath"><a href="#5-2-parsePath" class="headerlink" title="5.2 parsePath"></a>5.2 parsePath</h4><p>上面对于data的操作只是到对于简单的基本类型属性，对于对象属性的改变该怎么更新到位呢？其实，只要深度遍历对象属性路径，就可以找到要访问属性值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据对象属性路径，最终获取值</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; obj 对象</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; path 路径</span></span><br><span class="line"><span class="comment"> * return 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parsePath</span>(<span class="params">obj, path</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bailRE = <span class="regexp">/[^\w.$]/</span>;</span><br><span class="line">    <span class="keyword">if</span> (bailRE.test(path)) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> segments = path.split(<span class="string">'.'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; segments.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!obj) &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        obj = obj[segments[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用这个方法替换我们的所有取值操作<br>vm[exp] =&gt; parsePath(vm, exp)</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/BB5F59CFD0244D4991E13B5D35F88AF3/6709" alt="image"></p><h3 id="6、新增属性的双向数据绑定"><a href="#6、新增属性的双向数据绑定" class="headerlink" title="6、新增属性的双向数据绑定"></a>6、新增属性的双向数据绑定</h3><h4 id="6-1-给对象添加属性"><a href="#6-1-给对象添加属性" class="headerlink" title="6.1 给对象添加属性"></a>6.1 给对象添加属性</h4><p>Vue 不允许在已经创建的实例上动态添加新的根级响应式属性 (root-level reactive property)。然而它可以使用 Vue.set(object, key, value) 方法将响应属性添加到嵌套的对象上。<br>也就是我们需要在Vue原型上添加一个set方法去设置新添加的属性，新属性同样要进行监听和添加订阅者。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue的set方法，用于外部新增属性 Vue.$set(target, key, val)</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; target 数据</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; key 属性</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; val 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params">target, key, val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(target)) &#123;</span><br><span class="line">        target.length = <span class="built_in">Math</span>.max(target.length, key);</span><br><span class="line">        target.splice(key, <span class="number">1</span>, val);</span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (target.hasOwnProperty(key)) &#123;</span><br><span class="line">        target[key] = val;</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> ob = (target).$Observer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!ob) &#123;</span><br><span class="line">        target[key] = val;</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对新增属性定义监听</span></span><br><span class="line">    ob.defineReactive(target, key, val);</span><br><span class="line"></span><br><span class="line">    ob.dep.notify();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyVue.prototype.$set = set;</span><br></pre></td></tr></table></figure><h4 id="6-1-给数组对象添加属性"><a href="#6-1-给数组对象添加属性" class="headerlink" title="6.1 给数组对象添加属性"></a>6.1 给数组对象添加属性</h4><p>把数组看成一个特殊的对象，就很容易理解了，对于unshift、push和splice变异方法是添加了对象的属性的，需要对新加的属性进行监听和添加订阅者。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arrKeys = [<span class="string">"push"</span>, <span class="string">"pop"</span>, <span class="string">"shift"</span>, <span class="string">"unshift"</span>, <span class="string">"splice"</span>, <span class="string">"sort"</span>, <span class="string">"reverse"</span>];</span><br><span class="line"><span class="keyword">var</span> extendArr = [];</span><br><span class="line"></span><br><span class="line">arrKeys.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">    def(extendArr, key, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result,</span><br><span class="line">            arrProto = <span class="built_in">Array</span>.prototype,</span><br><span class="line">            ob = <span class="keyword">this</span>.$Observer,</span><br><span class="line">            arr = arrProto.slice.call(<span class="built_in">arguments</span>),</span><br><span class="line">            inserted,</span><br><span class="line">            index;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"push"</span>:</span><br><span class="line">                inserted = arr;</span><br><span class="line">                index = <span class="keyword">this</span>.length;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"unshift"</span>:</span><br><span class="line">                inserted = arr;</span><br><span class="line">                index = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"splice"</span>:</span><br><span class="line">                inserted = arr.slice(<span class="number">2</span>);</span><br><span class="line">                index = arr[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        result = arrProto[key].apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听新增数组对象属性</span></span><br><span class="line">        <span class="keyword">if</span> (inserted) &#123;</span><br><span class="line">            ob.observeArray(inserted);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ob.dep.notify();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arrayKeys = <span class="built_in">Object</span>.getOwnPropertyNames(extendArr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.dep = <span class="keyword">new</span> Dep();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data || <span class="keyword">typeof</span> data !== <span class="string">"object"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在每个object上添加一个observer</span></span><br><span class="line">    def(data, <span class="string">"$Observer"</span>, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 继承变异方法</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(data)) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把数组变异方法的处理，添加到原型链上</span></span><br><span class="line">        data.__proto__ = extendArr;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听数组对象属性</span></span><br><span class="line">        <span class="keyword">this</span>.observeArray(data);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">        <span class="keyword">this</span>.walk(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    observeArray: <span class="function"><span class="keyword">function</span>(<span class="params">items</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"items:"</span>, items);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, l = items.length; i &lt; l; i++) &#123;</span><br><span class="line">            observe(items[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue-cli中遇到的坑</title>
      <link href="/yelee/2017/09/02/vue-cli%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
      <url>/yelee/2017/09/02/vue-cli%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Vue-cli-脚手架"><a href="#Vue-cli-脚手架" class="headerlink" title="Vue-cli 脚手架"></a>Vue-cli 脚手架</h2><p>项目构建自动化，错误查起来越来越不知所措，坑很多，踩过后要记录，防止踩第二遍</p><h4 id="vue-单文件-import-css-文件，不加-会报错"><a href="#vue-单文件-import-css-文件，不加-会报错" class="headerlink" title="vue 单文件@import css 文件，不加~会报错"></a>vue 单文件@import css 文件，不加<code>~</code>会报错</h4><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">@import &apos;assets/css/variable&apos;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[HMR] bundle has 1 errors</span><br><span class="line">172:176 ./~/css-loader?&#123;&quot;minimize&quot;:false,&quot;sourceMap&quot;:false&#125;!./~/vue-loader/lib/style-compiler?&#123;&quot;vue&quot;:true,&quot;id&quot;:&quot;data-v-be4708e4&quot;,&quot;scoped&quot;:true,&quot;hasInlineConfig&quot;:false&#125;!./~/stylus-loader?&#123;&quot;sourceMap&quot;:false&#125;!./~/vue-loader/lib/selector.js?type=styles&amp;index=0!./src/components/views/programs/Programs.vue</span><br><span class="line">Module build failed: Error: D:\appSoft\wampserver\wamp64\www\iHomed_vue\src\components\views\programs\Programs.vue:200:9</span><br><span class="line">   196| &#125;</span><br><span class="line">   197| &lt;/script&gt;</span><br><span class="line">   198|</span><br><span class="line">   199| &lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">   200| @import &apos;assets/css/variable&apos;</span><br><span class="line">----------------^</span><br><span class="line">   201|</span><br></pre></td></tr></table></figure><p>正确写法<code>@import &#39;~assets/css/variable&#39;</code></p><h4 id="vue-cli-中-config-index-js-配置说明"><a href="#vue-cli-中-config-index-js-配置说明" class="headerlink" title="vue-cli 中 config/index.js 配置说明"></a>vue-cli 中 config/index.js 配置说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  build: &#123;</span><br><span class="line">    env: require(&apos;./prod.env&apos;), // 使用 config/prod.env.js 中定义的编译环境</span><br><span class="line">    index: path.resolve(__dirname, &apos;../dist/index.html&apos;), // 编译输入的 index.html 文件</span><br><span class="line">    assetsRoot: path.resolve(__dirname, &apos;../dist&apos;), // 编译输出的静态资源路径</span><br><span class="line">    assetsSubDirectory: &apos;static&apos;, // 编译输出的二级目录</span><br><span class="line">    assetsPublicPath: &apos;/&apos;, // 编译发布的根目录，可配置为资源服务器域名或 CDN 域名</span><br><span class="line">    productionSourceMap: true, // 是否开启 cssSourceMap</span><br><span class="line">    // Gzip off by default as many popular static hosts such as</span><br><span class="line">    // Surge or Netlify already gzip all static assets for you.</span><br><span class="line">    // Before setting to `true`, make sure to:</span><br><span class="line">    // npm install --save-dev compression-webpack-plugin</span><br><span class="line">    productionGzip: false, // 是否开启 gzip</span><br><span class="line">    productionGzipExtensions: [&apos;js&apos;, &apos;css&apos;], // 需要使用 gzip 压缩的文件扩展名</span><br><span class="line">    // Run the build command with an extra argument to</span><br><span class="line">    // View the bundle analyzer report after build finishes:</span><br><span class="line">    // `npm run build --report`</span><br><span class="line">    // Set to `true` or `false` to always turn it on or off</span><br><span class="line">    bundleAnalyzerReport: process.env.npm_config_report</span><br><span class="line">  &#125;,</span><br><span class="line">  dev: &#123; // dev 环境</span><br><span class="line">    env: require(&apos;./dev.env&apos;), // 使用 config/dev.env.js 中定义的编译环境</span><br><span class="line">    port: 8084, // 运行测试页面的端口</span><br><span class="line">    autoOpenBrowser: true, // 自动在浏览器中打开</span><br><span class="line">    assetsSubDirectory: &apos;static&apos;, // 编译输出的二级目录</span><br><span class="line">    assetsPublicPath: &apos;/&apos;, // 编译发布的根目录，可配置为资源服务器域名或 CDN 域名</span><br><span class="line">    proxyTable: &#123;&#125;, // 需要 proxyTable 代理的接口（可跨域）</span><br><span class="line">    // CSS Sourcemaps off by default because relative paths are &quot;buggy&quot;</span><br><span class="line">    // with this option, according to the CSS-Loader README</span><br><span class="line">    // (https://github.com/webpack/css-loader#sourcemaps)</span><br><span class="line">    // In our experience, they generally work as expected,</span><br><span class="line">    // just be aware of this issue when enabling this option.</span><br><span class="line">    cssSourceMap: false  // 是否开启 cssSourceMap</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>曾经不易理解的两点<code>assetsSubDirectory</code>和<code>assetsPublicPath</code></p><ol><li><p>assetsSubDirectory<br>被 webpack 编译处理过的资源文件都会在这个 build.assetsRoot 目录下，如果 assetsRoot 值是<code>&quot;/web/app&quot;</code>，assetsSubDirectory 值为<code>&quot;static&quot;</code>，那么，webpack 将把所有资源编译到<code>web/app/static</code>目录下</p></li><li><p>assetsPublicPath<br>这个是通过 http 服务器运行的 url 路径，大多数情况下，这个是根目录（/）。如果你的后台框架对静态资源 url 前缀有要求，你仅需改变这个参数。比如不用本地的，而用线上的 CDN。</p></li></ol><h4 id="父子组件嵌套，各个钩子函数触发顺序"><a href="#父子组件嵌套，各个钩子函数触发顺序" class="headerlink" title="父子组件嵌套，各个钩子函数触发顺序"></a>父子组件嵌套，各个钩子函数触发顺序</h4><p>偶然看到这个问题：vue 中父子组件各个钩子函数触发顺序是怎样的？一时还真背问到了，在项目中添加打印才发现是这样子的</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/E40E6B0ED1F5479F909A69469C83D99A/12039" alt=""></p><p>顺序是：先依次触发父级组件<code>beforeCreate</code>、<code>create</code>和<code>beforeMounte</code>，再依次触发子级组件<code>beforeCreate</code>、<code>create</code>、<code>beforeMounte</code>和<code>mounted</code>，最后父级组件<code>mounted</code></p><h4 id="父子组件之间通信，兄弟组件之间通信"><a href="#父子组件之间通信，兄弟组件之间通信" class="headerlink" title="父子组件之间通信，兄弟组件之间通信"></a>父子组件之间通信，兄弟组件之间通信</h4><p>这个问题基本清晰，在这归纳一下</p><h5 id="1-父组件数据传给子组件"><a href="#1-父组件数据传给子组件" class="headerlink" title="1. 父组件数据传给子组件"></a>1. 父组件数据传给子组件</h5><p>通过<code>props</code>属性传递</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent-component</span> <span class="attr">:parent-data</span>=<span class="string">"pdata"</span>&gt;</span><span class="tag">&lt;/<span class="name">parent-component</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    parentData: &#123;</span><br><span class="line">      type: <span class="built_in">String</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="string">''</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-子组件传数据给父组件"><a href="#2-子组件传数据给父组件" class="headerlink" title="2. 子组件传数据给父组件"></a>2. 子组件传数据给父组件</h5><p>使用<code>$emit</code>派发</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent-component</span> <span class="attr">:parent-data:sync</span>=<span class="string">"pdata"</span> @<span class="attr">handle-callback</span>=<span class="string">"handlerCallback"</span>&gt;</span><span class="tag">&lt;/<span class="name">parent-component</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handlerCallback(params) &#123;</span><br><span class="line">      <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'handleCallback'</span>, params)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'update:parentData'</span>, someData)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-兄弟组件数据传递"><a href="#3-兄弟组件数据传递" class="headerlink" title="3. 兄弟组件数据传递"></a>3. 兄弟组件数据传递</h5><ol><li>对于大型项目，用 vue 官方推荐的 vuex</li><li><p>EventBus</p><ul><li><p>提取 bus.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">const</span> bus = <span class="keyword">new</span> Vue()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> bus</span><br></pre></td></tr></table></figure></li><li><p>兄弟组件 1 发送数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">'./bus'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'busEvent1'</span>, someData)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>兄弟组件 2 接收数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">'./bus'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$on(<span class="string">'busEvent1'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(data)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>子组件 A <code>$emit</code>派发某个事件，再由父组件<code>@handle-callback=&quot;handlerCallback&quot;</code>监听获取数据，然后，父组件<code>$refs</code>直接访问到子组件 B 的方法，从而间接实现从子组件 A 到子组件 B 的数据传递</p></li></ol><h4 id="props-在子组件中被重写报错"><a href="#props-在子组件中被重写报错" class="headerlink" title="props 在子组件中被重写报错"></a>props 在子组件中被重写报错</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue.esm.js?<span class="number">06e7</span>:<span class="number">591</span> [Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop<span class="string">'s value. Prop being mutated: "isShow"</span></span><br></pre></td></tr></table></figure><p><strong>解决方案</strong><br><code>props</code>传过来的参数通过<code>Vue.$emit</code>提交修改</p><h4 id="在props和data中使用this"><a href="#在props和data中使用this" class="headerlink" title="在props和data中使用this"></a>在<code>props</code>和<code>data</code>中使用<code>this</code></h4><p>在 Vue2.2.2 或更高版本才能这样使用，低于这个版本时，注入的值会在<code>props</code>和<code>data</code>初始化之后得到。</p><h4 id="对于高阶插件-组件库，解决组件与其子孙组件数据传输问题"><a href="#对于高阶插件-组件库，解决组件与其子孙组件数据传输问题" class="headerlink" title="对于高阶插件/组件库，解决组件与其子孙组件数据传输问题"></a>对于高阶插件/组件库，解决组件与其子孙组件数据传输问题</h4><ol><li><p>解决方案一：<code>$attrs</code>和<code>$listener</code></p><p>使用属性和方法不通过<code>props</code>传递，在子孙组件中直接用<code>$attrs</code>和<code>$listeners</code>接收。不过支持 v2.4.0+。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父级组件</span></span><br><span class="line">&lt;ul id=<span class="string">"app6"</span>&gt;</span><br><span class="line">&lt;item</span><br><span class="line"><span class="class"><span class="keyword">class</span></span>=<span class="string">"item"</span></span><br><span class="line">:model=<span class="string">"treeData"</span></span><br><span class="line">:count=<span class="string">"123"</span></span><br><span class="line">@abc=<span class="string">"function()&#123;&#125;"</span></span><br><span class="line">&gt;<span class="xml"><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 子孙组件</span></span><br><span class="line"><span class="regexp">inheritAttrs: false,</span></span><br><span class="line"><span class="regexp">created () &#123;</span></span><br><span class="line"><span class="regexp">    let attrs = this.$attrs;</span></span><br><span class="line"><span class="regexp">    console.log('mode:', attrs.mode);</span></span><br><span class="line"><span class="regexp">    console.log('count:', attrs.count);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    let listeners = this.$listeners;</span></span><br><span class="line"><span class="regexp">    console.log('bac:', listeners.abc);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>解决方案二：<code>provide/inject</code></p><p>父级组件传入<code>provide</code>数据选项，子孙组件注入<code>inject</code>数据。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line">provide: &#123;</span><br><span class="line">  foo: <span class="string">'bar'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子孙组件</span></span><br><span class="line">inject: [<span class="string">'foo'</span>] <span class="comment">// or inject: &#123; name: 'foo', defult: '' &#125;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue-cli </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
