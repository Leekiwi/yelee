<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>项目结构tree图</title>
      <link href="/2018/10/13/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%9B%BE/"/>
      <url>/2018/10/13/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%9B%BE/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="目录结构介绍"><a href="#目录结构介绍" class="headerlink" title="目录结构介绍"></a>目录结构介绍</h2><pre><code>|-- build                            // webpack配置文件|-- config                           // 项目打包路径|-- src                              // 源码目录|   |-- components                   // 组件|       |-- common                   // 公共组件|           |-- bus.js                // Event Bus|           |-- Header.vue           // 公共头部|           |-- Home.vue                // 公共路由入口|           |-- Sidebar.vue          // 公共左边栏|           |-- Tags.vue                // 页面切换标签组件|       |-- page                        // 主要路由页面|           |-- 403.vue|           |-- 404.vue|           |-- BaseCharts.vue       // 基础图表|           |-- BaseForm.vue         // 基础表单|           |-- BaseTable.vue        // 基础表格|           |-- DashBoard.vue        // 系统首页|           |-- DragList.vue         // 拖拽列表组件|           |-- Icon.vue             // 自定义图标组件|           |-- Login.vue               // 登录|           |-- Markdown.vue         // markdown组件|           |-- Premission.vue       // 权限测试组件|           |-- Upload.vue           // 图片上传|           |-- VueEditor.vue        // 富文本编辑器|   |-- App.vue                      // 页面入口文件|   |-- main.js                      // 程序入口文件，加载各种公共组件|-- .babelrc                         // ES6语法编译配置|-- .editorconfig                    // 代码编写规格|-- .gitignore                       // 忽略的文件|-- index.html                       // 入口html文件|-- package.json                     // 项目及工具的依赖配置文件|-- README.md                        // 说明</code></pre>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实用 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>npm报错：error code EINTEGRITY</title>
      <link href="/2018/10/13/npm%E6%8A%A5%E9%94%99%EF%BC%9Aerror-code-EINTEGRITY/"/>
      <url>/2018/10/13/npm%E6%8A%A5%E9%94%99%EF%BC%9Aerror-code-EINTEGRITY/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天 npm install 时候遇到类似的错误</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法:"></a>解决办法:</h3><blockquote><p>一、升级 npm<br><code>npm i -g npm</code></p></blockquote><blockquote><p>二、删除 package-lock.json</p></blockquote><blockquote><p>三、删除缓存目录下的所有数据<br><code>npm cache clean –force</code></p></blockquote><blockquote><p>四、验证缓存数据的有效性和完整性，清理垃圾数据<br><code>npm cache verify</code></p></blockquote><blockquote><p>五、包问题<br>包是在 windows 下发布的，在 linux 安装错误。<br>排查方法：看日志，去除相关的包配置，再安装测试</p></blockquote><p>一般到第四步即可完美解决</p>]]></content>
      
      <categories>
          
          <category> 工作常见问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端</title>
      <link href="/2018/09/13/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"/>
      <url>/2018/09/13/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="security">  <div class="input-container">  <input type="password" class="form-control" id="pass" placeholder="请输入密码以访问" />    <label for="pass">请输入密码以访问</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      <categories>
          
          <category> 前端面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端面试 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ES6中简约强大数组操作组合</title>
      <link href="/2018/09/07/ES6%E4%B8%AD%E7%AE%80%E7%BA%A6%E5%BC%BA%E5%A4%A7%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%BB%84%E5%90%88/"/>
      <url>/2018/09/07/ES6%E4%B8%AD%E7%AE%80%E7%BA%A6%E5%BC%BA%E5%A4%A7%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%BB%84%E5%90%88/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ES6-数组新增方法"><a href="#ES6-数组新增方法" class="headerlink" title="ES6 数组新增方法"></a>ES6 数组新增方法</h2><h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h3><p><code>array.reduce(callback[, initialValue])</code></p><a id="more"></a><p>数组求和</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br><span class="line">numbers.reduce(<span class="function">(<span class="params">prev, cur, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'prev: '</span> + prev + <span class="string">'; '</span> + <span class="string">'cur: '</span> + cur + <span class="string">';'</span>)</span><br><span class="line">  <span class="keyword">return</span> prev + cur</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">prev: <span class="number">10</span></span><br><span class="line">cur: <span class="number">20</span></span><br><span class="line">prev: <span class="number">30</span></span><br><span class="line">cur: <span class="number">30</span></span><br><span class="line">prev: <span class="number">60</span></span><br><span class="line">cur: <span class="number">40</span></span><br></pre></td></tr></table></figure><p>这第二个参数就是设置 prev 的初始类型和初始值，比如为 0，就表示 prev 的初始值为 number 类型，值为 0，因此，reduce 的最终结果也会是 number 类型。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br><span class="line">numbers.reduce(<span class="function">(<span class="params">prev, cur, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'prev: '</span> + prev + <span class="string">'; '</span> + <span class="string">'cur: '</span> + cur + <span class="string">';'</span>)</span><br><span class="line">  <span class="keyword">return</span> prev + cur</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">prev: <span class="number">0</span></span><br><span class="line">cur: <span class="number">10</span></span><br><span class="line">prev: <span class="number">10</span></span><br><span class="line">cur: <span class="number">20</span></span><br><span class="line">prev: <span class="number">30</span></span><br><span class="line">cur: <span class="number">30</span></span><br><span class="line">prev: <span class="number">60</span></span><br><span class="line">cur: <span class="number">40</span></span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.zhangxinxu.com/wordpress/2013/04/es5%E6%96%B0%E5%A2%9E%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/" target="_blank" rel="noopener">https://www.zhangxinxu.com/wordpress/2013/04/es5%E6%96%B0%E5%A2%9E%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/</a></p><p><a href="https://segmentfault.com/a/1190000005921341" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005921341</a></p><p><a href="https://segmentfault.com/a/1190000013972464" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013972464</a></p><p><a href="https://segmentfault.com/a/1190000013121115" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013121115</a></p>]]></content>
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>干掉状态从session到token</title>
      <link href="/2018/09/07/%E5%B9%B2%E6%8E%89%E7%8A%B6%E6%80%81%E4%BB%8Esession%E5%88%B0token/"/>
      <url>/2018/09/07/%E5%B9%B2%E6%8E%89%E7%8A%B6%E6%80%81%E4%BB%8Esession%E5%88%B0token/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="美好的旧时光"><a href="#美好的旧时光" class="headerlink" title="美好的旧时光"></a>美好的旧时光</h2><p>我经常怀念三十年前那美好的旧时光， 工作很轻松， 生活很悠闲。</p><p>上班的时候偶尔有些 HTTP 的请求发到我这里， 我简单的看一下， 取出相对应的 html 文档，图片，发回去就可以了， 然后就可以继续喝茶聊天。</p><a id="more"></a><p>我的创造者们对我很好， 他们制定的一个简单 HTTP 协议， 就是请求加响应， 尤其是我不用记住是谁刚刚发了 HTTP 请求， 每个请求对我来说都是全新的！</p><p>邮件服务器很羡慕我， 他说：老弟，你的生活太惬意了， 哪像我， 每次有人从客户端访问邮箱， 我都得专门给他建立一个会话， 来处理他发的消息， 你倒好， 完全不用管理会话。</p><p>这是由应用的特性决定的， 如果邮件服务器不管理会话， 那多个人之间的邮件消息就会完全混到一起了， 乱作一团了。</p><p>而 30 年前的 Web 基本上就是文档的浏览而已， 既然是浏览，我作为一个服务器， 为什么要记住谁在一段时间里都浏览了什么文档呢？</p><p>2</p><h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><p>但是好日子没持续多久， 很快大家就不满足于静态的 Html 文档了， 交互式的 Web 应用开始兴起， 尤其是论坛， 在线购物等网站。</p><p>我马上就遇到了和邮件服务器一样的问题， 那就是必须管理会话，必须记住哪些人登录系统， 哪些人往自己的购物车中放了商品， 也就是说我必须把每个人区分开。</p><p>这对我来说是个不小的挑战， 由于 HTTP 协议的无状态特性， 我必须加点小手段，才能完成会话管理。</p><p>我想出的办法就是给大家发一个会话标识(session id), 说白了就是一个随机的字符串，每个人收到的都不一样， 每次大家向我发起 HTTP 请求的时候，把这个字符串给一并捎过来， 这样我就能区分开谁是谁了。</p><p>3</p><h2 id="沉重的负担"><a href="#沉重的负担" class="headerlink" title="沉重的负担"></a>沉重的负担</h2><p>大家都很高兴， 可是我就不爽了。</p><p>每个人只需要保存自己的 session id，而我需要保存所有人的 session id ！ 如果访问我的人多了， 就得由成千上万，甚至几十万个。</p><p>这对我来说是一个巨大的开销 ， 严重的限制了我的扩展能力， 比如说我用两个机器组成了一个集群， 小 F 通过机器 A 登录了系统， 那 session id 会保存在机器 A 上， 假设小 F 的下一次请求被转发到机器 B 怎么办？ 机器 B 可没有小 F 的 session id 啊。</p><p>有时候我会采用一点小伎俩： <strong>session sticky</strong> ， 就是让小 F 的请求一直粘连在机器 A 上， 但是这也不管用， 要是机器 A 挂掉了， 还得转到机器 B 去。</p><p>那我只好做 session 的复制了， 把 session id 在两个机器之间搬来搬去， 快累死了。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vNJe66yhKRkVOxqS9gxftlwCuh8yicUcPPFaMMLv0oia9Xzf5IutmIPwQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><blockquote><ul><li>后来有个叫 <strong>Memcached</strong> 的给我支了招： 把 session id 集中存储到一个地方， 所有的机器都来访问这个地方的数据， 这样一来，就不用复制了， 但是增加了单点失败的可能性， 要是那个负责 session 的机器挂了， 所有人都得重新登录一遍， 估计得被人骂死。</li></ul></blockquote><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vwDyicwnvVayaKBpxXY4W5mUgQDwHD7Iwu3yY2OhV4qXG49oMbIgQP0A/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>我也尝试把这个单点的机器也搞出集群，增加可靠性， 但不管如何， 这小小的 session 对我来说是一个沉重的负担。</p><p>4</p><h3 id="时间换空间"><a href="#时间换空间" class="headerlink" title="时间换空间"></a>时间换空间</h3><p>这几天的晚上我一直在思考， 我为什么要保存这可恶的 session 呢， 只让每个客户端去保存该多好？</p><p>可是如果我不保存这些 session id , 我怎么验证客户端发给我的 session id 的确是我生成的呢？ 如果我不去验证，我都不知道他们是不是合法登录的用户， 那些不怀好意的家伙们就可以伪造 session id , 为所欲为了。</p><p>嗯，对了，关键点就是验证 ！</p><blockquote><ul><li>比如说， 小 F 已经登录了系统， 我给他发一个 <strong>令牌(token)</strong>， 里边包含了小 F 的 user id， 下一次小 F 再次通过 Http 请求访问我的时候， 把这个 token 通过 Http header 带过来不就可以了。</li></ul></blockquote><p>不过这和 session id 没有本质区别啊， 任何人都可以可以伪造， 所以我得想点儿办法， 让别人伪造不了。</p><blockquote><ul><li><strong>那就对数据做一个签名吧， 比如说我用 HMAC-SHA256 算法，加上一个只有我才知道的密钥， 对数据做一个签名， 把这个签名和数据一起作为 token ， 由于密钥别人不知道， 就无法伪造 token 了。</strong></li></ul></blockquote><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vicfOmZHQhQ7e6Wjk7licKBMh38rPZfnEQxAibWXjY84P0icEVoFU51ibwiaQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>这个 token 我不保存， 当小 F 把这个 token 给我发过来的时候，我再用同样的 HMAC-SHA256 算法和同样的密钥，对数据再计算一次签名， 和 token 中的签名做个比较， 如果相同， 我就知道小 F 已经登录过了，并且可以直接取到小 F 的 user id , 如果不相同， 数据部分肯定被人篡改过， 我就告诉发送者： 对不起，没有认证。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vNJe66yhKRkVOxqS9gxftlwCuh8yicUcPPFaMMLv0oia9Xzf5IutmIPwQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>Token 中的数据是明文保存的（虽然我会用 Base64 做下编码， 但那不是加密）， 还是可以被别人看到的， 所以我不能在其中保存像密码这样的敏感信息。</p><p>当然， 如果一个人的 token 被别人偷走了， 那我也没办法， 我也会认为小偷就是合法用户， 这其实和一个人的 session id 被别人偷走是一样的。</p><blockquote><ul><li>这样一来， 我就不保存 session id 了， <strong>我只是生成 token , 然后验证 token ， 我用我的 CPU 计算时间获取了我的 session 存储空间 ！</strong></li></ul></blockquote><p>解除了 session id 这个负担， 可以说是无事一身轻， 我的机器集群现在可以轻松地做水平扩展， 用户访问量增大， 直接加机器就行。 这种无状态的感觉实在是太好了！</p><p>（完）</p>]]></content>
      
      <categories>
          
          <category> 状态保持 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>element-ui更换主题和按需引入组件</title>
      <link href="/2018/09/04/element-ui%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5%E7%BB%84%E4%BB%B6/"/>
      <url>/2018/09/04/element-ui%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5%E7%BB%84%E4%BB%B6/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="element-ui-使用初体验"><a href="#element-ui-使用初体验" class="headerlink" title="element-ui 使用初体验"></a>element-ui 使用初体验</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>手上有些项目用的<code>element-ui</code>，刚好有空琢磨一下怎么减小打包文件大小和打包速度方面，为了演示实验，用 vue-cli 生成初始项目，在这仅对 element-ui 主题和组件方面来优化。</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack vuecli</span><br></pre></td></tr></table></figure><h3 id="完整引入"><a href="#完整引入" class="headerlink" title="完整引入"></a>完整引入</h3><p>完整地将 ui 和样式引入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span></span><br></pre></td></tr></table></figure><p>在页面简单使用三个组件，看看效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"block"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"demonstration"</span>&gt;</span>区分颜色<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-rate</span> <span class="attr">v-model</span>=<span class="string">"value1"</span> <span class="attr">:colors</span>=<span class="string">"['#99A9BF', '#F7BA2A', '#FF9900']"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-rate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">icon</span>=<span class="string">"el-icon-search"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"success"</span> <span class="attr">icon</span>=<span class="string">"el-icon-check"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"info"</span> <span class="attr">icon</span>=<span class="string">"el-icon-message"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"warning"</span> <span class="attr">icon</span>=<span class="string">"el-icon-star-off"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"danger"</span> <span class="attr">icon</span>=<span class="string">"el-icon-delete"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/gb/element-ui更换主题和按需引入组件/0.bmp" alt=""></p><p>再看一下打包后的资源大小情况<code>npm run build --report</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: fa47514a97341329a7c0</span><br><span class="line">Version: webpack 3.11.0</span><br><span class="line">Time: 20363ms</span><br><span class="line">                                                  Asset       Size  Chunks                    Chunk Names</span><br><span class="line">                 static/fonts/element-icons.6f0a763.ttf      11 kB          [emitted]</span><br><span class="line">               static/js/vendor.5efcf828140d5dbedda9.js     714 kB       0  [emitted]  [big]  vendor</span><br><span class="line">                  static/js/app.a4a31db472f653b911e7.js      12 kB       1  [emitted]         app</span><br><span class="line">             static/js/manifest.2ae2e69a05c33dfc65f8.js  857 bytes       2  [emitted]         manifest</span><br><span class="line">    static/css/app.f24bb0ae3686720fe2e00c5a2024b8f1.css     185 kB       1  [emitted]         app</span><br><span class="line">static/css/app.f24bb0ae3686720fe2e00c5a2024b8f1.css.map     267 kB          [emitted]</span><br><span class="line">           static/js/vendor.5efcf828140d5dbedda9.js.map    2.73 MB       0  [emitted]         vendor</span><br><span class="line">              static/js/app.a4a31db472f653b911e7.js.map    22.8 kB       1  [emitted]         app</span><br><span class="line">         static/js/manifest.2ae2e69a05c33dfc65f8.js.map    4.97 kB       2  [emitted]         manifest</span><br><span class="line">                                             index.html  508 bytes          [emitted]</span><br></pre></td></tr></table></figure><p>发现打包后提取公共模块<code>static/js/vendor.js</code>有 714kb</p><p>再看一下各个模块占用情况：</p><p><img src="/gb/element-ui更换主题和按需引入组件/1.bmp" alt=""></p><p>发现<code>elment-ui.common.js</code>占用最大。所有模块资源总共有 708kb。怎么才能减小打包后的大小呢？很容易就会想到 ui 的引入和样式的引入中，实际我们只使用了三个组件，却整体都被打包了，在这里引入这三个组件即可。</p><h3 id="按需引入组件样式"><a href="#按需引入组件样式" class="headerlink" title="按需引入组件样式"></a>按需引入组件样式</h3><p>新建一个<code>element-variables.scss</code>文件（为什么是 SCSS 文件，后面自定义主题会用到）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/*icon字体路径变量*/</span><br><span class="line">$--font-path: &quot;~element-ui/lib/theme-chalk/fonts&quot;;</span><br><span class="line"></span><br><span class="line">/*按需引入用到的组件的scss文件和基础scss文件*/</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/base.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/rate.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/button.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/row.scss&quot;;</span><br></pre></td></tr></table></figure><h3 id="按需引入组件"><a href="#按需引入组件" class="headerlink" title="按需引入组件"></a>按需引入组件</h3><p>新建一个<code>elementConfig.js</code>文件，将项目用到的 element 组件引入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Rate, Row, Button &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  install(V) &#123;</span><br><span class="line">    V.use(Rate)</span><br><span class="line">    V.use(Button)</span><br><span class="line">    V.use(Row)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第一次优化后打包分析"><a href="#第一次优化后打包分析" class="headerlink" title="第一次优化后打包分析"></a>第一次优化后打包分析</h3><p>将以上<code>element-variables.scss</code>和<code>elementConfig.js</code>引入到<code>main.js</code>中。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'@/assets/js/elementConfig'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'@/assets/css/element-variables.scss'</span></span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI)</span><br></pre></td></tr></table></figure><p>貌似上面一切都很顺理成章，打包后大小会减小。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: <span class="number">3</span>ba9b74482f121efd3aa</span><br><span class="line">Version: webpack <span class="number">3.11</span><span class="number">.0</span></span><br><span class="line">Time: <span class="number">18854</span>ms</span><br><span class="line">                                                  Asset       Size  Chunks                    Chunk Names</span><br><span class="line">                 <span class="keyword">static</span>/fonts/element-icons<span class="number">.6</span>f0a763.ttf      <span class="number">11</span> kB          [emitted]</span><br><span class="line">               <span class="keyword">static</span>/js/vendor<span class="number">.11</span>c71f168a2d61b547a0.js     <span class="number">714</span> kB       <span class="number">0</span>  [emitted]  [big]  vendor</span><br><span class="line">                  <span class="keyword">static</span>/js/app.dbb5b49dad2d42b3598c.js    <span class="number">11.2</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line">             <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js  <span class="number">857</span> bytes       <span class="number">2</span>  [emitted]         manifest</span><br><span class="line">    <span class="keyword">static</span>/css/app.bf52525d6279e7fb87b4db770d119a8d.css    <span class="number">25.7</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line"><span class="keyword">static</span>/css/app.bf52525d6279e7fb87b4db770d119a8d.css.map      <span class="number">63</span> kB          [emitted]</span><br><span class="line">           <span class="keyword">static</span>/js/vendor<span class="number">.11</span>c71f168a2d61b547a0.js.map    <span class="number">2.73</span> MB       <span class="number">0</span>  [emitted]         vendor</span><br><span class="line">              <span class="keyword">static</span>/js/app.dbb5b49dad2d42b3598c.js.map      <span class="number">21</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line">         <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js.map    <span class="number">4.97</span> kB       <span class="number">2</span>  [emitted]         manifest</span><br><span class="line">                                             index.html  <span class="number">508</span> bytes          [emitted]</span><br></pre></td></tr></table></figure><p>结果可知，<code>static/js/vendor.js</code>还是 714kb！</p><p>再看各个模块占用情况：</p><p><img src="/gb/element-ui更换主题和按需引入组件/2.bmp" alt=""></p><p>WHAT?竟然模块都没什么变化，岂不是竹篮打水，事与愿违。</p><h3 id="再次打包优化尝试"><a href="#再次打包优化尝试" class="headerlink" title="再次打包优化尝试"></a>再次打包优化尝试</h3><p>后来查到有人同样遇到这个问题，提出一个<a href="https://github.com/ElemeFE/element/issues/6362#issuecomment-323517538" target="_blank" rel="noopener">issues#6362</a>，原来只引入需要的<code>element-ui</code>组件，<code>webpack</code>还是把整体的 ui 库和样式都打包了，需要一个<code>webpack</code>的<code>babel</code>插件<code>babel-plugin-component</code>，这样才能真正按需引入打包。这块其实被写到官方文档更换 <a href="http://element-cn.eleme.io/#/zh-CN/component/custom-theme" target="_blank" rel="noopener">自定义主题</a> 的配置了。</p><p>于是<code>npm i babel-pugin-componet -D</code>安装后，在增加<code>.babelrc</code>文件插件配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"presets"</span>: [</span><br><span class="line">    [<span class="string">"env"</span>, &#123;</span><br><span class="line">      <span class="string">"modules"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"targets"</span>: &#123;</span><br><span class="line">        <span class="string">"browsers"</span>: [<span class="string">"&gt; 1%"</span>, <span class="string">"last 2 versions"</span>, <span class="string">"not ie &lt;= 8"</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="string">"stage-2"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"plugins"</span>: [<span class="string">"transform-vue-jsx"</span>, <span class="string">"transform-runtime"</span>, [<span class="string">"component"</span>, &#123;</span><br><span class="line">    <span class="string">"libraryName"</span>: <span class="string">"element-ui"</span>,</span><br><span class="line">    <span class="string">"styleLibraryName"</span>: <span class="string">"theme-chalk"</span></span><br><span class="line">  &#125;]]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>页面运行正常，再次打包。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: <span class="number">9</span>cc71dead6d7646c9ed4</span><br><span class="line">Version: webpack <span class="number">3.11</span><span class="number">.0</span></span><br><span class="line">Time: <span class="number">9963</span>ms</span><br><span class="line">                                                  Asset       Size  Chunks             Chunk Names</span><br><span class="line">                 <span class="keyword">static</span>/fonts/element-icons<span class="number">.6</span>f0a763.ttf      <span class="number">11</span> kB          [emitted]</span><br><span class="line">                  <span class="keyword">static</span>/js/app<span class="number">.77</span>c0883f4f0fc0bf5cbc.js    <span class="number">11.4</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line">               <span class="keyword">static</span>/js/vendor<span class="number">.942130</span>fd13274b901889.js     <span class="number">126</span> kB       <span class="number">1</span>  [emitted]  vendor</span><br><span class="line">             <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js  <span class="number">857</span> bytes       <span class="number">2</span>  [emitted]  manifest</span><br><span class="line">    <span class="keyword">static</span>/css/app.b140020e5dbee406ae70780b43ba7ddc.css    <span class="number">27.8</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line"><span class="keyword">static</span>/css/app.b140020e5dbee406ae70780b43ba7ddc.css.map    <span class="number">91.4</span> kB          [emitted]</span><br><span class="line">              <span class="keyword">static</span>/js/app<span class="number">.77</span>c0883f4f0fc0bf5cbc.js.map    <span class="number">21.1</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line">           <span class="keyword">static</span>/js/vendor<span class="number">.942130</span>fd13274b901889.js.map     <span class="number">613</span> kB       <span class="number">1</span>  [emitted]  vendor</span><br><span class="line">         <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js.map    <span class="number">4.97</span> kB       <span class="number">2</span>  [emitted]  manifest</span><br><span class="line">                                             index.html  <span class="number">508</span> bytes          [emitted]</span><br></pre></td></tr></table></figure><p><code>static/js/vendor.js</code>确实变小了，126kB。再来看各个模块分析图。</p><p><img src="/gb/element-ui更换主题和按需引入组件/3.bmp" alt=""></p><p>模块总共 135.03KB，少了 5 倍！</p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p><code>element-ui</code>的<code>theme-chalk</code>使用<code>SCSS</code>编写，如果在自己的项目中也是用<code>SCSS</code>，那么可以直接在项目中改变样式变量，因此可以在前面新建的<code>element-variables.scss</code>文件用新的主题颜色变量覆盖即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/*主题颜色变量*/</span><br><span class="line">$--color-primary: #f0f;</span><br><span class="line"></span><br><span class="line">/*icon字体路径变量*/</span><br><span class="line">$--font-path: &quot;~element-ui/lib/theme-chalk/fonts&quot;;</span><br></pre></td></tr></table></figure><p>可能你已经注意到了，这里没有分别引入用到的组件样式了，是因为<code>babel-plugin-component</code>帮我们按需引入了对应的样式。</p><p>现在我们的主题就变成了</p><p><img src="/gb/element-ui更换主题和按需引入组件/4.bmp" alt=""></p><p>如果你没有用到<code>SCSS</code>，可以用<code>element-theme</code>主题编译插件，生成自定义主题文件引入。</p><p>完~ps：个人见解有限，欢迎指正。</p>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> element-ui </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端必备vscode插件</title>
      <link href="/2018/09/03/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87vscode%E6%8F%92%E4%BB%B6/"/>
      <url>/2018/09/03/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87vscode%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这篇文章只要让你做一些基础的配置，把 vscode 变得更加顺手；<br>插件的需求不是一成不变，有些插件我已经移除了。。在最新的 VSCODE 1.9.1 中，<br>部分以前用插件实现的功能已经集成了，那就没有必要存在了。这里就不做推荐了复制代码</p><a id="more"></a><h1 id="必备插件"><a href="#必备插件" class="headerlink" title="必备插件"></a>必备插件</h1><hr><h2 id="功能性"><a href="#功能性" class="headerlink" title="功能性"></a>功能性</h2><ol><li>Auto Close Tag : 匹配标签，关闭对应的标签。很实用【HTML/XML】 Auto</li><li>Rename Tag : sublime 和 webstorm 也有这个内置功能，改变标签的时候同时改动开闭合标签；【HTML/XML】</li><li>beautify : 良好的拓展性，可以格式化 JSON|JS|HTML|CSS|SCSS,比内置格式化好用</li><li>Code Runner : 代码编译运行看结果，支持众多语言</li><li>colorize : 会给颜色代码增加一个当前匹配代码颜色的背景，非常好</li><li>Document This : JSDOC 注解调用，值得易用</li><li>Git History : 不得不赞的插件，谁用谁知道，功能很赞</li><li>HTML CSS Support : 这个也是必备插件之一</li><li>Path Autocomplete : 路径智能补全</li><li>Path Intellisense ： 路径智能提示</li><li>SCSS IntelliSense Preview : SCSS 智能提醒，配置强大</li><li>Syncing: 这个同步插件要比官方市场那个最高下载量的要好，支持删除同步！！！</li><li>Version Lens : 可以及时看到 package.json 内部版本的变动，很实用</li><li>Output Colorizer : 可以终端日志输出着色，实用</li></ol><h2 id="代码片段插件"><a href="#代码片段插件" class="headerlink" title="代码片段插件"></a>代码片段插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JavaScript (ES6) code snippets  : ES6的代码片段，实用</span><br><span class="line">JavaScript Snippet Pack   : ES5及以下的代码片段，实用</span><br></pre></td></tr></table></figure><h2 id="语法校验"><a href="#语法校验" class="headerlink" title="语法校验"></a>语法校验</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stylelint : 比内置的要全，更智能</span><br></pre></td></tr></table></figure><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><ol><li>Panda:用了相当久的一套颜色高亮，个人感觉很耐看</li><li>Enki Theme (Material Design Inspired) : 当前用的代码高亮，个人感觉很赞</li><li>Material Icon Theme : 一套扁平化的文件图标，内置的 seti 也很优秀，还有 simple icon 和 vscode-icons</li></ol><p>作者：爱吃 kiwi<br>链接：<a href="https://leekiwi.github.io/">https://leekiwi.github.io/</a><br>来源：github<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      <categories>
          
          <category> 实用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nodejs学习笔记</title>
      <link href="/2018/08/28/node-js-study-note/"/>
      <url>/2018/08/28/node-js-study-note/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Nodejs-学习笔记"><a href="#Nodejs-学习笔记" class="headerlink" title="Nodejs 学习笔记"></a>Nodejs 学习笔记</h2><p><strong>node 内部对模块输出 module.exports 的实现</strong></p><p>变量 module 是 Node 在加载 js 文件前准备的一个变量，并将其传入加载函数</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 准备module对象</span><br><span class="line">var module = &#123;</span><br><span class="line">    id: &apos;hello&apos;,</span><br><span class="line">    exports: &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var load = function(module) &#123;</span><br><span class="line">    // 读取的hello.js代码</span><br><span class="line">    function greet(name) &#123;</span><br><span class="line">        console.log(&apos;Hello, &apos; + name + &apos;!&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    module.exports = greet;</span><br><span class="line"></span><br><span class="line">    // hello.js代码结束</span><br><span class="line">    return module.exports;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var exported = load(module);</span><br><span class="line"></span><br><span class="line">// 保存module</span><br><span class="line">save(module, exported);</span><br></pre></td></tr></table></figure><p>默认情况下，Node 准备的 exports 变量和 module.exports 变量实际上是同一个变量，所以一下两种写法都支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// method 1</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    foo: foo,</span><br><span class="line">    bar: bar</span><br><span class="line">&#125;;</span><br><span class="line">or</span><br><span class="line">module.exports.foo = foo;</span><br><span class="line">module.exports.bar = bar;</span><br><span class="line"></span><br><span class="line">// method 2</span><br><span class="line">exports.foo = foo;</span><br><span class="line">exports.bar = bar;</span><br></pre></td></tr></table></figure><p><strong>process</strong></p><p>下一轮事件循环 回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">process.nextTick(function() &#123;</span><br><span class="line">    console.log(&apos;nextTick callback&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>程序即将退出 回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">process.on(&apos;exit&apos;, function(code) &#123;</span><br><span class="line">    console.log(&apos;about to exit with code&apos; + code);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">console.log(&apos;nextTick set&apos;);</span><br></pre></td></tr></table></figure><p><strong>readFile/readFileSync writeFile/writeFileSync stat</strong></p><p>异步读取一个文本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&apos;./hello.js&apos;, &apos;utf-8&apos;, function(err, data) &#123;</span><br><span class="line">    console.log(&apos;read file start...&apos;);</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>异步读取一个二进制文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&apos;1.jpg&apos;, function(err, data) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // 返回一个buffer对象</span><br><span class="line">        console.log(data);</span><br><span class="line">        // Buffer对象转化成字符串</span><br><span class="line">        console.log(data.toString(&apos;utf-8&apos;));</span><br><span class="line">        // 文件大小</span><br><span class="line">        console.log(data.length + &apos; bytes&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同步读取一个文件直接返回，读取错误用 try…catch 捕获</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">    var data = fs.readFileSync(&apos;./1.jpg&apos;);</span><br><span class="line">    console.log(data);</span><br><span class="line">&#125;</span><br><span class="line">catch(err) &#123;</span><br><span class="line">    console.log(err);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(&apos;readFileSync ended&apos;);</span><br></pre></td></tr></table></figure><p>异步写入一个文件，默认是以 UTF-8 编码写入文本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var data = &apos;Hello,Node.js&apos;;</span><br><span class="line">// var data = fs.readFileSync(&apos;./1.jpg&apos;);</span><br><span class="line">fs.writeFile(&apos;output.txt&apos;, data, function(err) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        console.log(&apos;write file finished&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同步写入文本到一个文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var data = &apos;Hello,Node.js,I am sync data&apos;;</span><br><span class="line">fs.writeFileSync(&apos;output.txt&apos;, data);</span><br><span class="line">console.log(&apos;writeFileSync ended&apos;);</span><br></pre></td></tr></table></figure><p>获取文件信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">fs.stat(&apos;./1.jpg&apos;, function(err, stat) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // 是否是文件</span><br><span class="line">        console.log(&apos;isFile:&apos; + stat.isFile());</span><br><span class="line">        // 是否是目录</span><br><span class="line">        console.log(&apos;isDirectory:&apos; + stat.isDirectory());</span><br><span class="line"></span><br><span class="line">        if(stat.isFile()) &#123;</span><br><span class="line">            // 文件大小</span><br><span class="line">            console.log(&apos;size:&apos; + stat.size);</span><br><span class="line">            // 创建时间，Date对象</span><br><span class="line">            console.log(&apos;birth time:&apos; + stat.birthtime);</span><br><span class="line">            // 修改时间，Date对象</span><br><span class="line">            console.log(&apos;modified time:&apos; + stat.mtime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>PS:绝大部分需要在服务器运行期反复执行业务逻辑，必须使用异步代码服务器启动时如果需要读取配置文件，或者结束时需要写入到状态文件时，可以使用同步代码</p><p><strong>createReadStream createWriteStream pipe</strong></p><p>在 node.js 中，流也是一个对象，我们只需要响应流的事件就可以了。<br>data 事件表示流的数据已经可以读取了，end 事件表示这个流已经到末尾了，没有数据可以读取了，error 事件表示出错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var rs = fs.createReadStream(&apos;./data.txt&apos;, &apos;utf-8&apos;);</span><br><span class="line"></span><br><span class="line">// data事件可能有多次，每次传递的chunk是流的一部分数据</span><br><span class="line">rs.on(&apos;data&apos;, function(chunk) &#123;</span><br><span class="line">    console.log(&apos;data event:&apos;, chunk);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(&apos;end&apos;, function (chunk) &#123;</span><br><span class="line">    console.log(&apos;end event:&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(&apos;error&apos;, function (chunk) &#123;</span><br><span class="line">    console.log(&apos;error event:&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>以流的形式写入文件，只需要不断调用 write()方法，最后以 end()结束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var ws = fs.createWriteStream(&apos;./data.txt&apos;);</span><br><span class="line">ws.write(&apos;user stream write data\n&apos;);</span><br><span class="line">ws.write(&apos;loading...\n&apos;);</span><br><span class="line">ws.write(&apos;END&apos;);</span><br><span class="line">ws.end();</span><br></pre></td></tr></table></figure><p>pipe()把一个文件流和另一个文件流串起来，这样源文件的所有数据就自动写入到目标文件里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var rs = fs.createReadStream(&apos;./data.txt&apos;);</span><br><span class="line">var ors = fs.createReadStream(&apos;./output.txt&apos;);</span><br><span class="line">var ws = fs.createWriteStream(&apos;./output.txt&apos;);</span><br><span class="line">rs.pipe(ws);</span><br></pre></td></tr></table></figure><p>创建一个服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var server = http.createServer(function(request, response) &#123;</span><br><span class="line">    // http请求头的method和url</span><br><span class="line">    console.log(&apos;header meathod:&apos;, request.method);</span><br><span class="line">    console.log(&apos;header url:&apos;, request.url);</span><br><span class="line"></span><br><span class="line">    // 将http响应200写入response，同时设置content-type</span><br><span class="line">    response.writeHead(200, &#123;&apos;Content-Type&apos;: &apos;text/html&apos;&#125;);</span><br><span class="line"></span><br><span class="line">    // 将http响应的html内容写入response</span><br><span class="line">    response.end(&apos;&lt;h1&gt;Hello world!&lt;/h1&gt;&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">console.log(&apos;Server is running at http://localhost:8080&apos;);</span><br></pre></td></tr></table></figure><p>实现一个文件服务器，拼接访问路径读取本地文件，从命令参数获取 root 目录，默认是当前目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">var root = path.resolve(&apos;.&apos;);</span><br><span class="line">console.log(&apos;Static root dir:&apos; + root);</span><br><span class="line"></span><br><span class="line">// 创建服务器</span><br><span class="line"> var server = http.createServer(function (request, response) &#123;</span><br><span class="line">    // node提供url模块解析url字符串 获取url的path</span><br><span class="line"></span><br><span class="line">    var pathname = url.parse(request.url).pathname;</span><br><span class="line"></span><br><span class="line">    if (pathname === &apos;/favicon.ico&apos;) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    console.log(&apos;url:&apos;, url.parse(request.url));</span><br><span class="line"></span><br><span class="line">    // 获取对应本地文件路径</span><br><span class="line">    var filepath = path.join(root, pathname);</span><br><span class="line">    // 读取文件状态</span><br><span class="line">    fs.stat(filepath, function (err, stats) &#123;</span><br><span class="line">        // 文件出错</span><br><span class="line">        if (err) &#123;</span><br><span class="line">            console.log(&apos;file error!&apos;);</span><br><span class="line">            response.end(&apos;&lt;h1&gt;file error!&lt;/h1&gt;&apos;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 是文件</span><br><span class="line">        if (stats.isFile()) &#123;</span><br><span class="line">            console.log(&apos;200 &apos; + request.url);</span><br><span class="line">            response.writeHead(200);</span><br><span class="line">            // 将文件流导入response</span><br><span class="line">            fs.createReadStream(filepath).pipe(response);</span><br><span class="line">        &#125;</span><br><span class="line">        // 文件不存在</span><br><span class="line">        else &#123;</span><br><span class="line">            console.log(&apos;404 &apos; + request.url);</span><br><span class="line">            response.writeHead(404);</span><br><span class="line">            // 将文件流导入response</span><br><span class="line">            response.end(&apos;&lt;h1&gt;404 not found!&lt;/h1&gt;&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">console.info(&apos;Server is runing at http://localhost:8080/&apos;);</span><br></pre></td></tr></table></figure><p>express 是第一代流行的 web 框架，它对 Node.js 的 HTTP 进行封装，语法基于 ES5，要实现异步代码，只有一个方法：回调。</p><p>koa2 完全基于 ES7 开发，使用 Promise 配合 async 实现异步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">// 创建一个Koa对象</span><br><span class="line">const app = new Koa();</span><br><span class="line"></span><br><span class="line">// 对于任何请求，app将调用该异步函数处理请求</span><br><span class="line">// ctx是koa封装request和response变量</span><br><span class="line">// next是koa传入的将要处理下一个异步函数</span><br><span class="line">// 每个async函数称为middleware</span><br><span class="line">// app.use()顺序决定了middleware的顺序</span><br><span class="line"></span><br><span class="line">app.use(async(ctx, next) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">    fs.readFile(&apos;./data.txt&apos;, &apos;utf-8&apos;, function(err, data) &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 调用下一个middleware，如果没有调用，则下一个middleware不会执行</span><br><span class="line">    await next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.use(async(ctx, next) =&gt; &#123;</span><br><span class="line">    ctx.response.type = &apos;text/html&apos;;</span><br><span class="line">    ctx.response.body = &apos;&lt;h1&gt;Hello, koa!&lt;/h1&gt;&apos;;</span><br><span class="line">    console.log(&apos;response end&apos;);</span><br><span class="line">    // 调用下一个middleware</span><br><span class="line">    await next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(3000);</span><br><span class="line">console.log(&apos;app started at http://localhost:3000/&apos;);</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>对MVC、MVP和MVVM的简单认识</title>
      <link href="/2018/08/27/%E5%AF%B9MVC%E3%80%81MVP%E5%92%8CMVVM%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/"/>
      <url>/2018/08/27/%E5%AF%B9MVC%E3%80%81MVP%E5%92%8CMVVM%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="MVVM-的前世与今生"><a href="#MVVM-的前世与今生" class="headerlink" title="MVVM 的前世与今生"></a>MVVM 的前世与今生</h2><h3 id="1-先聊一下-MVC"><a href="#1-先聊一下-MVC" class="headerlink" title="1. 先聊一下 MVC"></a>1. 先聊一下 MVC</h3><p>MVC：Model（模型） View（视图） Controller（控制器），主要是基于分层的目的，让彼此的职责分开。</p><p>View 通过 Controller 和 Model 联系，Controller 是 View 和 Model 的协调者，view 和 Model 不直接联系，基本联系都是单向的。</p><a id="more"></a><h3 id="2-顺带提下-MVP"><a href="#2-顺带提下-MVP" class="headerlink" title="2. 顺带提下 MVP"></a>2. 顺带提下 MVP</h3><p>MVP：是从 MVC 模式演变而来的，都是通过 Controller/Presenter 负责逻辑的处理+Model 提供数据+View 负责显示。</p><p>在 MVP 中，Presenter 完全把 View 和 Model 进行分离，主要的程序逻辑在 Presenter 里实现。并且，Presenter 和 View 是没有直接关联的，是通过定义好的接口进行交互，从而使得在变更 View 的时候可以保持 Presenter 不变。</p><h3 id="3-再聊聊-MVVN"><a href="#3-再聊聊-MVVN" class="headerlink" title="3. 再聊聊 MVVN"></a>3. 再聊聊 MVVN</h3><p>MVVM：Model + View + ViewModel，把 MVC 中的 Controller 和 MVP 中的 Presenter 改成 ViewModel</p><p>view 的变化会自动更新到 ViewModel，ViewModel 的变化也会自动同步到 View 上显示。这种自动同步是因为 ViewModel 中的属性实现了 Observer，当属性变更时都能触发对应操作。</p><ul><li>View 是 HTML 文本的 js 模板；</li><li>ViewModel 是业务逻辑层（一切 js 可视业务逻辑，比如表单按钮提交，自定义事件的注册和处理逻辑都在 viewmodel 里面负责监控俩边的数据）；</li><li>Model 数据层，对数据的处理（与后台数据交互的增删改查）</li></ul><p>提一下我熟悉的 MVVM 框架：vue.js，Vue.js 是一个构建数据驱动的 web 界面的渐进式框架。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。核心是一个响应的数据绑定系统。</p><h3 id="4-一句话总结下不同之处"><a href="#4-一句话总结下不同之处" class="headerlink" title="4. 一句话总结下不同之处"></a>4. 一句话总结下不同之处</h3><p>MVC 中联系是单向的，MVP 中 P 和 V 通过接口交互，MVVP 的联系是双向的</p>]]></content>
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CDN原理介绍</title>
      <link href="/2018/08/27/CDN%E5%8E%9F%E7%90%86%E7%90%86%E8%A7%A3/"/>
      <url>/2018/08/27/CDN%E5%8E%9F%E7%90%86%E7%90%86%E8%A7%A3/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CDN-原理剖析"><a href="#CDN-原理剖析" class="headerlink" title="CDN 原理剖析"></a>CDN 原理剖析</h2><blockquote><blockquote><p>内容分发网络（Content delivery network 或 Content distribution network，缩写：CDN）是指一种通过互联网互相连接的电脑网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、视频、应用程序及其他文件发送给用户，来提供高性能、可扩展性及低成本的网络内容传递给用户。</p></blockquote></blockquote><a id="more"></a><blockquote><h3 id="为什么需要-CDN"><a href="#为什么需要-CDN" class="headerlink" title="为什么需要 CDN"></a>为什么需要 CDN</h3><p>根本上的原因是，访问速度对互联网应用的用户体验、口碑、甚至说直接的营收都有巨大的影响，任何的企业都渴望自己站点有更快的访问速度。而 HTTP 传输时延对 web 的访问速度的影响很大，在绝大多数情况下是起决定性作用的，这是由 TCP/IP 协议的一些特点决定的。物理层上的原因是光速有限、信道有限，协议上的原因有丢包、慢启动、拥塞控制等。</p><p>要提高访问速度，最简单的做法当然就是多设置几个服务器，让终端用户离服务器“更近”。典型的例子是各类下载网站在不同地域不同运营商设置镜像站，或者是像 Google 那样设置多个数据中心。但是多设几个服务器的问题也不少，一是多地部署时的困难，二是一致性没法保障，三则是管理困难、成本很高。实际上，在排除多地容灾等特殊需求的情况下，对大多数公司这种做法是不太可取的。当然，这种方案真正做好了，甚至是比后续所说的使用 CDN 要好的。</p><p>CDN 是一种公共服务，他本身有很多台位于不同地域、接入不同运营商的服务器，而所谓的使用 CDN 实质上就是让 CDN 作为网站的门面，用户访问到的是 CDN 服务器，而不是直接访问到网站。由于 CDN 内部对 TCP 的优化、对静态资源的缓存、预取，加上用户访问 CDN 时，会被智能地分配到最近的节点，降低大量延迟，让访问速度可以得到很大提升。</p><h3 id="CDN-的原理"><a href="#CDN-的原理" class="headerlink" title="CDN 的原理"></a>CDN 的原理</h3><blockquote><p>CDN 做了两件事，一是让用户访问最近的节点，二是从缓存或者源站获取资源</p></blockquote><p>CDN 有个源站的概念，源站就是提供内容的站点(网站的真实服务器), 从源站取内容的过程叫做回源。</p><p>每次访问的具体流程如图（以最普通的 CDN 为例）</p><p><img src="https://cloud.githubusercontent.com/assets/5894477/22008791/4edc00b0-dcb9-11e6-9663-ed19a3fa3182.png" alt="流程图"></p><p>具体举个例子：</p><p>用户在首次访问 <a href="https://assets-cdn.github.com/pinned-octocat.svg" target="_blank" rel="noopener">https://assets-cdn.github.com/pinned-octocat.svg</a> , 假设不委托 local DNS 服务器递归查询，会经历以下几个过程</p><ol><li>浏览器检查本地有没有这个东东的有效缓存，有则使用缓存，没有有效缓存则进行对<code>assets-cdn.github.com</code>的 DNS 查询，获得一个 CNAME 记录, <code>igithub.map.fastly.net</code>,值得注意的是，多个加速域名可以解析到同一个 CNAME，CDN 回源和缓存的时候考虑到了 hostname，+1；</li><li>进行对<code>github.map.fastly.net</code>的 DNS 查询，获得一个 A/AAAA 记录，给出地址<code>103.245.222.133</code>（视网站不同返回的不一样，可以有多个）, 这一步对 CDN 来说时十分重要的，它给出了离用户最近的边缘节点；</li><li>浏览器选一个返回的地址，然后进行真正的 http 请求，开始向<code>103.245.222.133</code>握手，握手完了把 http 请求头也发给了该边缘服务器;</li><li>边缘服务器检查自己的 cache 里面有没有<code>https://assets-cdn.github.com/pinned-octocat.svg</code>这个资源，有则返回给用户，如果没有，向 CDN 中心服务器发起请求;</li><li>CDN 中心服务器检查自己的 cache 里面有没有这个资源，有则返回给边缘服务器，没有则回源;</li><li>中心服务器发现客户配置了<code>github.map.fastly.net</code>的回源地址(这个只有 cdn 会知道，假设是<code>xxx.xxx.xxx.xxx</code>)，就把 http 请求发到源站地址上，源站返回后返回给请求方;</li></ol><p>可以看出 CDN 加速的原理很大部分是跟 DNS 挂钩在一起的，CDN 供应商几乎一定需要一个智能 DNS 服务器。CDN 可以拿到所有的明文数据，所以对数据安全性、保密性要求比较高的企业会选择自建 CDN 或者设置 NS 记录，指向自建的智能 DNS 服务器。</p><p>上述步骤每一步都可以缓存，注意是每一步！ 所以 CDN 要清除缓存很难，因为有很多服务器上的缓存要清除。无论是用户对边缘服务器的请求，还是 CDN 服务器的回源都可以使用 https。</p><p>注意，实际环境中图中每个服务器都可以是集群，甚至 CDN 分区域中心和总中心。</p></blockquote>]]></content>
      
      <categories>
          
          <category> 用户体验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端性能优化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vscode 实现设备上设置统一</title>
      <link href="/2018/08/24/vscode%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5/"/>
      <url>/2018/08/24/vscode%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一键同步-vscode-上的插件"><a href="#一键同步-vscode-上的插件" class="headerlink" title="一键同步 vscode 上的插件"></a>一键同步 vscode 上的插件</h2><p>准备工作：电脑上需安装 VSCode，拥有一个 github 账户。实现同步的功能主要依赖于 VSCode 插件 “Settings Sync”</p><h1 id="Setting-Sync-可同步包含的所有扩展和完整的用户文件夹"><a href="#Setting-Sync-可同步包含的所有扩展和完整的用户文件夹" class="headerlink" title="Setting Sync 可同步包含的所有扩展和完整的用户文件夹"></a>Setting Sync 可同步包含的所有扩展和完整的用户文件夹</h1><a id="more"></a><ol><li>设置文件</li><li>快捷键设置文件</li><li>Launch File</li><li>Snippets Folder</li><li>VSCode 扩展设置</li><li>工作空间</li></ol><h1 id="Setting-Sync-快捷键"><a href="#Setting-Sync-快捷键" class="headerlink" title="Setting Sync 快捷键"></a>Setting Sync 快捷键</h1><ol><li>上传： <code>Shift + Alt + U</code> (Sync: Update / Upload Settings)</li><li>下载： <code>Shift + Alt + D</code> (Sync: Download Settings)</li></ol><p>如果快捷键有冲突，可<code>Ctrl + K + S</code>快捷键设置配置其它快捷键 或 <code>Ctrl + P / F1</code> 在命令窗口输入 &gt;sync 即会出现相应命令供选择<br><img src="https://upload-images.jianshu.io/upload_images/7323128-6b887c855f200189.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170824104107261-1046727224.png"></p><h1 id="Step1-安装-同步插件”Settings-Sync”"><a href="#Step1-安装-同步插件”Settings-Sync”" class="headerlink" title="Step1. 安装 同步插件”Settings Sync”"></a>Step1. 安装 同步插件”Settings Sync”</h1><p><img src="https://upload-images.jianshu.io/upload_images/7323128-78990ea142e0f083.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823100639527-466207576.png"></p><h1 id="Step2-进入-github-gt-Settings-在左侧-Developer-settings-gt-Personal-access-tokens"><a href="#Step2-进入-github-gt-Settings-在左侧-Developer-settings-gt-Personal-access-tokens" class="headerlink" title="Step2. 进入 github -&gt; Settings 在左侧 Developer settings -&gt; Personal access tokens"></a>Step2. 进入 github -&gt; Settings 在左侧 Developer settings -&gt; Personal access tokens</h1><p><img src="https://upload-images.jianshu.io/upload_images/7323128-72b710b21917ce93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101018886-1450593067.png"></p><h1 id="Step3-点击按钮-Generate-new-token-新增一个-token"><a href="#Step3-点击按钮-Generate-new-token-新增一个-token" class="headerlink" title="Step3. 点击按钮 Generate new token 新增一个 token"></a>Step3. 点击按钮 Generate new token 新增一个 token</h1><p>图 1:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-a9e06366f6acbf24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101243980-1384930832.png"><br>图 2:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-2f69bf05699ce6a7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101418527-2001799760.png"><br>图 3:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-8d5ebc31a1a3cd97.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101508918-1034003796.png"><br>记住你自己生成的 token 值，在 VSCode 配置上回用得到，最好找个笔记保存下来。</p><h1 id="Step4-回到-VSCode-配置将-token-配置到本地"><a href="#Step4-回到-VSCode-配置将-token-配置到本地" class="headerlink" title="Step4. 回到 VSCode 配置将 token 配置到本地"></a>Step4. 回到 VSCode 配置将 token 配置到本地</h1><p>(Sync: Update / Uplaod Settings) <code>Shift + Alt + U</code> 在弹窗里输入你的 token， 回车后会生成 syncSummary.txt 文件</p><p><img src="https://upload-images.jianshu.io/upload_images/7323128-4561bc7955172c6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170824103332230-1621543570.png"></p><p>syncSummary.txt 文件会存储 VSCode 的设置及所安装的插件列表<br>有点类似 package.json 这样形式的文件<br>可以将自己的 token 分享到自己的团队里面去，这样团队可以共用一套设置。</p><h1 id="Step5-设置上同步下载设置"><a href="#Step5-设置上同步下载设置" class="headerlink" title="Step5. 设置上同步下载设置"></a>Step5. 设置上同步下载设置</h1><p>(Sync: Download Settings) <code>Shift + Alt + D</code> 在弹窗里输入你的 gist 值，稍后片刻便可同步成功</p><h1 id="Step6-如果要重置同步设置，变更其它-token"><a href="#Step6-如果要重置同步设置，变更其它-token" class="headerlink" title="Step6. 如果要重置同步设置，变更其它 token"></a>Step6. 如果要重置同步设置，变更其它 token</h1><p><code>Ctrl+P / F1</code> 弹出输入&gt;sync,即可重新配置你的其它 token 来同步</p>]]></content>
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> setting </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>正则表达式</title>
      <link href="/2018/08/22/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2018/08/22/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="正则规则汇总"><a href="#正则规则汇总" class="headerlink" title="正则规则汇总"></a>正则规则汇总</h2><p>对字符串的处理，一般分为字符串操作和正则操作。</p><h5 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h5><ul><li>str.search(regStr) 返回 regStr 在 str 中第一个出现的位置</li><li>str.replace(regStr,newStr) 返回替换在 str 中 regStr 后字符串</li></ul><a id="more"></a><ul><li>str.substring(n1,n2) 返回 str 从 n1 位置到 n2 位置前一个字符串</li><li>str.chartAt(n) 返回 n 位置字符</li><li>str.split(regStr) 返回以 regStr 隔开的数组</li><li>str.match(reg) 返回在 str 中符合正则 reg 的字符串数组</li></ul><h5 id="正则操作"><a href="#正则操作" class="headerlink" title="正则操作"></a>正则操作</h5><p>var reg=new RegExp(regStr,’i’); //创建正则对象</p><p>var reg=/regStr/i; //隐式创建正则对象</p><ul><li>reg.test(str) str 是否包含 reg 返回 true/false</li><li>reg.exec(str) 返回匹配到的字符串和最后一次的匹配字符串最后位置的下一个索引</li></ul><h4 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h4><ol><li>/a|b/ a 或 b</li><li>/[abc]/ a 或 b 或 c</li><li>/[a-zA-Z0-9]/ 所有数字和字母</li><li>/[^a-za-z0-9]/ 除了数字和字母</li><li>/.+/ 任意字符</li><li>/\d/ 等价于/[0-9]/ 数字</li><li>/\w/ 等价于/[a-z0-9_]/ 数字、字母和下划线</li><li>/\s/ 等价于/“ “/ 空格</li><li>/\D/ 等价于/[^0-9]/ 非数字</li><li>/\W/ 等价于/[^a-z0-9_]/ 除了数字、字母和划线</li><li>/\S/ 等价于/[^” “]/ 除了空格</li><li>/\d{n,m}/ 数字最少出现 n 次，最多出现 m 次</li><li>/\d{1,}/ 等价于/\d+/ 数字最少出现 1 次</li><li>/\d{0,}/ 等价于/\d*/ 数字最少出现 0 次</li><li>/\d{0,1}/ 等价于/\d?/ 数字最多出现 1 次</li><li>/^\d$/ 以数字开头且以数字结尾</li><li>/[\u4e00-\u9fa5]/ 汉字匹配范围</li><li>\b 单词边界</li><li>\B 非单词边界</li><li>?=n 匹配任何其后紧接指定字符串 n 的字符串</li><li>?!n 匹配任何其后没有紧接指定字符串 n 的字符串</li></ol><h4 id="疑难点"><a href="#疑难点" class="headerlink" title="疑难点"></a>疑难点</h4><p>在个人接触正则过程中遇到的一些不易理解的地方</p><blockquote><p>用圆括号将所有选择项括起来，相邻的选择项之间用|分隔。但用圆括号会有一个副作用，是相关的匹配会被缓存，此时可用?:放在第一个选项前来消除这种副作用。其中?:是非捕获元之一，还有两个非捕获元是?=和?!，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。</p></blockquote><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>(?:pattern)</td><td>匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 “或” 字符 (\</td><td>) 来组合一个模式的各个部分是很有用。例如， ‘industr(?:y\</td><td>ies) 就是一个比 ‘industry\</td><td>industries’ 更简略的表达式。</td></tr><tr><td>(?=pattern</td><td>正向预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，’Windows (?=95\</td><td>98\</td><td>NT\</td><td>2000)’ 能匹配 “Windows 2000” 中的 “Windows” ，但不能匹配 “Windows 3.1” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td>(?!pattern)</td><td>负向预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如’Windows (?!95\</td><td>98\</td><td>NT\</td><td>2000)’ 能匹配 “Windows 3.1” 中的 “Windows”，但不能匹配 “Windows 2000” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr></tbody></table><p>一直对正则中的 match 和 exec 不易分清，下面来做一下比较。</p><h5 id="1-match"><a href="#1-match" class="headerlink" title="1. match"></a>1. match</h5><p>match 方法属于 String 正则表达方法</p><p>语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.match(regexp)</span><br></pre></td></tr></table></figure><p>str：要进行匹配的字符串</p><p>regexp：一个正则表达式(或者由 RegExp()构造成的正则表达式)</p><p>match 的用法主要区分就是正则表达式是否有全局标示 g</p><ol><li><p>如果有 g 全局标志，那么返回的数组保存的是，所有匹配的内容。</p></li><li><p>如果没有 g 全局标志，那么返回的数组 arr.arr[0]保存的是完整的匹配.arr[1]保存的是第一个括号里捕获的字串，依此类推 arr[n]保存的是第 n 个括号捕获的内容。</p></li></ol><h5 id="2-exec"><a href="#2-exec" class="headerlink" title="2. exec"></a>2. exec</h5><p>与 match 方法不同 exec 属于正则表达式的方法</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var result1 = regexp.exec(str);</span><br></pre></td></tr></table></figure><p>regexp：正则表达式</p><p>str：要匹配的字串</p><p>exec 与 match 的关联就是 exec（g 有没有都无影响）就等价于不含有 g 全局标志的 match，即返回数组 arr[0]为匹配的完整串，其余的为括号里捕获的字符串。</p><p>但如果有 g 对 exec 本身的影响是，当一个具有 g 的正则表达式调用 exec()时，他将该对象的 lastIndex 设置到紧接这匹配子串的字符位置。当第二次调用 exec 时将从<br>lastIndex 所指示的字符位置开始检索，利用这个特点可以反复调用 exec 遍历所有匹配，等价于 match 具有 g 标志。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arrmatch = str.match(reg);</span><br><span class="line">for(var i =0; i &lt; arrmatch.length; i++)&#123;</span><br><span class="line">    document.write(arrmatch[i] +&quot;----&gt;&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可见上面的 exec 和 match 是等价的.</p><p>reg.exec(str) 返回匹配到的字符串和最后一次的匹配字符串最后位置的下一个索引如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var str = &quot;abc123bef345olj89,ed&quot;;</span><br><span class="line">var reg = /\d+/g;</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li><p>主要区分 match 具有 g 和没有 g 的区别，没有 g 的时候与 exec 是等价的。</p></li><li><p>而 exec 返回的串类型不受 g 影响，但具有 g 时候会驱动 lastIndex 可以模拟遍历所有匹配，可以与 match 具有 g 的时候等价。</p></li></ul><h4 id="顺便加强理解"><a href="#顺便加强理解" class="headerlink" title="顺便加强理解"></a>顺便加强理解</h4><ol><li>ip 正则表达式<br>格式由”.”分割成四段，每一段范围是 0-255，拿出其中一段进行分析</li></ol><table><thead><tr><th>范围</th><th>表达式</th></tr></thead><tbody><tr><td>0-9</td><td>\d</td></tr><tr><td>10-99</td><td>[1-9]\d</td></tr><tr><td>100-199</td><td>1\d{2}</td></tr><tr><td>200-249</td><td>2[0-4]\d</td></tr><tr><td>250-255</td><td>25[0-5]</td></tr></tbody></table><p>所以，其中一段构成的正则表达式是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5]</span><br></pre></td></tr></table></figure><p>，<br>整个 ip 正则为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])$/</span><br></pre></td></tr></table></figure><ol start="2"><li>同理端口号范围是 0-65535</li></ol><table><thead><tr><th>范围</th><th>表达式</th></tr></thead><tbody><tr><td>0-9</td><td>\d</td></tr><tr><td>10-99</td><td>[1-9]\d</td></tr><tr><td>100-999</td><td>[1-9]\d{2}</td></tr><tr><td>1000-9999</td><td>[1-9]\d{3}</td></tr><tr><td>10000-59999</td><td>[1-5]\d{4}</td></tr><tr><td>60000-64999</td><td>6[0-4]\d{3}</td></tr><tr><td>65000-65499</td><td>65[0-4]\d{2}</td></tr><tr><td>65500-65529</td><td>655[0-2]\d</td></tr><tr><td>65530-65535</td><td>65553[0-5]</td></tr></tbody></table><p>所以，整个端口号正则为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/\d|[1-9]\d&#123;1,3&#125;|[1-5]d&#123;4&#125;|6[0-4]\d&#123;3&#125;|65[0-4]\d&#123;2&#125;|655[0-2]\d|65553[0-5]/</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript 正则 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>理解同步、异步和事件循环</title>
      <link href="/2018/08/20/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
      <url>/2018/08/20/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="JavaScript-运行机制"><a href="#JavaScript-运行机制" class="headerlink" title="JavaScript 运行机制"></a>JavaScript 运行机制</h2><ol><li>所有同步任务都在主线程上执行，形成一个执行栈；</li></ol><a id="more"></a><ol start="2"><li><p>主线程发起异步请求，相应的工作线程就会去执行异步任务，主线程可以继续执行后面的代码；</p></li><li><p>主线程之外，还存在一个”任务队列”（task queue）。只要异步任务有了运行结果，就在”任务队列”之中放置一个事件，也就是一个消息；</p></li><li><p>一旦”执行栈”中的所有同步任务执行完毕，系统就会读取”任务队列”，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行；</p></li><li><p>主线程把当前的事件执行完成之后，再去读取任务队列，如此反复重复执行，这样就行程了事件循环。</p></li></ol><h4 id="1、单线程"><a href="#1、单线程" class="headerlink" title="1、单线程"></a>1、单线程</h4><p>JS 引擎在解释和执行 JavaScript 代码线程只有一个，叫做<strong>主线程</strong>。<br>但实际还存在其他线程，如：处理 Ajax 请求线程，处理 DOM 事件线程，定时器线程，和文件读写线程等，叫做<strong>工作线程</strong>。</p><h4 id="2、同步和异步"><a href="#2、同步和异步" class="headerlink" title="2、同步和异步"></a>2、同步和异步</h4><p>同步：如果函数返回的时候，调用者就能够得到预期结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.sqrt(2);</span><br></pre></td></tr></table></figure><p>异步：函数返回的时候，调用者还不能够得到预期结果，而是需要通过一定手段得到。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&quot;foo.txt&quot;, &quot;utf8&quot;, function(err, data)&#123;</span><br><span class="line">    console.log(data)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上面代码中，我们希望 fs.readFile 函数读取文件，并打印出来，但是在 fs.readFile 函数返回时，我们期望的结果并不会发生，而是要等文件全部读取完成之后。</p><h5 id="异步-AJAX："><a href="#异步-AJAX：" class="headerlink" title="异步 AJAX："></a>异步 AJAX：</h5><blockquote><p>主线程：“你好，AJAX 线程。请你帮我发个 HTTP 请求吧，我把请求地址和参数都给你了。”</p></blockquote><blockquote><p>AJAX 线程：“好的，主线程。我马上去发，但可能要花点儿时间呢，你可以先去忙别的。”</p></blockquote><blockquote><p>主线程：：“谢谢，你拿到响应后告诉我一声啊。”</p></blockquote><blockquote><p>(接着，主线程做其他事情去了。一顿饭的时间后，它收到了响应到达的通知。)</p></blockquote><h5 id="同步-AJAX："><a href="#同步-AJAX：" class="headerlink" title="同步 AJAX："></a>同步 AJAX：</h5><blockquote><p>主线程：“你好，AJAX 线程。请你帮我发个 HTTP 请求吧，我把请求地址和参数都给你了。”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>主线程：：“喂，AJAX 线程，你怎么不说话？”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>主线程：：“喂！喂喂喂！”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>(一炷香的时间后)</p></blockquote><blockquote><p>主线程：：“喂！求你说句话吧！”</p></blockquote><blockquote><p>AJAX 线程：“主线程，不好意思，我在工作的时候不能说话。你的请求已经发完了，拿到响应数据了，给你。”</p></blockquote><p>正因为 JavaScript 时单线程，同步容易造成阻塞，所以，对于耗时和操作事件不确定操作，使用异步就成了必然选择。</p><h4 id="3、异步过程"><a href="#3、异步过程" class="headerlink" title="3、异步过程"></a>3、异步过程</h4><p>一个异步过程通常时这样的：</p><blockquote><p>主线程发起一个异步请求，相应的工作线程接收线程请求并告知主线程已收到；主线程可以继续执行后面的代码，同时工作线程执行异步任务；工作线程完成工作后，通知主线程；主线程收到通知后，执行一定动作（调用回调函数）。</p></blockquote><p>异步函数通常具有一下形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A(arg..., callbackFn)</span><br></pre></td></tr></table></figure><p>他可以叫做异步过程的<strong>发起函数</strong>，或者叫做异步任务<strong>注册函数</strong>。</p><p>从主线程的角度看，一个一度过程包括两个要素：</p><ul><li>发起函数（注册函数）</li><li>回到函数</li></ul><h4 id="4、消息队列和事件循环"><a href="#4、消息队列和事件循环" class="headerlink" title="4、消息队列和事件循环"></a>4、消息队列和事件循环</h4><p>异步过程中，工作线程在异步操作完成后需要通知主线程。那么这个通知机制时怎样实现的呢？答案是利用消息队列和事件循环。</p><p>一句话概括：</p><blockquote><p>工作线程将消息放到消息队列，主线程通过事件循环过程去取消息。</p></blockquote><p>消息队列：消息队列是一个先进先出的队列，放着各种消息。</p><p>事件循环：事件循环是指主线程从消息队列中取消息，执行的过程。</p><p>实际上，主线程只会做一件事，就是从消息队列里面取消息、执行消息，再去消息，再执行。当消息队列为空时，就会等待知道消息队列变成非空。而且主线程只有在将当前的消息执行完成后，才会去取下一个消息。这种机制就叫做事件循环机制，取一个消息并执行的过程叫做一次循环。</p><p>消息队列中放的消息是什么东西？消息的具体结构当然跟具体的实现有关，可以认为：</p><blockquote><p>消息就是注册异步任务时添加的回调函数。</p></blockquote><p>以异步 Ajax 为例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&apos;http://segmentfault.com&apos;, function(resp) &#123;</span><br><span class="line">    console.log(&apos;我是响应：&apos;, resp);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>主线程发起 Ajax 请求后，会继续执行其他代码。Ajax 线程负责请求 segmentfault.com，拿到响应后，它会把响应封装成一个 JavaScript 对象，然后构成一条消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var message = function() &#123;</span><br><span class="line">    callbackFn();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 callbackFn 就是前面代码中成功响应时的回调函数。</p><p>主线程在执行完当前循环中所有代码后，就会到消息队列取出这条消息（也就是 message 函数），并执行它，到此为止，就完成了工作线程对主线程的通知，回调函数也就得到了执行。如果一开始主线程就没有提供回调函数，Ajax 线程在收到 HTTP 响应后，也就没有必要通知主线程，从而没必要往消息队列放消息。</p><blockquote><p>异步过程的回调函数，一定不在当前这一轮事件循环中执行。</p></blockquote><h4 id="5、异步与事件"><a href="#5、异步与事件" class="headerlink" title="5、异步与事件"></a>5、异步与事件</h4><blockquote><p>消息队列中的每条消息实际上都对应着一个事件</p></blockquote><p>有一类很重要的异步过程：DOM 事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var button = document.getElement(&apos;#btn&apos;);</span><br><span class="line">button.addEventListener(&apos;click&apos;, function(e) &#123;</span><br><span class="line">    console.log();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>从事件的角度来看，上述代码表示：在按钮上添加了一个鼠标单击事件的事件监听器；当用户点击按钮时，鼠标单击事件触发，事件监听器函数被调用。</p><p>从异步过程的角度看，addEventListener 函数就是异步过程的发起函数，事件监听器函数就是异步过程的回调函数。事件触发时，表示异步任务完成，会将事件监听器函数封装成一条消息放到消息队列中，等待主线程执行。</p><p>事件的概念实际上并不是必须的，事件机制实际上就是异步过程的通知机制。我觉得它的存在是为了编程接口对开发者更友好。</p><p>另一方面，所有的异步过程也都可以用事件来描述。例如：setTimeout 可以看成对应一个时间到了！的事件。前文的 setTimeout(fn, 1000);可以看成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timer.addEventListener(&apos;timeout&apos;, 1000, fn);</span><br></pre></td></tr></table></figure><blockquote><p>工作线程是生产者，主线程是消费者(只有一个消费者)。工作线程执行异步任务，执行完成后把对应的回调函数封装成一条消息放到消息队列中；主线程不断地从消息队列中取消息并执行，当消息队列空时主线程阻塞，直到消息队列再次非空。</p></blockquote><h4 id="6、macrotasks-与-microtasks-的区别"><a href="#6、macrotasks-与-microtasks-的区别" class="headerlink" title="6、macrotasks 与 microtasks 的区别"></a>6、macrotasks 与 microtasks 的区别</h4><blockquote><p>macrotasks: setTimeout setInterval setImmediate I/O UI 渲染</p></blockquote><blockquote><p>microtasks: Promise process.nextTick Object.observe MutationObserver</p></blockquote><p>microtask 会在当前循环中执行完成,而 macrotask 会在下一个循环中执行</p>]]></content>
      
      <categories>
          
          <category> js高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git简记</title>
      <link href="/2018/07/27/Git%E7%AE%80%E8%AE%B0/"/>
      <url>/2018/07/27/Git%E7%AE%80%E8%AE%B0/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Git-食用手册"><a href="#Git-食用手册" class="headerlink" title="Git 食用手册"></a>Git 食用手册</h2><h3 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h3><p>最近有个项目比较赶，于是决定 8 个人一个并行完成，单独把项目拿出来用 gitea 管理，没人分一个模块开发，对应也给分支，效果不过，从中也帮助自己重新温习了一下 git 的使用，小记一下。</p><a id="more"></a><h3 id="1-安装和使用"><a href="#1-安装和使用" class="headerlink" title="1. 安装和使用"></a>1. 安装和使用</h3><ul><li><p>在 MAC 上，安装 homebrew，然后通过<a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">homebrew</a> 安装 Git。</p><blockquote><p>在 MAC 上另一种安装方法，从 AppStore 安装 Xcode，Xcode 集成了 Git，不过默认没有安装，你需要运行 Xcode，选择菜单“Xcode”-&gt;“Preferences”，在弹出窗口中找到“Downloads”，选择“Command Line Tools”，点“Install”就可以完成安装了。</p></blockquote></li><li><p>在 Windows 上，下载<a href="http://rj.baidu.com/soft/detail/40642.html" target="_blank" rel="noopener">安装包</a>，默认下一步，安装完成即可。</p></li><li><p>安装完后自报家门</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;wuwhs&quot;</span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>创建版本库<br>初始化一个 Git 仓库，使用<code>git init</code>命令。添加文件到 Git 仓库，分两步：</p><ol><li>第一步，使用命令<code>git add &lt;file&gt;</code>，注意，可反复多次使用，添加多个文件；</li><li>第二步，使用命令<code>git commit</code>，完成。</li></ol></li></ul><h3 id="2-时光穿梭"><a href="#2-时光穿梭" class="headerlink" title="2. 时光穿梭"></a>2. 时光穿梭</h3><p><img src="https://note.youdao.com/yws/public/resource/813e8f68e489060d70ccfdff42b3aecc/xmlnote/8849F03FF3934C8087DA9645B9BD9C5F/14633" alt=""></p><ul><li><p>如果<code>git status</code>告诉你有文件被修改过，用<code>git diff</code>可以查看修改内容。</p></li><li><p>HEAD 指向的版本就是当前版本，因此，Git 允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</p></li><li><p>穿梭前，用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本。</p></li><li><p>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本，<code>git log --pretty=oneline --abbrev-commit</code>在一行显示缩写提交号。</p></li><li><p>场景 1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p></li><li><p>当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD file</code>，就回到了场景 1，第二步按场景 1 操作。</p></li><li><p>命令<code>git rm</code>用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。</p></li></ul><h3 id="3-远程仓库"><a href="#3-远程仓库" class="headerlink" title="3. 远程仓库"></a>3. 远程仓库</h3><ul><li><p>创建 SSH Key。<code>$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code>。</p></li><li><p>登陆 GitHub，打开“Account settings”，“SSH Keys”页面。<br>然后，点“Add SSH Key”，填上任意 Title，在 Key 文本框里粘贴 id_rsa.pub 文件的内容。</p></li><li><p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>。</p></li><li><p>关联后，使用命令<code>git push -u origin master</code>第一次推送 master 分支的所有内容。</p></li><li><p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改。</p></li><li><p>要克隆一个仓库，首先必须知道仓库的地址，然后使用<code>git clone</code>命令克隆。</p></li></ul><h3 id="4-分支管理"><a href="#4-分支管理" class="headerlink" title="4. 分支管理"></a>4. 分支管理</h3><ul><li><p>Git 鼓励大量使用分支。</p></li><li><p>查看分支：<code>git branch</code>。</p></li><li><p>创建分支：<code>git branch &lt;name&gt;</code>。</p></li><li><p>切换分支：<code>git checkout &lt;name&gt;</code>。</p></li><li><p>创建+切换到当前分支：<code>git checkout -b &lt;name&gt;</code>。</p></li><li><p>合并某分支到当前分支：<code>git merge &lt;name&gt;</code>。</p></li><li><p>删除分支：<code>git branch -d &lt;name&gt;</code>。</p></li><li><p>当 Git 无法自动合并分支时，就必须首先剞劂冲突，解决冲突后，再提交，合并完成用<code>git log --graph</code>命令可以看到分支合并图。</p></li><li><p>合并分支时，加上<code>--no-ff</code>参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而<code>fash-forward</code>合并就看不出来曾经做过合并。</p></li><li><p>当手头工作没有完成时，先把工作现场<code>git stash</code>一下，然后去修复 bug，修复后，再<code>git stash list</code>查看历史 stash，一是用<code>git stash apply</code>恢复，但恢复后，stash 内容并不删除，你需要用<code>git stash drop</code>来删除；另一种方式是用<code>git stash pop</code>，恢复的同时把 stash 内容也删了。</p></li><li><p>查看远程库信息，使用<code>git remote -v</code>。</p></li><li><p>从本地推送分支，使用<code>git push origin branch-name</code>，如果失败，先用<code>git pull</code>抓取远程的新提交。</p></li><li><p>再本地创建和远程分支对应的分支，使用<code>git checkout -b branch-name origin/branch-name</code>，本地和远程分支的名称最好一致。</p></li><li><p>从远程抓取分支，使用<code>git pull</code>，如果有冲突，要先处理冲突。</p></li></ul><h3 id="5-标签"><a href="#5-标签" class="headerlink" title="5. 标签"></a>5. 标签</h3><ul><li><p>命令<code>git tag &lt;name&gt;</code>用于新建一个标签，默认为<code>HEAD</code>,也可以指定一个 commit id。</p></li><li><p><code>git tag -a &lt;tagname&gt; -m &quot;balabala...&quot;</code>可以指定标签信息。</p></li><li><p><code>git tag -s &lt;tagname&gt; -m &quot;balabala...&quot;</code>可以用 PGP 签名标签。</p></li><li><p>命令<code>git tag</code>可以查看所有标签。</p></li><li><p>命令<code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签。</p></li><li><p>命令<code>git push origin --tags</code>可以推送全部未推送过的本地标签。</p></li><li><p>命令<code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签。</p></li><li><p>命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>可以删除一个远程标签。</p></li></ul><h3 id="6-举个应用栗子"><a href="#6-举个应用栗子" class="headerlink" title="6. 举个应用栗子"></a>6. 举个应用栗子</h3><ol><li>最初在远程创建项目仓库有<code>master</code>和<code>develp</code>分支，参与开发人员先在自己一个文件夹下，调出<code>git Bash</code>，然后输入命令<code>git init</code>，再把仓库<code>git clone</code>下来</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www</span><br><span class="line">$ git init</span><br><span class="line">Initialized empty Git repository in D:/appSoft/wampserver/wamp64/www/.git/</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www (master)</span><br><span class="line">$ git clone git@github.com:wuwhs/demo.git</span><br><span class="line">Cloning into &apos;demo&apos;...</span><br><span class="line">Warning: Permanently added the RSA host key for IP address &apos;13.229.188.59&apos; to the list of known hosts.</span><br><span class="line">warning: You appear to have cloned an empty repository.</span><br><span class="line">Checking connectivity... done.</span><br></pre></td></tr></table></figure><ol start="2"><li><code>cd demo</code>进入<code>clone</code>下载的目录里，用<code>git branch develop</code>在本地创建一个对应的<code>develop</code>分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www (master)</span><br><span class="line">$ cd demo</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch</span><br><span class="line">* master</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch develop</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch</span><br><span class="line">  develop</span><br><span class="line">* master</span><br></pre></td></tr></table></figure><p>再次用<code>git branch</code>查看已经新建了一个<code>develop</code>分支</p><ol start="3"><li><code>git checkout develop</code>切换到当前<code>develop</code>分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git checkout develop</span><br><span class="line">Switched to branch &apos;develop&apos;</span><br></pre></td></tr></table></figure><ol start="4"><li>用<code>git pull origin develop:develop</code>，即：<code>git pull origin &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code>，当本地和远程分支名相同时，可以简写成一个，也就是<code>git pull origin develop</code>，拉取远程<code>develop</code>分支完成，然后开发人员就可以在这个分支上工作了</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull origin develop:develop</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   7ff2cb0..7ab2842  develop    -&gt; develop</span><br><span class="line">   7ff2cb0..7ab2842  develop    -&gt; origin/develop</span><br><span class="line">warning: fetch updated the current branch head.</span><br><span class="line">fast-forwarding your working tree from</span><br><span class="line">commit 7ff2cb0627be357fa15db4e38e1bfe8fc820b8ec.</span><br><span class="line">Already up-to-date.</span><br></pre></td></tr></table></figure><ol start="5"><li>当一天了工作完成，要提交到远程分支，首先要拉取一下别人提交的代码，防止版本冲突</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Compressing objects: 100% (2/2), done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   f848dc7..d696375  develop    -&gt; origin/develop</span><br><span class="line">Updating f848dc7..d696375</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><p>PS：直接偷懒<code>pull</code>可能会出现没有找到<code>tracking</code>的分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">There is no tracking information for the current branch.</span><br><span class="line">Please specify which branch you want to merge with.</span><br><span class="line">See git-pull(1) for details.</span><br><span class="line"></span><br><span class="line">git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class="line"></span><br><span class="line">If you wish to set tracking information for this branch you can do so with:</span><br><span class="line"></span><br><span class="line">git branch --set-upstream-to=origin/&lt;branch&gt; develop</span><br></pre></td></tr></table></figure><p>这时候要手动添加一下对应分支依赖<code>git branch --set-upstream-to=origin/&lt;branch&gt; develop</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git branch --set-upstream-to=origin/develop develop</span><br><span class="line">Branch develop set up to track remote branch develop from origin.</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Compressing objects: 100% (2/2), done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   f848dc7..d696375  develop    -&gt; origin/develop</span><br><span class="line">Updating f848dc7..d696375</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><ol start="6"><li>将本地分支提交到对应远程分支上，<code>git push origin develop:develop</code>，即：<code>git push origin &lt;远程主机&gt;&lt;本地分支名&gt;:&lt;远程分支名&gt;</code>，如果名称一样可以简写，也就是<code>git push origin develop</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git push origin develop:develop</span><br><span class="line">Counting objects: 9, done.</span><br><span class="line">Delta compression using up to 4 threads.</span><br><span class="line">Compressing objects: 100% (5/5), done.</span><br><span class="line">Writing objects: 100% (9/9), 759 bytes | 0 bytes/s, done.</span><br><span class="line">Total 9 (delta 1), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (1/1), done.</span><br><span class="line">To git@github.com:wuwhs/demo.git</span><br><span class="line">   d696375..3c00c0c  develop -&gt; develop</span><br></pre></td></tr></table></figure><ol start="7"><li>项目测试 OK 了，本地分支合并到<code>master</code>分支上，要用到<code>git merge &lt;branch&gt;</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git checkout master</span><br><span class="line">Switched to branch &apos;master&apos;</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git merge develop</span><br><span class="line">Updating c4d0377..3c00c0c</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 9 +++++++++</span><br><span class="line"> 1 file changed, 9 insertions(+)</span><br></pre></td></tr></table></figure><p>常用的操作就以上七步了，当然会有不同情形的应用。</p><h3 id="7-附录：git-cheat-sheet"><a href="#7-附录：git-cheat-sheet" class="headerlink" title="7. 附录：git-cheat-sheet"></a>7. 附录：git-cheat-sheet</h3><p>一般而言，常用的就是以上那些命令，有人专门的整理了一份比较全一点的文档 git-cheat-sheet，方便查阅。</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>列出当前配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --list</span><br></pre></td></tr></table></figure><p>列出 repository 配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --local --list</span><br></pre></td></tr></table></figure><p>列出全局配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global --list</span><br></pre></td></tr></table></figure><p>列出系统配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --system --list</span><br></pre></td></tr></table></figure><p>设置用户名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;[firstname lastname]&quot;</span><br></pre></td></tr></table></figure><p>设置用户邮箱：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email &quot;[valid-email]&quot;</span><br></pre></td></tr></table></figure><p>设置 git 命令输出为彩色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global color.ui auto</span><br></pre></td></tr></table></figure><p>设置 git 使用的文本编辑器设：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global core.editor vi</span><br></pre></td></tr></table></figure><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>Repository 配置对应的配置文件路径[–local]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;repo&gt;/.git/config</span><br></pre></td></tr></table></figure><p>用户全局配置对应的配置文件路径[–global]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.gitconfig</span><br></pre></td></tr></table></figure><p>系统配置对应的配置文件路径[–local]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/gitconfig</span><br></pre></td></tr></table></figure><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p>复制一个已创建的仓库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 通过 SSH</span><br><span class="line">$ git clone ssh://user@domain.com/repo.git</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#通过 HTTP</span><br><span class="line">$ git clone http://domain.com/user/repo.git</span><br></pre></td></tr></table></figure><p>创建一个新的本地仓库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><h4 id="本地修改"><a href="#本地修改" class="headerlink" title="本地修改"></a>本地修改</h4><p>显示工作路径下已修改的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure><p>显示与上次提交版本文件的不同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff</span><br></pre></td></tr></table></figure><p>把当前所有修改添加到下次提交中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure><p>把对某个文件的修改添加到下次提交中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add -p &lt;file&gt;</span><br></pre></td></tr></table></figure><p>提交本地的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -a</span><br></pre></td></tr></table></figure><p>提交之前已标记的变化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit</span><br></pre></td></tr></table></figure><p>附加消息提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &apos;message here&apos;</span><br></pre></td></tr></table></figure><p>提交，并将提交时间设置为之前的某个日期:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --date=&quot;`date --date=&apos;n day ago&apos;`&quot; -am &quot;Commit Message&quot;</span><br></pre></td></tr></table></figure><p>修改上次提交<br>（请勿修改已发布的提交记录!）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit --amend</span><br></pre></td></tr></table></figure><p>修改上次提交的 committer date：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIT_COMMITTER_DATE=&quot;date&quot; git commit --amend</span><br></pre></td></tr></table></figure><p>修改上次提交的 author date：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend --date=&quot;date&quot;</span><br></pre></td></tr></table></figure><p>把当前分支中未提交的修改移动到其他分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git checkout branch2</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><p>将 stashed changes 应用到当前分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash apply</span><br></pre></td></tr></table></figure><p>删除最新一次的 stashed changes：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash drop</span><br></pre></td></tr></table></figure><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>从当前目录的所有文件中查找文本内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git grep &quot;Hello&quot;</span><br></pre></td></tr></table></figure><p>在某一版本中搜索文本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git grep &quot;Hello&quot; v2.5</span><br></pre></td></tr></table></figure><h4 id="提交历史"><a href="#提交历史" class="headerlink" title="提交历史"></a>提交历史</h4><p>从最新提交开始，显示所有的提交记录（显示 hash， 作者信息，提交的标题和时间）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log</span><br></pre></td></tr></table></figure><p>显示所有提交（仅显示提交的 hash 和 message）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline</span><br></pre></td></tr></table></figure><p>显示某个用户的所有提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --author=&quot;username&quot;</span><br></pre></td></tr></table></figure><p>显示某个文件的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log -p &lt;file&gt;</span><br></pre></td></tr></table></figure><p>仅显示远端分支与远端分支提交记录的差集：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline &lt;origin/master&gt;..&lt;remote/master&gt; --left-right</span><br></pre></td></tr></table></figure><p>谁，在什么时间，修改了文件的什么内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git blame &lt;file&gt;</span><br></pre></td></tr></table></figure><p>显示 reflog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog show</span><br></pre></td></tr></table></figure><p>删除 reflog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog delete</span><br></pre></td></tr></table></figure><h4 id="分支与标签"><a href="#分支与标签" class="headerlink" title="分支与标签"></a>分支与标签</h4><p>列出所有的分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br></pre></td></tr></table></figure><p>列出所有的远端分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -r</span><br></pre></td></tr></table></figure><p>切换分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>创建并切换到新分支:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>基于当前分支创建新分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch &lt;new-branch&gt;</span><br></pre></td></tr></table></figure><p>基于远程分支创建新的可追溯的分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch --track &lt;new-branch&gt; &lt;remote-branch&gt;</span><br></pre></td></tr></table></figure><p>删除本地分支:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -d &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>强制删除一个本地分支：<br>将会丢失未合并的修改！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -D &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>给当前版本打标签：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><p>给当前版本打标签并附加消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><h4 id="更新与发布"><a href="#更新与发布" class="headerlink" title="更新与发布"></a>更新与发布</h4><p>列出当前配置的远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br></pre></td></tr></table></figure><p>显示远程端的信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote show &lt;remote&gt;</span><br></pre></td></tr></table></figure><p>添加新的远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add &lt;remote&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>下载远程端版本，但不合并到 HEAD 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch &lt;remote&gt;</span><br></pre></td></tr></table></figure><p>下载远程端版本，并自动与 HEAD 版本合并：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote pull &lt;remote&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>将远程端版本合并到本地版本中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin master</span><br></pre></td></tr></table></figure><p>以 rebase 方式将远端分支与本地合并：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>将本地版本发布到远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push remote &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>删除远程端分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git push &lt;remote&gt; :&lt;branch&gt; (since Git v1.5.0)</span><br><span class="line"># or</span><br><span class="line">git push &lt;remote&gt; --delete &lt;branch&gt; (since Git v1.7.0)</span><br></pre></td></tr></table></figure><p>发布标签:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push --tags</span><br></pre></td></tr></table></figure><p>合并与重置(Rebase)<br>将分支合并到当前 HEAD 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>将当前 HEAD 版本重置到分支中:<br>请勿重置已发布的提交!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>退出重置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase --abort</span><br></pre></td></tr></table></figure><p>解决冲突后继续重置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase --continue</span><br></pre></td></tr></table></figure><p>使用配置好的 merge tool 解决冲突：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git mergetool</span><br></pre></td></tr></table></figure><p>在编辑器中手动解决冲突后，标记文件为已解决冲突：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git add &lt;resolved-file&gt;</span><br><span class="line">$ git rm &lt;resolved-file&gt;</span><br></pre></td></tr></table></figure><p>合并提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase -i &lt;commit-just-before-first&gt;</span><br></pre></td></tr></table></figure><p>把上面的内容替换为下面的内容：</p><p>原内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pick &lt;commit_id&gt;</span><br><span class="line">pick &lt;commit_id2&gt;</span><br><span class="line">pick &lt;commit_id3&gt;</span><br></pre></td></tr></table></figure><p>替换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pick &lt;commit_id&gt;</span><br><span class="line">squash &lt;commit_id2&gt;</span><br><span class="line">squash &lt;commit_id3&gt;</span><br></pre></td></tr></table></figure><h4 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h4><p>放弃工作目录下的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard HEAD</span><br></pre></td></tr></table></figure><p>移除缓存区的所有文件（i.e. 撤销上次 git add）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset HEAD</span><br></pre></td></tr></table></figure><p>放弃某个文件的所有本地修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout HEAD &lt;file&gt;</span><br></pre></td></tr></table></figure><p>重置一个提交（通过创建一个截然不同的新提交）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git revert &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到指定的版本，并抛弃该版本之后的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>用远端分支强制覆盖本地分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard &lt;remote/branch&gt; e.g., upstream/master, origin/my-feature</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到上一次提交的版本，并将之后的修改标记为未添加到缓存区的修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到上一次提交的版本，并保留未提交的本地修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --keep &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>删除添加.gitignore 文件前错误提交的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git rm -r --cached .</span><br><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;remove xyz file&quot;</span><br></pre></td></tr></table></figure><p>完~</p><p>可参考文章：</p><ol><li><a href="http://rogerdudler.github.io/git-guide/" target="_blank" rel="noopener">git-guide</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰 git 教程</a></li><li><a href="https://www.git-scm.com/" target="_blank" rel="noopener">git-scm</a></li><li><a href="https://blog.csdn.net/github_37515447/article/details/56840610" target="_blank" rel="noopener">Git Cheat Sheet 中文版</a></li></ol>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>搞定css三列布局</title>
      <link href="/2018/07/22/%E6%90%9E%E5%AE%9Acss%E4%B8%89%E5%88%97%E5%B8%83%E5%B1%80/"/>
      <url>/2018/07/22/%E6%90%9E%E5%AE%9Acss%E4%B8%89%E5%88%97%E5%B8%83%E5%B1%80/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="三列布局"><a href="#三列布局" class="headerlink" title="三列布局"></a>三列布局</h2><blockquote><p>谈到布局，首先就要想到定位，当别人问我，css 的 position 定位有哪些取值，分别表示什么意思？呃…..</p></blockquote><h3 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h3><p>position 有六个属性值：static、relative、absolute、fixed、sticky 和 inherit。</p><a id="more"></a><ul><li>static（默认）：元素框正常生成。块级元素生成一个矩形框，作为文档流的一部分；行内元素则会创建一个或多个行框，置于父级元素中。</li><li>relative：元素框相对于之前正常文档流中的位置发生偏移，并且原先的位置仍然被占据。发生偏移的时候，可能会覆盖其他元素。</li><li>absolute：元素框不再占有文档位置，并且相对于包含块进行偏移（所谓包含块就是最近一级外层元素 position 不为 static 的元素）。</li><li>fixed：元素框不再占有文档流位置，并且相对于视窗进行定位。</li><li>sticky：css3 新增属性值，粘性定位，相当于 relative 和 fixed 的混合。最初会被当作是 relative，相对原来位置进行偏移；一旦超过一定的阈值，会被当成 fixed 定位，相对于视口定位。</li></ul><h3 id="三列布局-1"><a href="#三列布局-1" class="headerlink" title="三列布局"></a>三列布局</h3><p>三列布局，其中一列宽度自适应，在 PC 端最常用之一，搞定了三列布局，其他一样的套路。</p><h5 id="方式一：浮动布局"><a href="#方式一：浮动布局" class="headerlink" title="方式一：浮动布局"></a>方式一：浮动布局</h5><p>缺点：html 结构不正确,当包含区域宽度小于左右框之和，右边框会被挤下来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.float .center &#123;</span><br><span class="line">        /* left: 300px;</span><br><span class="line">        right: 300px; */</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式二：定位布局"><a href="#方式二：定位布局" class="headerlink" title="方式二：定位布局"></a>方式二：定位布局</h4><p>缺点：要求父级要有非 static 定位，如果没有，左右框容易偏移出去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.position &#123;</span><br><span class="line">        position: relative;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .left &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .right &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        right: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .center &#123;</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout position&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式三：表格布局"><a href="#方式三：表格布局" class="headerlink" title="方式三：表格布局"></a>方式三：表格布局</h4><p>缺点：没什么缺点，恐惧 table</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.table &#123;</span><br><span class="line">        display: table;</span><br><span class="line">        width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table &gt; article &#123;</span><br><span class="line">        display: table-cell;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .center &#123;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .right &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout table&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式四：flex-弹性布局"><a href="#方式四：flex-弹性布局" class="headerlink" title="方式四：flex 弹性布局"></a>方式四：flex 弹性布局</h4><p>缺点：兼容性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.flex &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        flex-shrink: 0; /* 不缩小 */</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .center &#123;</span><br><span class="line">        flex-grow: 1; /* 增大 */</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .right &#123;</span><br><span class="line">        flex-shrink: 0; /* 不缩小 */</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout flex&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式五：grid-栅格布局"><a href="#方式五：grid-栅格布局" class="headerlink" title="方式五：grid 栅格布局"></a>方式五：grid 栅格布局</h4><p>缺点：兼容性 Firefox 52, Safari 10.1, Chrome 57, Opera 44</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.grid &#123;</span><br><span class="line">        display: grid;</span><br><span class="line">        grid-template-columns: 300px 1fr 300px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .left &#123;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .center &#123;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .right &#123;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout grid&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式六：圣杯布局"><a href="#方式六：圣杯布局" class="headerlink" title="方式六：圣杯布局"></a>方式六：圣杯布局</h4><p>缺点：需要多加一层标签，html 顺序不对，占用了布局框的 margin 属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.cup:after &#123;</span><br><span class="line">        clear: both;</span><br><span class="line">        content: &quot;&quot;;</span><br><span class="line">        display: table;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .center &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line">        float: left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .center &gt; div &#123;</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        overflow: auto;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -100%;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .right &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout cup&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;h1&gt;我是圣杯布局中间框&lt;/h1&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是圣杯布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是圣杯布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> 布局 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>水平且垂直居中方法（9种）</title>
      <link href="/2018/06/01/%E6%B0%B4%E5%B9%B3%E4%B8%94%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%EF%BC%889%E7%A7%8D%EF%BC%89/"/>
      <url>/2018/06/01/%E6%B0%B4%E5%B9%B3%E4%B8%94%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%EF%BC%889%E7%A7%8D%EF%BC%89/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="水平且垂直居中方法有哪些？"><a href="#水平且垂直居中方法有哪些？" class="headerlink" title="水平且垂直居中方法有哪些？"></a>水平且垂直居中方法有哪些？</h2><p>这在实际工作中经常用到，小记一下。</p><h4 id="演示-HTML-结构"><a href="#演示-HTML-结构" class="headerlink" title="演示 HTML 结构"></a>演示 HTML 结构</h4><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span> <span class="attr">class</span>=<span class="string">"div"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>i<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/gb/水平且垂直居中方法（9种）/0.bmp" alt=""></p><p>一般的，水平居中相对垂直居中简单很多，对于内联元素，父级元素设置<code>text-align: center;</code>；对于块级元素，子级元素设置<code>margin: 0 auto;</code>。以下结合水平居中强调实现垂直居中。</p><h4 id="1、已知父级元素宽高，父级元素定位非-static，子级元素定位设为position-absolute-fixed，再利用margin、left和top属性居中。"><a href="#1、已知父级元素宽高，父级元素定位非-static，子级元素定位设为position-absolute-fixed，再利用margin、left和top属性居中。" class="headerlink" title="1、已知父级元素宽高，父级元素定位非 static，子级元素定位设为position: absolute/fixed，再利用margin、left和top属性居中。"></a>1、已知父级元素宽高，父级元素定位非 static，子级元素定位设为<code>position: absolute/fixed</code>，再利用<code>margin</code>、<code>left</code>和<code>top</code>属性居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：需要已知父级元素固定宽高，才能确定<code>margin-left</code>和<code>margin-right</code>。</p><h4 id="2、子级元素是内联元素，父级元素设置line-height属性垂直居中。"><a href="#2、子级元素是内联元素，父级元素设置line-height属性垂直居中。" class="headerlink" title="2、子级元素是内联元素，父级元素设置line-height属性垂直居中。"></a>2、子级元素是内联元素，父级元素设置<code>line-height</code>属性垂直居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">120px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: normal;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：需要已知父级元素的固定高度，才可以确定<code>line-height</code>。</p><h4 id="3、子级元素是内联元素，父级元素用display-table-cell-和vertical-align-middle-属性实现垂直居中。"><a href="#3、子级元素是内联元素，父级元素用display-table-cell-和vertical-align-middle-属性实现垂直居中。" class="headerlink" title="3、子级元素是内联元素，父级元素用display: table-cell;和vertical-align: middle;属性实现垂直居中。"></a>3、子级元素是内联元素，父级元素用<code>display: table-cell;</code>和<code>vertical-align: middle;</code>属性实现垂直居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>inline-block</code>、<code>table-cell</code>不兼容 ie67</p><h4 id="4、对于子级是块级元素，父级元素同样用display-table-cell-和vertical-align-middle-属性实现垂直居中，水平方向居中用margin-0-auto-。"><a href="#4、对于子级是块级元素，父级元素同样用display-table-cell-和vertical-align-middle-属性实现垂直居中，水平方向居中用margin-0-auto-。" class="headerlink" title="4、对于子级是块级元素，父级元素同样用display: table-cell;和vertical-align: middle;属性实现垂直居中，水平方向居中用margin: 0 auto;。"></a>4、对于子级是块级元素，父级元素同样用<code>display: table-cell;</code>和<code>vertical-align: middle;</code>属性实现垂直居中，水平方向居中用<code>margin: 0 auto;</code>。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>table-cell</code>不兼容 ie67</p><h4 id="5、利用-css3-translate特性：位移是基于元素宽高的。"><a href="#5、利用-css3-translate特性：位移是基于元素宽高的。" class="headerlink" title="5、利用 css3 translate特性：位移是基于元素宽高的。"></a>5、利用 css3 <code>translate</code>特性：位移是基于元素宽高的。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-ms-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>translate</code>属性兼容 IE9+</p><h4 id="6、当父级是浮动的，用display-table-cell-会失效，这时需要包三层，第一层display-table-，第二层display-table-cell-第三次居中层"><a href="#6、当父级是浮动的，用display-table-cell-会失效，这时需要包三层，第一层display-table-，第二层display-table-cell-第三次居中层" class="headerlink" title="6、当父级是浮动的，用display: table-cell;会失效，这时需要包三层，第一层display: table;，第二层display: table-cell; 第三次居中层"></a>6、当父级是浮动的，用<code>display: table-cell;</code>会失效，这时需要包三层，第一层<code>display: table;</code>，第二层<code>display: table-cell;</code> 第三次居中层</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="comment">/* text-align: center; */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div3</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="comment">/* display: inline-block; */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，但 HTML 标签层数较多。</p><h4 id="7、绝对定位加四边定位为-0。"><a href="#7、绝对定位加四边定位为-0。" class="headerlink" title="7、绝对定位加四边定位为 0。"></a>7、绝对定位加四边定位为 0。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，但把定位属性全用上了</p><h4 id="8、利用-flex-布局justify-content-center-和align-items-center-属性居中。"><a href="#8、利用-flex-布局justify-content-center-和align-items-center-属性居中。" class="headerlink" title="8、利用 flex 布局justify-content: center;和align-items: center;属性居中。"></a>8、利用 flex 布局<code>justify-content: center;</code>和<code>align-items: center;</code>属性居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，兼容 IE10+</p><h4 id="9、利用-grid-布局，划分成-3x3-栅格，第二行第二列格子垂直水平居中"><a href="#9、利用-grid-布局，划分成-3x3-栅格，第二行第二列格子垂直水平居中" class="headerlink" title="9、利用 grid 布局，划分成 3x3 栅格，第二行第二列格子垂直水平居中"></a>9、利用 grid 布局，划分成 3x3 栅格，第二行第二列格子垂直水平居中</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">  <span class="attribute">grid-row-start</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">grid-column-start</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，兼容性 Firefox 52, Safari 10.1, Chrome 57, Opera 44</p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>深入理解BFC</title>
      <link href="/2018/05/21/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3BFC/"/>
      <url>/2018/05/21/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3BFC/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="BFC-概念"><a href="#BFC-概念" class="headerlink" title="BFC 概念"></a>BFC 概念</h2><h2 id="1、相关定义"><a href="#1、相关定义" class="headerlink" title="1、相关定义"></a>1、相关定义</h2><h3 id="1-1-Formatting-context"><a href="#1-1-Formatting-context" class="headerlink" title="1.1 Formatting context"></a>1.1 Formatting context</h3><p>Formatting context 是 W3C CSS2.1 规定中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素如何定位，以及和其他元素的关系和相互作用。最常见的 Formatting context 有 Block formatting context（简称 BFC）和 Inline formatting context（简称 IFC）。<br>css2.1 中只有 BFC 和 IFC，css3 中还增加了 GFC 和 FFC。</p><a id="more"></a><h3 id="1-2-BFC-定义"><a href="#1-2-BFC-定义" class="headerlink" title="1.2 BFC 定义"></a>1.2 BFC 定义</h3><p>BFC(Block formatting context)直译为“块级格式化上下文”。它是独立的渲染区域，只有 Block-level box 参与，它规定了内部的 Block-level Box 如何布局，并且与这个区域外部毫不相干。</p><h3 id="1-3-BFC-布局规则："><a href="#1-3-BFC-布局规则：" class="headerlink" title="1.3 BFC 布局规则："></a>1.3 BFC 布局规则：</h3><ul><li>内部的 Box 会在垂直方向，一个接一个地放置；</li><li>Box 垂直方向地距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠</li><li>每个元素的 margin box 的左边，与包含块 border box 的左边相接触（对于从左往右的格式化，否则相反）。即便存在浮动也是如此。</li><li>BFC 的区域不会与 float box 重叠。</li><li>BFC 就是页面的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</li><li>计算 BFC 的高度时，浮动元素页参与计算。<br>-</li></ul><h2 id="2、作用"><a href="#2、作用" class="headerlink" title="2、作用"></a>2、作用</h2><h3 id="2-1-可生成-BFC-的元素"><a href="#2-1-可生成-BFC-的元素" class="headerlink" title="2.1 可生成 BFC 的元素"></a>2.1 可生成 BFC 的元素</h3><ul><li>根元素 html；</li><li>float 属性不为 none；</li><li>position 为 absolute 或 fixed；</li><li>display 为 inline-block， table-cell，table-caption，flex， inline-flex；</li><li>overflow 不为 visible；</li></ul><h3 id="2-2-场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。"><a href="#2-2-场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。" class="headerlink" title="2.2 场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。"></a>2.2 场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .left-center-right.float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: rgba(0, 0, 0, 0.7);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .left-center-right.float .center &#123;</span><br><span class="line">        background-color: rgb(13, 218, 233);</span><br><span class="line">        height: 200px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .left-center-right.float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;left-center-right float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;我是左边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;我是右边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;我是中间区域块&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p>中间自适应栏边界会延展左右浮动区域<br><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/67CD3941EFC8420AAB3D54CB766DE219/7159" alt="image"></p><p>此时需要把中间栏变成 BFC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.left-center-right.float .center &#123;</span><br><span class="line">    background-color: rgb(13, 218, 233);</span><br><span class="line">    height: 200px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/97EE88BCB7AC428E95F9F9A5580639A7/7175" alt="image"></p><h3 id="2-3-场景二：子级元素有浮动，父级元素塌陷问题"><a href="#2-3-场景二：子级元素有浮动，父级元素塌陷问题" class="headerlink" title="2.3 场景二：子级元素有浮动，父级元素塌陷问题"></a>2.3 场景二：子级元素有浮动，父级元素塌陷问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .all-children-float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: rgba(0, 0, 0, 0.7);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .all-children-float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;all-children-float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;我是左边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;我是右边区域块&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/1B737A83C8D04BF9B0ABDE2EF28DF0E6/7190" alt="image"></p><p>此时需要将父级元素变成 BFC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.all-children-float &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/D00321F3DC9C4D578E6C89DD23DB0AB2/7200" alt="image"></p><h3 id="2-3-场景三：垂直方向-margin-出现重合"><a href="#2-3-场景三：垂直方向-margin-出现重合" class="headerlink" title="2.3 场景三：垂直方向 margin 出现重合"></a>2.3 场景三：垂直方向 margin 出现重合</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .verticle-block .block1 &#123;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(13, 218, 233);</span><br><span class="line">        margin: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .verticle-block .block2 &#123;</span><br><span class="line">        width: 150px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">        margin: 30px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;verticle-block&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;block1&quot;&gt;我是区域块1&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;block2&quot;&gt;我是区域块2&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><blockquote><p>Box 垂直方向的距离 margin 决定，属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠。</p></blockquote><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/4C9FBEC4951F4006939CD8AAEC698B21/7214" alt="image"></p><p>我们的做法是包一层标签，并转化成 BFC。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.wrapper1 &#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;section class=&quot;verticle-block&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;wrapper1&quot;&gt;</span><br><span class="line">        &lt;article class=&quot;block1&quot;&gt;我是区域块1&lt;/article&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;article class=&quot;block2&quot;&gt;我是区域块2&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/56A0200CB1424C20AB9930AA4CAC44E2/7217" alt="image"></p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css BFC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>css中的一些坑</title>
      <link href="/2018/05/06/css%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
      <url>/2018/05/06/css%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CSS-踩坑记"><a href="#CSS-踩坑记" class="headerlink" title="CSS 踩坑记"></a>CSS 踩坑记</h2><h4 id="1、如果子元素全部设置为浮动，则父元素是塌陷的"><a href="#1、如果子元素全部设置为浮动，则父元素是塌陷的" class="headerlink" title="1、如果子元素全部设置为浮动，则父元素是塌陷的"></a>1、如果子元素全部设置为浮动，则父元素是塌陷的</h4><ol><li>在元素末尾加块级空元素设置 clear:both；<a id="more"></a></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.last</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- more --><ol start="2"><li>在父级容器设置 before/after 模拟一个块级空元素</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>父级容器直接设置 overflow: auto/hidden;</li></ol><h4 id="2、普通文档流中块级垂直外边距合并"><a href="#2、普通文档流中块级垂直外边距合并" class="headerlink" title="2、普通文档流中块级垂直外边距合并"></a>2、普通文档流中块级垂直外边距合并</h4><p>解决办法：用 padding 代替，或改成 inline-block，或改成 float，或绝对定位</p><h4 id="3、使用-transition-闪屏"><a href="#3、使用-transition-闪屏" class="headerlink" title="3、使用 transition 闪屏"></a>3、使用 transition 闪屏</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">  <span class="attribute">-webkit-backface-visibility</span>: hidden;</span><br><span class="line">  <span class="attribute">-webkit-perspective</span>: <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过渡动画在没有启动硬件加速的情况下，会出现抖动现象，解决方案：用 translated3d、translateZ、transform 自动启动硬件加速，即改为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translated3d</span>(0, 0, 0);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translated3d</span>(0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ps:硬件加速导致 cpu 性能占用增加，电池电量消耗加大</p><h4 id="4、超出内容用”…”表示"><a href="#4、超出内容用”…”表示" class="headerlink" title="4、超出内容用”…”表示"></a>4、超出内容用”…”表示</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line-clamp"</span>&gt;</span></span><br><span class="line">来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line-clamp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">  <span class="attribute">-webkit-line-clamp</span>: <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>-webkit-line-clamp 用来限制在一个块元素显示的文本的行数</li><li>display: -webkit-box; 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示</li><li>-webkit-box-orient 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式</li></ol><p>缺点：<br>只有移动端和 webkit 浏览器支持</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/7959E51B5140437DA4C084E6B8E7472E/12000" alt=""></p><p>还不够，最后末尾最好有点渐变到”…”</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/D7C74A4FC9624AC7A638FC223AFF6926/12008" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line-clamp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.line-clamp</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">'...'</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(to right, transparent, #fff 55%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>将 height 设置为 line-height 整数倍，防止超出文字露出</li><li>ie10+才支持 linear-gradient 属性</li></ol><p>缺点：</p><p>当文字少于区域大小时，也会出现省略号</p><h4 id="输入框-placeholder-文字带颜色"><a href="#输入框-placeholder-文字带颜色" class="headerlink" title="输入框 placeholder 文字带颜色"></a>输入框 placeholder 文字带颜色</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* WebKit browsers */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-moz-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Mozilla Firefox 19+ */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:-ms-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Internet Explorer 10+ */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>移动端适配-rem</title>
      <link href="/2018/04/27/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D-rem/"/>
      <url>/2018/04/27/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D-rem/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="通过封装-rem-js-动态获取屏幕宽度"><a href="#通过封装-rem-js-动态获取屏幕宽度" class="headerlink" title="通过封装 rem.js,动态获取屏幕宽度"></a>通过封装 rem.js,动态获取屏幕宽度</h2><blockquote><p>通过 js 去动态计算根元素的 font-size，这样所有设备分辨率都能兼容适应</p></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">//designWidth:设计稿的实际宽度值，需要根据实际设置</span><br><span class="line">//maxWidth:制作稿的最大宽度值，需要根据实际设置</span><br><span class="line">//这段js的最后面有两个参数记得要设置，一个为设计稿实际宽度，一个为制作稿最大宽度，例如设计稿为750，最大宽度为750，则为(750,750)</span><br><span class="line">;</span><br><span class="line">(function(designWidth, maxWidth) &#123;</span><br><span class="line">    var doc = document,</span><br><span class="line">        win = window,</span><br><span class="line">        docEl = doc.documentElement,</span><br><span class="line">        remStyle = document.createElement(&quot;style&quot;),</span><br><span class="line">        tid;</span><br><span class="line"></span><br><span class="line">    function refreshRem() &#123;</span><br><span class="line">        var width = docEl.getBoundingClientRect().width;</span><br><span class="line">        maxWidth = maxWidth || 540;</span><br><span class="line">        width &gt; maxWidth &amp;&amp; (width = maxWidth);</span><br><span class="line">        var rem = width * 100 / designWidth;</span><br><span class="line">        remStyle.innerHTML = &apos;html&#123;font-size:&apos; + rem + &apos;px;&#125;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (docEl.firstElementChild) &#123;</span><br><span class="line">        docEl.firstElementChild.appendChild(remStyle);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        var wrap = doc.createElement(&quot;div&quot;);</span><br><span class="line">        wrap.appendChild(remStyle);</span><br><span class="line">        doc.write(wrap.innerHTML);</span><br><span class="line">        wrap = null;</span><br><span class="line">    &#125;</span><br><span class="line">    //要等 wiewport 设置好后才能执行 refreshRem，不然 refreshRem 会执行2次；</span><br><span class="line">    refreshRem();</span><br><span class="line"></span><br><span class="line">    win.addEventListener(&quot;resize&quot;, function() &#123;</span><br><span class="line">        clearTimeout(tid); //防止执行两次</span><br><span class="line">        tid = setTimeout(refreshRem, 300);</span><br><span class="line">    &#125;, false);</span><br><span class="line"></span><br><span class="line">    win.addEventListener(&quot;pageshow&quot;, function(e) &#123;</span><br><span class="line">        if (e.persisted) &#123; // 浏览器后退的时候重新计算</span><br><span class="line">            clearTimeout(tid);</span><br><span class="line">            tid = setTimeout(refreshRem, 300);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, false);</span><br><span class="line"></span><br><span class="line">    if (doc.readyState === &quot;complete&quot;) &#123;</span><br><span class="line">        doc.body.style.fontSize = &quot;16px&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        doc.addEventListener(&quot;DOMContentLoaded&quot;, function(e) &#123;</span><br><span class="line">            doc.body.style.fontSize = &quot;16px&quot;;</span><br><span class="line">        &#125;, false);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(640, 750);</span><br></pre></td></tr></table></figure><blockquote><p>当然也可以用 media query 设置适配集中主流的屏幕尺寸</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">html &#123;</span><br><span class="line">    font-size : 20px;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 401px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 25px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 428px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 26.75px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 481px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 30px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 569px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 35px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 641px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 40px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>提供一个移动端 base.css</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">body,</span><br><span class="line">dl,</span><br><span class="line">dd,</span><br><span class="line">ul,</span><br><span class="line">ol,</span><br><span class="line">h1,</span><br><span class="line">h2,</span><br><span class="line">h3,</span><br><span class="line">h4,</span><br><span class="line">h5,</span><br><span class="line">h6,</span><br><span class="line">pre,</span><br><span class="line">form,</span><br><span class="line">input,</span><br><span class="line">textarea,</span><br><span class="line">p,</span><br><span class="line">hr,</span><br><span class="line">thead,</span><br><span class="line">tbody,</span><br><span class="line">tfoot,</span><br><span class="line">th,</span><br><span class="line">td &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ul,</span><br><span class="line">ol &#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a &#123;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html &#123;</span><br><span class="line">    -ms-text-size-adjust: none;</span><br><span class="line">    -webkit-text-size-adjust: none;</span><br><span class="line">    text-size-adjust: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    line-height: 1.5;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body,</span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">select,</span><br><span class="line">textarea &#123;</span><br><span class="line">    font-family: &apos;helvetica neue&apos;, tahoma, &apos;hiragino sans gb&apos;, stheiti, &apos;wenquanyi micro hei&apos;, \5FAE\8F6F\96C5\9ED1, \5B8B\4F53, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b,</span><br><span class="line">strong &#123;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">i,</span><br><span class="line">em &#123;</span><br><span class="line">    font-style: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table &#123;</span><br><span class="line">    border-collapse: collapse;</span><br><span class="line">    border-spacing: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table th,</span><br><span class="line">table td &#123;</span><br><span class="line">    border: 1px solid #ddd;</span><br><span class="line">    padding: 5px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table th &#123;</span><br><span class="line">    font-weight: inherit;</span><br><span class="line">    border-bottom-width: 2px;</span><br><span class="line">    border-bottom-color: #ccc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">img &#123;</span><br><span class="line">    border: 0 none;</span><br><span class="line">    width: auto\9;</span><br><span class="line">    max-width: 100%;</span><br><span class="line">    vertical-align: top;</span><br><span class="line">    height: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">select,</span><br><span class="line">textarea &#123;</span><br><span class="line">    font-family: inherit;</span><br><span class="line">    font-size: 100%;</span><br><span class="line">    margin: 0;</span><br><span class="line">    vertical-align: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">html input[type=&quot;button&quot;],</span><br><span class="line">input[type=&quot;reset&quot;],</span><br><span class="line">input[type=&quot;submit&quot;] &#123;</span><br><span class="line">    -webkit-appearance: button;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button[disabled],</span><br><span class="line">input[disabled] &#123;</span><br><span class="line">    cursor: default;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;checkbox&quot;],</span><br><span class="line">input[type=&quot;radio&quot;] &#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;search&quot;] &#123;</span><br><span class="line">    -webkit-appearance: textfield;</span><br><span class="line">    -moz-box-sizing: content-box;</span><br><span class="line">    -webkit-box-sizing: content-box;</span><br><span class="line">    box-sizing: content-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;search&quot;]::-webkit-search-decoration &#123;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input:focus &#123;</span><br><span class="line">    outline: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">select[size],</span><br><span class="line">select[multiple],</span><br><span class="line">select[size][multiple] &#123;</span><br><span class="line">    border: 1px solid #AAA;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">article,</span><br><span class="line">aside,</span><br><span class="line">details,</span><br><span class="line">figcaption,</span><br><span class="line">figure,</span><br><span class="line">footer,</span><br><span class="line">header,</span><br><span class="line">hgroup,</span><br><span class="line">main,</span><br><span class="line">nav,</span><br><span class="line">section,</span><br><span class="line">summary &#123;</span><br><span class="line">    display: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">audio,</span><br><span class="line">canvas,</span><br><span class="line">video,</span><br><span class="line">progress &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    background: #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input::-webkit-input-speech-button &#123;</span><br><span class="line">    display: none</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">textarea &#123;</span><br><span class="line">    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> mobile </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue的数据驱动原理及简单实现</title>
      <link href="/2017/09/10/vue%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E5%8E%9F%E7%90%86%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/"/>
      <url>/2017/09/10/vue%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E5%8E%9F%E7%90%86%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Vue双向数据绑定原理"><a href="#Vue双向数据绑定原理" class="headerlink" title="Vue双向数据绑定原理"></a>Vue双向数据绑定原理</h2><h3 id="1、目标实现"><a href="#1、目标实现" class="headerlink" title="1、目标实现"></a>1、目标实现</h3><ol><li>理解双向数据绑定原理；</li><li>实现 &#123;&#123; &#125;&#125;、v-model和基本事件指令v-bind（:）、v-on（@）；</li><li>新增属性的双向绑定处理；<a id="more"></a></li></ol><h3 id="2、双向数据绑定原理"><a href="#2、双向数据绑定原理" class="headerlink" title="2、双向数据绑定原理"></a>2、双向数据绑定原理</h3><p>vue实现对数据的双向绑定，通过对数据劫持结合发布者-订阅者模式实现的。</p><h4 id="2-1-Object-defineProperty"><a href="#2-1-Object-defineProperty" class="headerlink" title="2.1 Object.defineProperty"></a>2.1 Object.defineProperty</h4><p>vue通过Object.defineProperty来实现数据劫持，会对数据对象每个属性添加对应的get和set方法，对数据进行读取和赋值操作就分别调用get和set方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">    enumerable: <span class="literal">true</span>,</span><br><span class="line">    configurable: <span class="literal">true</span>,</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;,</span><br><span class="line">    set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>我们可以将一些方法放到里面，从而完成对数据的监听（劫持）和视图的同步更新。</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/F8D35A0DDA0C438990651233F3954DD3/6460" alt="image"></p><h4 id="2-2-过程说明"><a href="#2-2-过程说明" class="headerlink" title="2.2 过程说明"></a>2.2 过程说明</h4><p>实现双向数据绑定，首先要对数据进行数据监听，需要一个监听器Observer，监听所有属性。如果属性发生变化，会调用setter和getter，再去告诉订阅者Watcher是否需要更新。由于订阅者有很多个，我们需要一个消息订阅器Dep来专门收集这些订阅者，然后在监听器Observer和订阅者Watcher之间进行统一管理。还有，我们需要一个指令解析器Complie，对每个元素进行扫描和解析，将相关指令对应初始化成一个订阅者Watcher，并替换模板数据或绑定相应函数。当订阅者Watcher接收到相应属性的变化，就会执行对应的更新函数，从而更新视图。</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/A6333A71A8E243A38EAD196BB13F9EE7/6463" alt="image"></p><h3 id="3、实现Observer"><a href="#3、实现Observer" class="headerlink" title="3、实现Observer"></a>3、实现Observer</h3><p>Observer是一个数据监听器，核心方法是我们提到过的Object.defineProperty。如果要监听所有属性的话，则需要通过递归遍历，对每个子属性都defineProperty。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data || <span class="keyword">typeof</span> data !== <span class="string">"object"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = data;</span><br><span class="line">    <span class="keyword">this</span>.walk(data);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性遍历</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    walk: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="built_in">Object</span>.keys(data).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">            self.defineReactive(data, key, data[key]);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    defineReactive: <span class="function"><span class="keyword">function</span>(<span class="params">data, key, val</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        observe(val);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">            enumerable: <span class="literal">true</span>,</span><br><span class="line">            configurable: <span class="literal">true</span>,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> val;</span><br><span class="line">            &#125;,</span><br><span class="line">            set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (newVal === val) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                val = newVal;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"属性："</span> + key + <span class="string">"被监听了，现在值为："</span> + newVal);</span><br><span class="line"></span><br><span class="line">                updateView(newVal);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        updateView(val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Observer(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听数据</span></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新视图</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; val</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateView</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $name = <span class="built_in">document</span>.querySelector(<span class="string">"#name"</span>);</span><br><span class="line">    $name.innerHTML = val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myvm = <span class="keyword">new</span> MyVue(&#123;</span><br><span class="line">    el: <span class="string">"#demo"</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        name: <span class="string">"hello word"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/93FC8BA149764033996B07C9031FBE2D/6483" alt="image"></p><h3 id="4、实现Dep"><a href="#4、实现Dep" class="headerlink" title="4、实现Dep"></a>4、实现Dep</h3><p>在流程介绍中，我们需要创建一个可以订阅者的订阅器Dep，主要负责手机订阅者，属性变化的时候执行相应的订阅者，更新函数。下面稍加改造Observer，就可以插入我们的订阅器。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    defineReactive: <span class="function"><span class="keyword">function</span>(<span class="params">data, key, val</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dep = <span class="keyword">new</span> Dep();</span><br><span class="line"></span><br><span class="line">        observe(val);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">            enumerable: <span class="literal">true</span>,</span><br><span class="line">            configurable: <span class="literal">true</span>,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否需要添加订阅者 什么时候添加订阅者呢？ 与实际页面DOM有关联的data属性才添加相应的订阅者</span></span><br><span class="line">                <span class="keyword">if</span> (Dep.target) &#123;</span><br><span class="line">                    <span class="comment">// 添加一个订阅者</span></span><br><span class="line">                    dep.addSub(Dep.target);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> val;</span><br><span class="line">            &#125;,</span><br><span class="line">            set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (newVal === val) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                val = newVal;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"属性："</span> + key + <span class="string">"被监听了，现在值为："</span> + newVal);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 通知所有订阅者</span></span><br><span class="line">                dep.notify(newVal);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        updateView(val);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 订阅器标识本身实例</span></span><br><span class="line">        Dep.target = dep;</span><br><span class="line">        <span class="comment">// 强行执行getter，往订阅器中添加订阅者</span></span><br><span class="line">        <span class="keyword">var</span> v = data[key];</span><br><span class="line">        <span class="comment">// 释放自己</span></span><br><span class="line">        Dep.target = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Observer(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订阅器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Dep</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.subs = [];</span><br><span class="line">    <span class="keyword">this</span>.target = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dep.prototype = &#123;</span><br><span class="line">    addSub: <span class="function"><span class="keyword">function</span>(<span class="params">sub</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subs.push(sub);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"this.subs:"</span>, <span class="keyword">this</span>.subs);</span><br><span class="line">    &#125;,</span><br><span class="line">    notify: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subs.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">sub</span>) </span>&#123;</span><br><span class="line">            sub.update(data);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    update: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        updateView(val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>PS:将订阅器Dep添加到一个订阅者设计到getter里面，是为了让Watcher初始化进行触发。</p><h3 id="5、实现Watcher"><a href="#5、实现Watcher" class="headerlink" title="5、实现Watcher"></a>5、实现Watcher</h3><p>订阅者Watcher在初始化的时候需要将自己添加到订阅器Dep中，那该如何添加呢？我们已经知道监听器Observer是在get函数执行添加了订阅者Watcher的操作，所以我们只要在订阅者Watcher初始化的时候触发对应的get函数去执行添加订阅者操作。那么，怎样去触发get函数？很简单，只需获取对应的属性值就可以触发了，因为我们已经用Object.defineProperty监听了所有属性。vue在这里做了个技巧处理，就是咋我们添加订阅者的时候，做一个判断，判断是否是事先缓存好的Dep.target，在订阅者添加成功后，把target重置null即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订阅者</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; vm vue对象</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; exp 属性值</span></span><br><span class="line"><span class="comment"> * @param &#123;Function&#125; cb 回调函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Watcher</span>(<span class="params">vm, exp, cb</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.vm = vm;</span><br><span class="line">    <span class="keyword">this</span>.exp = exp;</span><br><span class="line">    <span class="keyword">this</span>.cb = cb;</span><br><span class="line">    <span class="comment">// 将自己添加到订阅器</span></span><br><span class="line">    <span class="keyword">this</span>.value = <span class="keyword">this</span>.get();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Watcher.prototype = &#123;</span><br><span class="line">    update: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.run();</span><br><span class="line">    &#125;,</span><br><span class="line">    run: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> value = <span class="keyword">this</span>.vm.data[<span class="keyword">this</span>.exp];</span><br><span class="line">        <span class="keyword">var</span> oldVal = <span class="keyword">this</span>.value;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (value !== oldVal) &#123;</span><br><span class="line">            <span class="keyword">this</span>.value = value;</span><br><span class="line">            <span class="keyword">this</span>.cb.call(<span class="keyword">this</span>.vm, value, oldVal);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 缓存自己 做个标记</span></span><br><span class="line">        Dep.target = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 强制执行监听器里的get函数</span></span><br><span class="line">        <span class="comment">// this.vm.data[this.exp] 调用getter，添加一个订阅者sub，存入到全局变量subs</span></span><br><span class="line">        <span class="keyword">var</span> value = <span class="keyword">this</span>.vm.data[<span class="keyword">this</span>.exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 释放自己</span></span><br><span class="line">        Dep.target = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> $name = <span class="built_in">document</span>.querySelector(<span class="string">"#name"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给name属性添加一个订阅者到订阅器中，当属性发生变化后，触发回调</span></span><br><span class="line">    <span class="keyword">var</span> w = <span class="keyword">new</span> Watcher(<span class="keyword">this</span>, <span class="string">"name"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        $name.innerHTML = val;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里，其实已经实现了我们的双向数据绑定：能够根据初始数据初始化页面特定元素，同时当数据改变也能更新视图。</p><h3 id="5、实现Compile"><a href="#5、实现Compile" class="headerlink" title="5、实现Compile"></a>5、实现Compile</h3><p>步骤4整个过程都能有去解析DOM节点，而是直接固定节点进行替换。接下来我们就来实现一个解析器，完成一些解析和绑定工作。</p><ol><li>获取页面的DOM节点，遍历存入到文档碎片对象中；</li><li>解析出文本节点，匹配&#123;&#123;&#125;&#125;（暂时只做”&#123;&#123;&#125;&#125;”的解析），用初始化数据替换，并添加相应订阅者；</li><li>分离出节点的指令v-on、v-bind和v-model，绑定相应的事件和函数；</li></ol><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/BD96748FED95467A8B44B1AFFB499D44/6764" alt="image"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编译器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; el 根元素</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; vm vue对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Compile</span>(<span class="params">el, vm</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.vm = vm;</span><br><span class="line">    <span class="keyword">this</span>.el = <span class="built_in">document</span>.querySelector(el);</span><br><span class="line">    <span class="keyword">this</span>.fragment = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>.init();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Compile.prototype = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.el) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"this.el:"</span>, <span class="keyword">this</span>.el);</span><br><span class="line">            <span class="comment">// 移除页面元素生成文档碎片</span></span><br><span class="line">            <span class="keyword">this</span>.fragment = <span class="keyword">this</span>.nodeToFragment(<span class="keyword">this</span>.el);</span><br><span class="line">            <span class="comment">// 编译文档碎片</span></span><br><span class="line">            <span class="keyword">this</span>.compileElement(<span class="keyword">this</span>.fragment);</span><br><span class="line">            <span class="keyword">this</span>.el.appendChild(<span class="keyword">this</span>.fragment);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"DOM Selector is not exist"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 页面DOM节点转化成文档碎片</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    nodeToFragment: <span class="function"><span class="keyword">function</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> fragment = <span class="built_in">document</span>.createDocumentFragment();</span><br><span class="line">        <span class="keyword">var</span> child = el.firstChild;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 此处添加打印，出来的不是页面中原始的DOM，而是编译后的？</span></span><br><span class="line">        <span class="comment">// NodeList是引用关系，在编译后相应的值被替换了，这里打印出来的NodeList是后来被引用更新了的</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"el:"</span>, el);</span><br><span class="line">        <span class="comment">// console.log("el.firstChild:", el.firstChild.nodeValue);</span></span><br><span class="line">        <span class="keyword">while</span> (child) &#123;</span><br><span class="line">            <span class="comment">// append后，原el上的子节点被删除了，挂载在文档碎片上</span></span><br><span class="line">            fragment.appendChild(child);</span><br><span class="line">            child = el.firstChild;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译文档碎片，遍历到当前是文本节点则去编译文本节点，如果当前是元素节点，并且存在子节点，则继续递归遍历</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileElement: <span class="function"><span class="keyword">function</span>(<span class="params">fragment</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> childNodes = fragment.childNodes;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        [].slice.call(childNodes).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// var reg = /\&#123;\&#123;\s*(.+)\s*\&#125;\&#125;/g;</span></span><br><span class="line">            <span class="keyword">var</span> reg = <span class="regexp">/\&#123;\&#123;\s*((?:.|\n)+?)\s*\&#125;\&#125;/g</span>;</span><br><span class="line">            <span class="keyword">var</span> text = node.textContent;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (self.isElementNode(node)) &#123;</span><br><span class="line">                self.compileAttr(node);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (self.isTextNode(node) &amp;&amp; reg.test(text)) &#123;</span><br><span class="line">                reg.lastIndex = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">/* var match;</span></span><br><span class="line"><span class="comment">                while(match = reg.exec(text)) &#123;</span></span><br><span class="line"><span class="comment">                    self.compileText(node, match[1]);</span></span><br><span class="line"><span class="comment">                &#125; */</span></span><br><span class="line"></span><br><span class="line">                self.compileText(node, reg.exec(text)[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (node.childNodes &amp;&amp; node.childNodes.length) &#123;</span><br><span class="line">                self.compileElement(node);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileAttr: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> nodeAttrs = node.attributes;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Array</span>.prototype.forEach.call(nodeAttrs, <span class="function"><span class="keyword">function</span>(<span class="params">attr</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> attrName = attr.name;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 只对vue本身指令进行操作</span></span><br><span class="line">            <span class="keyword">if</span> (self.isDirective(attrName)) &#123;</span><br><span class="line">                <span class="keyword">var</span> exp = attr.value;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// v-on指令</span></span><br><span class="line">                <span class="keyword">if</span> (self.isOnDirective(attrName)) &#123;</span><br><span class="line">                    self.compileOn(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// v-bind指令</span></span><br><span class="line">                <span class="keyword">if</span>(self.isBindDirective(attrName)) &#123;</span><br><span class="line">                    self.compileBind(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// v-model</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (self.isModelDirective(attrName)) &#123;</span><br><span class="line">                    self.compileModel(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                node.removeAttribute(attrName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译文档碎片节点文本，即对标记替换</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileText: <span class="function"><span class="keyword">function</span>(<span class="params">node, exp</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> exps = exp.split(<span class="string">"."</span>);</span><br><span class="line">        <span class="keyword">var</span> initText = <span class="keyword">this</span>.vm.data[exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化视图</span></span><br><span class="line">        <span class="keyword">this</span>.updateText(node, initText);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加一个订阅者到订阅器</span></span><br><span class="line">        <span class="keyword">var</span> w = <span class="keyword">new</span> Watcher(<span class="keyword">this</span>.vm, exp, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">            self.updateText(node, val);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-on指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileOn: <span class="function"><span class="keyword">function</span>(<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// @xxx v-on:xxx</span></span><br><span class="line">        <span class="keyword">var</span> onRE = <span class="regexp">/^@|^v-on:/</span>;</span><br><span class="line">        <span class="keyword">var</span> eventType = attrName.replace(onRE, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> cb = vm.methods[exp];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (eventType &amp;&amp; cb) &#123;</span><br><span class="line">            node.addEventListener(eventType, cb.bind(vm), <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-bind指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileBind: <span class="function"><span class="keyword">function</span> (<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// :xxx v-bind:xxx</span></span><br><span class="line">        <span class="keyword">var</span> bindRE = <span class="regexp">/^:|^v-bind:/</span>;</span><br><span class="line">        <span class="keyword">var</span> attr = attrName.replace(bindRE, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> val = vm.data[exp];</span><br><span class="line"></span><br><span class="line">        node.setAttribute(attr, val);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-model指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileModel: <span class="function"><span class="keyword">function</span>(<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> val = <span class="keyword">this</span>.vm.data[exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化视图</span></span><br><span class="line">        <span class="keyword">this</span>.modelUpdater(node, val);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加一个订阅者到订阅器</span></span><br><span class="line">        <span class="keyword">new</span> Watcher(<span class="keyword">this</span>.vm, exp, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            self.modelUpdater(node, value);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绑定input事件</span></span><br><span class="line">        node.addEventListener(<span class="string">"input"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> newVal = e.target.value;</span><br><span class="line">            <span class="keyword">if</span> (val === newVal) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            self.vm.data[exp] = newVal;</span><br><span class="line">            <span class="comment">// val = newVal;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新文档碎片相应的文本节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    updateText: <span class="function"><span class="keyword">function</span>(<span class="params">node, val</span>) </span>&#123;</span><br><span class="line">        node.textContent = <span class="keyword">typeof</span> val === <span class="string">"undefined"</span> ? <span class="string">""</span> : val;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * model更新节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    modelUpdater: <span class="function"><span class="keyword">function</span>(<span class="params">node, val, oldVal</span>) </span>&#123;</span><br><span class="line">        node.value = <span class="keyword">typeof</span> val == <span class="string">"undefined"</span> ? <span class="string">""</span> : val;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是vue指令，包括v-xxx:,:xxx,@xxx</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dirRE = <span class="regexp">/^v-|^@|^:/</span>;</span><br><span class="line">        <span class="keyword">return</span> dirRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-on指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isOnDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> onRE = <span class="regexp">/^v-on:|^@/</span>;</span><br><span class="line">        <span class="keyword">return</span> onRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-bind指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isBindDirective: <span class="function"><span class="keyword">function</span> (<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> bindRE = <span class="regexp">/^v-bind:|^:/</span>;</span><br><span class="line">        <span class="keyword">return</span> bindRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-model指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isModelDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> mdRE = <span class="regexp">/^v-model/</span>;</span><br><span class="line">        <span class="keyword">return</span> mdRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断元素节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isElementNode: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> node.nodeType == <span class="number">1</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文本节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isTextNode: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> node.nodeType == <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.methods = options.methods;</span><br><span class="line"></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Compile(options.el, <span class="keyword">this</span>.vm);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们就可以调用指令v-bind、v-on和v-model。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="undefined">            color: red;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-bind:class</span>=<span class="string">"myColor"</span>&gt;</span>&amp;#123;&amp;#123; name &amp;#125;&amp;#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">v-model</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"clickOk"</span>&gt;</span>Ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> myvm = <span class="keyword">new</span> MyVue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">"#demo"</span>,</span></span><br><span class="line"><span class="undefined">    data: &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">"hello word"</span>,</span></span><br><span class="line"><span class="javascript">        myColor: <span class="string">"red"</span></span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="javascript">        clickOk: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">"I am OK"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    myvm.data.name = <span class="string">"wawawa...vue was born"</span>;</span></span><br><span class="line"><span class="undefined">&#125;, 2000);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/0442953EE78A48C3B26FFE48B1731582/6629" alt="image"></p><h3 id="5、其他"><a href="#5、其他" class="headerlink" title="5、其他"></a>5、其他</h3><h4 id="5-1-proxy代理data"><a href="#5-1-proxy代理data" class="headerlink" title="5.1 proxy代理data"></a>5.1 proxy代理data</h4><p>可能注意到了，我们不管是在赋值还是取值，都是在myvm.data.someAttr上操作的，而在vue上我们习惯直接myvm.someAttr这种形式。怎样实现呢？同样，我们可以用Object.defineProperty对data所有属性做一个代理，即访问vue实例属性时，代理到data上。很简单，实现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 将数据拓展到vue的根，方便读取和设置</span><br><span class="line"> */</span><br><span class="line">MyVue.prototype.proxy = function(key) &#123;</span><br><span class="line">    var self = this;</span><br><span class="line"></span><br><span class="line">    Object.defineProperty(this, key, &#123;</span><br><span class="line">        enumerable: true,</span><br><span class="line">        configurable: true,</span><br><span class="line">        get: function proxyGetter() &#123;</span><br><span class="line">            return self.data[key];</span><br><span class="line">        &#125;,</span><br><span class="line">        set: function proxySetter(newVal) &#123;</span><br><span class="line">            self.data[key] = newVal;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/71B50262A5944F928CDA8CFD8944A538/6670" alt="image"></p><h4 id="5-2-parsePath"><a href="#5-2-parsePath" class="headerlink" title="5.2 parsePath"></a>5.2 parsePath</h4><p>上面对于data的操作只是到对于简单的基本类型属性，对于对象属性的改变该怎么更新到位呢？其实，只要深度遍历对象属性路径，就可以找到要访问属性值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据对象属性路径，最终获取值</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; obj 对象</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; path 路径</span></span><br><span class="line"><span class="comment"> * return 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parsePath</span>(<span class="params">obj, path</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bailRE = <span class="regexp">/[^\w.$]/</span>;</span><br><span class="line">    <span class="keyword">if</span> (bailRE.test(path)) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> segments = path.split(<span class="string">'.'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; segments.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!obj) &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        obj = obj[segments[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用这个方法替换我们的所有取值操作<br>vm[exp] =&gt; parsePath(vm, exp)</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/BB5F59CFD0244D4991E13B5D35F88AF3/6709" alt="image"></p><h3 id="6、新增属性的双向数据绑定"><a href="#6、新增属性的双向数据绑定" class="headerlink" title="6、新增属性的双向数据绑定"></a>6、新增属性的双向数据绑定</h3><h4 id="6-1-给对象添加属性"><a href="#6-1-给对象添加属性" class="headerlink" title="6.1 给对象添加属性"></a>6.1 给对象添加属性</h4><p>Vue 不允许在已经创建的实例上动态添加新的根级响应式属性 (root-level reactive property)。然而它可以使用 Vue.set(object, key, value) 方法将响应属性添加到嵌套的对象上。<br>也就是我们需要在Vue原型上添加一个set方法去设置新添加的属性，新属性同样要进行监听和添加订阅者。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue的set方法，用于外部新增属性 Vue.$set(target, key, val)</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; target 数据</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; key 属性</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; val 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params">target, key, val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(target)) &#123;</span><br><span class="line">        target.length = <span class="built_in">Math</span>.max(target.length, key);</span><br><span class="line">        target.splice(key, <span class="number">1</span>, val);</span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (target.hasOwnProperty(key)) &#123;</span><br><span class="line">        target[key] = val;</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> ob = (target).$Observer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!ob) &#123;</span><br><span class="line">        target[key] = val;</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对新增属性定义监听</span></span><br><span class="line">    ob.defineReactive(target, key, val);</span><br><span class="line"></span><br><span class="line">    ob.dep.notify();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyVue.prototype.$set = set;</span><br></pre></td></tr></table></figure><h4 id="6-1-给数组对象添加属性"><a href="#6-1-给数组对象添加属性" class="headerlink" title="6.1 给数组对象添加属性"></a>6.1 给数组对象添加属性</h4><p>把数组看成一个特殊的对象，就很容易理解了，对于unshift、push和splice变异方法是添加了对象的属性的，需要对新加的属性进行监听和添加订阅者。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arrKeys = [<span class="string">"push"</span>, <span class="string">"pop"</span>, <span class="string">"shift"</span>, <span class="string">"unshift"</span>, <span class="string">"splice"</span>, <span class="string">"sort"</span>, <span class="string">"reverse"</span>];</span><br><span class="line"><span class="keyword">var</span> extendArr = [];</span><br><span class="line"></span><br><span class="line">arrKeys.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">    def(extendArr, key, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result,</span><br><span class="line">            arrProto = <span class="built_in">Array</span>.prototype,</span><br><span class="line">            ob = <span class="keyword">this</span>.$Observer,</span><br><span class="line">            arr = arrProto.slice.call(<span class="built_in">arguments</span>),</span><br><span class="line">            inserted,</span><br><span class="line">            index;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"push"</span>:</span><br><span class="line">                inserted = arr;</span><br><span class="line">                index = <span class="keyword">this</span>.length;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"unshift"</span>:</span><br><span class="line">                inserted = arr;</span><br><span class="line">                index = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"splice"</span>:</span><br><span class="line">                inserted = arr.slice(<span class="number">2</span>);</span><br><span class="line">                index = arr[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        result = arrProto[key].apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听新增数组对象属性</span></span><br><span class="line">        <span class="keyword">if</span> (inserted) &#123;</span><br><span class="line">            ob.observeArray(inserted);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ob.dep.notify();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arrayKeys = <span class="built_in">Object</span>.getOwnPropertyNames(extendArr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.dep = <span class="keyword">new</span> Dep();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data || <span class="keyword">typeof</span> data !== <span class="string">"object"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在每个object上添加一个observer</span></span><br><span class="line">    def(data, <span class="string">"$Observer"</span>, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 继承变异方法</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(data)) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把数组变异方法的处理，添加到原型链上</span></span><br><span class="line">        data.__proto__ = extendArr;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听数组对象属性</span></span><br><span class="line">        <span class="keyword">this</span>.observeArray(data);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">        <span class="keyword">this</span>.walk(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    observeArray: <span class="function"><span class="keyword">function</span>(<span class="params">items</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"items:"</span>, items);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, l = items.length; i &lt; l; i++) &#123;</span><br><span class="line">            observe(items[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue-cli中遇到的坑</title>
      <link href="/2017/09/02/vue-cli%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
      <url>/2017/09/02/vue-cli%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Vue-cli-脚手架"><a href="#Vue-cli-脚手架" class="headerlink" title="Vue-cli 脚手架"></a>Vue-cli 脚手架</h2><p>项目构建自动化，错误查起来越来越不知所措，坑很多，踩过后要记录，防止踩第二遍</p><h4 id="vue-单文件-import-css-文件，不加-会报错"><a href="#vue-单文件-import-css-文件，不加-会报错" class="headerlink" title="vue 单文件@import css 文件，不加~会报错"></a>vue 单文件@import css 文件，不加<code>~</code>会报错</h4><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">@import &apos;assets/css/variable&apos;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[HMR] bundle has 1 errors</span><br><span class="line">172:176 ./~/css-loader?&#123;&quot;minimize&quot;:false,&quot;sourceMap&quot;:false&#125;!./~/vue-loader/lib/style-compiler?&#123;&quot;vue&quot;:true,&quot;id&quot;:&quot;data-v-be4708e4&quot;,&quot;scoped&quot;:true,&quot;hasInlineConfig&quot;:false&#125;!./~/stylus-loader?&#123;&quot;sourceMap&quot;:false&#125;!./~/vue-loader/lib/selector.js?type=styles&amp;index=0!./src/components/views/programs/Programs.vue</span><br><span class="line">Module build failed: Error: D:\appSoft\wampserver\wamp64\www\iHomed_vue\src\components\views\programs\Programs.vue:200:9</span><br><span class="line">   196| &#125;</span><br><span class="line">   197| &lt;/script&gt;</span><br><span class="line">   198|</span><br><span class="line">   199| &lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">   200| @import &apos;assets/css/variable&apos;</span><br><span class="line">----------------^</span><br><span class="line">   201|</span><br></pre></td></tr></table></figure><p>正确写法<code>@import &#39;~assets/css/variable&#39;</code></p><h4 id="vue-cli-中-config-index-js-配置说明"><a href="#vue-cli-中-config-index-js-配置说明" class="headerlink" title="vue-cli 中 config/index.js 配置说明"></a>vue-cli 中 config/index.js 配置说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  build: &#123;</span><br><span class="line">    env: require(&apos;./prod.env&apos;), // 使用 config/prod.env.js 中定义的编译环境</span><br><span class="line">    index: path.resolve(__dirname, &apos;../dist/index.html&apos;), // 编译输入的 index.html 文件</span><br><span class="line">    assetsRoot: path.resolve(__dirname, &apos;../dist&apos;), // 编译输出的静态资源路径</span><br><span class="line">    assetsSubDirectory: &apos;static&apos;, // 编译输出的二级目录</span><br><span class="line">    assetsPublicPath: &apos;/&apos;, // 编译发布的根目录，可配置为资源服务器域名或 CDN 域名</span><br><span class="line">    productionSourceMap: true, // 是否开启 cssSourceMap</span><br><span class="line">    // Gzip off by default as many popular static hosts such as</span><br><span class="line">    // Surge or Netlify already gzip all static assets for you.</span><br><span class="line">    // Before setting to `true`, make sure to:</span><br><span class="line">    // npm install --save-dev compression-webpack-plugin</span><br><span class="line">    productionGzip: false, // 是否开启 gzip</span><br><span class="line">    productionGzipExtensions: [&apos;js&apos;, &apos;css&apos;], // 需要使用 gzip 压缩的文件扩展名</span><br><span class="line">    // Run the build command with an extra argument to</span><br><span class="line">    // View the bundle analyzer report after build finishes:</span><br><span class="line">    // `npm run build --report`</span><br><span class="line">    // Set to `true` or `false` to always turn it on or off</span><br><span class="line">    bundleAnalyzerReport: process.env.npm_config_report</span><br><span class="line">  &#125;,</span><br><span class="line">  dev: &#123; // dev 环境</span><br><span class="line">    env: require(&apos;./dev.env&apos;), // 使用 config/dev.env.js 中定义的编译环境</span><br><span class="line">    port: 8084, // 运行测试页面的端口</span><br><span class="line">    autoOpenBrowser: true, // 自动在浏览器中打开</span><br><span class="line">    assetsSubDirectory: &apos;static&apos;, // 编译输出的二级目录</span><br><span class="line">    assetsPublicPath: &apos;/&apos;, // 编译发布的根目录，可配置为资源服务器域名或 CDN 域名</span><br><span class="line">    proxyTable: &#123;&#125;, // 需要 proxyTable 代理的接口（可跨域）</span><br><span class="line">    // CSS Sourcemaps off by default because relative paths are &quot;buggy&quot;</span><br><span class="line">    // with this option, according to the CSS-Loader README</span><br><span class="line">    // (https://github.com/webpack/css-loader#sourcemaps)</span><br><span class="line">    // In our experience, they generally work as expected,</span><br><span class="line">    // just be aware of this issue when enabling this option.</span><br><span class="line">    cssSourceMap: false  // 是否开启 cssSourceMap</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>曾经不易理解的两点<code>assetsSubDirectory</code>和<code>assetsPublicPath</code></p><ol><li><p>assetsSubDirectory<br>被 webpack 编译处理过的资源文件都会在这个 build.assetsRoot 目录下，如果 assetsRoot 值是<code>&quot;/web/app&quot;</code>，assetsSubDirectory 值为<code>&quot;static&quot;</code>，那么，webpack 将把所有资源编译到<code>web/app/static</code>目录下</p></li><li><p>assetsPublicPath<br>这个是通过 http 服务器运行的 url 路径，大多数情况下，这个是根目录（/）。如果你的后台框架对静态资源 url 前缀有要求，你仅需改变这个参数。比如不用本地的，而用线上的 CDN。</p></li></ol><h4 id="父子组件嵌套，各个钩子函数触发顺序"><a href="#父子组件嵌套，各个钩子函数触发顺序" class="headerlink" title="父子组件嵌套，各个钩子函数触发顺序"></a>父子组件嵌套，各个钩子函数触发顺序</h4><p>偶然看到这个问题：vue 中父子组件各个钩子函数触发顺序是怎样的？一时还真背问到了，在项目中添加打印才发现是这样子的</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/E40E6B0ED1F5479F909A69469C83D99A/12039" alt=""></p><p>顺序是：先依次触发父级组件<code>beforeCreate</code>、<code>create</code>和<code>beforeMounte</code>，再依次触发子级组件<code>beforeCreate</code>、<code>create</code>、<code>beforeMounte</code>和<code>mounted</code>，最后父级组件<code>mounted</code></p><h4 id="父子组件之间通信，兄弟组件之间通信"><a href="#父子组件之间通信，兄弟组件之间通信" class="headerlink" title="父子组件之间通信，兄弟组件之间通信"></a>父子组件之间通信，兄弟组件之间通信</h4><p>这个问题基本清晰，在这归纳一下</p><h5 id="1-父组件数据传给子组件"><a href="#1-父组件数据传给子组件" class="headerlink" title="1. 父组件数据传给子组件"></a>1. 父组件数据传给子组件</h5><p>通过<code>props</code>属性传递</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent-component</span> <span class="attr">:parent-data</span>=<span class="string">"pdata"</span>&gt;</span><span class="tag">&lt;/<span class="name">parent-component</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    parentData: &#123;</span><br><span class="line">      type: <span class="built_in">String</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="string">''</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-子组件传数据给父组件"><a href="#2-子组件传数据给父组件" class="headerlink" title="2. 子组件传数据给父组件"></a>2. 子组件传数据给父组件</h5><p>使用<code>$emit</code>派发</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent-component</span> <span class="attr">:parent-data:sync</span>=<span class="string">"pdata"</span> @<span class="attr">handle-callback</span>=<span class="string">"handlerCallback"</span>&gt;</span><span class="tag">&lt;/<span class="name">parent-component</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handlerCallback(params) &#123;</span><br><span class="line">      <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'handleCallback'</span>, params)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'update:parentData'</span>, someData)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-兄弟组件数据传递"><a href="#3-兄弟组件数据传递" class="headerlink" title="3. 兄弟组件数据传递"></a>3. 兄弟组件数据传递</h5><ol><li>对于大型项目，用 vue 官方推荐的 vuex</li><li><p>EventBus</p><ul><li><p>提取 bus.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">const</span> bus = <span class="keyword">new</span> Vue()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> bus</span><br></pre></td></tr></table></figure></li><li><p>兄弟组件 1 发送数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">'./bus'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'busEvent1'</span>, someData)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>兄弟组件 2 接收数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">'./bus'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$on(<span class="string">'busEvent1'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(data)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>子组件 A <code>$emit</code>派发某个事件，再由父组件<code>@handle-callback=&quot;handlerCallback&quot;</code>监听获取数据，然后，父组件<code>$refs</code>直接访问到子组件 B 的方法，从而间接实现从子组件 A 到子组件 B 的数据传递</p></li></ol><h4 id="props-在子组件中被重写报错"><a href="#props-在子组件中被重写报错" class="headerlink" title="props 在子组件中被重写报错"></a>props 在子组件中被重写报错</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue.esm.js?<span class="number">06e7</span>:<span class="number">591</span> [Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop<span class="string">'s value. Prop being mutated: "isShow"</span></span><br></pre></td></tr></table></figure><p><strong>解决方案</strong><br><code>props</code>传过来的参数通过<code>Vue.$emit</code>提交修改</p><h4 id="在props和data中使用this"><a href="#在props和data中使用this" class="headerlink" title="在props和data中使用this"></a>在<code>props</code>和<code>data</code>中使用<code>this</code></h4><p>在 Vue2.2.2 或更高版本才能这样使用，低于这个版本时，注入的值会在<code>props</code>和<code>data</code>初始化之后得到。</p><h4 id="对于高阶插件-组件库，解决组件与其子孙组件数据传输问题"><a href="#对于高阶插件-组件库，解决组件与其子孙组件数据传输问题" class="headerlink" title="对于高阶插件/组件库，解决组件与其子孙组件数据传输问题"></a>对于高阶插件/组件库，解决组件与其子孙组件数据传输问题</h4><ol><li><p>解决方案一：<code>$attrs</code>和<code>$listener</code></p><p>使用属性和方法不通过<code>props</code>传递，在子孙组件中直接用<code>$attrs</code>和<code>$listeners</code>接收。不过支持 v2.4.0+。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父级组件</span></span><br><span class="line">&lt;ul id=<span class="string">"app6"</span>&gt;</span><br><span class="line">&lt;item</span><br><span class="line"><span class="class"><span class="keyword">class</span></span>=<span class="string">"item"</span></span><br><span class="line">:model=<span class="string">"treeData"</span></span><br><span class="line">:count=<span class="string">"123"</span></span><br><span class="line">@abc=<span class="string">"function()&#123;&#125;"</span></span><br><span class="line">&gt;<span class="xml"><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 子孙组件</span></span><br><span class="line"><span class="regexp">inheritAttrs: false,</span></span><br><span class="line"><span class="regexp">created () &#123;</span></span><br><span class="line"><span class="regexp">    let attrs = this.$attrs;</span></span><br><span class="line"><span class="regexp">    console.log('mode:', attrs.mode);</span></span><br><span class="line"><span class="regexp">    console.log('count:', attrs.count);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    let listeners = this.$listeners;</span></span><br><span class="line"><span class="regexp">    console.log('bac:', listeners.abc);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>解决方案二：<code>provide/inject</code></p><p>父级组件传入<code>provide</code>数据选项，子孙组件注入<code>inject</code>数据。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line">provide: &#123;</span><br><span class="line">  foo: <span class="string">'bar'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子孙组件</span></span><br><span class="line">inject: [<span class="string">'foo'</span>] <span class="comment">// or inject: &#123; name: 'foo', defult: '' &#125;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue-cli </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
