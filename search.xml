<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>项目结构tree图</title>
      <link href="/yelee/2018/10/13/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%9B%BE/"/>
      <url>/yelee/2018/10/13/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%9B%BE/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="目录结构介绍"><a href="#目录结构介绍" class="headerlink" title="目录结构介绍"></a>目录结构介绍</h2><pre><code>|-- build                            // webpack配置文件|-- config                           // 项目打包路径|-- src                              // 源码目录|   |-- components                   // 组件|       |-- common                   // 公共组件|           |-- bus.js                // Event Bus|           |-- Header.vue           // 公共头部|           |-- Home.vue                // 公共路由入口|           |-- Sidebar.vue          // 公共左边栏|           |-- Tags.vue                // 页面切换标签组件|       |-- page                        // 主要路由页面|           |-- 403.vue|           |-- 404.vue|           |-- BaseCharts.vue       // 基础图表|           |-- BaseForm.vue         // 基础表单|           |-- BaseTable.vue        // 基础表格|           |-- DashBoard.vue        // 系统首页|           |-- DragList.vue         // 拖拽列表组件|           |-- Icon.vue             // 自定义图标组件|           |-- Login.vue               // 登录|           |-- Markdown.vue         // markdown组件|           |-- Premission.vue       // 权限测试组件|           |-- Upload.vue           // 图片上传|           |-- VueEditor.vue        // 富文本编辑器|   |-- App.vue                      // 页面入口文件|   |-- main.js                      // 程序入口文件，加载各种公共组件|-- .babelrc                         // ES6语法编译配置|-- .editorconfig                    // 代码编写规格|-- .gitignore                       // 忽略的文件|-- index.html                       // 入口html文件|-- package.json                     // 项目及工具的依赖配置文件|-- README.md                        // 说明</code></pre>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实用 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>npm报错：error code EINTEGRITY</title>
      <link href="/yelee/2018/10/13/npm%E6%8A%A5%E9%94%99%EF%BC%9Aerror-code-EINTEGRITY/"/>
      <url>/yelee/2018/10/13/npm%E6%8A%A5%E9%94%99%EF%BC%9Aerror-code-EINTEGRITY/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天 npm install 时候遇到类似的错误</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法:"></a>解决办法:</h3><blockquote><p>一、升级 npm<br><code>npm i -g npm</code></p></blockquote><blockquote><p>二、删除 package-lock.json</p></blockquote><blockquote><p>三、删除缓存目录下的所有数据<br><code>npm cache clean –force</code></p></blockquote><blockquote><p>四、验证缓存数据的有效性和完整性，清理垃圾数据<br><code>npm cache verify</code></p></blockquote><blockquote><p>五、包问题<br>包是在 windows 下发布的，在 linux 安装错误。<br>排查方法：看日志，去除相关的包配置，再安装测试</p></blockquote><p>一般到第四步即可完美解决</p>]]></content>
      
      <categories>
          
          <category> 工作常见问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端</title>
      <link href="/yelee/2018/09/13/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"/>
      <url>/yelee/2018/09/13/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="security">  <div class="input-container">  <input type="password" class="form-control" id="pass" placeholder="请输入密码以访问" />    <label for="pass">请输入密码以访问</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1851cNnXQmlP+OE+k9Ya2iWpRvP5I3RvHDJmtaP/ZOtP/8picxfOmEo0ySVny0SETRwl2m2MYjLH5STEccGa0ZpB9+zfZtmgb4s02zwUYroYsf1azKLvnsAwOaWBShy6ruhDLo2JQOGYks0WZTplCmENRFK6mzzwHjkkTx5/McR8t3GGthDImtdBMH870aBAkxFxh1A05afuBAwGa4nRTwbjPayfuVP3h/Am7P67RzHuJunc9/dS9wjiUIg8UtIPkTqsl9nbelBXXfmIOJgrPzYL6gVzn847fJJnKlg+bYib3r95ffalkEUCaSHYpptVhYDtSh+wN+B3w9AwaSXjItgaYkGCKOqezc0N+Z/8a1SB1h7FEnK4KesfKfADcJdJzsY1DLVhu77zrhZoZAm+GFBe0XWaXXrNDt5L4/lj7wsqQRaEec7WIgvArZSPJbCXKzrL9RGk4JyAd00Dee24w52XlX+brntUwXmj640k3KIyV2+Wm2ldiNQCb6Tw29j+gnYXsrBpSQMoKwRd2369nnCPwlkAR3R3RZGdTkZhTQidHGoGMRrxV2jPFiEqYg4nA3zST4AuVJWCraBleM3VziQS8RkcAmaR0eFWs4EECf8BARr1akeDJYKPs9QAuJYepdRTsUZ2WoqUBgOPTTlAnLtrAgwUeRNGxhMX4n9Cs9WE3BGG1QyGap3FxTjBX7RMWLFynK119cjKIbE/vNQC+h295eQhey9gR5497tW9/zJZt5z5p2K71hLl5QXwafpyqjdonypUIeA/j3+2y3QwJAinMh2v5nVKWQtAtgqj2OzPTDG5cni66PcKyG9scwgvO2E9SGqXD97JR/oZmpJf+acE7YbYiCxcNcrr7buNvV46qsRuIUuK1kxqnSnPKU8YL3YmIoA9xqhzxcRYgrw4iuCJ2VR/iXf07RidGOiiT0+y9N+j7E1Xa9WQOOawS3zGMfiqAhiUVq07MMB0f1LYTGKpWBPIyjzG5j/OV0hv7z9MzeltcgbmDrqyKJP0SlkGQaVt3aTx+Ylyn93TfBls9TXMIXMePDBCsBprDno5COEg4A/jH66oNuA+n8GUWc1BXa5JmrBAqbzZ1NWqx27+/wzHAIFylXb1td6t2DrgGlZ/Y9LzZUfcm1wGaCh/+1vEnvgWPbPGMv1qqnseSFaVd2iWPCWT02YuNUJ/6cb3VZcpG2cqiE+JJYUJApa04yTCL2nsvGmynckf+b2FLUv8s0z4AEtZ/2a+YYOMJCmmGqpfFsYwdVVkxAoH/KCYRHFUjob4yZ6tUQsYsKr0Eaotu6oAslSFG37MEQ+ZIB1f8pOgyq2cJcslqZoGk/9AnvCn8jBDSx4nDtIh0bTPXQe1YoswPTv/CQYUfP+CxX9m0LfBDtBBsjuARxwTguv/zucHe2HjcxP+xELhTNgFKwce6QMLwFgrnc8Ed3gFbaWHKHnVI0etXla+UXeznMv9AM5UPUjUyGv3nlYLrwAa9Q+f7U/niOeNcSQn9nnRlo7+jjQGt7HqbA0gSpnWBqWTVk2lpIDUJk/U8LUhGEnXIMaPkf4TjhOHhujzh49dguG4fVXNeUQR9Q8o6AvpVTKhQ7ZNo+itcZykbQ3mQL78lZI372doOzVrqxO89JI8AntiXNUVVlxr3Jbnv+6KGv6iItjuHQdmNggOSG0VQmEl7GaN+BnPhsoZqTuOFt5NATGAYRyeIVnDL2gOQGIzn0A6d3GvMzr/aTPNlCJLV9/lln5gWgic79fpwW7d4UeUq6wsoyXQ6Gu3eYbYOBbvdNMkSQJAU3DSV82Dg0YyDm61zx/vqkCFGAH4NzkWk+sPG7YkEuOjcTOsxikRjHwqhF4AkTYRAiVC7SbeKxaPMGC0WXNo5ePaAVn83E5DvaCo5OVwZ9nHMPgM1V+bFss2zFfkB1wRPOzV342li0T5qI+Hro8G8rDmm+ZjVYj7hPNXgYct00fZXu4ruSdk1jLK7Hbv6qFM7iHQ1poJ0CxZMm7Q4ESXBzjRXipTOeQf0NV5r7ihXDWUQM7U89R86gxmhGcmrdf8b+kIJHyLstaYvhMcFr7hSJe9on0tpXahxBg9cQGSZO3k6DLf3FBmQo2poW1pN4IwU0BkAVjL0pCayn/rtrBLxGHOIZbSvjEndUOMz7XKrQX8tJdWjYlhg+n3nbSt0hPBnmc5Y05BMPHWlcXI1LtdnlOdgOO6JJtt8jAtgNXF8Ao0clXdgqle0IH9RS/4MTmyHUgFR7iSLQofnZdzYUX0bk2YOTBLhEpu94RWLW2ZYza57UAtxRM749lNps3Cou6W2+27EAihuFuy19mqX7+5i9KHQgKtf3LZwb+4orqYT9a96iQUscC4wPfyLDdWyBGRmsXCnQ4rodGrK0wJPGxPDjn0r5WaSJOhBBiV7LHoysIGvXYthWOJ8vW3mXbuIalqLYzxS4WFhRqARuVaeujwsSrkN7AfRsFj1k1G3isT2xWxk2+iCkDoF0UfF5XivZkNMcRPQW6uZCPHiGFHTOXs84TEIq6gSB/CFpO0XW2AMCVZosEh01AOuYE+Tt9OMoOhcn54Q20vl7ws7pWKzdUNoI7JVJaP70DuyeTP5uJ1sq0gY/WCOXr+swiksvJgn5oBmf1EqsuoR7xefzh2ar6fLEPoKRrvaddZwB10R1Nhp7hUbKdL/uSjyj2LructTuDEKT+kJSAFZqL0i34e8ZkpEaZO2vaIzs6bJUqUp0Bgb71SyVmLP0nsl1D0A/7jPRmLgfuh2gHBRN6Nh7QT2wio8uUzVZ/HTDWAPPwQaFYq7EswC1FO3OcDEmWowSQYHo0n9lE3So6Opt0LjwTYwraHnDxr225rs0a5346FR05q835fL3IrFVGmYH6NfjnuQ2gbEYLyOcXDOihaseNoVUewdDU8n9hfPE4QwRHNO8Jsmk/Kg2LRbgAN5NYHS3saPHG/T7EDtwP3sAWBLKmqQfLk0gQMJFl7IfCsWnTzwjrH7p6HJUGy+jGrr9Ty0QpXDjUhzmoTqKXVAQ4HkWrhRnbmmQuvO8dm20yn8la6206Ly2otjX7vl2CACl+ego/U7dp57RJci67UksxTffPPkATIl58WvXBJY1IuU/RP8eabXLOJq6/C5xQiWpIFRyV9hm6RUJEPnSR/wuhDqES+ZrZb2ES4CT3c3xXGSI8cXGUGR4YN5c7E+c99AZz6pQvU9DgsYJiiJU04TW8HGbS92GiEJEUAtgjAXt5N3OL+jnTwjUr09AkqztNKlJ4DHTpUaxpShMW3cBU4WWP5NGvcdgclHoa0x35h46LgX+7X9hi+x9Klw8K8WvG33Xzze12Kzk9TrWAPzGCYDEG5UVUQcc3r9ZYvf9hOG4rRNiZXQsS1g9oVyAsVA6tCBe/aJtxkoB/2QDndMjg5DiYxbwkZemnJUePOKz2TQgzvxb4c/VRouAFQjZz2jJ9NShUHbQI7JbumBiyTFKJGh9+gq41P2aibT1Z2fTtGZL1z0pzIPXkqdZFUQhf2PI/Fic8kIytt/BcFcFB2DfqoD9Q634YkCuVUXta+EUj1hJxkXtSZnrumsrzBQ9jX7h+UXcgGOY7kZA0ED4gG80KF+xCRJ9xvjSCoBfvZWMSylo1qWOQWJCyw+TBLYFVoWA7QiJbp84sL4Lk7Mje+RKJQpt5CYiFmFVr0RbJqqevLbyMibUmurd2qzL79oYMP++2UeK0xQO6TQxOhM00qFtErqDcBILEnH7rYxqz05hMPRusVn+VKwWfuHVeqKHw2RRTKfjMoItQy7pADFWNPysIFicYtK0QFVn5Clpv6cEW8AskQHx8RjHW2XwIs1ZtWcxdeGMMOgzPiioSro/BpCdYlCOl1+fLg28tfK+aEDK939Y/AqDJqfZ+bsxlURIdd8O5NMhnjclaUOPKKzMzGuZEpeeRjoNvdtgTwejWy0gJpoISe7pQ0KULogNYgA8iIVc5fnfj1FT4GiSoKE8yZ+YDdr4csXHnN/YH1/YBHG6DFVI7wuY8VhH0EZtCePkjA4oAliqNbLrjmhtcA6SIUjKCXHHiZzD7+ChA0q6WgYYnLVilLtX1QjMrSyL4pY+R8KQ6m0Wa0dn40GIPYalef76xreNvFumMjEspsdAypkP2679AMkyAfVwtk6SZ2Ja0QpnMERQPBhnpBCsrxLeSOosyQhdovZItx0iMoWpYLKYQZZ6BGNzDk5IMyURCgwgeCsi3+rgvJ9+OfQgIPxHBgMF2RGfr1fY1HmKIhx+bazQNVB8O3w1TpWN44wBpBjum49KXqFy1hgm2pMupvrznXEgPTXXaqVnklTr8YCoBaEqbD7PbO6upPTH816ze1Kfj+Q+bInFNt5JaI9pbOrIRaOO2hW7+q1Wx5C/qgX/jruwFBTQHvvdLPKoNOncjXFmq7ZVTIkB8c3QDF7kv76mHG57wJr2YoXNAcO9c2yhnEl64Xh3LleWFpHbtSNWhQs05doB0MxA7FF147Qi7xRJr4uPFYJzwWLhun43L9cjld/tDZhgQ1u1A+K3D4tjP4DzLgNpuPG676eeSYiwldCazdRTFByvkMcW6yobeNTW/9n9lcR3X8L4KbRDVnOZ0MW+m25ksVVKhtDwX2qABU+Eh90/jbkU+l3/DiMa6dfHIiXT8d0Qy99VEAIwHM/h/tvrmZBHlezIi+BvBsEz+p4DYcRN+WtDLmnDM57d7hnUDPp0sus/nSxNo6LwBTmhfRibh1N0d25UmS95INrtWJrPAq7WNBsFb7INdV7EMSD+r6FjGuI03pZ8eNgcxiA5079ry7nxZgHzDy3dBlgcQOjayHdWe2EOpuB7eGBaGPK2GWeBfhJ1VAZst0MCBFJo92Ln7K+2SgqQRV8f54bLFbdscbHFfIW8IXbIFS3RQKfDUAZpW8+lHSRGUzOJTx8mcBLm3OYGYmwTi6DkmZXY/7jo79BSKh/G4iZbQJ17Ai4/ke/iddl38mTtZ8r56OOwocVgDPnFYb46qaxM3O8X9Uz6UVksX21uUHT6zOGyUpv51tNUijgO3RmW7ijYjrUtINN+8xcw9K1k9mOGTLvkHs9Q0cuUvcscAgNaavl3OCVFf7lomAIgMWEzj7COvK1IGJEP/XRlUCFd8h5Sp9hgE0vqSYlKSmhc7TAsiQ2szB8E5pz82haEtunjYd3ACIQyfg3OI/5wEb67Kybdf6WoX8/QUkS4BU6+yc5ladtIf3efiNb6rZjop/vwMxSn45XKxMHYGu564nw9b7zB21g2X4yJYGCBt3g8e+LaWBaZPmYCXgn1FstflhJJsgu+7Xi3j5YwYB7i1yFge5iZYaNb14UBZl5zMWTUtNcCZId1PC0yWiuGwe5AClyFtyje+gv4aMxt/B9u2lSy9++4jfS88E8sjJJLziGtQKU3Qlx6EGbbr6N5n+IbMmSm7698jioeiH2v6ep03DcrlROxlK68vgxqAXNVqZ9cabz5GGfQ8t0JznjHqq+ShMqL5u5tSRlUlaV0w8huQNGisH+NKMiBjbI251tAMQZDszrFc30bA/x3GUyD7/PGUjR0dGwDZei9eoSWIOgp0VMnZMc4xDApVHKG7ajkJCRkZpxNwEr0W3g+8V17sKe+fkUf12qtVL0vtQ3XElPua9EYQts7Sj4f2pjaSRt9uPRt8+dozs/iys8kIks1VTFV2JVtiiVwbLfpTPyWdV4dMfPVuLlDi2xVJtTknxT8+Gv2lA23EZBzjwAmrffTMeUxknGE6Xf6WNNx+UXCmmUqvNQIbE2P2ku1hs9Qx1gxvSRst+5ZM2NQOftIkIGg6j3rVCZCCnvBXqsqJTOqaqbiKVrHwBpOrbv2MmACgncuuLj27bGbjSamNpDIUDqWInv8kcDCsFtnt4WKey23js6CR8KsQTeHJotpIAWSfKfpeUWroEPT0dQ2h54o+ry1dQYJ9I0yDnpEX9dRqWSnM0DuMMVCwAZcdtP/GvV0KPUimLPYNUaS9xqziirMhWmuAWEl5fw3w7HssMec8zWAcydbu/qiL3xtdQCBKK1dPOEYqVDfzlNJjLU25tHjxd/yC5k7Goyhs6MgeMBg23Quu2RwDlr5441Vj0gaCbofZd96ac2BJ4Nue9z2mgytuYM5nwv7LxFjaLyNn9JiU45LlYxuLROKUzoNMafy08Cm1sBGSEnUcD8VUYf763muVZf5LN+uCccCDhRFzSbDjXXjIAv80F6JFXeSAs2nV93pyOWe9utAjGSjyC848C9fgiKOSteHJCEzCij7zSZEsawuCGQ+/OjGeJEQwz1f33QcguqV3mgofao/vJeg6uslj3G8i9VbSq/rheyyG06H8+exwnV/32wmp1hm/HZ+zu8ylMI89WdYbDPLI5TFxMssU2zJS3Bb60vgaXNCQhW8pn8aXNQL9c5/d+DoUGqt3L1Ogkc52hV6ENZNGgsFHu3nxKHo+QGlHqrVp/sBgpjUaE9OWgP2tojEFDQJk09o5ervZZIrqPTcuUUb7nCZBTXeR9aSTM1r+JFB9mtosOQwu6jSq/n/SKtlHdHYGDarEyofU17FE6e5yQfdSJ+QZiJ2UjkZX9ApOKqnkk78zDk4/opMLYdLkzVYXuVREn0WRwqj/4VTxyLqNKCZcBXaHWX62mGVKMt0G847qohJOlntQSbSIkXkBldvSVp9Y6mh70s51gTGy/WBXOHH/jqD2exO5cFot4SCMt9jAGy5m8Evn9vRa/uWx91PpBsAJQ28qmXhdbMWvDDNbHTrD0wFUwZprMPtY3ly/JcQlOkjKll7AevtuELrwAJE3Xekms+ta3Mo0Ls7/tI399IsGZpWRT57pfPovIBBLc4v1x7FbbM6S48XUohZXUHeEKvX5mbnsgMAslpfitiUAvF1CsAA15I1+0PhO6OGMY60VJgzLfcVjIj4hmFhiuVXfsW2kgrrDu5mQZvZTQUI5Auoh7lSozn4C8gIavki98/yGW825PwCNFIh/diyoHkeOfxjozrwVmaUDSSuAmF35ql19skhMmEZ1noTIFEnrudptgZ/URkrj+ItPhGXsrqiWBqp8fKFbBW8DibVwZ9GBibBC6iYc/ig6McW0wCnPaJnNI/91SPEiLJSYua5Vw2eXNW9Y5VfbVRXP4nGhUpVMwbUX3GwCPEptZ5eAkmMB4SeBhkUDQDYsK+jLKrAkZ926GRF1xNMdIRDHL9SLg+y+TbECrd0Dh+Rt9Kek0f1spHEruki0F27rb4er+2Xv7QL3W6YKt7pWhvpOnOJHxIHXES9PlAms/9xkl0+80vT5Wp02SJmFAlISD/BX3nXWMnNRTKBQjeokud2yeD85hu8j6nMDMJrJ5SahcEhsDvNMlaNuR0zSXVnZkLnTRgn2kEJi8y1QEBGuitRSdN3DyY2ZHchkZvVg2qGQ7PBNjaxrrtys3ZuicIo5RFpsS/pKMEZD5zTeluBv9gfr4L0+HKLEml7jyMjGtbs0egQtt1NiHBvBfWoMrfoegnk57/ICArydTAduz/ywYozFjEDGY/zl0mfLzNjfxobdngOoyYWuopNHd3AzHQ1EPeNY2OtLEMiKALh4krBxrV9gWKg6oc8CCKcRJ0fe+VKiPfGUs0utlGRA5IG4opLFylMpQLSD3QPmRd9IPztsQfiKs3XgW5GcgL6Bj60ZeIN4Y7MLhHz+WukgrbewZHgSEkt5/c5rtDaZvx/dx+wYBzhym0df7mD1PpydWsRobyvN4vqEJpU/fjVCfu/mNxvB+kWmey6b27lUXZmJSPaJMi2blT+Z7co67Gffi6f+iEE4OQFWnryaanvg7vs2kwY24IPhWcvPjwA3sjPYei1Flwh0RPI7aSCL2ruwyWB9TQ9MDjWOGrqrQrNGaBhwWWxpxtNssr813G8wnCPk6S4HqRJSSWaoFNwrI3z/JrcNQI8oFgm+iE6YyLYJ4atGV0OCN8UAfFXkF7pp1QM3N9byROjwFQKh0wC68QBRGgmgtPoobrJfUSBSPJ6Vhc3zbYDcoS1dAdz1e5qoo/GSVWIkojbuwrqa9Q2hdNerWfQZQmuqh+HexS7Hxi/mjKD6YjRHxwRbUz7iPV2ChEJ7IJ9oQ9mKQLdMDlBSNn1s46kpOm+gtRYuKdSfA4Ku7Tekz6LQH4mMGl+rzPBb5WHFN/wKU4qwG7FRFA4T+lpq82WxGB1eC9n1GhQCiBOraGg9WflDBMAKZn/WkZZIAwTvLqdr7UTyF8KWZeJIoLBeehd+AhB2mcNYXRUrUpeKpmuy5ne/o4eXQ981Ck3CZjzWVwLnayj5Wr6dTyzfVLLFU3JyQErvyIbBq/lvY2nmL0/+Hj5gs6hlgIUXCkNRrOGiWbcDtsHHBhjTgD1e81oWdZqJie2HHmy8xZ6WbGy2j2EfdRSWlAr/hdupgrxx6k6YGPcTxB7dOHffC7jtEjH9kO0nvN87eRCEjXiQCWuNV3zyRb4QvvP6uyy3K/jsfxl5Z+ToKc87UDk4zLZlBdjApp63Ju6DiUfh+OejjDXZegOrS9z35VZjawU5cFxVmfEaFgs7l5WGeA9MShY2fxhkLMmZcpR4KFpRmjt41G1izDbykjLx1Sie4iY4fHk8+5WC5dCRBmhgUdAE+2j4pnJvuIZk5LL4K9cW6puvtbTU7lHpx8oO3W+4vW5Bqh/u1LVqvbazkPHGqVE8WsfO4guKIt6FJklI3fSL+eh5hHaWd6fso/BKLjKIiNHzWWjBe8IsPEVKCIvG2aSq/kQvp7MAmhxd5sVVcMz6lT5XJLrm9S12u1B+rZ4MMMmJvzPwj4PRBhpcoHgW3VT8x2gLV8rMyWOCXqcWqQTRYlxecqgB/vWI78W4TaYPPjkt8GU8zwmRkTmk3S5jEleplmF/QLPMGYoT6RQKYh6Qjn5FMVLH5C9AKvPmZCWZ8uVUHkPxhQQFT78vCreQZdjvRykSmFlbfavJQ7X+69v2Z8s4uhsBqUg4aMS7KI01FSIy7Sxuy4M9e35WG2D3KmNbUC6GwixnGYeHifnirvJGcUpT8k4hGjAJvltZYBWoRNi4SkR+altylXLqA8KtzAEoVUpPEfjOLZfnHnMT3llmhTOjTYoU3bEAWggs+upT0mNK5pJdxxW3Xp+CzifbVJSbE0zHWuitRGPz+sodsoq8EF/SEUK/eYYlIhA/zFO6CuYDTKZeZcuBMSOyebC+bAAseDXxw1xnHLWlIKbhjBLC9KrIizKDnon+UeOK5EdzBvZwKChE83fhGtuPZXo93N23rdh8C1IHykGqHu2shU6Bg/xyH/2Soc5KxPlt3G77Kx2Wb16ZZPHQB5thhtWDMfSpKpsv4GEBftp/QrMc1Ar31B72yFs86bzDpftZGpQIuL/bGdYOSBSZ2tjGTRpMexWOHItxvr1Do/I7BWngY3jEsMhLOlxsWin4kfF+7RyG0mod1Njz5LJJ5NkviwT+BuAsi6Kqus1/K2GruLcP3VhLjKgf+nncsmZcG4Qv1YTaWYQqDIDGoac4iIarEqi88KaMl2crK5fGzZlW36TKu49qQtP/04f5K7bjWbhZQ9OgtclazPJcATD1bddnj/8rrFE4Rs9vahpilJoyCnA/oV1I1VYiXYignC0yHc8iAMO6+EnwksJXyoh7ix4YfC470pCRR4k0xI8UwBGkDIiISjjEaAk2i89faIab9XpBbaPl/rzsz982qylTKqPHy1v+sNI/OEdG2m/bxEzKwnau6HNG1iZANSZ+llj30DF1kMiLmJlH3rltlNKBl4ISPiRiizPRoheel1Jynv100p2NfSKn99SrvR5pSku4awlghDELFVek3WI045nQedA5lpmJAxxxRHb/4RZMBbC7+/W1gCnqr5ppTesmTAcYxnYEGUPs3EoBQemSo2YNZENVxJpWUI4KSKKBKCoi+S8hIqU/ACwOtB1+vLYG4MdZy4BsWFpjAAMpPFCVz/6az4ooEL6q5l4vavCoyyiOa0jHVWUjA2xZ7xoAS+FxGjHUV6D3LNbWpFuIFxHG1yhE5AqjaG0NsgaI5sPbuBYj+rM7Wf6sq7Ya76yiMygbr154kZAMdSbmtafYlNeyp3+B3RD/TPH1orBTNv5w7NBvUhcfQzxO8o+dqVrrWyP0fgL3LgBKYRU1CI+52Hag/Qh6yg3q5ihYLSqS751q2xpxEIr+FB/aiWSIM5Mhkjpa43IEt/JruY+E0uiN7WztqqcLTXr2D6AqcXbR2gSvnP2nguP/agwII+hHoBdoX9Se5NaWrNFS3lY+jAgc+6IImF4OfI4RT718z3CtI5wUW8OZlwiHFhFqWss0ObP5XAVUHSnMKX8WPnBKcavT8+jBxv37M4YsjoT5tetT6g1w0e0Bb/eqIC8dJKWlMeBYVEcN+shs82xMj6GCAbBgoLFaejkp9bqtAP3oHnYi2wGpvBF+vz0MCEkIwwjljz+UmYjnes41SRm8freaMHgn9cHYwx4l3awoOD/BkhLsymBAJ2XOyfKHySPVZONHttkLjvHgt7PAdMQFUUhsvPJowwpYTSrKPf9KD1Cy4Q82qCVuLn/0yoIzAftQhkwnQFrVnIKJouVtgaOEoK8lSCCTdYefwANn49gUezJzTMdcK+FEbH3QVlxWtO/pS48bBI1qsqxbxek5a7+f+q8ncdqynK96YSYNhtULY54cAEEgxqBA5tJ95JZ3+JhI2t3l+rqFcmS3JgTlIfnCZ0sv+URjn8g6i+MQbKHrphPlznKPCKKjF1kV1zjF94jiPhxMqXEpcwzzr/IHO+oknF/B8eG1lkxWXwi9FvYWsQBsf1tTe9tX/8MH3cYNf0Fq2iUHDTecPDv6SKtb+cecw+uwnatGu+MDD3rNEndzRlUzwwd96Bhdb/iNWEqX21hnjPr9SqoCfEHRIJ5d1U9JRs9YaOZ/E+qdsAUyXQ6gYuZPSOpMcHmY74wlxGeoz54BFy0zM24jQrkH1IA8npVcxSF1NrKAo0GCutO+rf7/3cr6HuvTFJuPw29yetEGpZG8y/eHLNB/dyXKr24EO8eXs7xd2PB72blhVlF0kQXd7sFwKFXdtC5UdBxJ/+fcZrt2klgBhjWrc4BYs0V2FwJbNHqFiibNaUU5IciBsvERP6pK6mChSHVHGVelnUlUZF6PmHSbkrp96DDXiP+Ry7CaBQZU7R0m4J/DOczdumzzVoi5ff5Lr3WLbsvB9m08/MAW+e5wdIKChKbVv+kIw5h3st/Lf1PEtd5XppYH1sNzrvM4w7SGVUpWezhCpWV1gYOvSpLXToD7AO9i6MdRnIjAJtxhBV3XL94ugRqWGDhb2ciQyYtQqpRcAb8JaXW8f/638/Cr30xNKQhK0QMynEyhTD8DOk1EqOg2uh77kSsQJ0skM852B8BweXiCHIKKQ3Qtnn9c2k7qrY4GVryuVhjzJ+IVwvXjTIeARnzPkPSCHrAUFiruUohSYmheXZYujnI/GNArgQtU2BSo95XPj7xMCkAXFSHFnoYWJRCD4BCxaTfL231upZkvKfSrGZxNSfFocVOx8NWNcQ9vS5RCkpgEHXLf5/pITnNPCGAEAwellI1zV9XPqzJggUx0FXAeRRBvpmDBNsdru//+KFRD7VunaTlLtrhPeBEAoKbW44yQuIZdpwCY/JV8n3VRKagVbt2rGDni6Us9rr4L8ZpX/6T6qu4tV2/1qEvlhhNqwe3XeuE+mA9beKDQJURS/G987bIEZn/m3518HjVRwPlCmJVbyMJ2Js7RAImMbkwnRFMN6aufx8es1T2p/NH16GulpzdaZdN8WUOotkBU0xZUHZh7zJMr8yxaepOwTmt4HElp2u+b2XJ78t2YezU6Iy3nzi+uLEZT0YD0VvuOg1Zow/TzJ07A1p3PwS3PbufxAyN8Ou4Y9iTSgQDtmdRYXvJQA9dyiqnrs/QdExvYf33t2qdYywbGRh2YL2dMqpjE1+1nR/f4hN+ADKBNzW8nqYM5HDRtfBpzOzfDFZMq6rc2L9baa6n+3k0vRbUh1sUhv2DMKJN081c1vj+HLfOhTIld5wGI70AXDz9OSYJQKxEvBkLYZ8xuNiN06HrKbz6yDrQg8RdUQUGyJGwWfsKJ15puo0sbhyR7bNywWW2APErZnpnu2xfRUSD7rONYJLFdEtIDk7dSsroNF3JyIrPbuTqLGsyvZDAT2df8N2m0dzITxsqbO1e2dw835BjZwDn/a1lyZgcGIqd56e4bWP7oMGn222TtAELJ5zTju6AWb73FEhiiwH9JDzyJiTebuGML95nZpte3OVZ9eJesfiGCNj5scTv4MtPVgIX0VylD4AL9d8Idf91garRsMAqf1eZPmjmVTxUwiOVcgzVD2dU6nlsjCaL1bxmc4hhKFvKRu4t0w2pCga+nMocoucTKBWSuTQN1zdZumoEzAoEApab6Re6n7DQu9vlI5xPY/+5qqfmbpiHWc8lzfaRsi9rXMF3SRgqJ9T1yz7R62Np2jtqgVaHkbjsrjc8ubf/3w97pOUImddDttHskvndB3HU9LSMjq63GQyKEjE30LPzJzXsM/M98nehyTBLz4NceAzShnP1RZta/DLwInLlUB/kYIekKtvjT/o0m6U7m7wyWMihj2cmc3aXbmYek+8FHH2H1bgNEVRTUXK/RYFblyETAH0zJEX0spRoapBK/ogcCBUUfktZWjj3B+1K+L+W7oyZDre95PdrRFS5w6coUupdIZ5aAkMmP9L9UJCCfozppLn7g8jp8W9+URueXcwscjIOo1tY2mVyQK5VnWA9v2xHTrhBEsDf3/DeS49qxYi9agz+D3vEVU+yqgg2Cm6xhtHn/DKdN5E/17QNRFbR/HOg+hUAxIdg10wYEuuisevpab8H4LN1ZNb37TRcTjcsD922h7B1WJpFFrpo9AXaPhchnCLgDrhZXRN8I9TyPytardXoVBtM3JUHLkh1JiqA0cYzV0Vmcy1lJBseDP5zw3zNyhV4eU/d6Yk0bxhZovW9ZVhZZwHxwhzEz4JA/GLtXhdIh6R9TduwtBfoj1WWgZ+nCgH72cYwoYL+85yPtvJHrQKxHKMKbLY+xIwSFFr8gyHutqZzrDaGu6DasRpDE8UbnRoR7Axe3yaWQ+5Gk1LAdhyzA+dSIk6PLeilaytulodC9uJewaoqHZJbQ701ISYUwzqoqvb4T3yZ9ja2sRGkgQOVU8m+TekXPB2t0P7VH/5cE4r8guRNE5xHpUxpHFenOdlzKSzRyOGkrJVLjVRfRSTcFkz6k0KHv1AHrsdXO5VWz21f642ILLEtTsWf77CfT2JOecQU/aD/JXA70RNOtxjZUFzIDv3UQffvojALvT3EZ7bqoRRmI8tp0J757knTdoZOgavwMUfHfOjFnSuhd9RejreCxwjO7bFGl38dOAapPwxaPcW0Gfi4jVQxtArjbteYI02RG2TOR87NCMm+jRf1d12m/Yx+s5nJ9UOTJdna1lhzb4+4Na0X0uyJyq49kBgjjMIVATBbIIXwhCKGjQyBWUmi1HU9aSLwxhl219KEFJnnE0F3qpDNUpD4ebNupxsWHONRrC3VpBXsa89Lo/ahy6jmW4qX4V3eI3q2cE3pQz43dwPUDWoKBCSXtZqMYw2zlGVrezDyARX0AUphB9BhSRcsQ7GIcVGIHXkfTJesBePllH3EqJCcKNZQDwoWTWUNtrfP9xnZLQ3G3sQbFUrZdJX/FW8h5x0wYLLVptDQcSJPzVZLlPayCtx8dUOAY0EJSUX8RqSziOSfFwIVvZcgHhj+ZtwAKj+Ghk2uBmvTMU1/G35TSTFTHpYQlKolCt9IkwPyTpQAiTFK+L/eK5ueLmgHfLfvvukwvixHWGMTYM3BnMokfqmYm5Jpbl9yzi8bfQ5wjSkekY4nd1BWosghcstmQzgTVlMOJ6Oa+gcsGWPxZlwPFKH1JLUiZRl/X8j3eh42AasRwD9d2al2u70fVGbL851bQhHHMl50MPgMxWawqZP85muQ6/c7z9XjjGZkTTTzPX9OAKGBsxI7j21vtBuEMkUo0sI9U0F5uQu1oAlb5c81WMRpZ668Va5TTMgamm2vAC+rmMm0J66Zi2shFlC7nMnnGQmNiOvglbmlr1tS2Z9U+701g6WaUTUXXMa/eUJHarUJeWiUK2W0aa9nE95HeIoRtjlCbVIwHRc4wwC5CLQFndDwKYUd9P+O662wgJlFZpoWpE7Zz9lNEYVuwgAhN3o8t+BdCoEWXvTlrEGXillQtZ7RChJnz59h3MyKD28wmmR3hAPYFNhhUpMTcpqnu+DolZ1ehSzLhL3JeOghpE10GJBSvWdJjP2oeu85BKEHr8qsBykO4TZmSNnl6mYkLaATscBWCicMlqnzcBMGV18DpQHgyzCpX/AofjloAjIOhJIfoTYGBQnUR3r8m3Mt0b55XQ0UYVfwF37Hf/TM+4sseAZTCEtPItctstGdQBoifAE6II/k8O6+Ep1yiLFcQ+SGh6gF/51k9GgTOEedt6HoN8G/1a2mlZGd7vznsOE28PCiYMDbgaauxMYnzJ+XLRg7r00ADLIx6r6FxSgVitTKMkowILcQnBCYlXagZaFJykbQjgWQG6CybQNuPi6kG2GBIBzgmHF4lfwkkYYSBs9MynvRElflTx1D1XBCjNsdf8ieYprlRqwfhZ3LPXZGBNo983YQmyEe21nZYItY1c3fiG5AQk+ktg077sPEeSn5T3xZlrOQJTgurkdfApAktFm7soBPnBHNG2wtMZu0rSQO44aDybCjS+lrLHynTqjiBx+93jknpWnFkyVJwl4OWIMxtXJAklA+VsycPudfFiweR/wg0X9Ars6rHED2kiPf9MuZq7lXgM9+PMrghZIVIPq15AFl/wmKkxa12KVasFmmyUyh5Jt4dziCpYmj7ib1AWgA0a2ZfpQiV+deYy/CwgM3yNsKiIF2qWIkZTxPeZ3+aRi8TP/GAj/FFCnwUky92g+6BeAgXks7IKjE23KXojEdVasSumzIPAqRjr8b0Kkx3aXIet1bDVFoaLK2ObKP0U8mKRV/iP2LwUujIokSxL7BojUWdfSei7g0muTxqUj9e78nLFLkWLFjYcS8irpiYsn9bEdzoUrJxFQizii8nL9r/YGGwb+JdsBkKkmUM4b+CpOnZk2TMgCIGSlZ2CRai84kfFYfa5aG/rQAvV+QCjpHFtpQERvopJfFFquiQpzyM6JA3YqNJ5JijRB1bH4626DLA5/peQIErS57YyByNzNcO4NUMNO3jzlOBYA+g2SFMOM8pqxoZlPhMNZdAfaCbcKHPEQIGp7MkhX5hs0IoNEoTaN8UKUJku0VCldIOM0lqGHPR5z792WJNDzD55Wr4xJBc0iq052WBc5jkB0uPiVaj6AybTYLLg7UgfTtigXJ61t1Q1GAt3Amh+UXW83qsSK1M6NcCuqwgKUbqWlYbPLojseAjKHhILPiVUn8i090KVwlmG/JwOQ136TRXOjQDh1E9ZTcJgSMoJd/P28EywYiNInYz3VLnKjqdwRnW37fReNpORBxSV1vrXf0CGmjWsnvIlUiizs03aq/p6BKjMXzBfwIMv0FE73lk+qxnAEuqG6JdA9l6Xvy4dfnKiesBW2o8Hshjh+tB8uoYdtecLI7L64EvYaD26QFf0ZeeW/Bj84iRlOT3NR7CCZBM86+LpZ2yGEH40qNt9KhKcjrpkgkNdKLEFf+hc54BWQYQ8dhdEcc9IQ/6RusJfkCy5PvfK2hga7Ui/FNrNB1NwXKD+8/LtdqoMiP8mCvxVnyGjX9675gGB4cBfzRSWbLPuHzmB1G+nbtInGTnYKZwSPeL7LWVoa+Kb9DexUMZoV87bklVN4gNCbmAz0KiF+U3OMi86esUaI4wkgRY/TnolNbCceEfkOPflmx5Pm0ieoN6h5xraVIiZWfLVvEtnl7HvoD0+GudCxaBKR+tf+eEoVB7yUy3q4BhU2sbxWPNUEkXxbXzTMhMeGzGls/OtZ0yFr8Uoicb/ffzc4M+j858CMp08N7FuSBPbNx2N970R7zMfjRFPFZvL783qi2mz8iJv4Ocwkj4oc4UFPEkTpo+EUpFXJa5dA7azY2kjRSFN3r1GNsvK1W1n7Zs91cfMItanWrVA6cDeey7BRCbuNLB6iWIvPsNmSJAHa1Medn53XBTQh0OqdgB68/zNx8z9HiogSvKfD13vk/4n46UVhKkMwK4nrX9QXlxBYwrLbp2z3V3SqIhA4eJtyBA1P0/afgJt9I7a8cIm9t3FxhEQoq80YyZ+zKKAGmV5AinJLbP7XPvwMCMJZcVOb5nMWsdwFAY6yokYmDHFyrj6SfUc5YD2GGRKq081+TGMCHu8+qhce8yIlmPgjWN/yEI+PLzXYWNxP7ucW8dmj+pEpNzm0AA8wbij6N+TBieFl5ivjRrcNUwdLNXBDToA6GUyifa/re26wv55uNcp40TymItkB3YIAz7th6+KW713thBqEDb+cw+dLiNWDia4yWTbzG3FApIc+dojnXoC3Rd2Ebxty81cbQsY4KgDOBE6MQWLuR8On1mNPkkbcMugE622b7/Yj1p0Iw8WgsuX14s5Od3AbfDRPa01O3wdW1TRC5SFCcNdV7ls8+NEq/9F8fcRL8A0TIzJLkjMoMShyhmT7OLenyY/+8dBffvIz7u3GMGXG6/9+3P+VK+sficUUU9q42z6T0qdYbQXV4O366b5bRCeLYRCO4nvqkJpQsZxathUmaP+kXGhRlM+EFM3zBFLjsMwdQLrTIATude9jJNUhQtn+KLck94Z392qfQVg5YfQrFP/WUuyQtK5VZXLEtFy5pkybe475tYTDNLGwgInqN64xdHFzAt+ThuYSqH/pQLUnmFj+Iu6YSzJuU+I5fXdzlf9G6PbgRBLS1Z04R5rWOb6V9b/iLz1fsTGm0DYdOm0sQNkYAoz66vE8kcBw4TGlStgg7+s9grbC5YBt0vRKNn62mPjYFT9D4yK472Bafwh/Kh5aaL8gpPMFP+Bsvz7GFgRMLe6Csx5mG+mzj4Get+lJN8/QwDIi42gN3aPhlNXimdcC8300c1injvy9YeKTJ8NWAqOS2KCOSVh44UdF1IgBlshoHP7JIt22jJes/NX7KH2iAhYvienpHR7lb+sl4B2jamGnxtCd3ncCit51Tm/GdJYZSla2VR4ki6YYYAzUu2cYzBLhmuKGuIK06nZHePbxOOuTahLQPchfeAx2gUJjopSvPwrK55IJSpYNsB362rl53vmJ8aNhOKnGOkGILTIknSTttVxB7Zpei1J2r9/ety+H0c9CjtZpGbGIoWuR6LK+FV8b/6TQmwf1+6SGdn6XwI7NOI7oqIf+m0fCJk6vnD0KBCzdhAuLQOqFonfT5OZv5LIbL5+xtF43BiqV201Pkz4/TDQcQgdcYFCJqKTfroHHF+tdK7kQ/eEuSyNTm7zRSaECiSHJc/HpAuWB4uwv2jMx+PgC3K3Z0ehvmPMT6r7PvRuZ7GEB5LNbK69mRVLa+KkoPBvEfy9cxu8ARiSiYAPmOlpXwpASUGGYSl1H2uWgQ1Ay+TthmCxYF3vbV5M7gnWTVREBT8MlujrQGWV8b2w6Y8ctZINESmc6CD5aCmdQWH67t2cUl5iakgMu9jmRcWZV1MiEODjEvIz/CwWQGAyCE7NU3BKaeAXtRqMmNaSv94r1Elqa67zgucJP/1oZ6lPMYaFBLiha2YLZexzKooOU+6e/XLDGSfeSOmOZME0LmHBW2L5FJ+fwaBhVxU5D9HkUM2+mDRUEmGsDyOkBwHFoMAeK5+aZ35y3mYmBvzq1kPAk0Lps+DTNXkBWM3kFWu5Cw7UZ74doU7mIxM4Zcg5Yu9g2bUY5jyFsUGtwlc8+rM5ZUw++s1XtkRFoTZWnU+yModz4bL8iFBsub6SsrpLfSJgwnA0eX02Xz3RgXaHtVmxFa2qtfKN4Dq6LDSgvseDPGLc58pRHRccNneCyj3zvYIJ4ycSfy7DlyCog4MvnvMrLJirYcs1Ohl/E7Oi4VCEf4qfwgLiwSTXckZJ04O9Oy1WrqdIVHPJSv/u4FOxpNdkOvuQ/pFxoJkL8eWJ7fNkMxERhKsaM/IgdO9NOtBa1ElgRUzkYPwDX3iSLEFYp4Vv0/T0N1rlx6nkwOwS/kj5aEXbjYISWHCrwwASfWxDfOFutEKQ1zX/Iym/kt7Sl/LRdN9qwfoKjxVlaqtzdoXocdpf1GJbv8jf2szZMi0+ZvwN1aZjIteIV64cDk6OuZCOBANVNroz41Ibz7etlrh1KZLoJ/RwdQtJYPMlDZtPoj6DERomtotiKcq2Em5d7irPZ6QfOOMWm/mWXSU9JuUVL1nDvOYC0fYa6uv3jVYr3CPzcVHQiXxRzBP655tXPq8VATuDGil7Au0r41/2lis8AiuOhjCn5xFUMQKi+9ikZyQQx91gaX+WGt9qZE3/BWMsxmW4gAoXXLV/tIJauoPuOPmEVzNmHUScE6go99q3CbdHKxY0ljNa0AclekS3os489DrVmDg9U8WoH28cmtkRcY5pEvCdGwsHSx8vaH89El1SQBHloU9D//9gfKCu1V/XYSrheLPISf5L/0Udxut9zf0t6nfK36DPlvfg9EYjkTNtR8H5vwZxJfyT2iuy7FCcLgXs+UL5IBgbccsMYQ6n8OLNL5W5lWrQn12zALHwayc/pknjLJ70NDAps6ulATROZMcJZsy650NzWRNGwPWu/K4/gOPl5oNTvFjbIWNaT/h9i7202U8P0ieLifnNUgo89b3y06yjOsOwtHvde4lVHze4xXEYcY2f7COsAIW/bX7AiTWzOJiDwdf22h9c2U0P5EOGszNdNPVYC6BHLzE+V43Jy0MR4b+S2bICwIz8/KcrU0JQ8bzxnhBDjpp/VeFgyk9WW8ZQ8a96pX7zFU1pcnNwZ+eYnEK09TaR18rSpONGU4dtG/KUocYv2oILG3u1y7bcLqwP3kLCPiFN2yzw3DMSQZSw6uuE7ZW1HTQkAbLs7vZC/Z8/8o8err4i/cmqPtFSUit/I2a25VfFJZaXQeh+gOa+4+KFGY9QmzEqqK5viDVwXWzaGwO4aMfsky1mtnCVqxrydsblwtapTNd+2utDgk+4gw00wyQPeOZtOsavFSzprsN9c/oSSCiHWcee2XJVcYyrpwuhZ7Bop06Dz8Bl0acjD8v7LG73byQCz/0VKI8efkV5mdJpQwUet21BSnaJJcLMd8QdfEyrON42c+TwrFpEDMOzDmORMOKilrnOzORcsYCHur6lC+D2ueb1fRo44KWkXOaEJC1c4gATIqYuB5EaQKSQV0FfUIaiDG7GDNFGoujT/n67FKYKgZik8GB+TjFC6pUWhJnKMyz7KLPqz81Bdz+AlqJN5soq9QBIarK/2do+u1FCGlx5qHT33q3hBvDd7dfligYrXXyj5cV7S6a0cbThcF8nXRHo0KshJMF93+vFmW+yZVCMDN1xJg6Zup4eGq6UakZKbbsbKM1uPQ/GYDnkYkdZC7FUjSqoyiatsn0LKX2lzbYaElqj5rt1r9My5bnOowkcm1lVZhoSQQekqvjgXMLeRfnXb/DBY3blOknnVPod9DtQl8MOPH+N3sRaE3EfeTEdOCuVuMf5e9RPzOECW/K+3g6QaV6yt5cO0Kfzm2jcS2wwY9r1VU1Mgjso9RREODza40PbFTXkxOKnZ54XLnka7zI+czHL0DX11r/ihEWYVDyOy27M3IlgVTa+RKW96a74k0mCbZS28ByeUh0cL7MDzx0lmDZ+9QBgDaeUaOW0y0Qu631zsGbVAN5k9fOxTXAYSPVr3eC/BgU7rQu0l/cMrHxzQmAFFOJIgkHmKx7ZE/VIi6i6fdIZaCu2JMMmkygxW3dApkixUVppAa1+KSTgiVNTQw7RMhGmvvodC6uFrYkv1bEFcZJPq2NFJinlv1qDSvLEMdAKCbWubYLrbsWLu6Y9LonO6w3a/6RMWjoLITMJAWe6zmkvBrXB0Mdg1ZWZXpecwq93b17Kcn7k3g9fr53E4uClCT2/6TFDQrz+MieSLanTsVbrbde8Zs0oiUF8NjfWg15B4Z8hUyQhwjMOeQxVYiSP2R3YL8wWyyzqcUluUMp9GyDQE6XUT5AbKWX7qAuaOmPZ4qZsovA26MaBqnBoA+XyBHd5A7oT4pj74EW3h6q9UFlJtZ0W1ufJg3Py26+AP9Q7AF781R5VLcpnGXBtuv28fPS8PpWggOjrlRo4L83Jfz63ngcR6V2dbDI+N0OMqQXlvmT7STHFC/zU1T5p6kfPmzD17YSyzmblb6sPB/fiGZw5S+yvAeqilXJHmCGNIcnje59zeq7RLmmVVJGPR9o6HFRT91dX04/ST8bbtszt/dkl0aOrcM+KWWPTEAR20N2nStiEnZR/ljEba3Nb6UYr51uzgk/bpxyvI1Jh8go7g9nGEckIgEOkH1O835Tf8hqMR5qKxP/EKBUPEYRejgVRWYuVvTNuqaAsppimHgMCdU57k9O/B7qzak0w08OooGGis1gFMOgYmgnaU5Y3DaTijRftUo/FokIy1XtO1HLIwOCOS8+2ALEnnyQktnnioFPWI2ou2gIXiuri88PoCNWjzSBJlULSM/eifTwaO4TJ+6aUGYAXMHgP8lfIhcXMlu/65R/wfANtiWEVWHVcjkbQQ28xFc15rLkXWcA1u/T+TKdYKaWaa9cu6ZRMwdW0jpHEFqS9RhCXWP14I3X0bL68zQcV0MODLZ8rpgo6rYurjbEGbQN4HxShDMXhQ6bsXkNEq7KAQIt7YGefBP7hjIRpZTzwvfaHBO6sqVcGVzFeeFix6/iPiO9eG60Rs0v5C9QU6/BWvGUn21/A8UhqlBwZRIRByz2vY88dEdYaRS/q3/sL6x77jbhk2bySmwPv5JAs69OMoNKRSGESUNK46q48zoJav/9BkdFx8ewCw1Y659WU+EJvzhcXDaIMUbEjbFWZZn/rGJOesPY7YOcQtvLKVyIblTQWIPIbwVg/V5o62FSJGMO6Jo5ffq5Fnn2A5+ahbng5dISw24ZruENcSFqk9brIrgq1xVmUia1BI6jeC9fiamnd0VHA4BJwTPYARASTwN3Gs/nah+LKsYiZZpDXW6L6UWUEuFtJuys/S83KL0OojZH8MWZECVFmG1yluBwnbDwzYIXiti+DsUxVBhEo2SQlkrBwZFN+1Men7V9wVLnKmXOtIUG1tWSYXqFNL5Vm/OleObJf5nLhfBzxkHUsK4C51mBb5u4rXdCIevCgGXQNOMeJIuhaQWahNE6FdTnNvrxbhQAgCBjRYjHzPXx8PF2rHBtTQSJvr99CgxQwhFRHXslREU4cTplTAEFL+dHCQ8IlEwGYKDPCom80BM/+zFHZvsdXcnuh4pD+qWqwdiFZ622K5kDoAUtP4Nko7FAOoF86/VoYEXmQa1PCe3UjDJcar2bNZrqbvtF8jiq5Hj+illcnn1yyWAYDHU831Dk8j6LX11aVk1h+KB0opPw97M7PSIAxyi545Yfk0p0YzsSDGoGQv8vm/pCrEFYmC5eaoFZ+mTJQkU01HWUcCDyEgZ+Js4PMj6iD4ZeEX7u54LORGzrSA5qUts02ul307o86OPkJBwfa5QvSajPriNUSRvK5U5RuqKw/6LLEselaNx2TU4wt+Qs/uknLpAh5yKZCbJ/VeWbP69bbpIUsH81K4BezC0BGaoEq5p9tzLIJ16uqdy2+5Ku4wa2/XEuD2evq/WCdnEFbelmEAPHoD3sXP0OOzAGfjEILXC3Ac6lvunayDVuhkTGc0KOqhKhLtNFSy1ls4boSy2Mj6y0+4chHop3AmX8uxhDOEDpkDH1Cc9XW05jEJ1EOel8ZXm1wWjAsCOtSbyf9tmI2GavmbOeBMpQ2kx5PEwS7vAFpxvZHGjJww1WIz7Qqn7zpP6N0L4iiheS4j6b/ANjxrk291TymezpdeIooR7TIdePt6rMtynZz+dUzimUUHr8JFqjB7/jkGC8UTL2417Hz5xcWnlIW7o3YcTgtC4LWQPrDGOh593mmo3h8hkPyvtvWy+UYAy942eFnufN81osjhNhYy2cjq7m5V4jihFbh81pRVaZJ86N9MmTd/K5F8IJJOP+czbNsB09E10vZHV71Fx3SPuU2o9Li3ZlXj6Yy910aZPCdeiH8VMvog4a7hUGGFRSPfXu9U2Kc8ta7XMFEDfcKmUvY1iZSUU+SRfXbw0gpzbhYuELsv8mZCE7fkcD2uVnu5H8DnxtrsnnR7cch5sPzh7RJ2nwF3sZ4C/Y9NxlMuofTcUmUVS71B4NQ9bP+oPo7Nr3vbs3GdEEL+FqgRiRrlmq9jCMIq/qFAN17E6bdq7BMQR2kjV27pySOCs1P5I/+AB0Ic8xjnH5gJaDvikNe0l0jacZv07YC6vieDInc5LYX0QKmTM+7RCMTxJImF6HeJ2x57HNM9Bp2Z1hj0eg4CUVd0r2oySsnvf+EWDrW6JwXDfdAmXG0M8x4qBWxZH3XnebKLom/7mhEapzD4/+oK4FM0K3yAkt+Mxfx3F4IGUV17Rd1gxWzc0V2ZlDv7CyPMwIBqLuHXY7kcxGsJ2xkhBj3s/MisK+4d4CJ2eswr5d0KMkF2fGvsD6m/gRC14nXhx0d7ca0+UW/l8nTlCCh9CnEb2NLB1tvh2wvRTQh67CINXnFjINgv8afchAx+ST0b45ov4GkUXJ7Tt0hM+E8O98gfmrybUrCA/CpKQD+YvqEIaOgeEWztoG6tDz4raGqdaGi7l5y788JqoGP8hNgluKZPf0lCFQ5zNTy6eEsVQn2MY51Zt7tXbCVGlVHJs5IGxbmtNygm/S4JviGX+JiV0CzaAdS8ZL2DUe75yuzk2gUNLwe+n2RE+Q3rz8ocEJFQ5ZB44/sd7oNPOXBOrnb/2nefpEGx5y1jFcRrJLU0b+/g1QOApkHiCsXbCdwRokJDv07w2h2HJF0J6kdzxsA2Mac9MfJh4ZTmVC+uY4BeDW65AtXLiqBJUECJvog8/V90uoWJ1fLYXh/BrVaz9+eJ4tlhLX2poUmg3q5CkuWmD9r9+NIr9468J1WYETECzA0F31yLiig8f6PXawkDHC9LSu+06PbNr6a23U4+l5kXU7naxzFVxVRg/13UBPzR7+oRPcLnuXRRei9XHl85+O3syc2EkNd94bh0QvnoiXCvuv7vQc+yNYcTFwZmtcOGWKyXejvIJ1C4dAE/cAZSGxV1kgQtnQFRL5gdnFZnkOTME9HF5lIGI3YPALdQ42RO7LcEh+Y3vlwxwaiqDINO0F5zWde+tNznZQEaHGcCecmSsvJlR18plOg+E5vPVHdkA9PqdqKM5h16Z2AydIKI44+OLpjnHeo/GU6c4Z8j/VlXAj/02VPbbGyoCbjV3XCZjNLRxilhzNOxpH8j4R/fy6u41rDCJ5FWx5N9xr6WfVldzJ1S/SDhq6WJOBqMh6UTK2BoVsbKh0eDX5q3ULO+BEMd7fvkJ+nbZzpmrqselAPL1D4XLax1VCj9xBKcYhdVGY4b2hi7D0WpmfNalb7PW2iFEIxbL3sG+6TDERknlLOHIv3YBTt1mKuyFU62g8Dmz2NsB2rjlr4mVqZ4kaXqjK0J2XInLPq9hKBSZcpyyyI9cEG9bwpJERkdd028C4Jo4WMkpSARB6iajG23jpfyQ9JxoKOKqXDadDps1FRO1+ecgwLoDnUgmX9gY2KvV69KA4ht+AvBZKIcrLtIFV8u9fbchFn29MG0YlHkBLI/Y44530s1gYzTLGKFHFsDWAi55PBN2y5ubSnt70pDZHmop7raHNzWooLfdSNqemK5+TangHnBvEH7DijIqOxtIV9frwnqrCjDPfQIMfiE2fDHUBKEcYXyGIhduKiPpgx+TI9+zpyPqBmG+g5cITtGu9hItu3PMg8vsi+Ql9XlMgOuNE1A9o1A2IQHT8Z6hNofaLodm1IOyFn+7sGPFXvTOHkSXUGF9g5zLPOrdVcnfVqPEfrQdOOHa1lzzUnnPK/E9cIaASUzKWzQ2FFyCMdmk7o13vNyczFM1K7zHDdLL/6IOYYp9/WAF6YI15Uo64nJCf+NzDSDp3iSygTAWcjgZTzIGGlaTQiUE9yxq6gyS2uc2PhMD6vgbl7tPlPBQu2KcvZ/gysAvtGNPMpZ2/phhXl3HxRsVhjdrD21tyxBOXW8mjqoAPwF5oaXBrwH+Nfe/wSABxN5HctehHmGywuYi1c0hXW/1L6sPksI+/JkO36baD3O+BmKMvd2N7A1E/CkWjMs7FH/b1NGHGpHgwhivipQOjwClka44R054pzdz8pFcrcqWFqx0E0pSSIZhh2Iy4e2o7UyRTFfXiOVz2zPgJqgLZRa5C6+NzyZX+bDFqrcAf6zeCGQu53pdUh0zfEmhQSKGU8w6xZ+a4G2eNIHR3Uj542D3b+OAKZ2EErkO6+9r9INVTvOGYD650Hyx1scSBXj4KuCgWR0uCoCEKWAPAABJGoV5AOwp6lvzy9ml7W01Zo9IyCnFEJnhzpe44Jo6EJ3jpWW3u/UEhXTWvWvju9ki5yzAPiYi3Xr5ow5fcai7CaOxH+37FHy6POeFqKIMDXwlu9R3/ogW1omt2oIFcOShSqPs2ab2DKO4kfUFFBMC6BDSxKsjeQ6TTRbtGfGShQwjn3giQ56guxXAJD94MhYX93XlkFcN/A6fd0wveHLYGtX4Gi0OW8y6ZvvNESLUoTkQc7XEacx4vgdhMdSZ7YdxrwiBjZKjDzQODNKwvZeuXeXRQZsqsIjOmQY40PjjRUc246ZK0najQ0zYT/8axD+kP2AV+8NBCSSLEwL+Q6PFDObETFfnQEYRU6Xe4+ems5bcKZhGoHvF+wyAyZFNXFNwSv8BEdogfWBgn0yWJj0KapOtC0QckzDOvNpYsYQmxIy+VQU/VQQu7fQo68b20qoEU8yhfU4TN5PXbFQfFXhl93JcJs7F5lFgMINVRhMK2xXA2JMUSEngz/SCO4lnpMKFg6dZTvXKU1akNNz5E9a+pOTT+qFiCVFTWTSn+FUyk/UvCv+yeacx61+D4iE+lPj/lBajnGPAi7E6e0/gj5LyfTNHoTd1Boriidx9mew426wTG+JqRz0Lt9CYitK8dbIvgSjQ5w4D9ibPgxLi1tP+NdxvYjxf5JDEwxMJarDj5P5AMryhYAcC/8Hs9vaHQvw3p0CQz8VNmfWpAzEv8nCpVRbfLoYo/TOfUUmhPlpJJ3dNLK2gZoqLLbcd1Wihb94EEbAzz/0HMLHRXHiyXFUcxmtS83HTjc++MBhElo2BH79T1NyKHCzv6Qzi4IcjsG1DQHkJlAoH3It3OAvJLPiXPnKxxMVO8x71wuCpQrHtNqsp0m3FoHyKpIpfK4Re3aHkux93BY0T6IRDbigQv2iixwUkNkZPUtuhbYsX8v3cmPVdjBF7RG3urdgBgpTAnLlnFNiym0vHwXoC9n0CrqRzLuqDsCKJkWnRPTG+Yxx96cmm7UlqfllTmf3OJfKpGkwU0oh7gr6g3PU1FNVYHRLZBStqkh9Isgl2cCALYeDrfiuyo9Ls3purj/qjAfF23adfuETbCS0ZIFXBiLbH6H3nL/wIKkQ/SBRfTpbFl8XDNtY2bCgHlWCMHEmW8oCE+C/fk8S7ALadnCFFhz3JsqN7qLu/80QU6UzrJ3lQnSS9qVCKIs2Hqm02t3PfjRnNNeKLFXtFUsv8/eI410F31CMA1F8GOasgLQcQMb7aGnfA9ZsKB/aJS10YBYLykNoRxViWhiCNhw4EdDnz6FH02y6EOVpEbe08nRcoJiUQPeo90wNGKujBrj51tfvpyuOLKtLDPJj5vmj7JL2BIRE991K0/CNehBGJrNn8LoUM6g/kOUgj1NW4Six0D2AN3lMhG+WfCI3zPBSpKmn2IML60ceL5/jtx7Dz959+wZKD0FrpsQAcwB+0k7zAu1nII/FAgvnoN7YrRYOSnZZmdBjkfVAfclG2vbBFQvfFgG7icN2GWK/bjE+QiSTtZTx0bFfoyN6rADkzG9ZZFxQq07EClZ7uNZ8+CX52jaeEMpofIqEk2cFHnG5ZASPArw0QMw3eDcvXZK67kbHOdmJLyBpkuhXVn4XNOglAjG8A2hUd9lnTmZ03rZInPJscIVisWNZPUScvB3qYjs1Jv8ygyyZfoQ4hQZfnW9l7gsnvH6TKfOEr7I4u6J8oX3syaMgQQRIeux5WcwdNfumaO1Oz7Ta7vqlJzUUrJ5TAAtO+xOrhVKeFrus34sAWXoB2cuIdmLh2U+VF15tQMwEmme7Cq7qNeG13dQ2vhJxUFtIEdn25WP9w9NZ6naFkYpnTbsY/d6tkAaFhlk70bnfPkpQdFJlW+iaqoedrsA5XFMDNH8Zd/kBrV+Tlj4MBLkQw/uMulqf5hkGpwFigRpvDp4tNlQ+xbHMdkYnRIl8lVCX6g6hcMx+crBbCzBB+p5K3zePoPgAlTRwrrWFCuF69LjjERDX9gfFwADkP/rZBymiintXyJ1uORoNxjCcXcSF1SWy26CWrokSCDzBfI9yFedVzknv3/FU7yskIhgFqgJNe83f42/p+W5fWWdrmoLghVlQ2KWBXWwVOlhiFYK5PAHVANFvjh7RGjNOY7qVV/eYz/BQ0itdaYjdiD0lguWIFjKp6lmtadpZfEyIBK4gKl16J4cY+YdtpR9QN7OMGxyqJwFIqbXiZr8vZh2AbIUeJtBHHUoF3L7z5KZ2qktyudYN09MobaHag5YD2ZybBgzqyEeMrNZkHrFIwVFBtEXPNGm0pGiOas6sijocI9cxM19e4Aj1ustCtUEDNsP6bNmad7v2uxIhZfKZ21xUTdanVN2ich3J25Eja6yMThVGEwHF4xy2eG/F/no6kLF8RwJV2lh26k59YKO2AwRCX/6J8+Rj3fMsqAXTwFovgKcdd0LxPdTZ7mK/a84hLy2hJf7pmR7FMqFDZMJkSyOqCAcBRw7kNSGMJllwoC5HwKL6ovE/gsjIOJU5fiLXhdUDq6BH7BjO4e/YHzfcbiduW+k6YGUV4MNPFk6/+FtNShTVqPnLRJzq8/FQ800tep7M4R6E2A2yBcW/g2j32NFs+clG0kanReb9wGbQ2N7OWez0WTmpU5ApaQ65uvinvlJikYSQV7zasSG8JpCvcHrAIiU6oj/s+Ab4ff4R541U8ITAIG8X4aKUpaLBITdD7gJ0tEEwu+W21eAdT29EQXjrmlXE95bouGMzMz63Y+x8tuk09jHM+25jQa7Vi8GdGtsNCwtqzmoRG106CMLbYo4ueF1sZSzDr7Z0k2MJoZL9tKF22tjZyJSYnZpyf8n3jmT+BTdYMzF1/VWRXl8OyUSry+4mTyFRcE/NXvQx84V5opKWZBGxUHUuYYIdbF4b5NoaK7vBrDD+bJjPhyJvlYOd2SgilXqEsdDr9BbiK+E9DYFI4zAtwIcGWTBbk3C0sK+sv9AoX9lGB9grkIxSiGJ9AF3CFX7WFViPnBFciqN2k2ZMkE7mn/Xmr9s/PVE4aQstuO2zi/0g3V6TVcNEb5nRRkpPFTiSrO/yXmw6bpf9ss/ITHhij1trZIYGtybwRleE6AxzqLaOXoglufViklqs9xd+TXkF5pu0WyLHbmdfSc48Fd4of7SLqt2hQJe7sZoz/PAIbbhJVvV/qtyyoJUlMOaV2M/0DdWyWP0oHJYq3j1bQ1RKyYgnCbCDZTNEgCMwQ+bDgiFrSXBOug9D1bLhnujwHQ9nS+WpqMK3ChexVmrhNHS1EMCgPaQW4Fj4ya2h9/nt1WxsvK1YeR8lngffHjTs/Q0FDQxh6e9IVd1s0tpvGbcoUH0cGkJf4lxprMlVhPYByJsol7KuRm4YRjSehmhV4PzKYFSB8OKhey/Tjk0UrBa7x64WFtsDcQjL9UryhhWhHR8/iNoindd9BBPN6yHG/rC4G7W1D5hc7O1h1ZUcN+N804k6LDgngZcrL6iuKfe4FX4XYH29Io+JMRKII3QASlU36lnlpa/tfIU/78r7YCm4zfdB4qRisduNEBwC/YDdT54cnazTB7BhDUAKx1rSnVRNxkBDBduFhoVtrikOhwwKdCfl2Wugv08JFaQzdsu2OpVrWya4GK2DEUCwgDHO85aKBhuAjpFDVlH1Jvmh3goGVF9osX8IotvLj+BL8JN+aq2Prl20s2tzmmEZpK7SPxF0pXXSg436UMUQhHOm/CM41ytV52i0iG/17fz6TaXwT5+xczom4tNq+jg+99910uhJ2o5CnLKT+AoB6VdK2OLBlKPsl1J7tOeo1idBs/UVZYr7x24RO4MzdNMWAQZLjiWtCONc8MPLd6P7ki/SV9cs8462fJvkQq1bqkkSUrWrp4a7UvhC1gw7YNxoxuFEO0ieyrcyEpMfZBx+W+omf/cMnXB4hjC+Un42e5DCQdqceXPECQlJyhHypELsYEhT0twqr+bb1tazgZh3dUMexp3NDx8iEhb3n/GLEzo/9E2rNwDw9IunlGSq6YQGh7rfYMn0UqWcOzp+EPJTH+pYz6fH3uIRzEFpMko5DNUsKJX6xKv3KHYKIMg0Rz8F8968C4okxlWGkD0SDUkZp/huR07sTveCjiFjGF8Q5zAjqJorbKDFdo9w+LIYgXxR0CYK2ZSrBNVVx07asnL8u4z5/62Hlnndb9KGTdCWxL48Sd7Oxh7iF5MVopBY6wkn5kVIMUScmkSlwUx8m9anviEb9CoT0j17R9hAxa6EicN5FVVcuxFFLaMzaDnxbGe8uFcL2Ux7k46+81mzGeRnxIKbVynHpD2jfHIX192joy1BrA/TYgXHwqBJnmTe9PuGHBWfi99KcrFA2WNCqji1beHyNYT2JVBXnN9fhmSPRM6xjRBb/LLfwkB4cA9hRotnQGchqIilhQbI/YcTkTjDbmTA3M5tgkziNrKi2fkTBTRmSIot7vDtq2/APcKhNNPVtTZ8mpKkPYS1r6Dm8wr3FxDCk9VcB2UTVo7+eCyVUSOGT+VZSMg6KV8BHqJCtNyM2vNdKWaxOD2HG6BVqhyv7/iZryNNY53szJiMpWClZMdtvVStR6QIAelNwvufMvRhsXdvcUcMC/Qq9MTaneF3a+HyBh25iHnTOWzCE2dVwn1ZO0OY6Zds0oC4n5P2HP4E0hUaB/i16pTU9Ht+hUncqWkPnhKqMLgCOuOI29b7AvmOp93+5Z8q9km4Qd4T08vPoYY3l61IlxkmEybL0vLp2bNs8GYT31j5BlSi4wuHp5co/fdiAnuGcjh9zxzF3/QVJGdwjHWA8GtCXA5AGduo+o4AR1Yd8Zokkp54TcCWYpzppPa5rnYBjC+Bmg8LEeSaL+C7CaWF84WKOBo7SapZb/6GRpL4s3C9xLuqmv2GCq4isgbiYDCYlGJcY1xIu/nDB3c9ctsVzMUzhlf40u31AwHGfLltpxO4o7KVuRxpl8clc/WJsWWxDxe1GKMVo41AN5VRBgBFOmHR4U/rb4qHcMOC8oeLrsUrHtAQWo/Ko9cai6XkHrXG62LzF93NcsIL13+jqUaLj06aZ2K8FVO22pIPFCInZ8xjj+LTyakvp0k7WeFnDQ8f/B4FJFSev2Xc0iB08kYyM/qiP6nqt4VQY9IW8u6Gf3/cbt2pwJ1WWwD8pmoM7leXRW0fhM87pbbzpI9Tmoa/7/OEJv1HOSdAH5UmJ0K/E9cAVbJK5c4uGtvrs1XeZ9nEC/5/y+W8OpJV8/6tlV+a32y5uNQWQC7oSENNtL/vK7vZhDFRLAIAe/nhB9ZtJb6xInp2rjrSNVKkBFAW15IIQDnrx14CUz8jhH1OrdBGih02g/h8gcaxRJ+xeblXr1ASul5YakIvQd7BwloqDidHemIWWwAcJhzvKIt7M4JU8zdkUXtzkRpFY5FZwO1mxZpLqQKBHNRmxVxp2mrINcP4AtNOu6i927445fHZJm7w1UcCjUtcHTXlj4uFRl49ncp6jivLnbGZoPWpwmLE3Rjar9LeSiToJjXX7YqHBBbVaoOCXC/lMF+mHq8dWCgQ77Kbpl4mFywEyP6+FkK5miSSeYXerJqnGrxD+WsMOD1R++rdfKBBI7Alu0EG4q46bzULjQsV7lWqyUIO/EX0ZFgP64ezDeJ3ml/QquWb89xBycD7xyTYcxzFTyfIPU81OrvFyy8QjPwzjb9xwsLnHCTRDM+B4MnWfSYRUqcGhZNrsXMDrZxmGkpUJuMe+Xj/7R3SKBkZYv+1fRtDWyVvtRnpEkG++KEUefJUEoFk8bIvzdp0bY6msnx1MOSO2/77RZgCHncCVpbLTG3O08Bk4Jt4C3FbMtPj2Zk96o96QNxi6hAMaVX4D1f2XMkCMrNJTHv0tmO9iWrQ8XhBETRgibtcw09f4XbeYiKXjE++NkKWjNw6Jogz+uThMbQlHdyaoAT4l7JpJUbX8UJE0dY2M0CJFBGvJA/W29TPcwYkk/fbZjcXdv3JLvhyMVsqvQRcACCMYZoQApbvG06U4ZYRqdbA0kesgsyuFtEC/2EQTLKdq3iMiuz91HOkA6FqNXvH5ssVwBnQ1rHaKWpkxh27E+QhgVG5gv+EpkeLtak3A/2XxZ/2TnP/6eDInjXBzSsrtI0/YYzW4uhJ51y9vLLyRaKnFZHHydYfSouzBxREpeJhuU5J71CrMaGFUEopewftPmw0CoMzC75qoUOzhsH7rnue5G8KQen7V2XsP/rsTVczCBCirz8fZL9K3utA3w3QzlK3eRh/vY5zCqwG7ryhEJQJIvG1Xuumw40qrN4tzCg8RJntJVXPWjDV2HM2jS13Os3sfE5hgpBXUr1lV2ione9HDdBw+w1NIt3NE4Yr4+qEW73D8eCyM8LvtYONDinnJ0sAVFSjaAluH5egLrZjQzBtDXr+F5C5ZmvNFizyI4pikZfd2KP8jbjMOO3i35aHTAdLId2mX3ndAghvWE6bKrk8+NwGjyI4TtumbZyupzzBw8vLqJNJsgDo8r/UJxZDex/CRpb1ihyCDJvd88oA5KAKf59u6XJBBOthZyeDpzSU4T57vJBYJaHcS6xMZrXFBWUn+9+yGR9TivbRuqZXa+xPpd3ypUXh/dGHypz9uO4elH7qu/vsZ2D5XQ4hUkS64u4kHbj+pLwaoGi4mrjWcy0NErVdoDZFq57ZyxeX+0qYtk/Lg7jrrtK5Z3xw/BEeDehTk4TkrMZ7hIt/pUKRL/CbcuE48JTchI+nNJAvBcpzgM0xNHjNLiq4LrYZwhxdyxFu3IkEdGtc7eBqqLik/HrCBhTcypRivkuBPkPD9myWGPcti6AGrcUUpyLPX0A2x/PtwQf30edY3KJj7p4IjA1k8uFgkYivJbR6sZjVBDkld1z01FL37Sy0yTepndGB+Klxb9eYGzaN6NqBYyzK3PDV73R+T1KRqRjqUVD22+aBFJm1hpZL6DOyze9z2s81B7tFiviV8C75wAU5ElW2WjxBwutgaosZxy2Jv0ABVSbsOozdn/pgX8F29EdMfV5PbXpOkNVWN3+OJDfL4QqcBL7ot8+ddDXKEOSR4xjAtb5mSneqezBpUB8vzjVpc8/ZUNo7S2rMeKUJzEyTnivQy8blLZ6+Zo3oxGfywSZAmkFmsAn9v++VW9/Q9UW5Z4KjxjbDjc1rmg65O0bG4hWSVFDKj7IejUnNVMBG58CVGj3dqyv7+4fYoUTFALKdvIKIcYl8qRwvytKyXPG5sPD9vogfy5xRKAOmpvX9Hr4elGGFPwIWtAj2/QGaKU+PWWdREiSSxYaZ1dp4AcNFW9AdRu/Gc4YKK/CEkUc5+M38blMzeel57aG+AVQZmq4ViL21UqSeUSPBG4OMkr6FN2Q7otvMUQP0znjF9+R2E1oiPpob+qJy4IOrKUzUKsDMUuROvbQU1eLwrtVDOeiEblovGBa3apmmlhx+XiWEh6FhdxOGuOJOP9ZoJk5EO8xQuFrj23XGEE2TTPb5b3bpZSZ+Me2wCyAHYLzwLGvk2RNDvr7rPI+MXp4K8LaBaqa8Z/McxVNfoV21QOnOfU3AboB1/mwXqoZ2aZxbM5OjJSZufvIiI8JxHYvskA/alAdWctwupXXO2tY0sNrgC7Vlr9wwY1WuTGci1L7zpM3c0ZdHJlil16lsaSwx/tEj6Bww/xVpwnr5bS6yThMn/kFekXae+I7UHo9iC06mH73a+n08zAtDF7yg7pkDDc9MosEM8XU1uQnvLS3i5nEGeK/7tHIexqJGii6Q5f0Ylvl+k0Uq8nZpVGfhjd3LM07dKRvr9ucotefBfqi27P/52DWZ+6X8dbmZAvVVz0W0dPfVRSJ5f4oTyT7ZLRynwTU/UQRY9qUUc1OdA1Eb6aUm5ohGtqCuIBDhzpBBSfmwE9LWMUUbFalsHV99AUY4KlF0WVUFW0FQR5u9fXProv2ztynT5NUeLsQp/m8Hl1vt4MAenqUnfekqVKPbmRlxUoBPJpbd2KBZMShGmoCrR3jx88fD1IVsuCG9rZWpBljvE58b/ha0CtnHyANN7YtU0xk+7UZUP5djoje3/WooSclxYKWSPsYnLGfrTty3XoJJiRFiPmnzx1k2LspTJBpct1Ez0SjkrudWyA6ZlvGiYumwecwkRUOrrfPyWUa9tK/JmcWQjQ1jGKKASobPG2J+j5CSb4uoeTxRz2Vx3aeMiSA55ELSyn3fERJ8rZg20QZzbmficW5ql/8f38UH4X5LAN/vmSlyr8l/3FXQ2PZfaYDluK2YwuzRb3w/990QmRaJRWoZb7oOKoZI75eKKAyRgdsXqPcx19E7/6Ry/CcCaEpd0l+QSoaPvWXv6OksvsdK2VMLVWakFIUSDztfgfeitAwEOTd6y8npHvEpKiR75scHaOWZdDKYb9qMizkCcLDCbajxinEc2hHeLLyHtheqqBuXGx0i0tGxDAOwILBLXvYLeSaoyHKnOpOPWp5B3U+aCfuKNvj6B3qnVD32X85RO64KEJdSnT4vi8qHewb10sOLNonpYVlWPEkrFdVPIp/JE1jFRWInQYqVaFnEiDD7+IqQJo06jDYa774m8j4mZSiITGlbYVGgy9+qQz0hKLpdEFu0CDdF8f/s/cpqFti6jJ9aAr3hOV61XSNuyUB7X7MWkM6s7+nAWt8Gv2eyQQ+ID62HtzWqEqnyV6B3xODee7wxPZKULSl0K+KNMwCPpW9gHHBy7xo4keL+m/mlkGwFL4XsQMJec6eFsCTEgf5XSXMnpuxIVpBA/8FyxEiuWs46DmsoTtOSQJ/soLUuZeLMHYfLvcx3ScB42DuafrIros+Yi9PX7Fk7b/+cnDA78GyqcLcqE1J9Rs/Xul/hz5pYrUPFQzuq4Ubuu8AU11UNx3faiyNipuKXH/gpk59wLfSN5oh+udauOkcLU+3KECq6MJ14IV2ki9jV6kV3v1o49Wm43/7wQgg1Ms5Tfu8uH/02DYjPk7xqGp7DFVKJRMKv2i7jk7//Pql0ZFlBB/pNdmMU4Xuh1ZMqeQhX5ERq6LzlStC7ECGBcHZvmNVuOgKV07bhVSRaPfOeiNJzchrGcVkY4NjWHnNr0Nj4AmqOhCEoX0bnc+fzZKkhhsrlE6ItIlPvG7IDgekMSsXHWripxMrvZtBelASQEnuLMnJsQPLx55nr2XjmMsw0SORY0b/5x++wlhVfFtA9UEUDYWc9luzShJA+erYBh0140/RFosDiBGWJ6Sry07OnE7CFNyr1545oI+Vb04QPx9ZgEUKiljrv5Pz2QqWpmkK0rF3BVhYwd8dP7+NvVBJXpy/hWfPqc85lE2wzAKndlhNZwOKErV3GjC6gH0tCtiQvRaGr3wS+ulXoviiyZcEHY0WRqmg1yT73geX7MbhctDFYpuADYaF9SaLrHI6vrFAWsHcAFT7MzaCub5MIOCWBG71jgFBzwttgLNir1KtzixMcMM85rMV85NWz2R9u9ABoXDDZBCQC0BbfgjPy5mbPxmU5zzj+N66TK4GD9CwzocUU6PNxpb8M9UiXuihe9XKUP0NcoH23qENbHMzk7zfI4dobcyclCWfNYGFlR4AiAmBWJdEg5uoI9HwYJAmBQltI5t/fzngDRpSC9htLvL3KDBVXInvXDBbEqETS8gLsU3FGJ9I/QmKLWXymtAKVzIRk70mkPuyiqPGIrkmST2YvT0K1UnGq+J7FWqs4Suz+UIG0i51NIPRw/GnHR0+HDpK+epRMjshGwIxLXm2oAp0CNSLuenkU7tr3bFglwt8KVs9AIeduUnKFav4agGiGQt4NL0AU05kk7aBEAHHFwTmdNYGzqtKHYpf42IbHBhf7+THYT5Tf3hHGsJw1k6IISK3ZidKr4VCLurQKOEqYFsnWkfeEFjbjGgsyqnVrVRKoNF+kHokGLQB0FEtvbeH0C7Ddf53blj37NpuZjpL9w3sEpZY6Syvkw01Zk4epiAlnzWBvY+G1ZTmElJ6AIZ2y9aDvo/lNea1fT7pKLliSZv0upFG8CaivPKor5/+Eb+FtFD31OZueWsw4yhkYnTGDXH9af/GPMUNXzOacy87X5EOBC1JVUOzSqO/Q6WxtOpHI8ZW4cOR51xYUg/g8UZxcnTrS6Dxzd9HPnCqBfgnHsyVkTGlTM8bOpEqUkFMTKuJvZc0ahSU8sLvvbt1S2vItJ1FJ+CVsR4YpEDA0mILTsQcOnLphhyIPJk76Y2nM5laIlQd5Fexakf7Q22bQNftwOxNvHlYvoLn6LhiLJCjs7L44JqiCkJ9JxjZBAdq0LzYuw5O1DDgx9YJ0ob/Km8jn1QrRBd0rgP6BkzzQahXtvIjkC66jDrxh36Bf98ISws/3xPBwGpWY9SnfY4YbJip/RXg6wD33PESpBvH9vlMyeRZQV8CoYA6JgS6tZ6ZTBc1S7+ruUxIlSw8RJjfM7UV4/Q5GKqsUvW85ad/QciyiZmcCiT8Yby5opPAJPrspThNjVGziNAd1q1fmEplvLT4BdvTI3b4gIzTV7IiROFj3fA+bvZyJ249P4i4f0ytubmVE4ySlWE6lDrflMuPATC5ZOP2dXUQuY/SvYwc083PMw9XSSoQPuSgB9gP6T2AjRQeG3Xw/KqCVQrau7PPzVU+JhPOUihp1rNl9ae7f8DgI2C/dCx7ErQs5ZrGGoHIC4PcBFI//uFiZzPUABLheafTssr09pIyVChKvnCOkIRhuww+rOX7RiyJNUIBQAodegDRGvjKUyta31M2RiuQTxN1tTFGKxCJSEQM1e/f+kCs/JpUsMVVAHRTVQI0dqCz95DNr756cyc9Qh4fo67zQAngn+R3tpDmQUgT0Kz1+F0SkDEIBWoOilg/geGhqCnnn/1jWJDWlI2gebHSUkmnxc14ndpb23zXAPUhZj3Ix2widTKTVPWr/mEPSYHc6xO8TsjjolYW3Xddo0QVfgLzcGcv25StbjOExr2vk/eIYK97lZ4UHGmB3l0WiYHkOY8+noeGu2eBrlvc/IPfF25xt/xFsqr7RQ3FQgjKyztC8io7w/3PzoQR5qdYd4eVHRLwY4CDiJBRv/YxHYVLoWcKhqPpV9M26YYcBXqNe+G78ceGtjWGL1ri0Ed7ifdoGEIV/x5n7nGRZ6Voz3LsVlzd/9YtNRCMIZYyDjYdvdnZizExvzLsjpapfbOqcP0Cy9LtP65NHD88s5sO+jIktERDYSkf2DnS/tordYW0NAcgQQ7Ze7CVanPH/KuEgBZz/0UTwIioSsCthixxCB5MrpY+/2rCz+3aaR5Aav0Qkgfwxz97nm2JjXflh2iqv9Yk2scXd8Ouia4o7ZDOAticZ/hbI6eaNbcUrFCrtScTvPm6yT6Wo7V6I2+zzs1RZ+8dqFqFbj3vm6eEQvSy9YNFz/ZRjtia8OX9bF7jsgEvWS2AzkjCS7Wm7O+yomvXz7t91szRM/sij6HpXiaZ0IcO+I/cIXNoxF6hyZEvCcMAXAhNC/oGj7D5VvQyZyhGqb9Z/a1xDQ2ZQR1Qv5eeWhnju3YdaUW+aYAgSPkpln11BsN3DuFkp2oTZrJgliCwwlFUXw5WeU+3xE5j7/0BZgAuX/C3WpmauipmP00Ve9NYPrfxisLNyBhfB7p3Wao7ki2Oz2Mp1q5qUwjEBp6Vf8PfSAMc/acs2JN4/j/uyi5E10ZCp29ywPckzxJGOvGMQ3bwjjFa51fzl+Eq+eiaPZEENOQiSzr3ZTh3lBRCn2f8CzRQP7bOX+jzZ8nygqy71cK5iK1fQaR4+dW42iFXmIPniK7HYdTYdu5dUrKVqfPcQzJ7BUJIAqIC6RCMYMXbiiTvtkGQxlzE6winfCcmIWaKLn4OAommSHV4j4pNy8H9eAO62lFbNHKWvPCUlR5Gl9UR/Pc92Uc7mWumDKfL2a8pAwJN8THCBXpPjlPklHqPUDLaOvvicEUMDJmBT6T9ZzW6xHaa6P+hQPmD93HQlrZSwpGtzSY418ZHLFI9uw6APK0UzZn5vnKs/z4htEP0r0NPVALMhDE0TebHXajnZSoymw51l3ZIULWaohGC1NbTvOjZIs1VzHLYVVHPOZNhoENSE2TWQsf2BNx1/Vm5UtVZz8XH/QijZhgUC7Np0L94til6eyBOWi+rplzN8R9Ol4Y9NqnQ412JqKytvYN3iTYpz2xKK6k3eWFAbNkf0wYFnalWrBxuUa5FqfHVRhblkuLeHOPRbDipXch7yla7nqWHxriBvb7UUhQtbn9ZuXppen+JhIza/2uE+dA11Amx7ThpXh0Cqc7/0+eLmrA3rlDctEDQwDvxgDeu3uG4NGWXQT+qqNDJJmSehNdvMY75tHF2l4lxPudq0Q+dgMIRN9y/nTEJFm1ST2QU6dERUHysA+TIDUVtcAR66SrEnBxcv3CsKjSZZ/xEn6Wk6ZAr1g2Ei26yNFEkRWqX+RgryDgfPGFckJ8ffqRBeCPyO2D3RDplaYLpRSR7BNxZmYyFojc4LziooIOLmm3JesFf4Yop9wgvifbb1l7ePaGR7Tfp6MozSNP9t+uZT+jU/nJeWCW16VET/wa+IdYcWP8/ByXafvTmhrshCfY75kfNY8E05vN3/rsF0Za53Pz7BZ/lM8qM+YlbrflarZ8m74zsyf1cCstrQPBmr1WzQZgokl15nAwx6mDhN+QhHyFioWysw6Lij+iyFYh0srZwq1cIJz8oeJME8l0M9B017nLgVS+j+YyOfqsxqxVyVirxhMv8e57t7Ekm+LOhpK4V+qxQgnGQV8KFbN2dS813xcR7k6ZGC4PcXwetOnM+emiogTDwnoM820ICUKxxiJwOBNIRt5GsOri+gvB38a2k8eRXJ/4Ca5qh4TpGMdAZR2uscMctOwhyhMS0Ja19YpYPS4fRFYF3HAOZ7nSTGextIMB48GldQvugHalB8yVVh4fE+NaeHB/oq4aVpaXhn35XxLwb7rJV49QnpOQindG2sbii1OrQ+GSLTtlL2YEOCMFgRa7ikOegPRtyr0qZfVcFv3vwWY//6QCbnBHjw63VENsbZmqye7c0PZuLu18DwT5RhXsbZxNbWy0Wlp12DRMKAhHzBNjbDrJ0hK9YhqWSFyPQCCnM5xKYYiyM8CZVNAGJIcauXZtneJBLKoJFMUHZN5Qwvob/PGg1ssE+8wDU6BDOgtwQ1e7lwFIkTZ9jyELHWuA9lruUuDPCt7Tj80fC+XeOPZX0f/SquiTGWqGfD7KNHX56uEsJZgpbS0WB9gWuWTiPdZVwHc1WRjltW054+3jpfLMqHsTdOjxNEpTxhewGDwD09pUU5tzHMGocnQa2Dxd9ylR3Ge4yjoqd1OmkPc7i9rC7tATh0JsIwlKX2zgkpGYPG68pCahpTNxWuHcoMMA968K5fHcUodAq3aY/VPbRR0QsUffSWyNnvb11GEvwGP1L2+FSGLEzhO1vudGVGSiUKKAMisP/E0sDK2TXn7BgSRx8oj2Youk7OfNa3QjW8i/8xQZ63mgI55OEXaCAy4t3v1P/egjI9fU34VtsGhxDPzcpa3OUzsjqWcywx2xdolwsJChHqcqoGXb1A52MEfC7aQ7yHhaOY/S6uIPiK3Exv4WWucBjQr6PplR9i8Zihe7m+8/2cHLcWh+jjHycNDcMwnDGFAP6rhZP6AEtykAmfAcjmPUru78fTMxZnxj2SBodBHf4sa3G/rTilJtPewKW7HAMy8aFRDvlv8Lp0Vu0+kPMz9stEzmIRR/vVagQcjSsEw1S7AstWLleXkNSK6N/9nlm3oEU3f8ZvY1n9KciNNmSz8C1l5fWfgZu1YHUJl+71s1nlLTinXgwi5YRhfTlp5N9s+/vfpdNoVjAlIE6TcvwbsX7k6YCGOK1prVJ8lNQXxnAsSlL/S0pV/vYG/t6m1ocRnCx6sB7azBHsEf4KYQM0MQ0LcxZbSMDRXnXPeET+xBrwaDqvf5txiTOtCprb2ycZKQ9FZ7KwuZXEfpv1AqNVA3OGUsICrnFqgkrpPfG6YROqFEyiiDgk+cm2wsDg3fbC3+HuH8sgnkL5CcZ/pii1G/umLhqDiFA6wt85PJc22vYiJghZSc3M7ruT2vIzPYLdVyq9SH7l3MmKiYbOCSknLR0C3qzlfDZU/v67UlmsATZV4tZSAEC3wMoubOeJ7E8txuPXgIN7RfZU2rjN20ObGsffXcQPYil7DjW0mT7eKQQGtX+A9nF6ei/fuAcpsl6AOPcYUN/q6nNBciNq5IRf9Bt/TbnGFgodajqZ6hHPYW8Q2zYx45PUL+JJeSYAbhPaNwEnoQqhgQ/0fpU9SA8OoSlO/ufGBcie9PHCITnfecPtc7JedNAowt7OJC1zrO3SCWqscYBc13Bj1IWzPqkAIG4E6Ho89VVXcqNoMvwjm7fVLT5a6Zd0LzYZ7gHRBWah8lxNZZYXjJosfGs5mj5kVWiHFcJXIfWKoZilu8njE/UV1gxOZqGsf/qsv8uLDaFz36gqvLKHQHWtAGiHpVgTvBmcpnsMorjJjkEucc9W+nVyB+n5ghxPI+zxwc2/GFxu79y4iMMTvQGJjVE0GkiJR0CKIjWUXXvBPucCV1vWNP6JPhHqRtTfjbXLGw3hllYxn1E1LmSSmlcOIHpeB9iUzDdbfOP2Cy7tgxJLg49eP7519emElmQjrY8hFVFcq51k2f91WcKnsL0+2A1f2yQ+P54WVOh4OsO4lgwYHT4ZM4kgoithT6AieaehZ+YeqP8DeEMvDbVsXMpisOY56d5cyMZZDN0loRlTMZ2p9GdVjeuUpaWCfCtGv/Zxyppi7oBy+FP3G17gchuohG4X/GLAQT9NRg9TTX3k2EAUqjeGQqX8ouourKvnIt9tYCKuaywtsRs05aflSM1nPLNGa77qabVfmflS8xIRj7Q/n2sKJBohK8mwFIeZyok2fYtCHAmQI51XZ+eXSBt/a+NK7V6TXwgvKCSwGjDo/xrXopW58fDlCPUuORnjQ6MVXs5TTYU2vulrYaSEOczK3LpQxlnm8yGdSOR6yYzfHzCDDHkFMNwxL0gmy03j+++5vG/1UTllYZmSTUUnNqeKNBCtov/FGDKx0g02NznK3UPm8SgVlw3AKL20ZY4mQ+Fw5QggK7sViSnjpYaI3V+Id6hsKvJj19C3A+AjatrpJXedGZJV+XBvlb3Gw1y2GCwpGSm23LSlR/k2xIG+HE9uxpzWBvKdaXpS+GLT3Koym9GPl9Sou67SDvPHIgRbleBqLfveUpZxlGcO5bMIznVxBHckjnfWhJPLKrvYV9S/FtLA7+7h6KtujAn8ed9tAWyIheTwuGNAvVpPYgCkdO5K1G0IPZPho4SSLWuQnlN7oSEXTJB/4ko8CTY3S0kfseNIgDsSa3rRNphBU5G2TWqKbyNWpqs6XVOG66n/UpgVOu1kpGOh6QQy0FR44fxCUMB4v445MmRu8cFhS2UY/Zya+xjC/hzbIs3eqiTq9UCMnr+x9nyGO6VCapVse0Zev2/h7af+YeZ+Vh2zDy3gn7ULavehnldX5m9EB1DVr5b9kOOqwyxdCULz+8vu5XW4VT+VqZumLIbY0RsL+/eW8CjBbISO6Qh/iblWJ+b17jTe5owtpWjmm7Jzn7eh2KWEr5fm97vMDcROlJjbCmqhNFo0+QByqvIk4SyA4AZmBeWq26MpisAVPnF3Y6j0dfvFBHf+YOcaAjrEpCicG12Ec3Ue8dh8RWU+kvPW2c41N1v+jzbIkDGV1G//GlL5uy+p02Jqt75zHQ/VrBp26ScuHiPsds9PydjQdwYujoJTRun/S4UQBDdCyiMhPEj8ztE9Qo8sdMTkVccTGQbbPlZ+F8K8JWkX9lsjU6WyieH89zVq7VPgYUhFW9o8+PhgvE20+N8124P2EcPxAgwxd+g+8Z6DOpxkRTnyUINwy0EFyfyWku/AJwUKwzGq1jd2nqrhY9nvUUhXaUsvSPTwWZzXJbN/12Hyyo42OExieVwxigk8VfREgHTqMYA8tui+O0q3cKqqzBl5CDWojkwLHa8Oljqwnru30oRlcUrZv9d9jV3E1ZzTBMqBxb+Y6TSYWAu1acVNKDt/3UGSu//MAWfC+RQ53OUvFtZBPeDCMh4URyvj/MkpZ3ZYHx1pUeYWFgBC7wG4v2ag1CXPdxYKhf7Qw35YMnPEk+zN9KbglgJlsf+5FEvhIkEMNwr5OrNTYvHXtgVe88G3Gu91m16WE2JVDNMWNGbD4ra185gvwOVamaifMgQ72cElBGGX8urT4pHHfzF5IVdmnYjV1ihYLvUtIJ0kZPd6XM5k/+3NUKCecspYhAa3Anf0dz/O/hmiEfHsL3IBm3HX/Zxx6azNPM9uGj1DWOZMesYtog3QvfhzesAboZaSxUmplRUw+wTqYuFbNVSIXaEliQV6T6/QfQz2OgFGUW8cJa1edq0BVOVXFkIesUXG/YaFj2A48xyDp/pnhIgB0zkOxS3TB6TpuvNvojFPPoktKnp3SxYlC02YQ1LAoOL4bJLxYrsKw9V/Jtrrxp9H/CLvxCjdEZoFDotrZxYuHPHhuY25J0W9lDZBIqow+Up1ZPKXcHmJm+mfqeyCB6uqPdN8+ZvUGGMVqZK2X3gRK3wW5b9kLNGcgyIYIUbsk+VEFry27QZStY4FxTkIB7exOZIQ9emamQAWMM9Dr8DqECTykDiTPik0iE9kd9kL1oTVOwg7jIsGOZqbF0h32sdS0dzWjYIDZeJDMP8dUwefYpfsVcs5u+xkvM+ufXbY2ZxiL9tHT3MVVt5bBJsgEWKs+CuCaEIEnzdPtjEBWNwFlbMLJ2hh/zNTnyYuTxAxHfqZIX/EKFZ23GTmVK6iHZk/XejNbV813K1XWpUetpAB4vHG6tfH3hs3f7phscQO7V7C5jzP7Cdqb3Li538Y4ldcfzI3EVztwsBek34n4ObKe7AY+syVRxhQCgiY1ta6l8QTRUCrZT1ZZZLc0f2GNgLa0ezh8y6yh36ZFB2xvqS8BtRyqpqAp8vcf0LlyZC6ssd9y09Xydr7yNkAWAEeNJn5NZrd0FWo6BVFbwIQm4FWACpJTrk0Nt3eb5D3Bcd4iZCTU2vYMgNoGF5k14GT2cY8GJ5eFUeIWl80rprghDdD/ilETaWleX72SlvCBr5eMU6K7k99StgdaNOKwZ0GwGBq+SCNLi4Q1fpymKL8GQSbv2qPyFnZ4Rlaaemg8pRNm/nq3cqG77GrVBAbW69mUPhqAmlM1orRi5hW1RQ3YeTprjCibj7JGL252VH6TYUcWQcj5EbGyU/2XLCsqvIcyHI3VmNFm+i7FqgrP/eyPmlgngcK4/P6vOD+bbFdaZEkzxUWWVCWT59qyLRcFI8+vKUmCNuE4eFEXilpocERwr5N5lZG81oB2XOs5j3vscCjf2pkUIfquoeqYWNQ6nrGxsYqHhvPdlXqGBwioHz8Z/ONrzeQ6hfTMpDG7WtoRQqONh+U7Su4PhxhLUYkV3tIhXkY8EA9iEeqCGx89Hs9nblTU3XtKhjKtymKryAd1gnx3+CjqcT/TB7ZjY4c+2KpkbQ7eMsJa4l8XlAZKJ8liBMikvVPlhR0CdqNjH7FMsM+pxtuZk4h1dIyry+kYT67C6fYcA4tnwq0nuZL4Stslsn9vrjLIIvZvTIJzJYGEFyH2K1gsIMke4P/5hV574j5ymXWOD9GqgiJWHA/suLdTCmEF7qc8UAfwm8pUgXf1HB1rlpJ0A8tpD2vlpJUSK15rTnyobmLM2YnGfcC94Dprnw2PKuH6WF5696T9W3yT5crpngdQyWZ1oO3PHQjRLDSaj0TgxuaSAXpKrUJW5apBd6NjW1rog3Bz3bbCMdU1ZoBDFdaTDBsGMUBkaSZmScPJWWu9floxqWd/lGN65ip0D5gqyi96ozSdH5qKZjAHWsze4uPK1kM4wSRkN7qFf+GdxyPRDzdm2zCvQwjxvXflwhBfesmlWkgSI6EP2GVqgOqkZEobMInJgfDv1UQFKNzW8oJjVhZCkil8gtNtX1CjgddhppJRnr2wBKUZWOIFrhyPSi1q6LE7c+lo2ROt8wbAr+EyUuw5MtIsnycjmqHszUx5FEjQOT82NTO3vGdQFy01Z5MQ90EauoDQXWtH67zKBLWwVswniFTb8ilIjthppVSxDqs3ts4szl0lLDJ43LMPbEZ+kW5rYN1W2aX2IcocCrR+TApq51gIGBNyHjPMd7SpQKgwBLbHuN8NG5X99QyV8xIdgifmiy/C/EmDBA83zwa/9aZlacPv+NzbveN+S9ddQDcRrdgUSIQeNK687Ho4oGjdrowtv5SW+JVx48GiovDKtu5UwAdJP4/N2cHkr/hWwnWNdoipySgsDJW5HSOaeskcJwqXM1tPvgu75G1253TytIrhSfc+9OtddWd95Mu2XN/ZkhvBDWHmISSn/pRdw/F/lDR10ID4nI/SUR/Yd4gQRH93uOQU9PlAxXGD64WqAws+LF4EvT7jj72zno091KKkfKg4EiugSnaorQHdxXediZrQXyBl0KoSnFHSGAeeTzB+uOhfxRZ+On97GQMJ0/tS4XTC6jicn90qCw8lcFgIrbfwKNEWw3UgUzDHVEXrhNMm4PbHBsGRiSNQRAgMwWNIdyuaOry3IEMQ1hMbH68zsnHg4Rxd0499CWwMzhDUhx0ugW2p4M76ch1CFAiANM5KfMp8XqN+fsVQuanbVdxQ5tAFQ2IvvHrTCOIHvp5S6+rEHzLvQ7VRgn1WIJ1oS2pmc38lYCouM2K8XaTJdbcBlYrGmsMDkOO7d+FEXnuWj8X+KsgYsssUzSQu1kkSGyldeKJErhr2/9FQOEEMWIq1IojYdYktR/vCY47LURsPsdbDbi1JN1MS2CF2FsBUUxu/tto5Fp6uXn1e1h4+TXbICYGnoHQbIifRCEARko8AJTAUqiViUVrGMfHvs+0orP3qoKMxXmuAL0jIgi2WfyEryyT45HESVRVhpX+9J59oPoP0qb4deFBsA4f+3Q8zBP6ngke5vbF9olVaQ5ycXksZlGxxSi5WFfbZcsDmFNXeDJgds3t96UZV0adx0uxHF8/HenPB6CkN/8NkpPISTogvFuIPzdAL6lzZHBEcEz80QzwIjhGIKto02pGCB6QxPt7bqqtyDI3e9HDkfmzbHhzh97vLlglX43vrkzvT2KNQQX2QAbVDyoE1gB4bviFO8vnpc0XaeCAJqMeMBa4cRvFz6j/ipxLk00GbK8UEHYRt5HdAxe+DsmFzpwg35tLgHBVvQCpZSvz3vqe0m47UrKzDFMfOIScd3XM6q3H09V81DgeJTWa2znLKtul1CAK0sh1EIa2oScEeNat2AxACf/Za7pAjCCx5e429pod8FtSK7OjkLhTTVvynkSjRBGaTg3dwNHFwIXOOVrfJoBKAPrqEam2/4T99MhlkEVBVryFgrlWF56CawLeN8b1IrN+1f8pyhWRhWaq0OYCNSg+A957afvd4shRTfZImvsmptA49pqEKpwUS3QSj6jrUlotEMOqexanfC44mgvi8FfF6Kb3Cy4Ff+NXWfMqQkQS0ywVqyNymngK4oyPlGjO77Nfsp3amehWfmRJzFm6TRfW0d8/vHIejdOsQyQi9sDZgSWUdo7W5fJXizqYUTadFzpMELtQo5Qfx57JrkjbEY6jQinNCfytAeHXPyMt6P5pEH/jVLLPcn/75eIRoPgQXGX1Lx0KdWE8V48y5vgRwjVy6959BqusZNqnctDnqnIEOZIRAWmN2DuLGKgTQrBB38p6A6Zff/ePblb8LXVbtPG830iKvTQh9LDhfkbNizCIsEYNRAXrC/TO2AdpbtCzLVAXFh+FV+2qFSOQIgxYJk0y0X/GiBDdizWoeerlOcLexrMFRE0n9FibOqMAG9janvr2hL0M8qwkVexY+Ph36yffwAsw/ZuO5L4cNmOyLLLKh/m5QzN8T/69v58TzKhgU06SorodHx+v/N5Cn+Is+QLP2ydwQWMSL0s1g2lCXFNWjpojIIshAG8EbffoCnwGveJX0gEbkLk+9wjjNEhrKbn7l7GR+sgIy41FHsT9KXWSTPjAR2i3HJbNumaWycoureWR6f2OEk19kNh+joqAHoOLG8ksypUJTa27cCdWlAYU27LWAn7hwvwN5dFHcagcLjqbLhdlDlnjeyoC1ueRgOjjwLRct5v/ep2bHXvACrLjIJhMgZmQMB5I7lb631c0/4Ly1xLRuMGi58uEDkzO60l5scORO4vRiY4FaV0U+EGNQk6s/cnop/iCiVe/1/h61agbMX5O0okBJNNILuunzm+yXuN7P2L/LTX6byGDavtzh1I2GNEwj9yfXRIQbTcn+Kx1ocrkw+aNOjygyA8WgiAbuB+PdspMsMfJNmVJat069+i2DKxB72X4zmDSpsY8eYQaypr+XAXZuS1hOpiEBBLr1pgkSJ/gluMYjOsypvRA6ETWdCRu5CV2kvMywf2V1F9Sw1IbG/4oO1SUWJ6yhI1XqCvDxXjXl5bopjWEiZGRTAG1r4YDoR1PnoLJxm0KGf2yfid6U5YEkfBiYSPf0EnxbATy+oIMn98fI5MingR0yoieUPoD29M3GFwpgjIObRikdEM1t7yHQBxDssP0lwk6sV45CfY95oYib6wpP712GA4q/I97yciOH28FgFPbX6OZHKNODCtCy1+F+wZs5c2ed/VHHRyaIPpBX/IGqtOEvUVGX8zy4lqAZ9LJMyyRaQzDvfmnEc4bwoQXj2BC16pP88AhMkFZMo9266CeNdnlHg67BM3cd/vuoBCGvjk99DJhAOLJ6x5bZrMr9zwz0c5PoV61HhBxjwVXTOhUCtgs9zdPpKHZIWZXZOZdf1izpDvX1zCuZY8VIPIMWd9TxMi8Refk082VAEutfwribtMkE8vPl3pKmyflZGAZkl5OJ/cLcNvz8F/kmjMF4VPxQI5PhtVavYqhgQ9yoQcMU30lyHtCR13f9dlASsgPbt7myTe9LPeeVAwa03DRLIVpF1Mh89nH3SgeMfsv/7OwmADeafl315kun9S/1OplcZ2NlYzAj6Q+MOpcw3/G+SHVF+Fo3u6jNGzXVoOicZMaPp4JZzlRB4orNQ666Thwe+l6x5yZqm00RPWsFVFIvDGIIVDUMV22v1qNARB9NNF6w69G+pJujgkjj6nftanLA/7Vrl0f4XHezJ29UHW/T6bandMZRmIlIm0Wjg8pckX5kHPtBVk8iVd5lCbBXQo69TgCLxOYZJVK0/+w3c/Pa1cuMlJx394RVGXmLFDWsn+mftYyuJG4/QaFB0x27TLwnhrIYKVz3RIMOwOQrvY41tFRJFPEZ8VKi6uaAEm7bklkLxQimz9meyuf2FkClgeNEdycMqqLdQFTRAam+z3qczg57S+u7n2vq+DApVsjTzbztUUaiaenQ6+HCl4uM9NA9HkXfzbG8xaV485290LvAiNxCLnV33eaZ4tnURyr/uuTwWqvHnDrJgwi3PFR1TSsEMipw989oKLrGZyOdR8TTNqVilnVSIdn2JqSsTgAY+l4zDUzZ8bYjqVr0rLB6kYkRhkEgMmpgINczpbT3GaWx0+OPDJy5wuWS8lJuGuL5caJUT1+bvda66Z8yYzYt4+YqElZiRCJi4aJ30f5KxSigT4RgtZozuNwI0uqkUUq8ED0w29i29BPcCRpmv05GO4pJ+1QuMCjKd5lHIuOEPc0uFlN69E2al4SlVXFXCgpfIS/T6tHIZYV3pssOFPlGc++V1Bw702T57FfI0kMDQgVKtmltl8qoH1iguvuUy4xIZ+lRQzkXDNTi7mySHTNZfUYSF11IwXFMwUexw5jk/Do/mg+blqAGthmoRjx/rzXdCnaqpnVKjujvLYMsIlnl3T0jeS/W+o+C3i13EmaSBl0AIfbj1J+WfBUwfonMTDc2yANzJPC7qfmTmBoxurcKtqJbetWSSYDXCAuESSKFZETV4/qG+7cmrPmVLJugVKmDOwzLSdblcx4ZD1UbmlMF45l06c4GQseGtv6eSL7WmuvFoxFaHRgHcxBlPIa+33pnGjgPu7FAtJa2reM2xPKb6Oj94zXM36uIXElcUsCSFcAo57dz5fj6wU9EF93dGv7nDHz7XquDtamFYnwH+3VOyGLVP2L4jjd1fIVEq7Q16GRxsF+Kza/2IfhWf9xAOro6OQ+zQ56gU9b5KcD87hCiQL1N4f4+8MJGX8ZLzjvHwXb65zoodZTuRDLXvV3/aehoDoxAPgUEkIS8mNjd4z3q715yPJbyFQcY68zOrYanUFhP8fBltmdfvkwZfeV78cSvn4zlm2Gfq711ppTefBeV3T5ezZkNOutlGrnBXDl5+AF3aA2AdhDSaQT4FpnDWYk1tsLUR16ZWeLFXJGHGQa7oFN76SSQuEexDb+TB6+RBCmZs2aQh55zONcr3XOOVYOAgAcjRX546BtsmAUhKgoTlPMvFdafSM7LsB4Go8dxFZpBH6BLER+knaq/MnXqw8vUuT8MAJEV1XazG96r7p3LaxhlnZMM+SzYkz6rdd6TKSc+22s4DzyQK8CWhnngDlkLY94VZ7R+Ya7MoXXdNg119Cbvirq6L497tUaNZ0bZs3tiB2bI7FUHkI4Gr1Ae2BPrNkx7pd/bohcinJ1BV9HAjfSilcKuF7fM8ohBhB4CXEFYLduGdUMS0Hd1HVDlZ7bMUH6y3v1iQr6tIOW+XgcnM0HL7BJanilHrqnJiY5+n8axKZooKobugkqqsc3pk6fBVzNkZnGd+0Y0flbA+LzAARzFscEZvASamggHduG2IqntYF1G6cMpMiNapJDOZeu0wwu+uUKPjdTXvHWnxosJgijNhTAKuTY8LbFhZzcei4LheYV4SJclE8cUD5S4gzvdL0KAGNc2H0NJz/0QhcHH7iNbRzOI/xzviXx92xxaxhMKk/koAIf681ELi6McY8x4Opxpr9Kps9Zs3PADqQPOf8kjUAL1+sFTpE+/RjvRYv6L9fNUFvzB6BGvWXHyPYG7ooorUyUNSs9xUl2AlmC1jm+awIHJL4df0WsfMcQrLmUrkqJQ9tzGTEhwluqgY2b8Tg2g5V0ipTROu0Z53BZEqnFz17adZ00PAfWRyn8SuUvS6tZ+VJgZsG79yiw5m6GCMVLm67Pm+V5fqoVPXYGJc7EYPblRKpe9pti4zPW9YdClDExkp+bp4/jMpFvRgeCK/9YOhgPZCD68en5ejWHdKeeaotB+b6BFcmMpu4aljRy4vDUi6/bbp34iL8/W61e0ndQOXgjbkHelcJYAGPCc1yETTR3WbEmiz11l3KSUlCPSl5X8t50JQGWvmPOITVagwcvkGssODVWp+DbllkNZ0Ku03cTWgqfOxdTjvy4levrD2q+52QBL2bTmck8JHz0opA7WyyQN981XM9I0JpMEBAieEvEZ/4k8CQOl7wx239zd0bI/YpsCweqUHJFkDbBWUhHe781QJW1FDMeVSL0z3nhR0rqt6uJrJW+CtOt843DHRgtagKhPGBpvzm6skV/bvGH8vhYljEVkFqbHIP/Tq+4AzCJrie8Kn1OAnvTyyWl5BxKP6GHi2Zgb1tHuKaJtmrPrI0X9iGOqlPnJvJESRFum8jFJFI2PNfjCYp+rq3DB+4JYHLdWfEvSHbk0pB/Kd5oxW1wxGmblyHJ7UICB9vANZH1t08lXSySIzxyZpItaAGtxVA4sMTsn8mN8dA6oerRQWanCrlk5x1H2v2JEYvg0Vd06E4bXHIm5ypf0eID3Qn+Amz50w0NePkr50MDI5RtuVbBGljaWfeBnk0hJue5w/kh9DYhbkKw3UExcZMySbfQyyGXffzosnDUEqapSAv1+ErLKXXdGXQlw3rF/G7VQlf88dEvBaoG6m0LEblIW3UdaW65zzDeUtVPoRjNIjmwHYCvn+3mjJ+7524fBbLTrnn0rtx4XFOaYXg/WLZiXXo1uAvj8AbDfqk3pK4gJYMScN8AkP4eXHBgDxyTwtBhSh9Ht3kgn7Y1u3oKlcGGwxwRiEWN6bupFsuq80p+t4is4wusAMSihdbjCCG3sFcHXuFCzXGDwdXNo1YyoSVd2YxlM3LozoZl38+09HlldBaPrbNyxmiQhcB9NLE5Jzt9N6lsyAcBzVun+HE6Ke05/b9F5P0li9C0CE3pzxyDNKm/bSIYwtixr26qcPArNjAQFMtpr3C0sfN77P8s9c91YJU3lB3ZsoVfD6lO6j0vvmPkVRHdHMtRryKUThZtimI5JvT3CkMvcouPXOwtoHjfeUAHIzH71m7d7dsfE/7Qzc5i9Uy6c/D7EObEgyionTSDwrET6T1TJi52K10xyHkVjZ59fHgamc+LoB/zacKjXphlMwGRwxea4lqXRfhq9nHb39bPe0eLlWDrcXEIZi38kCdTOkSGYd2P2AVyuPhess0eseGAxpLvGtNhCPnQp8DcRrhSJFWPRMC5BaW6vwthbD13t2eeruJNsyfc/cPBzyx81dVniGUDX6OEJM/UMHHoTBKqTokUcq3M3m2UeYaF8gVV0Z0vJkOBnmEAv0LJWvUgpUeBadybRdcxhEwEx7QRMZheHJK8yqjMvHUlrXzqqgktwAmzLEONLDm68IAlBDXNunLuD+qR/yM4t5qaGyXtJyknBK3QiXunDfs/XKLWbGScOEEadO+Ph0/LmoHMIK8zmyU5r94J3IA+nZGvjTfSAfFhMOuVCx70t7UXW9fOi8CV2/hZrnqOQc3ek7Zl4CAqMYHoPXAQp1VmvfVtaLGNRlqztQouZi2u2IerFBUDqwWSTWiiPZlfTrudb0shlMB2SjfMYiTth8lsJBp/V4Q9awjgYg8BIBHYzZcLUHgQu0q7oj1dwa6ZUlda9gyHKK77HEu+exWf21XOBAaqaZdtdKZFEvK4W1v27YElYUoi9CCz+L1uVL2+STu8yYLOi1LwANQlBAA++dZjXl+DsWA9YD9axBsW+7/STm1FCV2mI3uqt1hjMTlSVNaXhPoBll/ba7QeP4EQXhj3DxfjtwS/dsivUk6WfpPI5R9IERGk6af4vyQEaX/DrwsoyUoRYXwwuHFi6rY6T6cne4r+1QoXqw116SBjhQV+tPNdWwypIRBI+jGGgOb75yw50Mc9Z4JbMMGjL5s9h4bywxAR30P+ure5YfvRCy/ojX9FXUUrZpmMkpFavecXvgOXFE3wv/cTvWLtT7Io9xiUSoNlIAczuA4TYkIMLG9dEpqNqR9x+7EWtrDqGV0kF4ByM0ACeisT7dr7/stLPceiD3DY2puC2fOLlextCv0qr0nTSelnpsZoHML/5iQF4bPBi8KAwnMjza+NmxLC4Z72QAs+tiMsxtJsvNY9YyV6LHWRGs8sv4/na3/ZFYmds9uvAN+6eY7a4NOeJsia1leDpSuh8RK7Udy+cWgFz/Hyr7JbI5JrjFSu+EZ6ZyYbtmSS4Vu1S3QtFgJE3ItBl6SAcXnT2e2md6EwuWiDf3Lb3bOU7GWj5FF2XUs0/TLSdVmzxhliTohpMMEgd6WHIayaMDKmRdV/3MXUV2oSGIfca///cTJr0YtMbzXGAVoJTSKccBUrBeUnfE7/0dH6dw6TU8bwpOpTbRsAyZT5YVWFCGklrhhrM5kW7BdyBUjzU2mwQ0drkA6YPpWnsNhDngopqE9fAf/urLP0IXcwYy4XjCnnF3jQFVqXZPxU2cp6tQe9L6v45W0U08KjDsLi5w9XWI3mUbXQ/1JQvYG04bSCTaeIN6bSINB/1qrjJC1UanHIHB9XV4juKRU56OwpGf6UPGkFuJESaI9zJu2vCvHnzgp5mDMo/vdM2d8z2SwdBhkKXhqoaE8sEuTQzY98MVTzffskKI6W6eICKmaoSmnP0Jo2YNPNQkADA6O7TGNY5At9610E3k0UJ9LU6FBD4qpZwAPs9r3ZF7ochTUWEVewsMXXvgwwW3JD0m8+qOKCvLSCrJZlwvO3Ry/o2CkINNavnL3y/1s0IgZCMcB44IcI+g4gcOFXbk5YywN6pqcIt9BUN9tFdFqUmETCMbSmOUp3UE1g3alcRW2PbeSqjVI7jLQJIUq3SL+Lr3uI+/M4Qm+ABhjrDh9CFuHRiEPz81oBcq++RnEgA6CkjZ3R8vpGkE1mZC8b9WVPwvnhev9YI4qCX3R+YQrkDR3EB5F1BRuQzQ/n+tExWkxZDRlayQGFyemBrMOCetRoareaeOmdARdZY65accLiIEGHOzuKhuCbnApBRrb334gBucMR5Gh6VnGJbka5V7BvNEFtAWqdl/waAUKGFgenmnKT6bq0uAYnBL0Oke77GDFcJTmEqjLQQdmq6npWFw3Se+liNd33JHbKqeJt3OsqcQYQOT6Q8OunJjFA7KjYOwje7pAMaVKrYFKXmhMpe4FtvhJkJwdUqhTxNji+5W0bBS0CoBXM0YL/WJztgn/SwB5RZdfX1MyyYDId5SDo9ckixqFRr5chxgVsMl30rCONzbvT3DAgqPilLKdgp3ZgKU5E3AuZL5dsw6EPOGImCwNxPym1hkrEVqpEf6q8xNEVweJdsUdN4dBHKQwPEg7W220iv1+RTzDkwszszoMC18UJZ7hVZaD90t6DaBd1ys5qV+Wc29mCXmok+WO+UOokeLxbNP5uDd58O9VBnb7U0zAhZbvajzAVgyCIKiQwx3Jg4qtIZdCY5NF70z35WoDMKrajDI1yQ3Jl6yVnX1VU+gjXXQ+ffmLzTVJfzYgVCA3M+iOAm5oCy3a+P+gkHQ9c01NPPfTq48n8f7wZcX3G/hOKgWJJG2ZoCdDOH4xlXy5WsNidpywLMPPI/lWEu786UeodVlmeAwswXJELp0CUittA0wYQ1nQqz17Gg5ByBpriSfjYUC7IK/Df9mliiJKZM4njfAX7GqCzETvMjp/1trrbGIBYSHNb57DD3PN9C6bbZPopKHzIhR8HcmJNBQS6srK3jT7G3ePWeN+StFcPO8LZDY60BLOKC+nWBsXGWWrxuBiMlVgEgvmDkqlP4lfqTFhTu4/QS74pXUWb1yzv8VKjWOFfP07dn/CTGWJMYWGCYAS+pWpCXNtDAzsGUtYuD1XahaN5iEVEl+274FhN39mAOR/dA8qDcjwBWJirge9MqgnkjVEFUocTaYNh6MK69fMjbBDL83m//CpKOC2qltqfOD9Mb/F83DBA312AIeGHONbtMKYVZXVZGHJx+O1UQJx59IlPFy3FWZgG0tLIPh82Bdq9f3rs+p6XPJaNFY4+MIw3CmxcovG/Si80qLJ+sElHIfKTCTDiBhxt+7L21RlHpbrtXpe+rU3Pva2Fumqo3Mq4Zy9c/Kj7xNsOk5X14prd26kKwzp/yaQ5ifQm+yrHxJyFEfohqWPTROWFFEFTkOdFwO+kGQCIYfOYsWcTevE2v7bhSf531+8TwDk4uZutwsTRYPIuDnEkD8BB53ZdPj3LOCzIPhYUKqtuJo8M7ZNceDTXq1XJdbWOU1tGMpd7pjmXTNZR1XUWtMJbZomCgLP8ZPIMa6Rg38PXcKQvv6Jlh+R65CZzQR5ocKOUopZETTPeJNb0akiNJDXcBiKPPfavoDs1IXwA5AYL1qqDlLGkqqQqjYxWf7SNVCHhFrhRhSQ5GFtULWNcqJEbAh+SmGdH6Us6uZwHcNSTa2cc0dtjEcrVDt0PbeZ53KrytLXOqgJvREcov3s0kUl+tYrprAbsgDvhLOU387QOhnQJopSz0i/HuNh38DYHxAE0h9hIxn8YXPtOR3Kdk1FbGfXEypNvH6YriGTNE+HFNo1vGYLh1STntj76CL/pfltzjVVejaJ53wd1UKq2CQtGL707QUyzVzT7iWEPHPlEDw3Lrl/ECd0IlADFdaYJk38FjVLLi/GucRuJ9ySmtJ4/UZQ/TRf9DLO6P/AwCJNv4AfksB37+I9BlrvzhBuBJzoieWmowzWvda3OtUFGX+8E5obhLYlFofy0bLNtDmSaRWE27A2hDlte5ljYu7sTdN9WngV0eet3cPJg64Y4KyBTYRcgLWjNLRlIvOS+jF7t0Sqy1l/Y4xfrLrn6Ut3nAlCAMzLKSVs7/by4XCCWYegYlQ6a/0cLAu8iRN/ijXgBaxrqkhV4laQeMpSH8S6YK4z8KYEcj0mAd/eKOJDk16I3rva+umwfGQxeMbkfNNs3FEOr5MBzjBS2y96A9iVfjxV12qUc6RHmsIC9xRwynjkOWpHCuyOfTVtyEHbsrlDMMCOVExt3iO4t0ZxiW7p3ARYgKkYAR52qO8lvNYEAJ9dacNucdaMZcjPMebWNouZwJr6wRiU29j4mbEP4eEar9mUUVoBe9CJ4RXiNLlstWvyzzCQ2cwvdSExV3FdlGaWmIBSLhzbGSAuBTx3Jve9AYBv37ba801YFKOuk82qVcA6Xluuf2ApfNUfHEAxhrJ6oktQt4tmXDAgzww6Qa3YKcdq/q4i/+nqL5NVnlsJPEpvIiTf0yGVDcIF59AHPvfo9Jkw/h3vx1Y4aBteFLwvHkJAQFmFR+Do9Rji8xnTgSC0ZPrKw/1pVEo9DXOnDQRlfD0TBaEPqlOhlXpCTjqf4Qzt5ELia5G69PGwvWVJw52sAyKZx9vXlSiR7pt4jZnRLwrzj+GSaYw0Exj4IRELKNeK8u4SMqqNRXN+BlELI83k6J5M6GAYv9cc76WDwrgsTuL7NoC0orYSsL8ujeTN279+nshg+1I4lZ9orZBIrx2fpvh24k/qo0gUtIIIFkFO1m8Vs2IjtDPjl8mmXGGrKVZt3GWY8Dx8Uwc3faLRX/3Jyw/rFwKiQm/dTvpyHddEtCPNuceZMxd3X1VTChXmpK+enf+49ffW4SJdfe3v4Bhkw0eiNtLZO9K33jTefuZJ6RHoojI7MnA1YmimpXs47qM0uKtmcRxebYBx9NXoMGiPEJBA5dqlzzHQeLWp6CEnCiFOpAam/0Riy7TJ1Ac51fNc2oUj9auyxLlJE3/Zpkxrt6fpsXdG5ElgFyUiG3lHOP5XuLen1qvL5HN+hWQqE2JudS5Y7jjLwmONmTwqLIM0BCi/M7FDkUHHfzOGH408mcEuhO5JkGT8DUTRAUISt5oZoGlSwrDBH0Ga8sLLDIQoNzG/lIyZGQTNo4yMMdd48TbJqcgCy38wuAqI0queiSNsjAeu47v/po/TCYXEW7TvgcMfJ1V4ZpoOBGnLN7Gy/DkaLY2vVKqBg9cj1WrT5b2Q4EkEWIMeNND5OAIX1MQvlWW8iFIoQlZ49D+M+rnExSH2EgAqnwlVvObbgE4QsQHj1awjz0EF8JPPVpmgx7Qw5cw9RRnix0XQ7re9ffcm/tjtRbEsnLwxLiQ5Pen9/PlE2auPc+zjDohnet4LF0zP+rNB6IsQUWNmlvQGjPp3hZmmNbzTJYWN1aoqQoOhG8XNPWQha+SHeRIjHzdwHG6mgIROkmwH6L9o9UtJRxho1u3dC3IOZWT34+k0h3wk0U2ojh/RsNYdUG8RlxnOJWhel1MQ7Mj8ynxe9OivBJ5dJU/PXzmDwLCYx96jOwBx1uuBmUPtoCUfdXGvQcvY9W2PVwOG3AE9lD7yweqsCfhdi2PmVk7BKxIBrr36Q8hQMoqOt2mFNUdZiLYBum1Q/uD6w6nEbmlMJ13tWRR/N4eIf+FKSX+EWdn06C7iS1wZDD2UND1LUaJD/sErFsYGJdyLODw71qwHUnQUJrMIjqw9qDcyzmXO+IyHXwyrUTBFqOfgLXpbkN8Tr43CJiJV5mVqC9w340MIb8pzYxRonEU8Mnka4c8re6xyF0ujgYDdScNyDBtu/fKpD33AGDUTjqw5+wbMdQYytu+aTWpcphXOuZVxfhNYUetASCoFzWuUXTpsXE+Gff7iKHr/w9L0ytTTYKvFk7NlD/WnTCPzmYiKxPsNqFZcTbq+CIDPzCMqJByXrFJwQWOfMimbALfr2yFAEzmbqADkthX2V/fly40HK0TBlqBCTy/XUC6Wt/qaCwmcf+MuYbWbDUa2FLoLF2hrtBImzn/ohzzzI9GBXRhKF7aqhsZHLvKT4QyIRtl/UqUD26u8XeUoRH2QTJpM9YiEhaqsY/aPp7uiq/Hx+n+EPg8NxikPrXyuYAsCjkweChBYburyqxhAfa5VjJ3riAN5Oeg6JmBnGB+l0FxDHnXsm3VC/tJS0sCKKu2iuDT3elCo/LYpEY9tD9BAz9lYPFBBmG2RF85LOoaGRQ/5I1D/rtcW4uFOe3YPU+FW4vQHrt1p+4qdYBTN5LTNfb8u1K5E59oi1+nlqtuTw3AIdgfRg1mqgKBxv9m06neBCmkJdfThBrIkiqHOJuG0T0B8mT3MlHqvk2a3QcJeLk0QGcecMTLBEr6xImNwSs7r8SL245NSIgcAVgOGiPxc+kemW2q4ebTuM7J1Sxdxmrrg2Xau8GvsA4V93BBItNQdxzUpn2GB5oYSsOCRXRBWueSf/MJMKhLyjvwM0+rf033h1iHHxv3t3/vzzENhcprLD2dqnUTRm+a/lRs8uKGOmtpHwTPrTTauAEA7NdMOxbj/HHzkv2/dNMmfaG8fQfg5Fe/DbZkzOAIeo90E6v8cbKlHxLr7RJnUqQBDPJW+p73rFCAJ55xSQ8l6U6AV//IZCJlv9Tg7n7aWfM2jq4hAqIlctrOIZ+SxifickewimTU+WvjFI4vCxoyvCJ4wBSt2f6K/GnozAs3MkN7zjt8eiEICzANCmLK+GiGb9fFVTHxqGI3aXHlzHJU9q8MJOrblEPDYF8lLOtUa8kKd4C0taM+NUXhovYHzOKyez1T8UbpIqCaXwdIR8TJSn4tnGS+0Azid6jZikhCIuzQDaCt4zkBR9T4SehUogfpc1N3+C/z6OjFHzDKbors/TRX+Gq8h8qoaRem41vlwFzPmT6iKO/GqBB5yQ+wJeximg+rydHvSRnkIcdAHtdHI25tt47k8gq8xfxHcFIWzQ7lkfpYKgPQbe2wGlEOZJUGZ5EviawMkgJotajOM0NHglUerOyou8JB7hn4KHXjbtDI1NoATS1yPw5y/DLFtMGWJZqU/J4HL/336TUZqYUGrBhC8R915gHs5lk930WHVJUVJ++nl5AKftXzy6PGe8F9FUHAgV5qEvJyHdTAM5qjH4hJomcruAQQQpLo5G2etEc0MYOaVh8H2Pmwv27OuazlzjHlpGCYR7wWPuord1BXa1Zuq94wRrsc7OE0X5ABM3F/rkKzuARQy968vJYOKJ4SrlVOpCusg6HCvPBfzl5HBVt39sXztJsxNHa8lUOdfqyKYfshhHoOmj2wGDQCC9+sm1c+p5xUYD3f7cP32EjIHGOaSh3N70m+Z0rTutHQRka/W8MmbZUXwgkEsmotxXzsPpqE2MX9yEM80FP9901bKDXUi4H28dpmblBkHWr0BOni4yVhWOSEbPteARiV0aPSn3lU2sAjDjDD6oe+WS2Hg23BrNEMxk5UNZ2R/2kpTznJ6/LxoQgXUxGVKy8rGyhhd4pcq1AtpozLbQSJclUSL3n/ZzjEpkgSt6FdRumYNCliKb58akD+azW0OMU0wOl0Nx1SWBwSTvooSpXeqtjAYfTJsaXXtsfEwPHr7v7AVFpAgEeEi8uKc4K2iWOwVZF9v0iFIYyTkG/5qiPOWBXRBaR1vO/OyY2ri4h8M5Ad1xioj/DyZzKi1w5NaR9Hf0WWsz9B4p5Q9t+/MC7Kdvxoe3CO4nSIQDVZLZskXLIFOcqM6OL9fOTojLGYbE2xBA9xqVAzJCb4Pq6fcsfXw9/Oq18YN8b6j9XBbOav8OsJc5l7QioOP7nYQNJiWMqVpavE4HDGjE03SSKQX0JVF+pjlnC/qnhSY9y9Pq9ekG/WwM9XmK39BZs1HnV7shwrA4+/8w8XammIU+zBQug1MK5AyrmH5+ZpmaeN68Zn2lA579FA7gaFC9MCw71GdeXyF6ZrJdwWtBOtTb0ij87nLUuob4Qfym/27UhG7Ty6cdqD3FJBrq/EH8Utdm3pLEOY4gohNGUDNUznubksFCwU9FJQe/NZGjFjfIoC/yP4TOyr8t79WJ7N27zGRoF0ojBakp3iQwOYghb9ULNTqGbnUc/Np6WXjUoKn6HLP94RNIbC3o49b8BrOfSVXw4m0tLbSD1pTHafGdYNRqdgFCxM25cEWX1V8RBrtiGWjWhOCIZwSXmc9wQSepGShBBWkbSkDe4yVeYc5qZ5tcyWpeYVJEnFoHnjBT5vFsWMsXO6WcQ4oCFIX9xiciZI7qqGh7gwi+D4q3iYptNNFnVCbKMjKoNhD36QZSyeZn/Qy/xt9oT7KgsUI7Id7+hRCBd73E5XgyNmYXZ1q+LcKphA1kT1WEh4MwrNbt5+fuhpwlPhpgAWdfun/ztAhYFgZwA0LhQvqLfAdaS0YH3iK4qcJc+h6jGIpNNILLioUF0RJNmUkapQ16ZTkRlPc9zjKng4XD426Sy/WjvmxrYcw2K/eKbjwwQq+Ft5O1ZL5TYnIcoTBgnXHH3Qw0NEI/+WUvFZZuLOXVa5aIM+/YV8RP5vlYZKG1m7JPH4ll/SYaxpEVgW+VrPUeAU7lbEvDfib9Wbdvm+GyX+8Y3fUz21pdYxBk0Uod8KNulbh+GkLyu09QRnPEasqH6YpEXw2QYXNkF/i+ZU+2ijqmPUJNiYfDjKoWv9GzDPRxTgJxRLjD4ySzQDUT4MJuUuapLrpcIzy231dNcavTjUDCNoVbjI0ptkXjgiDkhnPF6tUUBQLLbgM4QlX9mp2PYUjH9CUY1wYIKU/dsG8kxC6tZQ+AxcbDGm7cn5fP9v8eUO0VOryfxNZd+38CiHfhcI0h9DM8JnrK5wqKoi4kNi4TODlfrDpMoQRJl5eSH311zlVRd7OMbq6c6envhupAtbcsn0Fsbnz3AKDbItIjKK3EYWjUSeOsxAiMQWeHCmA+DbS2xF/AdyqgXpnCIiZlO/2svmJReTVwFWZm8b/huVoKRrwS1BJI8KBH86ASssHFMvxE1T07IO4LBW0bfj1uvNq9mbnlXx3pKxKt8zM7WYVJJf00s+vH4541qXDfjvzXA3qNPc9lvKVwxaSViJHKYjmMfYh8+PKWibmDM1wYvVw/6LG4kfhaZMtK5EExakcZTXWP4pVx1H0HdvqltpQRsgh4rwjNQpwOhgXx0L3IU7jUDnL5GmxockR4sXNoz9aOH65RFcCjVp1cpEEhT1yF5QxDAtde4XJ2iUHjYF1JADmoGyjXtHZAyAi8X1JEzKK4pIrW0l1748sFVxGF/5WmRXL6ACrK+ZtWHxv3tF3IIx3ZfhC9DdZgFtz4DEmns/yHg8MFDgICeaZQ666Dn6yOKpsuGnu6pfN7bzkDXdLre2vUhfYXTX8005KyaRLplai6jvJwJ35WpbRkBpPlqRew2MHQkfJCXhezkVgGOHUTu1tv8vajxoQCiiaSQSsN+f1fy6eOOIFrf+FOkXMzqHALSfOBTIw8TcRJTtdwiFmkJr5GICN+vqunW6VIjRPbBtyD4vTVI1o03i47g+02VMLR4FXElDMOetAc1Sudh+bLyQxOT+c4e/fIydlVRYBJ7ULyXMANjxQRIVAlkn4J5F5sT3n+6get6x0crchWIBFTwLGFBBbVMUlHHTlWzSFi32lr3l91akM5D4hVE0GDZsFJJRqYv7fW+fNYAO3m9YvHMgrlBSGOujmGAaCluPmTIyOwr9X2oz1vP3598IMB4b7ojpp3UzlB8pFB4Z6LX3b8nbw0KUxC0kRUwo1qzdcyCjgNBGNKRi1Lr4bI7ktGjvmQqcbL1FE4wqnifF5IBaW/NOW3xe5BO2ICemwX6TDTeiTFKEOInVvkOWmQwli30Yx+OaOtfScVTmCdGVP0AWTKY6iECZSvSpY2klFCw02r3QmF+fErJCLB8QRm7Zn7C9hAX+cG15CQDh57ZnHKg94IMoXMZUQsP7aTR3apys6b4jKKGupWI59HOGXt4cq00y8C0DhvFTztS8R/pt/ErM1twHpJ5OMlLFg/sgSw60ZUXUjw5rFd7hgklCwym0LFFxzsRDxJd6DAMmEvHlSG3qKzOR7p3E8PsyPoqNLBCNdMOwq5lM/BlQQ53BUqU8LC9KslFdTlmBhl9KHliY1PS9pT2rlRblP4tVT744jBnHmz8gTxuZo9w65txlO8db0FmHvPX8KJOq/tI7Y/WyFOxN/VocN82b56c9GrSTRAVJN/hYB/OlROT6P/7DPfS0CpAIYh/ulxNbwEj3F3glYT2QRVHsNGLxUChLTlV7yTxSTz+umuxaZwRBp4LPCgMZbYgx2oz0ai5zy1qD7/gPX54yt7Pq2AYIY6oVZMKiaCHhnTHtZDrFGj9akdB0b0HwQqBL4Tl9NCjY27HWAPPqDpC1+RV+81M/yhFqtlbNYsrTEi33CwaDh1Krqwslw9Gsyx3ozMeRV5Gg2CstSVLlz2Uf03CPKT1uO4ST6wXCHRRyceN+t28a8b9E41LNPdpsTenzCozkFj4TSSA+voy6T/O8ZkISRxDS+ohAuEPl2EZXbEnlaftDa3aptsd0erNXFdlhEn7CvAJSkfqQGijPrvdG2ofxW+irnUGKKr0T1qAWmkxgJzqtmMujIiNtWm76fBbKI4BQnzFgBXbr4a7wC8f5lRoCZxnP0ehzzpT4Rg4fhGJeKZtONUpoYFDaTt2OD8O3mOvA26duBrKaAG2KWf6/b9J/vYRN4y82aE3PXMb8lpYYtueWWhd0A1DAq5Qk37DCd/mQSxFdg+lXwBLHqydjo9bfgLsF7oXLZjsVEa5NM6vDk1nSt5HzWge+KwGaYN8/b0vkWS02bWbNwstmzDajw7o1R7L2hnHaSK+MXy+CymMTybZgD5J7xUnONeTFfndDtiBqA06WJT9iOrVHvMEVC1FfP1aDdLctZWoqKnMy2iawtrGY6craKpxU3j0m5d3RYzR2OHMZsCwVZwMsgibxR/lYLpxh9cUIBMU9bO8ZHuQ55VWlSZ8kGtGfi8qz9yXsHEw5cxirgqt4qFiv+yhcJnB4xqbfGL+TSYe6IZiqaIJSHSj00Wk87TYbs19wyBversRhAgncVRx7q6dpdpjWSqxQrFCWGgdyOD+yz4eE0kzgOmGOqi00p5B+Ip8DP5FUN4mF8GndCkAH9jeoJuPKhdBEpvLhSPU1Bgee3HZ4xCzD7u6DJ9DCC0oJQBfXyP5t6Q09sgQfY8OpcazkE2oUGcPpZ34sLbpGyxwxWKe7I1dviRRZFknqglcgWP7EIU86gIL4zUb5HRik5Ump5bvfKlTOW3a2UcTyat2iQuLiGIhr2aKBJS203q/6ajqIglPuFbBkEpF2dnrsEkB2XAtIGJxG/RbXThE0Oo4P/HnwxPV1yeStfGySroGdO9SeasqedAxeiJUwpRdjULPqwTtUBUyReGUNS+ZMAHGD3r5EakgBHPwuxPHsCK5oL6MHoqkZQfsOvVqJ4Vw3jiOfAfQYP3wmYmwVqB2a0/puUAnQ44ObonlC4V8HVUq15Y2UOHHwUoD8irxOnOhxlruNP+5Gb+PMJAqddQ/9z/aqxvrqFhMZugqc/ZLG8bjejmNeRNiKGjeoqMhdHzy+iRvlykhIv35Bs4vC7IoPPfb0+3RrYBlyCHfjk9LgzAywteZTv96aEyG4krQTGBEOWvcpNx4cUy2/ORc9HSCTyzQifeOL2EohiEOO5vDmOiNmGZGTzkWfBfF/iG7S+Hj2xM1/S9XL6xXE1Kdu1XTqo6Fm1wPwlHODbBHpcI2SVvbzm2I+6tJ2OmeoU0vRIHNSgLLFI95pLFzh+eykFkRHeEBkiS370qwck1SF3HArB3UcfQuifbsImF1skYh3uDpFVoTAHsysvzeiKTtKNoJ7HXtPWe6gxGV6l3To7kPdDs/wcLnM6c8c3BGqP7U1h0d5HBesy4TBwZvDjTNmzr+Kv8YqXLs04AZ2ikTmJ19b0ZosqhWHnU6ByKBPgPbNjAxENO9UCLj+qZli8+3Wl21vGa57SiTrRwbUFX6GnPv0ez2iYK7Y1mcZdeKQDU/9/+D+SqvmRhXkNd2bvXOSGYg5BKVUd4dH1M03P4Mdg8IieGmbRpJOLJCe8qWXTitll54ZWp3LRDLvKqBuAjFzO5vIv/wEGGxiTNi0Oz61nwkJIPUd1ClPeyoH3FoWAN6yh0h+kT+HQSnuNGERuljAe+z+jhvpDuLnISgxfjPcxJAGq2FfAulO9dusIzt2w8S+clxFZCWFNC/yGWXZ3h6e3rt7IRqUxOu4yQgrcFyV+Ych3SuxZwm9VvHKwfG85YoVrq6YfOmQmYB9HdCD5kGb2FnhSWSLKOYReZXN0qs/cqZtst/JezQMduscquPVAB7Ev6ellRnF+qFza4mC9FEnP5piLhU7/CMOYTVzwGASvcEpcBlvlacCX1yVB+FElToiMVqQ5YiqvGSWQAgoWT0qhhu/0E+sHEOmtPoHLvfLqTZUugkOn7uoiVUB+YQqV1agMAMMQ+4Ig3c96D6ziRSDi4DRAwzcztknaZ7OFDrS2ZWWovv0dqrIaW+Kq42ytPxDlqd4ObgSVgDMtItXzUQeZwCI0+eIKNDIqVlFwfLXp39QbS/jMs2bqLqVGK9B+mwjZsGgAGPy6rzEMOvdTqIMIGrHKUxxL+f3/4YezeEZnyIGQ7O/LFa0/7iM7Bjgl3MZ24dJrCmCsfC2OxK53T/augIj7VRI3hW38iqNfILt9nUCadt70Hv50AGn2kRNfeQPe50xSsH1a/40YqAp9EhsjQM/QXI0wqPfzdShYobRwb20BSua3cDDs85WVPdZfCCylUvon0/pevddF2G7tAIdzGWWZrD7tJH9uz1cWu8PrVSTGDi+Ks41S8oa2VnL4sUYms3tdPeLqg8ggKM8L3KMlXyqYfmLhIuzDO0WaKVSKJgwEV1qMX0FJOL7rYUj0LmOB45s8ZsxyAB1mIjiN9rqcKXHzZj+PhxczAQoeiQWNAzZvwcBeqO6QGCf3eLJh2k48GVS7mM7u8v3CLkaA3llbbSbbvwETWnCxiBqBi9ScvziSXHewE0B7otDBuR85UmQT03ZxDG9PLbUQ2TnRCLbO2yhR5a+EoTg++ep0LoHI/GVTeS9rB76k6ZdBA/7J4nBhHAlGTLBV1id0k1vW0VMgv0RJrd+Dv4VzKcMAZNGEwarxPioQTxan9i26GEs6giXW5cDDGbOkF4pRltgEzj5kXje6DuIXodm4icWEfCtXV/6+8g2sPkG3eDnjPno4cj0dyVfUcz1lPwDgxI8v0Y4Bn6xxNrl482lDA+BBEQ3dVoTLC7vLIou8h7FhGjHydnp6c7IjKMIIjwMaJf2M9yLua35xDB0uMaE4k7YWqrji7aMMnTpXfD76s9ZFEYrS3DkjiwUZbNz9JCgaG1lvUOCA9s9lzBCZQwlsfzpVrDG1/obJQlTF1H8xZUdY6nSGLlcoeGluY/CxXyZgoXYpMwF6vs5sM2NpiV2zahfTjsY+kW24NiszRaOdHvWXGD1qTTCnh83nRO/cn0PQKAzNy2LRKxiZwVpkBAuX1egN+ZE6XWqAJNDNrHz17WZn++1IXwoqhSyZdebjAeT1v7Sihy/Hr6MT9d/Bn0INZkdDyVO4Xg70NliwIcwu8Gc6TRPOn6Hw9t3/dkVmxG/uuG9fNRxtEA227M0pNbYoi8J6yhxDBeyWGpR2QU/1TLvTTTAvSYbyUq737ECbR0cm4zwyt2zb9fLWfS42o4KuOEnziDrDDCyzQUvgUseG81oF8v9JZkXVwWLl3CJBGnsm4FThOxJg2y4I+Y8QWfkQ9JRzjGRqGT7JIvjagwbUU06fX1MK9yVXy6cCpsKLiuxKhy7aSzidbnai+nYbJBqWb0v24I3mE64+nYA2QYMfIRLn36C8xl9PGa0Eo9wAXHHJ+xg6qhz344OxR7XjreW1UU42i7fEpnmvzCcaDsfoIXvg10kL2eaWQEd0ndLFBZFy+AJDH8EvCmXv6Whj6limMizT1f33CmGBHLepKJPwIDyk6LMhl3pyIk2YnWEt0Z9+TlDuHacnrALuLXb82pjeqZJA5u6O73zWFg7d+KpX0n+RysF/80VjwsSOjYDLzJGP18drGlUY9xo3swsI9XmHhEOjI6k7hnnDi6GOHXNz/Dc0iM42dldpJcZRqlDmRlgXuknA9sBeDnUzB7B3YV5JS4jHmI/ed5zSIriibU5A9sJMv+aAB68Cj7R48oZbiA0KGUtvVOuT6F1iQ7D9xkcd72A8N2rpkB5kCjOyDQEmot4bIeyh/ZyL6JCyqpkRNqqot9xcZeecD9R7Uk9tTqetlF9JbhP55oSo2JmE1h29mX03CwwYBvPEkwp0qbgJZdnTlBpnsm16UFl6jVdMLR4whinZRgrg83azPUnnvseyL+b2d13f/frpolcxFHACND4aRLJ70vE7ZkMJXggO3wAueinu+dIn51ScvrPqza+mtXTRW8/2BscJrLjWy721kb/zxH7IGXImnvJO7sh2TRCTc6x4VIudovjGkA+NQKFfeGCTQgYUM7E457BfxB7SRp58DPIk2xw3fXMk0Wj4yqL3wYtkH9lXd9rorYFMSbTRYv3A0WkdVcJ+hf7rAzeZM3c8uEL2w5JgZOLS4gcI4WrqYI2e7G4mPHyJ8VTqsyMO3IbtTra1S8OnRX/oHv6I2oP8zdD9MdF4wIWT8odP1mFEDeRjvO1zBcCvGvUVGdqVvPi7yJXuANzs/PuJBDH9vFz0LtcUn8KZ0cCMn/ZRvntGd+62DFMVH6pt+2N3PSqvgl2uZjtUc8OIkFZsyo+Yz3IEaoduxyDbgGZaEmOL9mv5zLM1he4vpAXs1a2/lPmjpMI05HeRPcKfdeS9SFUe9ET/XQOXmubvorsmAwd4hLGxW06W6l/DHMQzDP+5Bn9Iq2BsTA3wGPIJzxkbzfB8m3h+XebQZXq7huvEizkCdh8uXvA+Vbwg63OZ0gFHLvZu8NRJWfYDu2drA6h6aeQA+TGj9a4Elm5BMGP56nK7nnL8u6ro11ff7R0hGNR2vQ4PdelocgMg+196yLzwSpb0W2JXyDv9sAS2f3rhnRIBTPjx7q0WKX77zNfhQPhgOBTliKG37eTEPgrjOmpQj+X0fvAF8mi3lQFQ2bkPRhodMGKIZswaJ7SewMDLDM0QvdNiH3UPBRXANwHFchlCUQd4VEw/YE3MWHUzhVcMxZMTi+4y4ta5nl7HbuARjzsoCoYUZs3ePb48L6S+v/dBFKhP9ElrmR7vFOo8pW60im8M/U4QmD9SJTkgfnSAD6eztcNETrAb2l8uSUdIhukIiJJJEY5p19hPwzUzFjeqoW9+s7D9ASrb2sRqCgU9JjSUWvvsVqT1lDNLGx03JASJ5Ir3V9XMcZSPV3BT5ke7qcRM9DUBzuasqC3u4lCczQzm/lSSyu+IS8tTyCSeIx0cp51XGTW6wHY1LcL8JeZ+y75e+JFxjm1EWXjmQQqL7a4LZIhehOg2z7wIRDZpEUxAk3TPgH1miUzHDv0P392KWPO2mh8SF1ERfj43+yZpH24DvZvdMJulDkrCe/NsRUZmYhU58FWucT4H3izUhjyvdQQ6EXjlLBWA9GhbY2Q+KJ8mHFQU+cs8U+tjRdEeL1fgxAT1xccx1bXzFz3z6hiNzkfQI8u6/b3yDxVoQeqA7bvDk4EzMzUegwdorXmfoO0eIvkMmEfso9crRaWZxq5mYFAkYBnVeCgMwj++Y+eLyknp9O7EHdOkfrl+pDtcpp2g5Dh9uSzz+kiscu9ueBpdnucgjYB13tix4rWDNAlOJzhMEKvgjBV/YJRZvgPVMfFJTc2e9CicuQQBHfodHDOHWspI/tDNySSv2qRb/cqhuvhtZd5J70H/q1So708OSunHQoSRqvpjJps5lnbFBeB1oc1+i3fCt57Oy5r0UmxQmuzV3c7ndpi9o36j3HXoG2qazk4JB9Pn01oLZf8YpWabh/NwiPfMEDZ2DNvsCbtPoCojQ33kHPGicgGkuRI8d/1tSDRownM/YLMdJ0DjxdytM8flmOMz4hr2wPt4bfIT2A1TUnKloA4rO2WrcPlKwnIcyC7WvbJzFo1btd2/JfY+IzjnpDP/ju15Dku0T3T7dOMJG5zKwzDq5hPkbUY/axlkLQUTSFDT3J+kJBaotyqKE7bv5bct/eiWsXJaRRsRUET6nABebpGo6bhl8Fn1/Wpm+s7blOsDAUsS0Ltsn1qe1iLS3pdV+4bInNwW3L6fMLiS2MrTczWuywcFlLJCIErZEBsVi3IR+oPt4OpLlYGCER6cxlq/XvF8BVOmGdsODQ0WLK3gB5RuWt3RYu4kqo7P4dh0smynYzttd0O0PZL6VlJDLuCItrqteyLjrNFkZD26uxbxdqwbTZ0oztx+dbASUyDHOn8vcG1NQGMFzb8QlRI8ZpcjDhhdhSjWR9cAqpBnljQPzVDc0ioXgEuaLZ2P6A4rrjbPNCGCfCasintRAI/zQ7/Th2pJ1xoV46H2MO3Qb/xuEm2cbTz58wEeucNc8WN3JJl2HAw1/DHQCRaTpe0EW7b4Ni9plXh8OrERpRFNZk6nD/Ah3UNGGa/dGM7HyIFgQTF9ss7R6p7fhKizjDtoGGdHjI0y7i15gBIWSAearc9Pz6L9d4OjFVtQq1vQzMB9xGWwhD8KpaYContB0vnWYwRk9PUe0QCv3kqWnJ+i1agV88GHHwptkyHf1LT3gkmmO7O+FEvvcgonqm0g2SSqjsXbcaYA761CP2zN6gNZWnUFi0aMeKu6LNsOwEDxMwSPkAcbbjGwH3XDgIvlwIecEgiygjlBb/eDXaeOxoIcVa4vb84CbPdenLj31K398dgS4nxNu3N0fljOtj/Gtk0uLXto9AwO+nWWhNFSI+JWF+NANHPGQhudxgDhzL8R+SJ7XLo/zqR/f2k8hEKzqjR3qIPzkX+5048xauTllz+g1hxM285tYtr6lfqqxxyRMJHL8k1bpg6EfAhjbBnaFfT6j7+nyq+pcjgCQrHO12buAGG3dyLf+u+fT9TYeI/fdupAj3KdMZWouwtS5Y7cAjzcJeAXWVjxZVTXa+Snv79BQcTl30KWR+uP9lLzq6WmJUGcvtoU/Q419GFNyGVYj0OOxAnvzyE6Fni5hHI95HyJDhw+nQB0meSP0YRabxEBRSe1N2jjP2W+v0cuQjTqRnqEkjhyYTsYJGSuwdjnQFsfknNKyXomiI3poCeA1T7oKyuT9ytjOjtoMKs3ew/jgAxjh6u2Jlx1t1w4A5vvDagD33tAKjedBPRjQCc4Yn9WFBaq0fCVggCRKwlVxXWlATveEqjnp4SVbbW6ud27VoFtZvnr1C2n6rsqFSORJ5rnS5R0O0B+WjAg8lVBvPzo8YXjZSBCd0vHZLDoFtBVq+tK2yC2EfzQDJ9rpQkN0Ur6kIlb+prTiIDPubGsnoLigSvIu8Os4T2uyUpsImyvEniK7crE5OGL8ScGHfzrYHCkRNw8QXrEY0sdJ05jHXldTnxePfCb+grIhSRJYCtiCa7v4VWzzi8wZ3prJ5b9mnDISzZf4Ry5A/NKaXYCB6pRTxdbTaTNZU5qD6jbjeF1rtiy8lbfGWmAO4oLPvO8p2irHCvzy17/rHCwczXZgWzJLXUy4h2FLb1BxbmgVFia2vpb2kecOvZiTFCEO9qLyPtNlI3Ul+BILGeNj1/K86Xi+EBuNmTbcgmRlqP+KBYeExPAdPn89eP0nUy9KxYfvcLJZDldrI5TWYW1f1jI3Ypy00hjtZnlBjtbQ4EUhPqCcK/GnGWCtUfgs0Sz++wwuyYCIac8Cu0TgOGqJtSdnQn3lD3tbPCRgQK+WDmPQQ0iodCQHMD2IQ8G2AynlJ2nQQrH0Gv45JTqaPzVp8Tqa0OeBU9mTZRYmBl8otif0J8cP+yYM5mLwnbZPz1v6gF4zGr+QaQcLOaPCz8g14UYOqFcejfbeN9ngCmtPmsiV7LhEWN5qotJmnmZFxNzYQB1N6zLGwkQQZJlXhh/BEGDTXARhM45Cnpzc+h0DEsFx+SbfLBCH5M8oQPSPECiKi0BycD2VvoqB9L1qw7VrM2ox6lF5voBEB6fEOgnM4BTrgXl0yorLgVaGS1TpAF81Sp6gKHmlKhUrImsEuRyl8BPJDz5skDkg8RNBWGL0p2wbjlb2Gxy68+S/4qc0svjhf87aamOPFyQakrJ9yF32XAf9MzS1T994TfforJ28z9iCsBI5DQ3bDzzDeVqFNXm2IKbQrrar5ciRVm3OXsQKv0drfokhiviyvrpJSVHGBackTOPoj2UlafGp2miSdctEmD0MIdFZnFuSRcW2PzJfTKCmcwKGN0CGkwSM6c6w3zZTDdbvxQM4rvpNJw3DT5rELd4BPAP0ORecr2ccSIJXdqlG0ioy0RudgDj5UUi1/r0S4PwDCabAiwLLuzrffO0nrEWEVA3u6hIZLL0JbTae7s+SBu6Y9tLppTFWUyo4t5CdrEvV/1S1Cmz1dlM2WwJPO9RK9hzR6DTvApY9Po9eHUw2d6WrTdn85Nnjc2RU2qFWabrxHJhSrlCa2IGhzmHNNDXjwA0pAQ+t2DSzQkgELHsR0l+oYSad1JLenZ8PIgtz0acpXjl6S6Fd7vw90HHc3LlPoFcHZfrtpna66EE4d6a29ojvWyeXeSS/y1yue0+t5gdBVQCbUUni20bp0v33KJuJ5VbBLES6CKH4Bt10rCpf+l5yXyhnOvRFoODFK57p7bRpaH1gOOrcRL/m8pg6ly4y/cLx6cEohq42yiQXAJwEqZylAwls8H/4NVe1/GBDrvzcVN0Ko7PVOXP30LUVY1sBDI6zDr4Hpl8QUAgKB4QbENZ22pfPLANxdnJi6uaidYSFlRHA8S5uVY/wNfXgrmHtlfL3CIppI0LoumEli9xyJZpGGha0mE6NC4pyP3Ac95iwZWvaiudPpqlpvjmj+YozlUNLjauMXr/KC5CQH1A7AhA1FrwiOw8JrSVbFKBY7I5662tcrPQxGYBblgLtTc8/t2Rkpjjw2R2QcKqv0Gk1L/y6q8/mwFC1/FPY6rDyOGn7r7xCqB5x3HVeRmuysqIa0XxXD3BRnssd3dMgaLL8tE2YYR5A6GTSKGwagwXwk1nB0g7mH7gBHHry20NlKkA2wEN0ReyZz34fee+RTX2VWNfjIiBIjTFkrgX13omwrAnFCz9UYGkSrCEMqz/43wfdIZvqdEbo4/Hfvd2eIist6j4vFgwVcYCoLB7YufnkolauQyXo8QKKxcrIRHbqqep+F5idaPmhWpB6dAVEbSfgAlrLWgXQO5WkSpANe5vnAtFp85AOoU8ancYlxLV5Lfs/pBxywSQIMx82qGA0dXa6KBIhkxxYYmtgj5PlmJdwtjT90dJW5IhXANkiUmHjSG1hKz4iKWwjp+Dxr6P/A4Zchv6uda0xM77a+b7Mhfc2g4rkdvu127GZPO7UVMRSAT55LanB4/K7zoWxiizES/oCqRsriUa5AtoPpA1ziM+uE40w4yziR8Y9FGDNhYrawdahoKL1lFKFGrwSi8EkrUQNkaQVTgkyxI4WNAM+nv/Br7PatPHX689say4q47NnHY8KH7hO7PA6D8XaCB1C1zBpuot2ILOOtQzItp78qw/F1SWkvgB74sz1YuTlG/5fImuWKCx2LBu0UBiGEEjTVr0lo4q26eNjgmNED+AxjUR6XENBkgiYuW1ISdZl78qPkBIIEonYNilLc4Ng9hE1kRTbYRAdm5j0PJJRglEs3LazZGAAAwZhlLAUNelLU8F9W00s9Y0q6awyh+APCt1VEwJF9ptIOXvru27Xv1KCRHXnGcRSL9C0UkLvz2gvC/T/AkL59jFHN5dqtf+1vbI/kZJ2HJfe6ZUjycXARBmzEHnEAFGM8G8JJhuAy/6s/54F5fu5cauBC2yyaDkO9GExiG1nI/sk38rT4fxLAeOpRcRp1iOJRCfVwJKucfAOI2QGD1u4DHqS4ruS11zwpOPf1zQD7be63b7bhozsBdeR1GqCMd/CXe0g83sqZhPlEP2nts6ybP1IQ89JaiYkBOSDV4OOc4yLU4Zt2GNIIi7ognE1S2ui42PT3yn19+dESktOrpn2PmuO3Fz7FNN7/+ia9pzgk2fOg04LOo/24oxL+ga5A0zGgxZ/YR80ru2URUhWXQpcWvOkryV22zK5UAInYVDS5tJgYr+mcrwezTx8M80Rt/YbKu2UFu/lTvx9phQOhUWe1phKejXniw+J8ZMeyGnSQ4CmJnuVhuZXmgHR+H8l2tqR/r0bPi0RyaNt2RtvkesUfQgW0S6oU6KxEkTXaudVxuyHGobFrRwaAcjWG90A8j4RdIISeu8PRz3/VwD2ool5Z79RSfZZMoU7jqzRfHg2tGhnZcfS9ifI5QUJz16/MjkMeNXBLW5JK2CpCWFStALzq5LMvZjTBTRt9EQ2cG8v3OVJckbn36Rb6ZIslblFP26LlMKI18/InPzvMG1lXZmkrOUWdEPoWmcft2GY5c8yZzlqvA/kWMz79PczWnS8h/HyKBPArCrAn9G7Sc/rAiYwX1HsBBpK+0h1IGC+i1ob9EOKz/NKvPa7v3n7MkgjJZhZe+khIp86QD2GfJCElVhogRJXbc2XDpuLwLeL1zS10rbvV/98b05hjj3bDx1XVymkk02L+pXttnX38kvXOeu+w4+srXu7X2pmzO82ghMBoTrbJNjJCaV2TiUzNqyamM59gmiTaUe4Ydj7Y+GURuIvta1cC/q5oWayaW/sd86bfj89YO9sa+CP/4WQD9gQHzEz1+tC54tCD2xxFv27ui65Gi+9BTX54dbvfnIYBLj82GIdR0pdTquO0E77518PbofPanp7q+00giOrycLZPZv1I9g2MDzcWdIfNQuEFBqiVa6W0YZKEKM40hHeP+Dn6V3YgmZ8PCIxtnH5AWmgiWsHIV5CfEPYUC+sdgKUi6ThtMNiFgQsjBb/LEhnqGskedahSQkgqw55EDV4TsY6AGUZDcnvkAX6YvC1sqAVLD26tVU4zMMA3I0SNOX4evb1eAupDXAAyMBcCIeXfSMDg56gg55D2aVFpHHmHPIJv/WKQv5QHNPb0h1hbwMl0EJCiZgtQmX/Xpgem2m8JgWY4Gtc8shaGKc/8IvgiCFgjOrlq4+E/gygckkq8vWvIUr7AS1ptizKs+pvbUHTDzZ9s094GWPoWXaT9cwri3xGk3XseCybh9O4PB1OvvSPlaR1IBG6i2693Trfzkv+L5apYAKVqmUNKFlYYa+T5lJPrM+zhZbOBlbz1YnRxYSyzdVc1e+P26PalSEZB8sbh4CmfZDzt7TyPj1wE9e4alJ5/BWRu6nJYUCu63bEKZnmHiENHz0dMe7dstiZFy8+vM3egT+rA5GLq8LcBfFUfjkbZvcWMy7fr7ZFJ+hl63OfkaisoNi7T+61ruzgd+BBBwhPvJqJAXvZ4RFxU2gMX7E3YLaNpS6JPIuQc17V/fpEEsj3gx4h4otvmHjibgY85YFR1hrYH3y8cxfzTBykYw6mqXL4gGPub43mrzuB68ql2c76XLlqDUflh5VI8dzMaHJ3kkMsuqlzx/I0tPWsUScCAYjd0kMSOK+6NLSpUNNBkN+anZzZBty2e1HcXDtddn2cKUVuTzeXkk5VBcAyz/gzOzR9SAadRSE2KWjMY2ozVeplXlxv6tyMQUL3vyClNshwNDhLZe1KYWZCI4TfCnL5K8XsNeR13M2ejQIdOR8U9AUZKiIytsEJNQ8eErI5mFgwI0mrKDxncnugxhdyFY7jktqkD3aMrJbBFZx9ofrc6xp1eGVLlx6+kQ7gHy62vkbUxeJMawx79JpV5q0DRP46panSUjdFPf1xqKv8tr8Ow0kXuSf7X4dhwHRPlIQuQ4xuasejWYtGJYIgdeL3R1/DQvaz0jAstD/kAb6kaAtD/JefvBV+yjHQoKl8vccv18HBtQuqUBA7XCHkT79I7D1vFgP5J64L/4CWButYVFxTuN7/g29EFfuCkZieQdqnft2v9Ruk0lRq0rDOVbkDqEkB4Avp5AN5V0W/rb5DFJeCB+NwY4e0WQfCQuLNimMH/+OFdzITeeWLaBVFTS2ZGsxaoThRuCf2t8B9ZJKDwhyYDI+pAcpTslrVgKHI+/ckuVd0bD3/tQle3/DW2NPgXwuDvwTHaa5swWd8lqgDonCw3bX3L/l9tSe1oLY+ABB1XBMyV62XfuBa0qdB18rUCwh8UR5TnnSKUNYpR96PGN827K4JBWIAPThD0N1JevVwWS4C/M9qVT8dp1st1HoaD+axgH6rQO1dqwgvDvDD1eDu3NWdRgtdRcqjVyGIQ6RjmAiaFnXpXPjT7GXx6WzlaCIm936ZtrEuqyN/SNAoRm+DbXgNUgj6biSKEPbcrzojhIpGl7f/1zk7u8ilIw7eF4V0I+OpZeVl7bSqaeRninDLNX25FDf3CBbxhH142XUJjCzf2L4c9Ivqu29UoqbyrVnu7Y9+j0Hc7xKijHuC48U0j2OMoGInghwbOOmZ/wliL4TStdICon17WKlY7d9mdHs2G9z9yip+Yg+C85t6G34bUj4ywyh8FCtOALyAuqpM1FG/CCrfXlnPfER3mjwxahXt4zlEIi77W9cEE5BZrAptD0rHFMltFpTJEvBKtFMvzrrS1v8ZmBdysM5s2+a1yFiCFBylMZrtVfj6LfJp72tTX/ktw6cE09XcEKt4XlDCF1jBrEL2ZzmvkCJR/PEhNNFl851wstplr8CWPdUdB2fOQfzlhRG07vmuPXmgEv42bV+L9kid1xp0DhqgowNGii+6Tm65BVGjN8juQpDNCyorfcoCGQIZjffXCPuS1QCaaEel/tc4j1eMrt0PyJfS1S8hdM9kmIRtu8JX0jrntBZMZC1uK1N3zQnicO+vph96zsuyEFzt0ooraNrLN3NqNmSB7/LTV5JgrnY0AuaTO888Y48gtk+uFjCOKBK6ufLjoMc+PiLVgeYZUB5xaEZrRRrfSdLvR9vwQIOq0pVI1pZQf/YqDfZZkRh59Xh55ykXWh5GDXCkFWXR+TTpzrftLEd3EBauQ/AQZAECOQ/pPKxFjvAiPXOgBqyyNtuI8ksUO/m/M2mXJjsMK8U1atAXNRFYuxEKpQQANcHy6B1UVEncytanZ6yKcnwUfWHBiPqzlsjsupOI2jLrwiJJ64a6+UI5baRfZ2jrkz5xwlFaYj1FdqX6X5itmNORFGqYBJsxyorGk/0VjQr/HyCbxt5zPzeEYF+2VYm+BMOPXzKELmbhOBg7mbzv9bJ2cRsCnCdHUvsmhUFug5FjgekbMlir7Wmzd7iEyfWAxCFpFGf6eYVnmIIDAAV7O4t24tDd+5F8xnx8n6R32qrM3zh6Qt7YNvdpGj43V6meXY53KUasBMHIWN6jBBw8fO7ySPhfgF3Psg1R1+xp7N0GzwUFvBbJV2xP7QuqO0W0tr/qfDcp8wTacWCyEsaE2ltRg3tlz0ID31Qb4RkkVfZEBmc7ZuFliT5e/4/ecQzKOzH76RGxmi2kqJ3GJ2cYNI09q8dTww46OEHdCVfnOAf7/bq/uPQoJHm4W4hXZya6vqA9POFpJ3+u3P9v+GK+csUWwdwEsW2aK/jndOUh2VLJijWs28JWkJUWJYKW0BD8D95S8Ohv1Zp85N5ioQDmN1PuiqVq7n0r5ZVpxTJN59bPcmcxNvDff6yMcF5cYVk3Xx46Yluzgvr9Gnv1IgkWPpTW/cSlC3LL8BbSKLttVnXA+wUcVgjZxI80CCaotg+zDdX7JDvSeARlmm4ix459SuB2FoEx017FDybxTw9/q/zH+T2Y8V6sV19gAg5XTDw7C8MPjdZNxn+sfMIk8JlBJwH6vagIBjouCerzRqEx38H5KcQ+NIhrAteEmnNr+3AFGMcTr0qY2TFEvfV5fst0XpWEYOLdlqe3RTvB80FnQSGg3zsOOR6lVM6Fd+udz49yPCx9gozD2trsy0QhksMuN88rcT6cVm3AKBDa+K+xOHufxRZ+atx1tEn98V18j+hfof+MwpxdiBn5oCmt/fsYSac7F6L8dyBGCuZNecUuXPm5E40QBPgHG8Cig/CScqk6ozOW9rUoR9q4P6DqHMKT14xslWAHI9wTGFzAdyrZvXEXWoDRyvfTGe78AtUIKuZyvYQ+zs0t3dMN46lvtWamM0w4Kk2Y0IlIrobmC0i/YvqvzgLd+i/0ZI01/Ai1cqnEY660strlqQkIY2fcs+VJWFkCef/uEoYtnkcQQOY5iXUELG8zFIDPUgp0n0ZoYFJCS3h6g/5e3hIbfug3XJ3BrnjOucN7kZv7F1+6EpzPbLifzLtCskq0iOuWLp3T83To/hXt2Yu9APDJj7yEdcmsgabymf7tK/yTHDk2PCy5XebS9vcvXijKTzhX6tsNSTVRn55z9g28gPAXdNqxfTe8TxPz82Ffa11faw22LHUIw/3u8p4QvYXiX5dgTbStK6VWODQgO1MBC0NKTiKHmeR4eNf93MEgi6bNNhd2Y9osXGP0BLAdRwr8ToTV8NUIORXvvKupobfO87CDKgMXGS5y0Sd4A1XQKIQz/022Z+O7fGSazMN274TTCDv3XH9gw7v4M3Vc6w0In3cd9raje3l2oepRz4wJfyYJTInzlk2ynCj9bhhDoudXWbe+YWwRl/9zNGs5c2Gxjcp927pK0PfQ7B78sO0JEboWTdoso5HbXgJNPRUg8n0Urz5hie+awWtrPwAUcZ3tjKL5euC3nv0y3bkcHIfs1wdamGEt+burJlmD7xDEE5UR7M1srf03der017FdiHWDBN5ONMuFzIEIPzP8osUnPhD7xKRhUY3ielBuBNyTr4kwKJgjA6eyT7mbjvtPcWiQG9H8BZJww5B3RafSv3bE/L/UgeSFRSOgm8qg0ZMNX+XlQjVz+HmuUbRmznsEz38YvFUQTAxIC6yM+P5a+yl2yRkrl5OTtY07MQ0RvAlyLeto/DvRDMv/tluX1HYvbvcE3LdEXkhjPC5ddxrISJBjXXAGge8qnRp9/LgQK3Gph+XdOpUzQZejrEk04s8zHmR5oT3BtnCZ5AWxB5LZA3SsA36X+Zw493MZZPA6ke08iIYEhXAhWIr1n18k1tZ3eZSvb+pbsrfNUydgHXjlF51O5eeCzHUvsLS6q3+ZG5OH2gYKMYRmh5JCBTKtN4UsWUszzahweHMoSuiUpbJycOoTJStNHLGIMtgAsC7AEqW3dGzi5GIYH/BQ+XNBxcND651AoOqQk75Eq1Rsmb2AiojmFWfeBGCbk5CHUKXMyEapBBJs1FN+3MlXX3OqrbnEZ0X3ELh55vOGD//mlR2b/o3TDnXhssTyVQAeSjbDAqkvrsUU2ElciwyW1dfjUa5iRCEPc0HUXdVBqOqtSkT1Rg4KcRKTqOi1QV0h1H8CHcjxjRl0o4ZOOMLTva/cGtAf1sgIfzU+dEcpcmPB9EdRUvL7g6MzE/uyBkJom2izxyYlGeD/hhcFi+aWVIIADZjDT3xOpC1Zohj7yVJNFRwWwvxXk89ystlNcPxkNIu7i17w0jrMr2i/mkzExXtR74cj4MeA5/BUJXq2pDT2By54t5pW9/W/5UnxKGfGvRQzPKc4JyUIWJy4WRU7pDedCM9r+xbZ+vuFf2mAFhwtCXnYM60KYc0kmkH1YvYI+283msvR34zQG2L5YmqmvxLEeZFgQ+CmRCv3M++vF26+t6a+RtgjoIk2F9Cih9mhGekOmIsAV0BnjOIhihof4tOL4Mz0WyOrFlr5CcuV+VNsOkTHbciAoJmei/VGk0c4/56QQfS6DpWxSiBgK7n4nzyH56NRgbKZ3N2thPhko0Dtf4/7xcGMJYz6skNpZVj9Psnk/c28y9VrZCTsgu7ZKfy49p2mMmjJshHwwVqbpbumQRew7JGqf3Cqk8+FbFeFXD3WORI5+M1xoxim1QFWztvllfGeop++MxN6J5C8P8E43bo4+RlQBKoembf3PMv10Ktrd9g+wxwOpQexOLDQTh2UtYG2NmnvN0GP+gd+XfOKySNpwe8K13jSG3TiMMQDTXTIlZoSixlTGO/nQfaP4VnJUHBYMqBmO3tdwFbLES6RTw8VPKE/pZOPmS0OxFRNx8nWRkF0kj/U6KrWptXlo+77KB7B1cMrSOxg154J7e9rFIL0jRwFF+kW0KfKe2T3En323fclIVx/+dcH6MyxwScbyEQz7EJshKY6rfj20ovwalpZTuMm9YWVBv1kArTh9TddJhQU2xcnxz6URkTWm8kYN4yVo8x2Ze94Y1tODaWzynqNbpArW5cVTFmzmuzB+IlCV194XmrSH4TrYt0Kpu+Fs3JxHTTlT4xkVnooPrAXOLaO26CophqcKqoiIrKeidEwC2mvXjbSXc0fk5MlApYnoc8TpdCeo74rJfNmPkYPjrc3mh6/fYTkVwtgyDYWVTxXs+1DfPRQ5L229r/j7JnfAig68Zq5ZB/+DmNdT15GthmpvaWS6vOwAQO948xGdw6nlbHkywmdHJpsjzg9DgCdF9yfJ37ttZTnr9/Xeue1f4hdEKhTQeQY73uZFKQ1WujVOJQhMkRb4uh4wciS/UDVtAmjTfN37Ds64sIj/qeAUYxyRYs9lyIAQ7nO9WtY4kkAWrnut9Uw0CEnGIAOrUJ4k+nOGKOab+fu2xWYe0YwLoqbxcipO4HPhBelwvh9zo+OgzHvpd47dAGaseKRh+ZXPNCva2D9icqmrC1ZiqIAnxdNKHqA5kKJBK7Ddz7aK20Kt5/UGqWp3uOrV83pfcqN+ND+sdZdy3nZKoKusEdKQagYhiXGnfe/09JG53eTb00scScA3Am3DfqfieX2NQhmyYC142yK5mElZnJR4vpW55Mw96rbPVK5ivQoXyEhXQ+RLXIGxy99ge84iYFvQin0175D0vx+oPlmvGT/39do/FjtH47hgH7FNpj8flmuzD9SgKF8aJEd+QOgyU8xwJ8mUjAaSbleTXTvq74N6DHPIlFtRj6EULN3zVLUWzjmHZL/hG/KQbdjA60YRNEkpe2gmJiV7FDX2I26daG3v2vfvN+uQ6FWXKIH0cya7NEcILnFbaxWIe9Zy6H7zQIp97hNhKsel1RhIeZcTOtEjVU/4h+DN39vi34o9ICk+ou1ncVPG22U2Q/3LwpT83suZc5L5LXf2bNirFW+pOpsUFh38qL/qncQAJ07F5Aq9ORDz4003/FUj3BNqPePaNLFPbpv9ZmkxVYzt2huFDdwEMrPC9XLQ2WTsWT/AVBIrU+V2E/7vwwVLsWwIGpRqZ1t8hREHcZTPkAGWKtVD1vJRvWP2ekn++7huSZTQLIwzReEDPYZWpvCDdFFweFzNauyxP61Zy3PUM0f/dQ7Zk8NQlAtVEkzNAR36FPaXaoiu6C/vbiwuIqFb+Kxnfu1vh3OGB9PkhW+Wov3iA0Ak79bZXAqZyNK81fNPu18vnMePt+dUzCYMzA/G0ruWj4tBeyIEbQa+kfrBmS7ZzmclmUO1dzitmLhBZLtoT+8aL+Cp1ZFUNjkIM9nakjoFx4u6/PQRP6tUalOQVfxY3ubhnbrVkYJTC7rsAmy9QY4ZSwHFD73MUBXLJEBjTaUgxLrSPmCaTnB/oPjAfKP+IFTDCMC1n3qKkIzxvpycYujV2PMfZrameGTq6NVsh/haeupfnwrHrX8sn9/ZgEpkkqYLZ1ucNVwLeoI/qTzbnk873Qx9MsHeABQbsIJ5QJhtisQkj5XKwuRAOQM6h48rAiHFlb9R/vTg8QXadmPimnV388YSrha6D5P8LEBTF+45aPbsU9Lu7hwuNkccfCu1nlcI95CCpwLVaRYDeQxrEjJHzJhVfEPGgqXhl7oh8+KJ+60VQ33Llws/scc1GTaFNY9I7LXuBhqORSnreO7DQsv6ebgTZ5/XC6rQpwfEQ/4UZ/ho3Rko7U1/mShkK+alWfYUO//QH+/YDjaS0H/2HF0yvE5tbxw6DAlEigvDjYS1PMfe8M/FyYuwcfw5M/rIv6yIazVPr0J3EgEuOpDpsd2YgcydBInIW8gSkQ/EWxDBIW87zH+pOVhDktgS5OcR6Zvn42Jz4vtQNYEdoFvojtSK+617nptr7tMLOr18nQTY6biagD52Xa4ZPdhDEbx62PsBuy5vvCklep0obe14OST5AskUycyMJUHElpvQnKnaGGm0zZrXSts56J8e2sMrVmLtuPbrmUW4NcUkYoo61ziwD6IrnqMXhkYOCRNW68auHBUCQ1JKA2k4VVLfZkc4VIx8EnedZI6L2wozGVxvAc0OjXjgesdUCxP1OAMLJ/v6rDnZSQxxZBc3OiIv94gR8cH/lhmBbzoo/NDuZoYg8jnrGZavD/cahsDfTzv2U/3thDZuN8p/U7NVzdFwvU6sZwMSVQ6DvwZDdX/O0eQJ3/Eczr4+RyLV/fU/1Dj5uxpk3UTEweWYw/UhPDGJInqDe1WAYDcZVoY9EXbvis3CjXca25znvhDndZTgyhEzPpQAI9akDYcjJMnFsIWmblKyma9+45vELotxy/mu/c4w6kAXNtJw6IRQjzg4fQ2peDzoDBIFvsYhAtq6YZw8Qr3bHKZE2HLcA/NNREqXQDKpruoKFAFwoNtYX6Ehy0sZdsO/KldKTG9bDW8sM5Ul4Mqqveg5M5IDhzDQL+praiZjCPcdzAkCzuz6XehySkZw/DrIECiUKoZlJyjmrxLMj255pHZ8OU1zzERU/1Ph7qWraKU7gqi+qvHF/f20GD/cDYnVZs5FjxpT9sYVjq6AoajuUD2miP7RlYkZjez3hUEuHihTioEE8oJtvstrycZNsUDWCmZZ+/T130XjfSwncO6PmERJJpu6u50dNvVRLOCn+F7WLW4LWmiimLfL2Ed5zBQN+wsczb1WTFmzk4QA+95aaaE5HS9H6I4gSuwxmLpNiiRcvDLyahFLRMWlfiZNkDpIvnjRM799RKPV6KUocxAdP/kzkwOPIgS1mZcC3RhR9ylHT3ah6tYSjAitZy7MMI2Q4l3bXuonaCDVNR4Svc70AbH3/o+vXwnXhChzoMLAEJHBJJNBFou+bunnyVR3xZR44hbhJuUmJh0imn4pcpw7299HJ/G2Z/wo8fmo3BEAIQ44l8u+n+eh+o7Bzixwc8gZUj7Fsh+iQgwA2R4CYJt4iEuT5sbpQL+UQDTRBpnOm6dZ0MBbzOwyKTDGsJk7cYoiESDQfs/jpJ0BFcrryWmv0WvO3Z2Mnlrw/SC2OZuxukw7AUn33Wt2tn90QBSr9s3sboOxyC0/lSJG53KnJXmhbRSsNC07JGCcBp03LMaOPl/lkU/YV2zjNlfvy2pRc9GfW+0yFssIkkXWK0BTDOwAXhUO9ZXDdJ3LLe6x2KGUr257EfDciv4Xirc/nBkEocWyAfRtfssL0kXTSpMEWcadiR6dqkIV+cTyhxsfhIhZQB8djS/54CDUwQJYFo5Dpmye5oBqfw1GKeFrO3sKGt97tLzcmCucHxLbEpJayzvsZeofy6Lt+tH9vVtj5HUXCjntZuErU/LiBxLvmUPj7c7ffFXOi2ljIij9tTZOyzUk2Rphj7cHPG/j2OnTdjdveH6+hi5ywfN85HqcElAElDuzo4P6QqfAO3cEtVT4RRi3McLcwu+aI288s8NA97G6B8dRG9FBufQzaTJ+BygMK0iD1NCa9jrnBWiX24ni2lNxaV9mzv71g/WD9PffnsyWWatTK8HLDbqkmBUmgEpsy3tOCYO6UdB2QOmu43IFrpHNtscbGMvuaIIVwg9cKxrTmECQ58KZQgneeoCVHldaFrdHA1DtDO1cgE994nf4r0Rec0GXXR3hDckfQazCKOBKuD7oSNaOg91bLuNhrl40CX7DfPKp7slMqXVQhih3EvixS/TfR6Th4TXDWB3byWmnAu4jAhYph/1k5HGl4IcB0PolQuOFSOJIaDcjUh5+N+wsuLskmdrgDDTENSM34YkjUhI0CjThT6k+HnQcLEnTRbMhP1Sv1gs3Q/GvyaaauTgte5O2WHV/tXUg8nN+R7gjsVpfvG+rhy8jkD59LaDi0Y7kFWnDtW6MgX+KgITszAdO2AaPG0UI8R+mRbeG92Bjx63SEcVNWj4DjGWHLeVaG1YkESYXuiqOCtE/2mfvNsrvIyNfxWMCkwf++2YwIu/a+7sdVvakViK3q4zM6qf1sl4WjHJFI8eMPN7SbQthkoUNXA+Iyd3HOFe7zPOKFX532NxbqQiCQ//QrStW4clbBcjf+3x6S7bMtbIUDtm93wD69C4jleNaIil4vqtSiAYjovkIU4k9g7PMoFukPiUdShnWTHNwiUEn7RRcph7ASXyhH+nxiR0+b8x4VjPCSCZYw3IO6STCJ4mWKOh3Mf/Bh29j9f5BKX2U898n2u+oWtYMHcX9Aw5YAiPa1LxGNNeD+OMVO2EbSMqKR7tUmA9uetz8Xpba/xcK6YLa+gV+hd1rmBGzGaE3mn+8CkctbB+hZSfLmJ0Hmv1PNgdKTcGv0p0LXBoGnmeIgnbNL/7Ph/aRmf+OZDiF1sNFDPQha47cFHnvbYmF+KF7d0G9/R/kH9GtdDTELYmZ6S1FktC0Td1WKxOv2nRSrC+nKwhUnVGsvcsVN4SdjHjOh9HKkjEgiQiAn8q/zJyUI2qXaLuFMxwxoD31l3utx0kP54rEyUk++yewnRrdpPvt+vXd0dYpqLgaDqvcG1IPc2hJ2h1506g92vKsLLtlaIrZ3XYiwthnc0ERcJjS/G5HECaRVxW0y8Ox3q1a4z65/XvSXBNU13HUBdN+ZpTx+D4x5xWXCfvtwC49A1BUtD569PFFuVJXMlmBEszoA2xVMBlXz8v3xVe7jvhFtKe9vzmKjP/VAIgjZz+0BDyazymarmZZ2aZAfi2Jw2NtJitkYLqKZpk7MXRzqR5VYobiYzdRqST/5zeKKXInaNi83y7Jz+SYGvYOj9oE/EbN7rYb4h9bYCh4IeWZ4RfaSac6LoE4Jxlq+V0QF81DgJfvOpsxrtzQI28mvmUJJ8IxAYOLx7bEDm6/x9MaHxDX6A7Yq4+dpjvcJ36N5BHW7Aqc2eluqPN+apkkcs3SZWQXEz9MEPD3ihrWTFh8XlOBAvQnVc/cklSAM/LIHI1vjJxx4urBldR7o/Q8nuLJA6A7yxitCbdqBP2OfTPT9pG5ia9qOvmi7KCtaOEniafUhIG2kZGzIWz8gSbzq24siHow/FiumvD/zCBOubZtdQGYhyBuLhVQuOz9E/eam7ye7ADEFcP3r2zsDDNGVCCE74JQnCbcCfem512Y9aJ4ag6kcpPmfkFowg1sLref4Ui8+NDLZKrS2B1GcO5jO4edpV8pxDMyAcDMcQxHzv7r4V+x5tzkGJGSpAvLSdqCNYgzMIl+E4OY+iwYtZ1eTrgpHvbKJfOBrZpCmzRTywFYSO9L0X7dq1rBXkqadQoxePlzbKEHE7WcPrRzcj39bByJVkAlM1xBikFny2r+Dv+9T/2+LkovAUyR93MRqZbiJkHZMHwr+fwwCvrxLf3X/iDk0nSCIrVkJgLe5EJ5Nd7Ptntd82JDS1+EVVdA187ckVESd2R6O75YTWEeYPiVfC+UacEvEEfd3pqlqwNtqFdWVx7AWEE0jwVZdNLkOXXc6yZ5bI9zwd95nNnV5ID983VepAgqADr8XEfZu68LeKjkX9xzFxdwDfzp7TfdPiBNbpitNypsR6VXCvnodV5mDLP9aqOWAhNnXa9gwTKAQcYyJSq7Of7Vw2T2IduC6FIcbxK1zzz51Jbj1FtgA7K1f1HgfrjK8ubKVBHLMcGKDune36PRbsc5fPu/evN+ffQaCWixdvKgCNQV1zQkMWkaSCZeeVZjO7YBzj4xvwwt90TS2TQ0xhCjVhVsAK7qiFjpt8mTH3nHscsyXbpfqhibPQ40psGGN3/P2WM/OIG2Yb00jrxQDXrF8k2KGlZ+nPCHw8w6YjHHNNx4+Jk9hY6EVunxrY+vy/PTmzyc8fNVQ+pt7LC+rB1Oezg8FbM4WVTgOXxYCgAEyMij9rQNgBr1dmD3rgj8qNXftrK23oUZhKqykPmwqZAxdAff5aKNa81rsfSCEBY5KCBi9gkdLrgEjfsjyKaG0yyAM3M5xgRVlFvFbcqcqXQZNGHpcP3pnuOb2Aa1vW7UhqEOKuzDQFAmJ8zPGsQvb0hwyZtJbt0mXmdl3cYXzdId+YVqrtFKjTItDRLwf9pIIwn7clzH1xNAkVOjFoSxsLTyP09RmC6d/3rxgq4Q7Nb2tdtqkV9jscdw9OQzNsJt9tHL0A/fDmQQW6QkK4vhSJuO3TO3jtikhnFxsxu1ql5DEvZuiVa0oPrAoGPEltoVBtvi1IGhw13Jc5ffb5UI80OI6KL/9UPSx6puLKRItm1RBFNzURcltljK0fY3kWAbci/VMq4NEMYtK2RsCeE9829rHyEcsgilOFj0xNCfZiITxmdbi7wSZdnS+qbYWKNkowG9X7Hc8xyn1yOsflcj+zeXaiwHKMjhX+tnd52Xz1QMgnxj+nAmETTeVgn68dmGnKLNZe+mBlF/psNudpQ6ulF1fwrH8PWF5o37Y07PNVWT40WqsSilaScPevoJlpMj3icq1H41X0lnDAVB82+sjHDGTJM5bsbSHPYfUZNN6GHWAf48Q7Ky6Z0KkMqYyGOV2DnzwjYVrgYJBQlkroxqQvGEWXtqrIJkc5QKUEhWE2S5cPygRIIvT9MaT5oXQo8uNsiybpbyQVVCeZcuNdH1HtizaRmovGbzCXZKIUtQENv5k5O4/JDBpk4lezfIhNwk2ONuVv/3lPSR+OztuY80cvY3XKenDgZXWnZFvU1on3tobBQG/LdhWin76rYHsKnfwnIXuUkA30/tOzhJ+5Q68xJ2Nu3eqgn+/5E741TOvKLfiZAuWJ2BL9NzuxDh85zUHylhGkKKYqygvYOdOB/CRU6/tr3q2u9wvW6biB6fjbO/OyYu81+pOadrTgMHxdDC8rWJSvZ5USo97OLvaLu56+xpMGzdlzquY++rc3GiRYL0dFSVacaIjKkxA1m1hKye/xyRp4cpOB+LJccjKH8wCwrPw57AihlwlaGQLu4Lr6xYjzovoaAgtZgRdaL6dc5j3K4QcZxCD3Y9yns9pJ0N66lZXlqpb5BKL8YQu59+yk982l/HhNW2dWJerGFBg9+CqYkfsToLhHwq2ZFNZS53eyFzdkrC6P3YmYjo3fi6Pd33xwJW/9NesqMUOjokaXVQ81A4U8s1pGYVESByhvYl0x59OeT1Fuxpu52742NOJPUF5iaBwBTigEaOxanEb6Lkgwlf8Asvrl4LjocqmihPliKpIbRQvLX+2tGw0g2MsWtlQwQ1C7Oo8ke4ywHYO42Pjy2hs/CuhBMC/QDAjFiNP6Q0yX/hUxX02JTCy/2VQJV8PxWAFJ58OILMrUXF9KbfTyJKve7udqweNOqOi/EAOK9DU+do0bgFCVkLwuZ7HEhdPHO/a3pSbqAzwh9vyU2niYMVaof4Cyz7eZqh8Fd8xxZP7KHrPLOSkrHAPlvbj+qIOhnfx4afQn5U+mv3IiBhJk6oSwKwpQTZ2hKYLa/LVhW8LPKJ6QXFMuSVPkT8jYgTozbGYHIwcPRfvrqKoTpMOQhCOBlc23KAoMiEIit6f69GSy5hXFZHPbD5gHMsWiJcn1SMwXx1S4q0SmNJ2cl79Cy8O4zDb6e2tQn8eSgrOB+M0jxOCVF6tM4vAfD50nYkcvArW57Q0uP0VyUOEuYsYW772kusqH8CQY8Tlx3anEOhgdgj35M0TQ/TexobeHYek1hPwGibySTm+jjeok8ObIZb0kHsQt6kl/xk/aI9BdjlywxWAVmZDypG85yAVIvDgC0lqG/IAn6nnsd5y+PPrRQw9gcigi1+Cs80unwVaEhW1iqlR8TKG7O3lTkUjA+sVbXck/68/iwwUXPjTE/jiv7o2uh+NHYPR0nbUCrASpBmlV2sI5yR6gM7WQYlPWQG44rzltJh02vUSaeQ8/TqrMqlALdpCD0AMXyN7yURFkbTOwT137X/0qUlnBk8UsWxYTJOGW1MKagcwd0fpNDhaQ7l4cFTCF/GvSDe94EC8zxFUCRK+cr58N2h1rcYOFbWML/Dp0o38vVWScNX5e0YuvK1cf1qj3HM2oKD2XfPmep9JIBU0bt3wK0ks8Py1F+xo+QPov0R3Far3TvQbrDYmvq0KL7PM2XaZiGuBUfFKns14Z4gLm+k80OBSYI7gO0xMr0jyzLjz1Dca3JdYXSjDCbSGDTrGAI0+H0SC+AmZysZxcs7T4pxiUJu8oXFiHO71Ves05nJSD0/044jFZYNS+XQCOr/p5QaBsr8d+s7Q35VkGCUzd5tnQTa7TI2/UwNoXyRrE/DIUYpqDJCnA+4auR8hrvPw2SpZ5j4bU2yvhzOaOv835QUSDu9wbCGd36onTcR/cpdbEV8b8afEvN2CHq5k6CS8u7E1Zzrwn3ywYfA+Jv1z93eS4rzKRCrXBJqOA21ixl8ps3LrwrlncahArvD8F3TBGMYyL1v8BukIgiDHD2O+ENAGLxBF2IGg40/WyK5Cng/CfAXTy5jQiSjlxQkfwCCtWz4rCm7SdU+Nq+it+6EMVMLEjmpzCDULZT3fw712dvu7EvoeTGtVGXKHgG+IUd/fV+jI1Ax4koXh2sKkq+o8ydEyK/XG6CFA+e2tQHqWuRcf0vuvJC6eOpnDo8iU3B0cRRZmGuRr9IexcaKL2rsDWS1RvqSmgD8tMITycDYjHj84VQslqJwvq+MWxPngEZJOYS8+wXq+xbEjQp25G8DNQ+Iy5PykLr6MmEmWf+/dZKkOJGNJQRGvSNxuWj6NtqQs0FMhjfXAr2PYw6Uu9kYLGSFqP1De1cmQCQa7GsKWidUWDq9ncwoGcG0ePtxL+GAkKF7u4EbKQHfHs/892SGgDdmzmMn1SdW4MvZPjp7aPumaPjveaIaYmcgIrFWCFRpsMqducz/j20epqnMfj9QHPD3/4mGycm9GCAaPQeGG26S+OScbBCf/Gg06N8TNHtm8QL4PSpNnQvSCrbtJLd1kGfkYe4j1AjH8GwFJzuFyV0xHUn6XImkfGDMFfYbz3xVFhtzsKvhnzzeCIDTB3va8EVa6JG45D7MhgrBvfDvx+ByJKE6f+8UVqzhxifABNF+fPVV/XZHxkUaaj7//ZW1etlMXnouAyBeg6gZJlHgvebWiOJHVSVPBxa8JJOhDBtMDHBkeZdi/cb/8QVXzdvMCmExjG/qnzxNJ08r+1bzajj2HLdgw3MNNKYLKW+cFWOdGyFvSxbNt+ndH+6vtPWxc3LK10FAjyug0e1/lvlW3bDvuWqi3U676wU7Lpu5oj/zhpChSrv/z4dzgfOxBlIeV7/aGR1CqZhVtvAT5rrwxlYCDGNuPvYPhYwmPfSu44rB258sZSO/mGxZH6b/8XZuzDK20M7/eD7Y3mszHPqfzPDrh8gfyBbMLH6wSPBmu9X3x2ok45TznsjVtKKxqDlDZKDiFxnanmrnq1Jrg2PdDwCQ4UW+GQIMSwuJYVtsMZ7L93Hsbpe8aqOyxD09IBb0X/x9MYYNgcZZMTsMvDIP6KIFS6RNgVQ9VWE0wxJjH/+ZUA/cz65e51eIa/V5n7uNJfrVXvKnSNn/Jb5neeTtawOhPOEsyfSZYRtKssu/7RtQmnRydhyfmmoSpa9TN55prIQkDm4nsUCrEMltr8eWfKf2Tf6l+STpdo1eciaPXoqqFxKzI8k8Aw1be4KE5wHDwF8SPfo9RwoChI36IokptxRJ3IOqv+VTd0rxyFh6SY4QZ2PkJw/9PKOMFpc+mibiNEjGnY7qP85k2uJ7c/xb+3IpIx300vYVZKmYocEnEFJNj7v0yAZt6MkoMH6NizlBpMjik+u++oh/6tL4aOhtUpVtTTz45DOYJnaFyxC19ryRdzj7+bjotumhdYkF4vwLZZCAqNzB4YLDJl8QReFpAT2zQqN+Iu4541W/2vq4b2hqHiRajVQSE7gcf5UiAccZOeSH9DuPWnyXhFUH5Z2tYUdPGV2P9BKJz+pGNAAyQr/9EX2jNbIkgxJXCVkspXGfywQzANDHItPOXNMNT8tKS5JzfWLnNbR5Sy/9bA9J9Uqp24Lw/O0AW2LKxA0hRgNyMVLoTrWv2NkMkUtAEp9eeKW6GlGT9hVpYHLs0esDeoeiyzJhZ7gEo5betApWWty6offdf0ABV3DFnnry+vzUCyI5rGXd6ZofxpyYXmwpGXaeQU9I8H/IzVaItWx33YrLBbSZQD+vI0nNK5sLb4hnhQLII1XUlQamp/Z+K+0iLzy+FqrZPC3iJij60wxkQDz4OmoqRPBhH3/1UezD1G/oBSI2/s32wl3kl06GfJmuDL4xdFXZXDiN6mO6YHqCXfy3J2Co43qefndbv06u2bM3s+44v/n0L666WQvjhUyg/4ZX4s7ew7XwyTTWvoxSHnmw9FcX1BAiWCkmkyRh8O8+JRni9MtK83kI7tPvIL1nWFkMO6XpbOVW7ls+o8wjttXZUKq0RP9Bghbf5tlvXQ8c+JIFo9pL/Rqla2GgUazpx9f9VZeC39T9Ogd+JzczRgYYzJtIcA+MBNP51LU7jFn+rlgBPGeugJFQglrL/5/Q+0NO+AOqhjik0WPbA+FQOna+DUQNgL1t9vEgUuSkjglg8Y4q8ls8sgKK7abFVOzob5NqbUgO1HOooo6dgmR3Se97tmHsNLRiQ90Gtf4zcIgYhkatU40dCWB4d5YB9Ttort3rO9d0t/kMGIo6jPNsMrBjLTthDe9R+hmVKPzm+EIuoFupraT+u3AXntFykk6Cd+Wg55X0aJdUOj1hmxvayAGp3Rb1Szu5mMjrBVgKaD9a1hBGH4/RAXIYYYTL1iEM7jx5DPtsHTtOyZkOBQd6q9SeclPJWQ0euatobcgerc1Yy8btErNRuucYYsm3PQfZSYessU77GeJkU3NS/K3KJX5zTZHZPN0xykXJqjhlLLabcN7NLz//htDdvOmE8TNXPWDbdIPfUwBGsPv9laGDp3QXcyJk1fuZ1bduc9gXV16pZFhkhua18r//+OtjkZ2rK1pMQVhE/Zom5Q9P2ygdm6W1O8LgA8veDf/oBpX8YpKnSZDERt/1VuCUOhmkIDSPbtodeTZXHHFBjShv2ELzA1Sn1BwWMByMyqq5HE1208fzjMiqMbNBpX2HLqVkbdaNLhA5EipiC91ZPxUO9Y85ouo7YfLH02VXVYdP+qKsL9Vf0c61R8M0kcB/wcjhJ2z6R859tBNRTA12aS9sNlywk1+M/h5+SMdu2LZF6s/OEWPg4w2ObRuaJtiXXMvDUri2epStlR3hHG3sNQOf14PrXj+dbmsLCgrqayTyIeY4yjHrAd7jA9U1gPHAvfJnlIrrhHbzsbIC+MPi73eRQLjBQt+DQCGJYpwXw7Cxb94Z/GsqWt+FfEufuUB6M+47lrZjhjKtUk9gE5kbGJGLbXGs3jR0bO5DY647fZUm1BEzfgnIMtU5xU70OCudK4uEAQwXa/lYGsooDpQ/kaAwSjmmgiVQj1vWUcN5ZHFnFDud++5bnPBkh2qUEToK+78sL3njov+6bzkdnExKZv/Jn2ojRXCrOXZyoUDse2aeHk8G7MUns4w2kqJxtdr8S1TMMzx5fzXuSZJETPJs9whTezD4YqI0v9c3Y6ohW58xxzssM+Q/nET8ViJ1gUCCs9uKBG/nUgA1vHxfSvWMmJfZnqNio6F1HfYv/T3uXicGGLzVYz72MzSxFnTkZocmASFcUF/AojnX8rF3necKIek7cq1HJxjtx7qCNsC+3Q50KEqxLupll6BD+w2df5msWPVQNE32szoEEO2wrHqurh2sUx/a2UQBWpsK3h0RkilBGVt3piMAdgm8Z2X+kNcbJRlo0WsA7+yaAfg1jmg1f0vhKt1RwDAvPE6w/F8Rg0cqEGTzX32sm+wcuBkCBwVDpVPK6QtW8IYaqRDDvpmhkLdEHIaZ222qPle1RxNf/7+c1bwERvirKsVFpidC/AOyntWbgvm4DvoRfrXer0dNWCKrvFfDbmyEvWrvaATKWec65Sdtbyce+b1cG7yUiKxnEzAsQdowL42ldgg7MC6z8Nz7jJpy0pDvt6czaWXIZOY1HjgKNHPa8YSdcTibz4t+7Tth5h3blQmz6XKpzwGqSZ6oyFq6ONytmC8EFFDBZajdU1vC4xqG3ZFPlvO8ZBa8HKIbvll0rZz9HlRyd6dZblkN562McKqI0huHenz/w1U3u7cTOZXVZhZdRiZyv462moWGXFlygm5WU+s67EFzkGsGG2mZ7xE+4YJ5w+uBm5a7JBioVhrgcpueHLKDVJCYyI5Uzoptbn0WTTpQdg3Yotf11T5o1KmyCaRHsz6SEvNBomvVPJ6gNtGWG7wPbFkUU3BHxt0J6jprlfSY7Zsi+r/R8F3Ph9FxG+wwavtNcxw48G2VAaqtGYJKaShkIHotXZMmh6bDbpmN3rOSvgGtuc03tI5jCit40DQJbcL9Mmfoq6hiqLkRYCsK4Yfib6Or+8Ek8lVEGFnna6+Po2sPeAi9Q1xVb3DzOTofW2/A9sikrP7NZ2vS2lTLHXRtyfjNpGm3vhcm1cgj3gBBvIjiSj7HCgOy9fIQlejPAFT8UJGunsM9rdVPpYVGIVoEkFaSsstf7kgdW50EBbaqzEqZmEa0yL63zc7Cp+448IIqEv5sxCYxtLXkPl1FUfxDiTjMLeR5+dyEiGD9dM3Wh/lK3IccP2FkzgzSR5gLzArHZsGcFzbEvRopZpbBG1nNImtkX0spgcTxCA0iyerEAfx+Z6Ag9vo66bGMAoNiIfQW1/CA8QQYbTUyRWYbngDbL+tzfIjy/QcwzyBedzbI95Be0gAMTnArayZlIMcJFgjMWgtTQxHe6KQtXrruT6dppxIxAFUp3Rbzse1eInFuVBj2GU0OwP2mrBNClumcztqOLdVBoloifOy7hIMz04veN2ZhSUY87frWiqNq+f7JbDkxLoe7diGoc+lKp1zq1vqXiYnWUt9VLxtuNPRTYMQ5Cq32aKieR8Cekk8zXtzuNs+mj0TqFXF1bz/D2LB+Jgl5BBTq8h8NxPAAxYunv/qlpQ8LhSYCOnIoZ7XuSLOkUtcf3WDUlSU07IvfwFnN1QHRGtM5CBfOjCDXfXO0BBK74KsDp+xTZWpnEteYfkivbO1ZzBc3dr509/HWjKT8XLZ+6V/U64ecJIHz7aqOoJlfLbWB9Cew3JSG2wBd28L1cmi6Olw7Zycoe2PpV1ljm6s/eEnmyMXeCPyBiGSh30GXyzovRk0m/cGQnXaA1l7z1MZXX3y5Ri6u5hz9PIYUVYSWNBgkHsQf1JxBGGdxv/BbTeFDtP+t3rZcRTyrXdVTIVvbJpVkgSSPf8b031us1OQJFR7nVnUkEygnwEOlOEH4UK0Tv7PS4cIq5NuFsPi1QhapL33mZy7OpLhsiyjtj/aphmxUZfd/zPx40ksQi7PppWI9cZGQGEDSc8YtGGZd3W+1FRHdQzM7t7ubi0BGaaRFXqnRfEt7ops5pxbMjl/02RKnu6/l2ntdOMOz1d+7mGL6MrVPSM4X3pzmWHop4UzVYMuwJb4aQ9vFykCp26sVL1X6TYumCL2D94d5Oent2s2ivFwJKnf3zDYoudpAajVdQT9d8tTPYDOc1sMVFe0ztQMDAVUts4qTO3qKIXuF97G1uoV6FPM3YNJ5l7MkTOZwbBS94HaQdXQFhM/M4XzD8znh8/q+VlPYK7xipBCnk+dRqVVAV6qJ2gxS4RZXbqW5FUp0vGjwyF3RfQjrR13gI/J5OzLWsuY2K/i1Z//jBeWOR5xEMqCwB1YCL6yscuHR6rm5jTw+p5hoNOVEi9CatBMz5bv9dKX9MtZKy0pPtwF1ipS5Uu9Lv8T8ebBtmFfNpeu+PkN5jhvHgs+oBkFw7m7xjIp7aXYRwpexZPeK1v1PYBfEdLqJr3HX4mYTTUPsG8FradAfd3MN5InAzVYN5DrDS76QSurqKp5kky9lKMASrysZcXRrJaRGLhzMBuRboBRKOEayhEjPK4BltPlf6u6OKLkn+04bYQK+gkcV0BKbeGEpSc46ruFm0bYjVae2L+DWtZP4bIm4Kaw4KgxpU82GnOQJ+xqGRmHWDkR+qJUS/1EeyUvsAh4FoYwsr4rEGIi+4vwDgCYjTcL4w0Uo+z+9el+sTvea9sIHeSjTgqb7O1Yk+2aVazdBU9wQCeQC1Yg61WxGTV1srOELKKlIq2H8Kejf34fO2QOURlPMX7QQXrXHPLS3cfoc4skYN4+7TOp6FR3MjnwkPDx1iqY+mPUV49ob3am32eWz2sMBS4+Ktz0sWz4eCH6arLeCPSGTcYU+hOjFDkVx/s1/iuAEPlQDZpe1gEtFTO+A76kkMpPbhxha1jHezHoOxLK5wUPTCJzKyx/O5trK32gawOsd8sFUGBUmvO751nfB1pCJLWRY7mnBWxfBfGEG435kVr2UK3DOKSQzhboW58nrAHNrQtZ4I6cQOtC7F2CFFveglrk0lU7VM9EU+SkgVIAZbSQvmcf1ihdUKXVfCy78aXck77mKAQWj9obIY2iHKdIh11Vgb2oLH1iatUwT7N2UTDTFQBu0JDrOcFvLICLZNaQqqAqs8zOuplApFdf5d0zj3OH8SdMEtMyvpmbWcGZARIl6TdGAyY52UcfqODBqzgVVlnmdSOYGihjEE+vdvPQK0oJ64pxntYw5kheey4VWvL95SqKFiXUwb6O/V7mfIW8d4Ek+VC0j4FMm2ry9ig1oz92rLild7My5MOOyLHNaKky0zco7e0y5lTJlq9mlw38yt9B1n0Cv8BOUFtCJVHDmCTFm1q+xLk0sxK2rp1mo9FX6/xMf2lv76HRCk4LFwXYIXFojJaz9pvpFWn9ttTtYdAzgEcisIiammZQGIsWHRKnMwDq9wIEvRmlzx9Ev50qE/ZXhch0Q+AQsXGcIv7QCzh7EleaRaYvxqSVo4KSGtpM24l5b9KLv4HpRL3I5F6Q9evj350y8uOdBT++7q/VOE6nvWOtbFICbslrWjChJTYvfrdWbAZPUQB7DXMyejSToW8QTBlteOHZvlNLNdMWUtrXUAh5iew5Ff7QJFOrZT5uQ/rihEIMkPVVzXcZ4j9f6dhR6Teq3xShg1PFPcKEPbHCZd2S08oTpJFTIkZjofF9EUYLiEitxjHheA+TUkKopuEQlwQnOH+uIZlC2bFZQof/KSG3YijT+1EOgF6Vf2VTMcvOtz994K38bqviveu5H0pI3v3IPYFN5VWkOMIv4r5pLcPGICy4XCRdTl2foaBsPDo6ilmrPi4cCeS/GUfyb7HWGNmeDHM9DTPkzQW594ErTFEcFV8KyQ7/RvWB+iXzHwUR7g6YJ6LWc7ISjJlIUZvwpoYhYnhj0gxTOEtrJuvQyvT+Uq/E2o1En4fpLM8GPqVV4Gb3o0W4A1hQcsOoAer7s37ONyo+VDTushq58fmVwIzduNtSSj5vOoMbLpbuH77xyKRAKY+Yi+6D+mCqbO9LOsnL084rOTXUy3LJUbrN5lUJzpbuSlwblU8+xkiWaX7JZjorPq1U2+RJApIy2Id7VL/77lLl+2UMJAEZ7aDOlp0nCC/o+YQA7M/jhtsAYYC1LWmse/pcnkYldjv0DucN/TYE9Ef7x3sFWQc5oVPih0ju2+zCtdf1ae5HtocfS5umV2PeBPtojzFvenZoRypNaSaSKFZTPw/8AzAeifGa77mlZ9/myai+6uL5txi2GxVQ90Q+7vLUWt6a5UkP59kSLZPJhl/f7QZSgOT/dQKPG9n7D8MOYdyy6ZITV7vHPAEbzDNPP38p9Mc+mk3lHS0oFdmG9cUWkbHDF9fMK//llz+HNHXwUuJhP3nQ0Hx+HWE6I51HZGSVQBU1cScvkVQihgFavdAv9F7G71lcGoGzQqPi7KkCph/+FGDrcRZInzHoa0HqbakeHePTX3ihdcvSj7OWz5hzHH4QeXANKsVpn0FFiIBcSvbMhlCrTYL4u8f1FI3rdGGpx8BnGe10mZ3bAHZW48DBQjk/sj0cwOp3EzqVEVyZc3QbqisgfxCbas7AufQygfUGiSeXZG6Rib2TMUDtfcRnajjBMyN9o23m2DDdfjF8EKrq7B/52PEf5HhgQ1EbtUa3pAWfKl2fCspVSE5qpxTthUHqSTTkxoj3ElT65AhhBgyhm1wo8KUzDOELYjc/6LrDGyCOQIYPSNvv+aYJ0ic2O8ii0qBodae+qv483oysBN2hCknQyF37ZZ+0i+T4N3MgoobMbhXWijQF250Pi51tprhoxHSdJ4qrbnmNLVsWCugtdNPgG5T570wQg5egk0e+aNO8/lYhFV1X8Jg3pqbP1YdGmcGKay736Gbq2epKNvT/jf7TLsUm0zLftiv7DT9Kw1rv7xkWgiT1FjtE3lWsrkKL5SRgfoOTMHqwCOtkQkZIAR0d+0EgeBuFALvlqQbqQH4bZKMKrygSutZBh22DBIk9zI7UpNmgKaVBo1cv7ez2XdGtk/Hg/dYef2As0oA0TILeP8hTK6W1b/TQFj0qn7scCj4kvjOoIsPwk2KxZQEMjDT1EKkyheiE0HpU8u8e24AqAzTzNNUKSH+q1e1UbnujnTzHf6SvSxJZ4mzm/nKc6suk/xS6NCfmyDAcZ9xDJTXUtAYIECCMZr0t4o6W1kxPayZ0FxBu1k3a7cNKxju4KrPEPMw6CcmxdIXFEQHTzhnCw2s58ZsMyRwBfbUT7AvjA+s9X3sMvab/iBQIV957NFCVRXWTEVR4zMt3Us7c781bUk48UB5FVo99nlFZDE2qmO2I8WgQABPCBzoUDPejXeOa8h6xjkxRpoquZaDytmMHtIedVOn0BUjtPsEJhDGlioN0J83EdKS9PakO6KxpgvmNbv0HfAOCFHMBexmVMUXFszhqMYKBV+qnfY3RXArfXpVzjPn5/S28kdn6oQ5Dv115/Sd7pl1mEhTMG2d3DrdH+MGFAKA8bxLnufJN11wMtz0ejk3msdSBFhhqp3mN4WGbDkN7tMWa5G+3yhwik5x11ZSl4Xqoi1+ezn+8gmR6lOjLXFYd3UlEGk7kTERqaWQe7kUHi85LoPOsLVqDgj4HcOW8WcEeCxr7VyJ5EQA01MmPg7sociNrHrBHWzzD/DWMEZtsusHPQXBHIZbpkrSerjbfmtPJckvI/S+Vms0O8UVJrr0urfiyBD7OV8v0T43xO0tNt7LyCJdMR/NDrJ9wXoMsvt4x5JKk1Hp3nKvTsxAH+7+Ek/T9ItIP6lUQia6aho4/1s29OV/nM9jo6WY9Rds3uyWHsyVQTWbZFcdHgve9LtRlm9HjRxtT7IlpDbAQ0ufwod1/1esyFktVMBllXt4mIMzDb8hxOe2XbR3FHDB6zzc7ZVYIKDHe6TRj4vGFJ2gvdV93fiXgqgDhTY6UAbm+HUCwHDGw38sHcfVowCP52jex5o4qkXZLQutIwqYK6aUkuIiDj2Q/FixpzwgJT4qMsRsm8GooB6wSa/RGgZ2NWubtisZSMxFZHdMB02Ef1B8ftNzZAsStRFvo6QvpROX7Ku3VmN7ZnMGC7q2OuEtFH/8YpuXgBCuewY0/UeJM8bLjSVRtt2mq3li+KwE7mEgBq1YZMLPRjEPi77P0L2ZjWqv0XveiNUcnH7rDGitUwKeXZmtfZpngXfEwGGwYKZy44uctPChGfbvXiSPdD4dLIAf23OFsuOb1l5jKLXABzARNnRYUWljTqUfioEirjGXe+ewuN7mubxr4x16z2WMXPakRAshCvtXh/qiTxLk5TYbgaBFs2w/X1MzJ5eI+UINzjVeTpu/ilB9677xDuLfxxIsXzHBcr8f/0NzewJ2E7X9FuclL1oHEGAAXf1B4C9bnIFyMFK1aUSac0wIntNobQHbGhm8iSDVhGOlU+xSPSZI4t5/aPaKQxhfCpWXxFIXsAuVtpdAlWhrrhPrGTUCWqxgfyIMgoUyT9FmfG4bkvuOiDxti/qJnCJOmFMN01uJTuvYXAGzjlsdBa1n93mlnFPAz6RySX0n5ouTxYQQKqb34bzFXGTeuerjEFgKvX+eT9/UMBV5djUhG4ZlSuJpUPgZWOOBwHc9rzRgv30z5voZFcg+tm1YMtR8udBcmxxFR0e7mTrieVm1/TtsATsBl5SXzBmhHqWkUAcsthtqD5dW0ABeA+C9AKLW2kqI7BGHoLmXmwwJoPeq3Wa7EqfT4EWmLaSZB8JnLq990fII6WGbbCaV2Ms96yUMoPVAPafUMIUjxCSXU85ByrBe/ermjzTmocfg6Mc2NysQlTxH9jcoH3S6GJv4BX3reiIWRljNpZ0gi2xpH/uPd3UI3zvRmv1UZMSpLnxsup6Lj2M2Ls2OGpnnkh/LQEH9AEYAvfF2v5/imy9XKost+dtBu4uDhjcTtZTrNSAg0y36C7nTr+qrpYz5Fhwmfdvu9IzRw7UakDlQBfaIClNic+W25m4JCL7XyJxrs2EH8U9sUM+kVoLOqXkLPSALmAVcnrO2FV58w43OkRV4I0MZB7tboMmwQfI1Q4DhHnSx2UVOtlAO8Wnj41OXuOi9BGPeqLaco6iNDQhxXRKI8gQPBV6+Y8PgvVu8sYnd1FG92qFSTbLXCr+7h97a5VqJCA19+P4llFgmil6yx9uVib+A5Itv9nHQXl0dgiQGgn97qNiUIyhYLhcdqiXCyfJ+mig1ycb5r96sLR+WoG7QrPJ95zmc4Jh413uwowfv6RQrd74J2fGldrmZC1DkZIuK/zDx0x2URpEJlrCGAlijTB6xZpDnSzd/uGle3VO/ksRHsSPas3rnMY5l6PnpZdNe9P03q1JjTGrFpv5M++VDDLIVVDPdV8mnUkwN6L4mpbnNLgKXqRm2qMRSyOYTTuwlhsiVRorqlo/I7sCAdHdscmQQ9Uz88QZOopnyXntL5U21lnWA+dr2HlMaSR00SjGv9RXltBXQycga1iUhfRzOGgpW2OicPQsVZ88Px3Yef7sT5SaBZbBKKtxensLXD4s5e7emggKqRbGuXsVfgQAkiNG7fMAeGYe/RF/jwPzbLyWvMmmtA3FM4AsjbOFmrJLc/8cVOV9CMkp49hJSaZT9yRDbVDB2Ezrjn+5gelpOuxswUJsYYQYFKvrmI/HYzZORR5bTdT80ydt2qrIXovvzJGz8IpNOAxRNA6KAVc8DQ1QA+30TcoFT9FGVz8Yr3dRewX25re29NMMxhN3uYp9c2iRgcvPqBV8Mr+suEswu0rgbNXcPcUnVEAZmjhxo8HlUXbuuHfgYDPjD4gky9H62Su5O+dEhm4ikutA9NuNJv74AllS5D+oJp/tediVFk0pvCDsKrte7UU5O3QXyqT1AqiecYkSth4Rzk4ZXJZYuHBjByyh4c844fNr5TyJOLt4Sz8RDp5OCg7okxoi1+ve0JO2QYh95Fe9UVvjlfMx5XtNQUhQCwoyMoT3YAZ8uGLouR8XLhZN36QCE+I2qS9K5sqr05X4h4bp+zFK2xlmPOS+u+ogJmEieKaIqHboj+HMahKFfkxW2p4ERJJXxIMgX3S9S6HH/GA1k1r6TLSOlTZr3GM2AR418Zu+VB33Ew1xaVf2mMYwpZ/iCJCXqjb1LLhs9hojCtXWrpADGll104NcCWOOZK2xXyBM+VEV1ySMFRVYDqvelhsAL7z7X4cTxnEcWAMhncxsMH9johMrW5YbhKGAiQrXiUJqTLHGFmIYZAHaYgKGcHfboUb79aEody7sXcMcUMZZQV85YykNxZkoEQMb37h45NvxaRhUE57my4aFJSS0ti6t94GLZqS6UEHKd4wMwxb4/pOzQ3v+Yxa03YISNcKQdmT79/Nu8SH/pw7UCGy+xC/n/MeOFpqmP/Hwc8kkCz/uM4TJKZCYqNvy+CDNyUas5SZSg1rkQV05kgHPBS/ecV75xokNVtOgfDqOoIILAlc1dzdQ7Bl4oWCExW/GjALWesQiORetXwn6tKlb2AW6UqMeER321Ty2mXKpCHDskOHulqsjpdYTJqWLmxEPQ7hs4U9MTxDi0XUrY01dzqeS2mM70/Ugvr5/u+5oKthD7GvZu70ZWfL+Lxb/mNlWiFMvkLBA8gD5Sa0mxLPODt1oDGW5ROIYH0TQ92t/SJzBx03Oe5ohSVY2ATAtR8e44/N6bhsdql5UqJXHQDC8jkdH0l97+rXJu5o0aiWqc5HrX9SiAXEVxcpM2Q8//B3we4Tfs+rNzjdNGm/XaYWYdBDFh7XALeDSY1lV5KztGZMcc1E+pZBo/ELnP+q9me6dKvCpF5A3siBlDVN7HLWluuCKjYsvB+vEowSES8cmVq0b8DXkUczCGAa7xovZOx2aPlr3/05wwCd1KOiwesvUtwpRvBW3ZUNW/7G2t+igSnGk6t2z1jwCZgaLMVptAMkznt/dGKRQoXcxnDe/eC4FX4Qc+bRSPP8TD6laBbrqpknp2wIfcdASxrXgy7MgqzU2SUvXJ6c5Aei2DXJEmfLC0b+c7sDwsO6dcOntelRXvCOi9tsmD57HsCJA3OPnl4xhPGRM0gPmIVnvqyGxhpDQ6/BQ5uoPg8QqrLlkTJkeuibrTj7DJghbjUm+tZ4hpUfi7DTuJPeJWXZpiLPnw8koCSZapdgoPus/un3nnQAguNo3NZQw+KEvS0bE+z7c2sxyqQIZCiuzj2e9NUsg5yW5Wy+u4B3c+JKcaxkGad+JDPqBZYb59sIOtoYL5otmlz5yQGWkGNWuhajsC8orZhBTfFSwlFkrX1Xd+Zmtp6MkyUCwYthQC8flolVwF9tFeJ+CBn9gBN6rfov02rr0JmvsoT88Y4+kf6R+UwGZxD5Yc0ZmIhLlQeFt5LMKm/OtPx6Rr/1tBepndsF1HlQEhCBzxIo9HaenX20Dlyqdsmwln2kSrd7gqO9VRnWGSViXM+VX1UqHBD/AVu9EDUtL9M6bCDml+vZTur1h2Wg9ht2cfMLga0B6+kFLkCKfvPCb+3oVSDeZvvwrQizK5hsQLQ1P77tLb9yQIj2RZNKyeuxeNzA8116HtItAAQoq4FW/OPoLshn6aSm75Qu9GlJof1GMJ1VEpNZD9KVK5177Fm9C9w1bCF7fTl5ZuiVVNby6Zrj9UOI5dzAdkBBLi3cf0jsuPPvdM7e/CZO9hat0DXCOQWBYTnI8t3RdbcNZ1YlfLT4qoZrI0u30aIfVvO+bzeugpwGsraWJ+xMupxinNkr8QE2PNuenFEDPNPRfWGkg7av07clSzHmuHbwTlY9LPp07tbNBwZZ7wCOsZ+PWmiGO/9fu8O60lKHxdioEr+AS2xhBxEfztSl6w2EmnW77JGuU7lmF4dE7WHd8HGiV4fP+B+wcNR/rxVfoeBQbiMQerFSRwY1kQlesTRXtHj3YgkwqwY+j22rMYIyUs7o4HuiQGYgX2DvkUyZKYfiQE+L08kX/7L/Vp6gQE89lNt8AEmD6VSFToWI+SbBY+DG3XMqsLaVDOPo33QpJplin2L6mWDEZKMYEOGNpZQis/CSJ7sLzfB+Iv4cB96DFcmOgBvEyTWiasDMf9NORcLwHhlesfBsOIfEvhIAtPytFlcM1M8RfAHf0iijV/K570L3KVsOF/vsJ0/YpEdnjkJ//YIyaQltic+8K7vwT7r8yCSmvg4YrLFw9XQD2oPSP1okwZ67cLLEV4B7K1xD7rKbB7agMwgiS/sRRV90L/qfKj4KYXsKPQiMpV0u7b7VLt0mqkN1YU305dpNzQc4CKN1PxCqbzXP1jHD3EMy6Tz4HSKXKHp69yD+VHfVTO2E3RqQt6JTlBXVnxwJAm1lZ/KipmtW7mAwATb2ZgnWnZWpCCmSvmcxJAHob88JyoF8tp8Yhb+sXFsZ1p/AvjLMNYoJ45aAs/Z5jeg/2EJtfOVvhDBPV/y4zdTmBKM/zyrj5zsxMgZuqLVCD3ppIy7ZoJB31hRdMfnvjyUboep/ROQG87/vuYnpzFHhbpPwolaosMP4pgbLgvihbAweB8jWUjqmp0JBHLHon1PEGxj7I03poZ7bGdE9KU+Ls0JuhIudXmN7wUJhv+ys6icLW3ImkdCO56D6f0qRhQfRdJVk+hhdoUattnKO4zV+cpSVkH8iBy2EonRQGF2e4iPLKVJXxoP2WuQq4YMfarZc04cncJbqfC3gCRKQT44DJVCIC6M90+6h8u/yDPkspd4vwOQHBGSxb4Iux+yEGD1kJQUcMHjHFPBAZmhWpPPwVs0Y4DhlfSHbpIneTzm+gDJI4BjXXY1WiDAvceZc3vYBOzaCDD9gGyP0wfdaW86RFzhiz4y52WsVRLfhAmhDx3XEXJFVQaxIflrO9i5PxGW6bzWZoI+4MkKlimwWzLjEASVwwUUgHTpDDsx9rD4yiQ7TQy7DRkr2wvy628Zktscs3QqmIz3HFI/CF4PD4RlEJQyK4X5sYcTHn+RWmj6rgCPZLUmwpNoNTDKy5jQx1jeePaFj2E5RkPNAeF0FoAN7FRHY64UsS+/9u0P1HiK8XMRzWnNYTAvBoXW8fSwu8Q6qGtwPEyW4bGvX20aNw8MxX9luUSgXGiJj5QsG8t+a0QsuxhRLgJs9zcewqxHNZHd3COzW1Tkab+hVSy0RcKjdBhXJmpRJAWpiorzLtIoQc+Qxt9dERhYqv7dUucThOy2UgFmDzHJ7WYYW7dIwP/+YxqJ2jvSbi5F4doCMOUH+kvvaqpSbiGVYZb+J4EaoiJcCjNOeVRZJbLiY0lnGNvFytIG42gtXQr02zb7TFP9T8J5n5qPKOlq+fOmtoa6TWJdIZNn0WozVMmHEtMFtkqlniclUsgGVyy/qqQcM38cSIaXZrv/pKsADq0BJ3BlAqWTiSKrrAh4hFygKQgQhrZZQOpUmaLzCjtKWSuLzKDfhJ1Eeu7/LawpP0skM6TkP/hWtEc0QI6i4+hFqAoUSUR/WP+PE05UfWXr1w9qiR1rhyLu0bMvCggQkgm8lzsI/3nvK3VCXpWir13fMOQYdy/M0wRmqvbVx8ehjVkcTh9qGkCJZYJ8JAypgU3C4sb5R4YwXhqLVwBgPCsLKkrvtTxWBHY2RrPkPpWBkTdGtYw88l9c8gKEJTCOPbVR0jFZ9PrYQtzxjbXvLG3u6Zw/C0ko5c0Zq/9FJov07fSADpn2UuW70OV0Dhmg1Qyr75utb55zjYCpSkOiYr5cH8JiGdp4ZniInE8B+xSplGSRHDgeEnDbZMDLnVaOtbo9Fj3V5AkA0YYfCw333v0YsC2EWq1QXNNlRkA1jj8EGvEuU4EqA3cTl3P/xNanWtMUlrv3sPi1Vp/J5/m5PzcACLz2SAOTv0jkanNll3GcqCrhOwe2bNNKRqAsQBk19ZFRf7fFIQTPjj3nOpOByY0yu+WpX8Iji/VgZW4Xbyk9IWD5zDco4rQ/rJ5s9MU7H6iMTl+YTguEjC3FNmZ65IMJBbIxf51M2S7y41ylEAmriBiuSf1EqMFugDF7KnFyVui40xEBf0X8ruet0B8ecee/iGNsm/tIjEOlRWSnhk9N662xC9JuG2F9VBWKFv+yJ/5CZME79DD5n+L27w19j6VoiS8gWtF/WXRBgg+qbA8mgxq7YPANjMCJgYRJuNgsvVH4GlJr6sPEM+Pbhe/m1bPxoaa7dc/Mai/EUdbkfX/K6h+pwg8fsQonllhWP4aDjbUWFQ+y1uyhCjdlj+f9vMu1/y33za+4Hb9iiqvE07Z0zZ5yPf48HLqXhiBmslRtqTH3Je2+9GW0XsWntoX/97hWhdPqTaw7BRXC+DrT99+/+RvXwz3J1l+Janpv8dFq0/B2InHtSU494gZrCkcvh0ArqE4N7T4IzatwYdB6N5VIZrUgb3+cuUqSClJ8tHFEPicSsPLNd1XOnTtHPzJG9Ib9lD8OXp0RDapXPIYg4DK3kROQYoipxpoona0RDdg5YrP0GAeCAX5JssfT1Yp56kXzXuGKt1nlbKaFXuPPibh32e4TnPcoWe9ZC8pNPIOsiNKP1RNSDTRfr75JATz+L5NAFAmKSlGCQRjzUZA1gxwrPB81KkxA/Jh0QTuoFhwRcILsn4ndMRqx34GMueH2mRh1PLhSwQIzczd12JTRIk32+q9xb0gq7IiJCppSoofR82xwSOnwtGiUL1FUywPeIw042n//Rr45jKlF+kmgWYSB+TjRvYMx4/LkEPKtAA3otmaWxCyvrXLfpmTIZ5LWNLZJ4/M41vKMKgZ6w9BBva5v/LXcMeMfseD3/p3ppqZJTeNz32exvL0Ng1X+Xz2psgbtp4adZ0Utw2UgcO7leFeEjK6QxHJJB+xUUcYJ2isijRkSBAJfD7k3PRVY9sbFv8pvsfXXz3KEJXsqj6+8mBWByHTMNSALdG/PPHorpNY+gn07GQ7vQY1x5sQV8+vFcXAbTMhRtsXMTf6QcwCkTUL7Dw5yz+Lm9UGXxDf/y0ATtbqUbUqK/hOCoadVFIxBLImR7/rDUCkfGxCyTtwF4s1AMFFK2FhfTDT9VaEcd6m+W2Tfkg/OImg7GNo3f3aohOpfbtyR9MzXCZwnICnItTptNB+4fdqtJv9N0FwuOEsy4WjySNVIHveTxDM8zjNyY5Ewg6CjaPWKVk2W0oWB/8FTjtG7BVYKeQ28mEpk5/tsqf2nhp5D0IsjbQ1Wj2XDVUgsg+83Mp7vk9NqLDBVq2MKItBKgxDmCrY74dBOGbK68txCR2gK4zcZ/+OXxTq+rDMWqhHWuJO6oOSdBYDCqkMa2kE/AHEjaB+B9MSjHl//24iEX3t3irh9+YIn+TCpwijEzpuaiBJPJNNBDe4gxf+fNI47SKiejOKaNr8k0xkkTodougZzN+r/MJWiSp9IYKmKJ0xDhb6m8p0+oOtvbS9sAH6qd2YCmTnwonznXXZZ7AzsgeG+5k04Y3x5I4btu5JqqR1XFPE3wiqyTzeN7ysB1L+BbMrhbGLY4wY+d6iZxqzVxt6GdxHaAc954wUVRAqKQ6XbW9KDJZFq9v+m/UH7MHOzq4wuzbD9+mQTkVURHE6mfT1QV6CYNdTtv34ZzdbAu8sfq1UVnCd4F2QwFNRuAnlB6ev6uEEz25bUqdpb9wgjhbfjoaughMBujIARHLHBfJ2PFDzgf4tGy7YVevTJMlgDNel0JNWjcMDE+8I0itYs3tQpB/l+5J514B7OsNvvOtWzI0ygUEgi5RXFL9JIxBuzk07XGF6gVUiZxuLv11yi2RTuCNKHAYx2TxHeTAYMvGNAuNstpLHZEiD8Np4/Fi/ALy7iN2Rqlyx80XOyu6BMloGUo9WneVeVt746WpGQisO++ChzwQq8sHFStUpuEzmz2vOrYmUqA+xYEHBFVtHtXD6W93ZxsXoOAgGX/C7bCYesPJI0169KFOZQczc5ycefq7rRNPDQsskFSk2+9xlteJ5E+MHhWVy0YI2gxBMCF7sLzjZek8uVfcnUycUwRkP+aQ3hlHPCc2O2QZmD+bRTuvbZZeXKGz/CotqzUfOK+F/B3FEVmGt5xPpIQHMDhS2ROgbLd/wcVheztmTFW40DitAbNyOPbPlue5tvOxn+jVizAiDg1enrREPMW83dzAOLBqBigXEc6r5PYM4T4rvh2wwsCioE63XtCtLAIrgaJq2//HrxKpmDENd7kK0zZoOAD+TSBrHzvde8azHGk8H7NQ9EO94tEbFj0BZtkiLzGzIWarxw5S+0329t4CdtXjO9SIe/XI+gC4UMTMQmXlFc2zlkPvQBcjEPcryimzogIRj4Gd5RiSPFf3KsYnrXRoeQ3DbxfgdH6VlkoRvnSBe+lY7kCpFJRrcC0S4utDfmVbE275EsCpT5tGBVucLQxKUSzi2m/9/2+reJgairm1RF1iljUZy4ic/CMnJQfkxvnE58AS/SELxh6IiweO8rytzq2lNhTiS9bkjOeCaHqU37pqas+vQ+fcl4rfa70xvclecUm5mAGmjPyDTmxkfWjcad5X6AU7/KiU9g3NsQ0FNqV5zzEoJ80Pf19ysARe9JFdvEzKO6pGEZL9n7UqB7SvSL4PUf7uzZm2txl4s6OKAEWgX0AY1hKkFM642P7rYiIDcbN0HceI+8LxBvM60ZxdzFZE+aPDsg85AKg/RWvgdMiFZK+EO0ed7yejs5DDo3ur4PKgV3WBOqaGTkLbcX3SYQU7Dcf/wI8v8adV8/aCLK6WJZKTk9htk3geSVgB5KdvDFk4gt6RIO1jbfe9rrYjSJnbWnKL66cB35qETwtmj8b1/GK6TZuHYQmJNkFP8khks3BJZfX1n3dYeFLAJFaQYHSeaFfEM03WHB2ZYcsooc9w78gZG9u/qF4uMZ2f7UV5EWwR1Xakmz/dzWUSZVyD8OavhAYfugG5J2lZJCZ47/xnvSJhO/NZwt5Zu0S4HwQGd25Ux7Zrtx1gE5H4Swc81yrMqJkjk7vNlSmr2WsQjsCBuXPdUfON3Aylek+rah6Ncu5lQTnmKXZT8uq7lqOlINL3yBLbX98yvuQgliiWvoDsxbZ5X+IE+VersKy1XUYSKypPgxw3QjzdQ1pW65pOZfstdJU7GAIqtzob93hwAsu0qhd8IY8ywessxw/M53V2VpGyLAa3CCnS40oSecXpTwQAJ2udpEedPhixdTVg3NsAEYxZgV1Z91nEoG7+f81VbfM/WXGTTgqAQHYufg86cYVkFVO+Ve9aVB6T7WtoxPeMCBGGTqRZXTYIAlGKy+2ORCMuezsy3KxcveazgYwZZeDTH6yE3xhc1fjMdATgVJUQVqX19BSeMsNYujNk54U6Y5Fgp2jG2VOFHfWpx6aLJs0h2Q6IEsFsKrFRfIiWRZJGPp2c9FDrEAmWV6nSDovjQEiJZdKsY256Ckg9nOjCGZQgUm/WBkZtrCcRzVa/BHQxtzJtni2d7kMidZi2LWH8C2RxWqMKtvVLa6qQkztzz0lw9uWkBDB+pXUGZtqhXngJw9ZUpX24OGj1kXEpoyvMWX4+DGS7Nuin6xpk4lobcEVpBKnam6bUic0CTTAk9sDy47OgMRs9itchSVEurohmLuu90RtNbycWrW9xIC5JvYG9KOdpW1bY1Q4+zYPKM5tzB1tx+BdeInqN7hd0s81R53/l9sO0LkeBS1Oh5iEETVQff48HvS7QgH3HkX4c6fp6JMSpBn6+GEsdWrXWbACAF33wzoMUIRKjz51zNHVnBOisdxaSH3JA4v6KhCtSmlBbdFLZO5TvvQzoyZiPf5/kfqPZndZ61WG1eJ2cg5yqBLzJcRLbdjxMuw2Jf8YgKFRAnSbu7C4VHLeJGoYyk4RGh/pVUeCW8TR6i5dJSs/eTpsGNXb/rRHWqiv+eWtwPELmm1wS6u8JWAjpC05BQQTt0SwMx/5xxOGFqfQLyGsS367z5VQ/pmatjw78rajBcU1I1nrUidxFo8XqekXWJMjwi5OgeLvAKAIdcF5JFIqNNA4M2W5RwbW3qSB96oywAicA2ULA20+etkKtVRhOb0h6wHU7juho1EarVyuC1YpXqsmQiwaVztCEwAQ7WH6JS6X+QQb4J5QMTcQpsrkgkjjsdYeez9p7erEjASYRfbFcuYQpTekRZgxl1KMxXNfpH87EkTt2TwYuB1ZmxH5IGl59FemCEuvakNwX2sjExoBHpXufMrw4M9Y7Fga8DyErTdYA5wyhPrzjF98ZFrQHKRD/L8h+vVsSMUpq/Ou4PnaHCNafIlPMEBwim1aojUFxDh3TzRELY4pkKg/bVUjU6XToyQmW7lTdt8IAo1XAFKTOe4ZfYXP4895lBFP5A4UxJqdOtb0Hpq6KTk2pRkzRDyTkA50iAv0dqGSN0P9Wgek+61+u7iSAvBMYe3COvZLVWMhtQPvz7G5aRmqqa2KZseJZRtUGcoSriqI8tlnbJktth/UfU0DvV/3fRKhKTL7edVxUCLGnM6mKPMj160T+60vUsCPKKeyIRf9nDFEA2CK2BjAZZMn30Ka11ij1KtQ70r3vcZgFMBKYxXXdvRLeeoKkU/ssG9llyspXOVQZB/KzzkbJTVIv3mGhUz/7b9v2I6ze4BmyFyX8VmvQDp8WLW7EFb9KInmicyTBZB483EPCT0JD8jA1BUA3IWtq33pKfhskXwL289KUKM00bHeASi5mWsFAzijIfRLk6o9XtRFcZfA+5IK4WHS2l8LWDZ78fr2cwvTZiqwJE1C8aWyfaeNo23SxUI5LTFaycDEPbvi0MBRbViiA117xTfoKNVbUmGT7brvc9BIFOPEtZFcZqu8kwson8/M8oIC9WIc+QUpD/SAzwqLWySfyqeS03qgfqzdP5F87xKr2dV9iZU/dDssEOot7cWm+VwrFGDQen+8HQ9rh1sdJXTeuicnfqwMkYlMmsKcUw7t8WSjtAFRoFQUNMlHyqzGkYBfcnyBxGyBdyrv4W8fHXlhmkHBEppyS41b7FNDQ3kM8X/KhKS36957IkaDKvDHlwzcpWVOs+UK5YSRi2RPuIDXGXG29566TPrCzXkVij4juhBxrotzfK3rZssQQuEM1Re2QktWX6Zaaa9nBJg7NWKuut1+4PEs9cW6bHutmbFY0rCkz3QU024M3yNnyyAx5YZJ3VH0qXM/0rmVQEhFk6yHfoGeJcF0GU1alaocwIzq18+07AtofF516u7pyoQPmLVRdBiz4Jc+HcQctl+oAz+7+0kQo9N3j3RtOBWU51b21zBnwn6nF7xu+hHTr0RuqrBVWkOUcYcSOz57Uk323UNek0z2xz5IUaSRMbOwN3TFve+AW+YArfEkqmATx0QWxx1XvhN92A8RQBhfM9yf63y5zawOIFjsPddmk2uSz2BRrKL0YeX9kW/8nBuByKK/uEz3R9yBqMx2nJZFwIq4o+0vDKZVWxPlRHUIQguhvIw+CT0UxiuHkqjTD/ttro7Uj0Sq1jbXeUtzTCxq0ZMsa+MEeBRtFK+ZDl6kHa1J1fFlVaPyMx/jpnGZsLxnsUmPCaSduMT6mqtNRW4f9JR2VxOMci/sHt35WfTMvlH3jY3s0Qkpvp7Tyo+xCslbXnw0IfWt6cqzUspW+8Ftt+/SG52wS+26UBmZm/yFqhOaLnghWjLLQvINiWEJRbz8ZCeH6Zu3SsaUBGUinyFIGe/urfq8Kh063PDFGNw6DUj+3eMxJNQrUFl9riYaOzxR2bM8uBIQuVCy5GIPABJDWJd9nNDyXLuJQ4lEoO4RckyVXxsSme2UB+CKEczXhWj/QcIgp+Oy6MEmSxIIG4QIKXAtQUyyIBSeK3YanDSk9zA5fBg1zeNPJk1p/6hAtmq0M9GamZSjVx0wHjiC/lRm1//h9EIrs1ogeldNspO+QU6b4ssABc56zwKU+t2aErUuOtcLvYGrFidWaNi6ZgiSh63zr/vj18dy4br0aZXINBhQKj3FUTGJB4h0GyTzJXbyDZktUII5Ikfq2H1zKZxpqavEw7facd38J9VDlNjKp54SSqvjAJskSEJPXBfKuwFIhJwWKneVS43Ya7FH8xQ/MkjJ4Tfb8O/KAC28apYVdLG+wN3N58EKUJaOSbwWa86w17bVIFX/wOFpyf3dXfwis1dy3AJo5S6r0+Ebka6q5OZKSU8Z0eZ1o6QMi4x5cjjjZyvMmO+QeDv2num8JsV4I/2/BiziN27RRKFCrnRmyKWwPb8zNRdz7MF/Kak6QNJg8TlumWjJOOIc81mLrtaGwuQwqvI+b6r9uGcfsTzPRUzHyRBR6R3ogLtBuWRh03S6jdJpAfy7rjQ2QI1NtGeOc42uIG2BnUMC4oLEkEHB4m+iI1B8J4Qve3yQEE3k2IgxOoFMBSSWpjgpeuNazU671FNs0nV9yuUdcOEVFhAxaNhk4qgwv1KTDzQMnG3W+u2b9RYsmtuurCl23QFatc1FGm/aNmaS+DMyz/pbyulbdwVUnR61fE3msuOAQGKw2midkV2gipTFQwmxMgPlhcn8UHEa0EU7L0xA/ls0yq0UE7eCN/RmQYhy1JXiwn8H6J43xq+gHJUibUwuQCMzNjw4SvxLFFPp00GC++ofolGReT92qs/jXH8QjPuIkQF5+dCQDAhwPPjCwiSKTvQb4CRQ1CI7GZGy1odYSSvv3CGa66e/omiqs2XpkAQz7t1SSxw913QvziWCZN4FIsCshTVvDTV0L2rkzqN8KSllUm4Kt0w2fHZriv0Xmt5w1FzdLzjCVB/iI6n9emcd/rWZl0eN157gfkpYqMGFNk7GLRL2tbY4S53tx+kufFTx5Wn4TmMvQ6kg2I1QZ+YTf2LCHQ92bQbf13fx6OW2Mqg07fw5ZChhZEmNnsQz9meyavGdmm4Mt0p5JqduQD/maZXWFnA0iNGuwjocqyl/uZuC0dLID6OdOzbkNEpLPzV9BwjcSxG837mg7HdgTM7FzMOYwjgyRkGCmxHQgUJL8gx0OXKqmLwf/+8HooHXqf9sSVo9mGwBgqiCgVrfe7C3Msp8DY/1+6pkQf6HBysMZfcc67y92hVjcEefJbK52ovCcj/zJzFT+bHwduvw1sHeq6AbgztWK5xxPC8Axxqfgtp6Kn+O0tAcT/oiT1mPDGgNY5HLI4xdvw7hoVWNw+4eHOVvucLbtANahHyuexBCUafHHHQZA1e0/12B8eTjNGzF4rYF1UIslbHCUSRAMzVY8xhnja+cBQHWz9qECipTA/R9jtT42eoCld8AvQgrVSR7O6pny6QX4tWbU8/pYrIOkALVqANn+r2Dokq4tdpRU7XlffR4empCriUGXH88yYC5tH3V3uGb4ERhEPXnZxwdUCfzT4M5HNi70Wb2h4y4wgRwm0RqRq06HOmIAyUGUsw/AgYpsp0mLzckZgFEgQEinG36ZOSYt+BziZcAUDOCX1Mg/05xjr9UM4A1pg3nZTxDuT/CG+d7jcqe76rRYOKYPjPUcsy3Y1z8jMl5FEvXtjmfxXdXm+izVoXfC6gwViIU8Kb1I0EqDYjE4yYvbwiqhPT/GSH7GRgV0R4x0+7yCOfOfWnif/zlQXm3m4UR9a9YF8WEd5ozVb26Mx3bLCMSiVCvJd7odteRMdiLsxH8mtlDNtB+d9z+V6hNPbJfGdB/l49T9lXeXt4pZNuW2oft6J2UDJ2MBPUNVcsHNlW4G6A/zgIlHGSKq8Nj+Nmb3mlY9U8asyCs9JZFckhAt44Bq2pPSoZLEMu87zvJPJq2NyTvaz+CXCFNrFjyNowEFT1U5v5INJn3zABaghlZm8KiTykLOuBWz990myz4B3ThF9MK8GEBi3a9a29CbA6beiolD/Ubb5t7QAy/bdS1ZdAZ4r4L/fEQTjpDJrMu79J3W76DwpPQ6DimCPKyHUBzqGdqYi9LRdP1qMfwIAwUFL9r3xqo55GSkIkafEgfaC9u0eP11NqZeDwgfZxdBgdzVZMvtlUvnsNea/uFInxIYX09oXR6ghZGIutBGg5umGPbVFU/2Mjbuz3khFRxJrW4HSYD386M8anRu1d6YJmXjipVhjE8IQoH3kbf4tuEBK9ff2HmsL2XpYDt8LHLrNwcNHvztUIo6cAKQJIvUIWcekU8elRGmxhy4H5l9Ibfqjv8Q740ac5tpKq1IFOSvMUcwaLY72O3y5ud+nmvAvs7O4/e9D06CNiUORpEV3Cn9n6iDUuHrK/yNH6vcbhlLPO7bl7OGT1zzOsKpTrz4Ly0jMpTpGqFYxxPFQmaADk8TE299E44TgI5gPxZfdAdSRXdcer69iu4hMImeCOyBP1PXEOJ59TJburBB7tYVAzJsrBw/9C5fiz9GL87Eg1K3/sZLvk39oY7wzdTNThwfh7LmRK6IBgDIvj6TMAc830n3kAyrVg6LeQTpU5XjITTgJiZK9rxnQ0IdtU4MMVHVRvjr3L51b8cNBh9HU9Znmfmxn3P4BGBssbtXe3HcVAOT5NGePdg1RktqduNpgFJe96g1GNF+/+YdjtN1gPQHchyFNWreIDaRr7LhUOmkjGdiDqFrSnvL75Oksni5ZEIdf82UdEA81NMU6Zx5du6SGFQlsmXg1W+ZCUWTo5md8/Csi2F/eFvqdYYPujkg5uoVnbBG+WZOmc5RHNMvP8VQ3GA4XiBLg/sDIbOEP96j6ab7wLO32QTar1mUk3FXtRGdaNN/fgw9EBDo9cPbZaNx/F7qC8A8ub25DEp6crIC46f9dZvqX24k3xCFXFwO96F3SUww00Oq+Ge9le+MjLJsmv/Kn8ZuieBbSuO8thlclHbE+ulJ6ejbcjv8dTbO6LkTK+5VeE0KVDNBhPu37fXEU+ThoNYtqFisYl7mliRaOeHq9yF2ouF1w0dlfoSungaBPrag6YvCVxxN/c+XlGYQPv9BUP4J8uU+Z9R1ziESAmIXOt7q86O5C5Pbnu7mkNrz1nDZHBNCxi5XbrqeRVyKy7FMfAs2j7TxN155rB9mjhlNBKFFQtynOVdF1Vv5q1EkKTBEf1MiZ0OrwRGT6DWPh3jAF5QP64jfu/QJtWLlUY3gqGdWFb5EMlLHaggzwe3Tx2Bi9jYwvhXtc8BldL0iO8ZwG5umWzgS9MR3sjaA2Fc2yZ69G33o8g0QGR7O8umNDkjlDmOA7lBCOSunvlxc6H6NkZ1tN5aTgqeKADDVRxfHU0mU5msMFMVUrfevOrlQV1k1mCCyjX/tYYn/gb9KU1Xx4pj7hbr3t4OZPx0wTqepL+U0b3lzGDN7PAqlpFTr8YKzmmWDtZNoVs7Z9f3a3jdi6rLEg2e6hCj+nHU13YaaWx74CXk1kTEWNbNb/6wkTOD7hMq5cbKYbv+AeaXybwdXu7Nz3pvX7ASS/EBaQ3ik2aeU4jfVXszogQ9WWKkWIakBho6sDJEsVg6ax9CuXMHeZLb5GtUVoa29BZ/KszorG7RF/oRhWlPk/hzAsM82NgwQJ9obxgpHLVdk2Hfk2JGQ9WGROXhswTBVSXWMmJMIzsB74cuNLO+gzmb2nrlnBl8Ew4Q1Fcjwl+EBEmJsUC0m0ikmyzyUpJdSBNfyDf1gqWSl55NcpJ5rTxwJR0gE4Yn1i8edHWkb9r9q+fKxLzNSOC6Wk/fP43xWB0CUY3Xt9eLm/3Hg6y9ACpDkYFKYQKlA0XhbQCpw31ICbZEX7P7jBG42Ua6/I92WGOFpqV2259dgqa7yVBs9MTTirVCX0SxJ+T07MxEsqCZ9MRwUQ4+Gm4J8wIgAvyAD/3wnUrML/x8vVD6a6WEHD9xra9e0OkzluOU+lWxctRaB+mUveM/YE5mU3lmjghs4tY5AyWfO6mfuB/62IIlIRPM3XNWe/KGzLwPQIHtJrbEc43yZgodyZzgEgTfe7pFbkAhvd1q5bgaN+X9AJbEqvIwjcspex0U6pYTbn/FASC9JQ14gRk+VROdu6VbHh5SP33KtIc+8V7FEI7UgSG1op/OloGByQ2EH1ddbdUWX5f2VWCrtYqFiH0QTGc3wUDQwzw083/XEEvrzhlDMYgty2aPft4FVPezlDkynSzsbM/sbCFrV+03vJb7Pssxk3rryepI4Cv0i1B26/rxXAH9cJC9/PZ3I+CIPWsddoyIUUMvrY8lNCeX3AofS8zNpxh+3uca0LxKK3fZNPnKeP1dMHBLBOr5eiWfSc8EbqVKruf2AuAEwC2XnNJb2ThwM/oXtbWJeDiUbyWk0cAaDeNrc/IVL18GuIWdy61GiOkFuvb/vch8ws7Vugx+TBr+vBr1JKTPhkuZtyA43cGsZnp5TkksKCO+evGs4a/Xq7GS2HnJcrLqyjJaKYhmhPC89iRGpj6Yhh2qOLRo8UPiWXkb7xLj7HwmyxX3pFj28DVXbbLabbYuQrgOLAF7SWvbnt1KtqHn920JuoLt5+doNGWuwkxjY2HZbeFCW983IO0YfHx7u/1Om5UsKD4LzCBfsjPwKHObwkiIOqPe2nNVw+Bpow6g3mf7yfSaUp+t3gKdixANgXWtmykIWrnQp9rJJTGZV7CSDhZMAzmtcisAB1OXaHTUvluqDq0IjQ8yD/vCUUiNHfh8JmEJgFjIW/YHuAEyIkOAn4oyYGggcxA8zu8uA3GRC8RDhBFgoBwgE+jJbZ8e1p0KpeIKblGI/dhejMGD5yp5FTyTsLHKIj8lUyQdpYagwlNnaJ3JWocyMW9aNh/YUl9wHh+jaie1ZXPa/2swf/HTEYHNpGiyzw7l2hzszB0Ztonq/UU4/cBlakRCf9DRH0kARj1n2lp3fICmJk0ZpV3gPV0f0PG/vYc4IvQvBlZwrEb7GFVNmK3+JYWhdqnYSlxVobuTdchQduXPeMWCxcfw/RcTPM99Y50qI/y9gFjmDVdZ1LLv+a5DbQ2mmgQEBhcYvA0axy7t6rEI55rZZI+aDe5Lpl4TTdpES/IOMUaGkE+K6+tbqAsfJFW7H7YXJUsOLwDmzvIhZsegwsp+t4SCgmrwJwa6ptAYoRFC2bKviwhHyncocz2l7u1SYcob8qAfFMIe+nC10lpqQM0P8IZXprfgvSFDf+9ZC55dxtRusSxW+ccKtYaHF1loGlcCaUxwH5Sq7c4j/i8vUzlzH9ywtrnX6OBMTaYwblGdFsDmzXTUzANQNFwofvt9H135eVx4HNppU+Pt8eCvVndJfvmkuCu6ScRBaY3Lhbimf8N4q0ZAokDh/iFSrEFbYNZt4ffICSU4jQXFHC7SSxh8cAWWcieYcT4ry2mgxUdqpu0Hz0WZtiYYLt5l2jv1M/TNnAmhV04oMFgNugRiA1Y/knPnaWZzBnajRizO4W+aqquWWimPCcYWQGYcSMA1reEETpZzSUysCDNuexJa8bORefzOafdrsfv2whOTgjzQMbBgQsTVl/+UWqo1dh3QmC4chKb/rBVaqE30vvEudEyAeJRoEygkdEP1tTWJ+HdgXGSOmtySaUIlR7P2aaLt9yL9KXjMhw+IVQsWSUmZ5L8nkVGhV5DQwFIVlFaHkjif61oriSIBfMEIWdPpbbm4u7vHbX6BmKVAHuJdFHN9/Agwyj7QC7YtdZ6/sDc8m3FMijhK/4MPfh/xGROf/+CZ3hXUB7ckY7XvX7jsku2RSNXGN8+CWTrDnG8/+BckvnEzPpBBoer++U5pa/wWuBrVpm1/9MucBurpFiKoeLSxI03uu2UdrpaQQP97/SrNPPiG/lOQ4LI3mpU+qlg4QnDhMvp5sOAL/Sy0wKRolJPUzW5AiXKUQM5Ce3cVgyMSuZvVarEKMWbHLdFUZfe/y5DDGK9m/OV+n9cACidMFaHflmlwjJ7u2x+RKhr8WAqUnWW7N+Hp4RrOjVkEcQ9diivwgijUFnvbOPUO/cG/v4AeZgcuJTxe1BzqxD7G7kFl060ujdt9JJRE4W02xpIed/RSPWlDjufo/zepyUC3Jw8W7boweXM8/+faWNmo4JQahdu0g3HavyoBve7Z3sUJ1X5W3bOsKbXGT0XP0xPaghGujEi0KJe6svrzWziDQbGNLr/naXsYtoVcn/6W0635r76miVw0ReSMY2HXq7LLbrzj1G4DumbQZtrbaffrJ72b4Vme2JPlrp/UJ36J8Y8C3+NFZUD0WdHyfVxLlfFEvnQi9tqTr3IhFu5bA4CXANEpTfEPaE6PpA7QeI6WvfYkTHKjOPclaUt/sMGPtytovO/IZaRRh+CSZeHkw/2p6PxeK0CmNxx+k6ug1QdNSa0tx3lI3jGlkwubnfK+QMQB3r8HqTA3QhvQ0YIGL5Nqq4IqCJYP9Zn0TQnmn/lw3ukEmq9tcc4F2W8Al0MLtsOL7s+TjYFAidEejYtdT0+IVrvwS/0vq9pzhiLr7Rf10zvG5a7YTHad0hiKPkO12B0OKUZgQrLqtK/bhE6DK+OHFtawbR7YcwIxtRYBnQNTZ1Dnazme8G5TgvQG504D3gRWQntex3yUvwRwMa07Vufb625cvz2cKT5v0QiinpFOmRU1Buuhj9pO8ZjJ7/zoeKpG/3Xp+N2w7DD1GB/gA/PcXZTb54cqBiNGTOZOZYkD6OJqaKQtnXGdi5qdTnVcCnVT5GqPjFQeRK7bKHwNdYXd1kS6eihz04yXUdBbdy9kgEhYYr8o7urDlVmLz3KTZn8nXn1j2aQbQ2mHa4Z4gFW9++kQhUBE+mT8Td8WhKNr8jFA6LJsP/j+A1G5574Ypwb/pcG/U/lDscUdcxmrntKhSVFuhoRazenYtQ/q7mGAy4H4A4BIPyo1A4uhDdqyFDEAZ46VWlxzdHImGAyQxYXn7AF1ha6BciWVUGg3/ExdldnkP4xbWl8GEplwGphATueuRYMfiB+QPIk8k5fF8rc65CKwKh3hC9czWE1JZ9gcK1XvvzSlAmQ5ia1NFgmtkNJ7QcSGEKyemugJ6yfzrMRIVkXjGwt5GYoCnUes62inYgsPDZPT3kCF9rCpr92V3z2SpX+2aLIT619l3Zk+W7O0pSyvuMeQG5aYOXagoZ0ByJZ867OoirUwPgKzEKvJG21cXGHxuPn5UjhmuymWkOEQhTCDCQ8h0u78C5d7IIKHdrVDvq1GP1STtCmZ0R0Agm3dgVeuuGUpAie+NqY9od+06QESjHEyPXhYw+WYx5fFQZ5Pq7LYg/2Vp3vhY6BTXU65bLsM2mThPzNI0GeC7kCt+5JkYZhTbDy4sWwZ+LKd4kKiRviruhi2kreZR9WoFVB97b9gKivSqHVbno7j4gP9lieQS1nwcdXnM9pGkl5hvHE7JyNqG5KiDkNQnANHkQtjf8JglXreyH+smQ65/REyK8LD4UMUv4WeOo+h+dmx5lLS0Kk+87XV0P00ZIua1LLN/jJeIZBjZij9Z6TZD8649HBA2p9LwyT7YruAjO55egMAGaCvkCFlv4XeC+JdpFtQThsWKhoqb6wY88IxX6MZwSP/QgX2566fYmmoCMvXJAMTZiG1mFdJpPd09/7t812ZjMs08TOgJKhpp2nEvqtsvLQSfEC5JM7NOoo+g8zWBDX01o60YT3UYqct9p26aPryX1xdzWeEBtH6yc0vBKDNYEmQk2wxmTrv+5vs3odMIhp+LY5XYqQGhhPJy6KuZRj54e27YJtgvRSB2Nw0D0h+b2LZX2KrNabPQYtNIjbm5aIS6Z5ZnkhoOsMplXgLylJPxPr8tQ+mgtWtPYEGwBlM6vC+qRW64HLZurHfQ9xy/zypr6vuVQoT0d8InoAxX27/Y7mqYQ32svBF4XxI6p4wmzu+5wzjgiRgnAIqPGqOdvQonh475RDlapG1L86qX+yjutjURCGnDNlCFHj0zhWchU5kzbif3MFVV3pcKs9Cw+z9qeGG9wUwGAvXy2E0Y+E1Zgp7TzPvlaKSmuVWaQdHfEleVoC89nOf+9asnqUqvouDFH4TgM2oE3Toyj1S0KzbcCoaskGngUnbVXhsTVYqGFuaTf3Z+g/70k81danXILpwGA/Ou/wzyEvbw/PBP9PI1Di71aoh5HOzy5NVQMLvKJOZoMcYiOvms6ju6NnAPqQxE2VPpcSkd7/k7R39akgty7AEbMKpTb240oYboTUcbOoIBlDw8ApoKaAfoFDruwFX0eJjryvidhj+jZ/7RtiGziuBehsboItJB6c1jfa6zaY0B21dA6RZUV3EudSzbOcyxIrB6TEX5eAuvEUcqMgfIFfsq61wTZeQq4Dw+sgq8/QenikX8K78iPd7xyYeMucGa7W3UNvO15ncz9gL+YRsYWxMeIOgQlbre05COIQN03x1zdEtjASmIxnX5Q0XS6DCIKlyEXr40zxksaK5xc/8imebsf09bFJizQOMaZmj23pUZcc3uD95sRxn9qTIp35yATBZ8cd+iTvC31sQi1yjviTqeEPB1iEwO49ZhoyjnRvx0td1HGPSiBiWPYU46LH22FtEcBBr0GFig83chjiJTIdR4IN88ULiZ4Qp0kXgpyTdyVGoJ2BZe2owLEB+83KBZS8UOeHxwFtwFNEqyaRcXAN/3emAK8pEl+FT8sd/gOS601A6m0BDyFNbKkE0AEWC0pycxxdtGH2IsZq2CKm8R9uGK+xwMLAx85R8PWmW8dntIAxr9R+Xgbbf04ooTxSKniGAGNFObroW2SfWc30lspN4bt872mD/8tQXKBC4NAoFn5EDf28c5eZigAJiSYnFptcqQD1FK2pAO22FaUggsHaKnPM5KippVfRxer/WGZ13tEb6zIlQp527iVHamcj25Cn/YhCcusBLD2ki5OUSX4zrHk729I83GCmxY0cCfnHpuHWu8SYWywqS5r0BU/iM2LcC/99sfHG5jGAYQut9I2a5WDymtnka/Xg5mn92fluqUvcFYRV2R1ueCRrNpj4IQprFYGofV75PzI6omz83pe1E2poNsrhEbTvj2dR3yirj09NiI/AlIbIVeqeBKOi6MpmRX4fgzkGbKz6TATAxkogThvGOq+MzY7EkqML5jH0Fn8FeS7w8e1LJYnHenwgw23lYgvq5H8nGbk7TTZrQN+IOXlg28SR/l8lgZeaxhO+db+qvBRnKWEqEhYTjfWOpn+rde7e17K4C1py8NXZFjj3Riy2IUkQ+xh2pFJJx1BPJtCZn2KKc6aDa9ICrTyveAxeoLdSBNZnLN448DACQ1kvXOeP13+rH9K1G7zySHb43lKqy43qS5QWSQGcOZS7ux4JvG+CATCdB0+4+8n+ZDtCxdYTgEBD4HqLlP4MdR40PGGvbHC5lSk09/Pl7bPxJI4LWJ1BtQdXXNcvGGrXj00gSzRcitLWgmgrhB65/4p9peA95bT3NnW5MW2Z2pbcd+I42N0gRJ5zOTxr1V3GG3ZBpe7yxLWU0kC+/jqETZoj6fVQk2wiHklIjqltAJqBUYyrAcSeSKWI4SkBKWm4A0CaCqY4R4nccAzDVCstQYaf2+XMJwdfEMssa4Eqp4X/Hil4aD1AvE8LdRWuS8COQaXEeM6d9Wd/3Z1o7AuMpx/a+Dob6EjS/vsba+NTZTCO0oIyyEELz6NvCXBXuzgaoFHZxapqTn0+IflOM9ShFssXHyYw+ra6gcLIgLCnRfl5wrCFolcpEHFUz2Q3SkbcCbdSU3Tp8xOGVaZjWmNe+F5Cw0jCV+vVNfpxOjI3j5og5TiZCJS92yJc79dcFxnsj79FA3GO3PumUhnNy/oMFIgtfGp9Vr22ZJeliXeYB0LNlDsjjX4OLOvSAcU10y8j6R3s+R5WoPteKBtZz/td+YfQUMpE0HNvioYjvrTJ0Q+BckjNbFLgXNG8+s2uxyjV9jGuKBPaLm6Y6n8lhswydw97uBVB8pJ0/QlGGct/F8Ow31SN3efp7RcVYaHJx4uj1nBYxxS/F0LCANqrsvofwlG60uwuddM9zBdgv8p12Us+pG008II9NUNyfklJzwci++Ii0eJ3tIxvHE6N9Fy3AUntapKVIasrmt2CMFcdgNOVWZxBMnOsqtVMEib/tVhAxtW0R2ccdm2fWkh0rkBowSXDb7whnN7p7d1ZkWP/ekEhhphSzS1s1OacFjPz12kBQVsHCGRGLHY3Wg26GNt+On0RwSoGwouHXnRoRxInCKPdTQ85hUB1cGa7JRC5aEI9XrKxMnjOVGxvedUsSSmKucyqrrk8xJhHE/2Obx8TbuznTR5qeHSpJY+Q4duq6vUiD7HFcT4SDPK8BImyykwRkPpIoqQj0fi/1RHilZw1yA8sU3KqQzNitSUzpGnYojFidBCncjdqaFDAJURTlzzcAUxV4xgx09KrLCBNRqHDeBrOKKdlwyiQLHnzR2mgy+NqhoMVERCfEcRKZ2CPqHUtTw1fvVeSD1Lh5b2lqLPKd4ni909pawys5K6Ekj7A+DPH2HuVc5rblssRNaE8iny+cXhO8L4Uoytfh667QG594flTYxPlgRCwS/N4BdYEGKr83UTua4+mjjodybpmkHb9RzRcGA9FFSy8aAZ+0CYVP/2VesJE/3iORH5zD+0M6cW8/oUiUi+ge55g9pjpPF5qYKtnUs57hsrDvHFkjWApOsliIGYOded1FqJowXT8Sqxg4AIdkY0bvsPcB6ct+s4e+Ni7myE/9i6EKvOQFTQzkm2QjAcN1aHLKWe32wZz9NO0NT78W/f16oJiGHjutQGHFsODFUyvqm2vQktJws7E8mULb11rqMECtEg1k3gIBNAwyFuhDfPoZpdajPuxX5jxepvATW70SBq3m+IFxdKyjqJDP1ldxbNhkmgL2nNZpGSF8qgoQnBGHNs3LhEncwKdiduBWQBo/Dg2EUPe7MIixUdZm88Y2A45NHkQb31eOAG9h8S7io/+Ps5YWgIYI/6khc4hdOukY/xMaCVlKl8IKupve+8lYIMUI73OiJOCHNQYc4Sz5IDhUFcVWrUraCe4RPGPoy6QLFV2QR+ugXhLX94/ouFLUwbOkJH85LC3wtq0eIizOZpq2YJrtcn2vTTPdA/+IoxN/NwNPBFf+004C8bYezaE7Tk+0Xr0YX+LoUJ1hnXAYFAlq/RVYp1R01dV9T8SWE5aEQa/wCtmRznZ3O5G+rXz+2k/BhvZ658BHmVTGTr3pZ9YYWHMx1Oqq8LoIW4eWiSshogikaHqjH25j5kFFc6Rq7dTKRsOk7YibVIxEbmAOBOqs4DhEC6UD2p9juKcdJbFn776VIJesZUHPj4V+BsXoknE9UNesHc5SCXICXTxOftVVvdL+pEBrXT3BAsI9VPD4tDEJ9Qr1trRbASTGsAfd8sv+Kx3wRBk8qXzVB78oJ+ILbSdIP2k8JVxg3086EaFy+0JwaWvMFsyiHwruEubBEEOhCHUdxWwuEcQdi/K5Ws3rWyTP2Fj7+1M/kcOz3Qnri0aa+8J+/SIf4fccQjEDolfqOpIeDPl/KbEkkiYCox/a+dtxBu2aEZagrrk23uppit+TYZ4lIgI7ttqZxonz0JbD95X7Nqfso2Kfvep3pUpK6H4jc63QmACHhmvAKfBcKvF8mModphx/4cr3uRbqM7M8n6PB3LA+Gm/jPG/vkjQoCuqBYj1iyXLUdYNvZkIltHEJM9dsnUlcs15rt+xleTyy9//8WNlhLZpFFVTCAuJw7eo6tzVM4Pq6/659Jxekb9+Qj1kgomW/A74uCnDf5xDasfwD1PM8/pGXmEDlcKbetdkt1EqUV/x3Z4/WmV8dCck4kY2HeNG2eh+Zh9RIqIY5eACv/VUvUpjZfPf4EnCGWPJQRRApE+H6kAAGcCSW1Lmi6etYu7DiZYS+JFIkitlE/sqgLA6cdHQerb9BIhiysGDqCWwr/AN7bhL5znHDwKzkIlX0kCSQpDIhQb2GXygQXQOlTKyCjRhqxZPdYSvpRDVgqT8PaOYdSKcLGZtTcfL3ePLFKtAmo/8fzTbK4jCK9fMSeG5+hh3/ufOlKmSjQ2mF5aE8a8e1gVujho/SIUYthLT2dyzzhzpHFqjHJXRIMETZvzRV3C3A59ibGfjKmMa381SGsbuExK0EshI7zn7xhKgpfPnWqSg/IxC7mOIECiqeZadjpvtnyKmAnLvhvRlcH6Yl9T+wpbFif54LO7BSHGvKAlCbCpzMHC3p/3N8fUzSAefTew+jtqm5bLBvZQT9QP2neVuDTaMw2lGCGctCfOtJ3e9UtQAq0zf0jxfmSX9fSBLuTgFxVOOKd4RF6FA/zoiqhb1XOtpSJY/WktSIxpt18pGhML0O+WdjPWwudrtIFubghh0IOPAGLqA37EeRBztcMLmDWxFX43e0OgPo+LiEIOU9pcyFxPdL5pGrPuH3tmWGYvhUPUqhUAw33otP5qsP+nl7VCB7c9DOPzMCf2VAqDeV3r2mvCAv5+ZmkLhg7qKssuAiMSIk0baHlykQpCeb1orOa+GiwTNGvg7tD/P17JU7dDQqfBBPY+uOQXZ4/VNj3RasMGRynP8EkRFuwD/INXBV/DK0ecC6cCT9yL7CWoY+u+yA+Cf4qCJmOIrX9B5TwyWzS4Q9B2py4V40ngRZzcMqH9I0QpaVYaWxJiKobl/LfL/VaehJA3TW2c55knpwM8it/6xr8H3CSuPaAbzkdFO7xWI01Fs0nBh9T4svi9ho89tTDuykL8AP3G9HRvZ6T9OWT9qm9rRc0Y8q+UdlEwZuG+GrIrb0qzSb+3zGBr1UnV4qcnJ6QmmY5wmkVtxeNAuGIwlegkOr9qNA+koOEuPzxpdw06+Lu8tMGBW4Aqn/OwDuYD2Jx3ey80XxtXpqfNogY3tNwMxMTYdyjuZdxnYD0n4gjWfBCogwn95919BvfyaSVC1mRs3X4Xd3KFfFCllVAMr+0uaab0np/CNPjzlP5s/j920Y5ETI6mM2Ac0dhhodvIht4eMTGnUek/IeGGOkDJn9Ab7jyVMuQEPLbqOkWdp9NtA30YHWGtL2gv+O02r2gBfoQYvLptrHeVD4Yug3BNnT6cMxQDy1iAa0tWIlzhLQd2GGXML1ariQi8azZj6rIhHrIa3IRIdI6jwnK0RxlY2fo4DlvarMvr3SORGbo37ObTR/w9Xp/n28sCMo5FA2bunIsvIkEs5JCwZHtj99urvBOi5udf5p6KCfYVeJ45j8us8dHgOXEGAGoWsAi0Gd4pUJogHmwVlJwPsVzS+nyTphf4vq2K15B/5ysLIoQJ9V0q7XXUMjaEdGq64BqAG/4E1Iv0b3kR1a+uqsJj1C6ARRuEZgPU0XZwdXmZI8Ia2JkXlrEn/ms/E/g3RFw6+a6f6xNnd6Rij/+QNWAzQxNd+sQJegB7beNlX65JzofoZtecS4DvVOCAQyJ7kntFIifCAHroqLiMkaZnXmBH3SpEFbLaePMEFixJHsD6Y0eZMuw1I9//JmEJQoNZHG3nubGSl4OV1g/38YT9dV+iUzt480BOvPi31QPDAFaqzFyrGIFPgcCP03m8/PwOh15ip6Dp5iV2xVLPAA3I2e4sYiGeVP9k9fA8df6mc0gFgjlCESnQG4OtIVocD4ukbgngZbTaTzjX4XqMeUag8XJYLuk98Ew4RThaY20r+fvynSMCWXjjJkPcLzSasyr4G958uhN290DMEZLPPxzBEuDKEFhX5T4WfhAX5NTP+yeive/aqf04QWOCFfmZ3AhH52sfhJPs6xRPQPk2L3UIKcc94RzzQlbJxb56GXtqlBV1Qr9wJAhAeDM7PPK3j+lEJlv54OYxDEbxz+pmzUtizj+DtIght8TIRs3Mt2NnrflYqHoayVIv6WPQ/jyYE4/Q0ei8FOXoQqwu2BkuPcip2ehndVNkEK9yRyfdiRstFW7Cjpa1q8IYFjIeAFK+8HIfyo7gAcOC2mxKdA4PCKtj2k8Qcv291AGObDmVsAHYIb/pdsFdSt0F3r1Yzlz9YOCMWKytrPSB+3xxo+TukToghEZn470TSg8yZc7KJA8mDllNNoZJ8s9tbVCtYayDMPPyvpjotTxiWUopLDgJs0dn4yz19zl09oBXL8KZFtX0px9kl0zZPJ7EBcbRjGsNdfx9r3tk1l4C4ojVBmjFQPXNpRNMnEyATfXw+bXXqm6DhbcKBLJ3RDTc2Ff7yemncjGAqaW4Acl6p/X7lHxqnLKlU/IjvixpCvK9v3eOIUoKyFhicHglj79aqrwF63GFVbBPCralcLj3ibqL3lfyHR2xYvt1AlblUGalFH+adNmxwwl3I9Q8tRRCa13bgFtMRshh012xgH+DKdPVMROyvty1c9UugAcXxswV/nPTppyPfgD5AVH+9+/mqYZNCtS9+CJxwzB2RLJTDVFLgz1eaUPwKbXQZzvzRdFxTayYh0D22tXaKCzlxni0/A0L7lKG/tnfEK6W78SlFhY2QdRrS3zT5h8nYFanBzA77S+YMxeEcL6111Z0ZVSfWhVJbVp56L05FQvwNokrXi1RLaK6PVLocieAWjwu8KcawkJ6IdTevZwod8l6rWzVZzHytLYKhmtE8w781vdJn6C8gHXBBRa/dEWuXkNjF9iIV6vas0G0yEVDVST8SBpF6+e8C5Vw+QSKv7rmChNJHI3O1xaWV7DyfwKEyjNSw8P6zekBIlX2i3eeZ+u6D+NoDYuw7zyqn5XZoWaBEZaN7Pb/iIJZuiPmyRSo26QG91En5H1/3CmI+GKgYywyM1UI3vedzUeb4rUeEANCLjLJgq2kJ+LoXZwW1pVGtAs9du3+Kwe32MmY0+VOtfQ8Xarcw0jp1PDFYyoxwlZqbMmcv2L4/nK9e61wmvAS52ogMKpwmZDVaSaQbTtar3E+d80prAu7bRE+pZTVVp6kK4e7Xc9kbAgUVvTPA1gXPMIhEtWZGC1qPdWYITn291+6stgPYHePnpAXyOvqYAlVkDKgLCYAxbmsXoGJXHucGIRLuyNsyqvJYvnBJFFmTpqZ2awGybNlvFB4b/LDJax/Z87fEw9jy9aPmAC484n+koDdb3FEn7rUWiDr/I80cYepMXPHDu8K0C7MXAqsCz7fq/4RIm5W4dyyj7q403IOYVGX5IAp3lSmjM7koH7I1E9dfv5PVEVQf3ZN3LuBWeJY3LPVInbHqGIi7PxH9oNRnUzi9aH6V+/L/qOnA5+Nz9G+9vTsPxDhfx5Eltf/5DUOfve4ttuQg5tq1bMWTD+vT0fWnaSFmxWroVsVZkF7nO7nV3FKcoCOUSXUC0bNRR8bUZxZlN1y7Wwp2DVmuB+oe2vd+M8/lWlOSDF501pwd0hzUq+OnWSzXnytBZGLA2JN7axlobmpPSJUCRXm29qzB4L7+NOhoG2DEJZ7XfTu7KFk29qvU2vN9+IsXRDqM3J0T/2QDpyg5DysDzHyzsGqlAg+axqhqPxk84v/VK31dE8691e4sp3+stuqwHFEC6NSryXN5e3DEW6K8UBRgVBvRDAe0BM/GnR0CyAul3YTgIsnysrqzD06xlSUkadvwOTEwwrYtSDGQXUccFs59eIBTEUtz0P5kgcMgt3U9k1AALQ3TBbxicTyLiU1XA2di60FmuSussNDoDBUvFM9971KgOZqHaotlVZzsXuVx7CQU2BTeWOcvuwG3/FPMwhUeV0QOZe1tlvfj+YpnGbof9UplZR8QOS3VzylZA2wtcB65dXr6i01qk82S4JnLEwTwbhZQNfe/4c/oJ4cowt26Ac8sNjS454nIj8xRknRPdeFS7hS0oPbz22T+ei8Pi6wdQURL2tfLRq0PVSK9LAWI2mqUnNYuvA1m5vGM94skIOFAxICOZstoN2m+ZN6ptvgNL49SoKzPetm3Ztj/nZSOXQQU4MFE2YS4Gq8osivDEhhn/sdkksMvCeUrme0DVUEymcp4SOvstoOsKTckoCsbo5tFUtyjMoakyMewcwn4gwacOhn4SEcBa2KOhOjQaWbc6fG4XOTdDA815yB36o0ofSs2JiBJVS14hdr4MZ7wecMTXorkjyx2yHmlfziTUafFdQ+5Fs5h050MEXVz1RbdfReV0WaAF2IC5MEpWe3zoBFdAGOhh0RKGgaBsjeWjsp4XUkoqStn3G4hWiUdYm/nYT463wgmhqV1uk5qfJyVNApIH7Cqlut2ojpwW3Nxaeg2yu6kApW2uSozgiGLSSAs9D+0RRGtC2X9nM3+MeGNTMHWLp8ig9c2Al/g37nf8hcopd71ZgBqmxYkn9HcWlZCNadePtrz9GR29MPQ94Es9dKwffjZwi2KKjxLgPRtzrf6PWybvlYjbAQxcjkZdapCB1785of+Aw01ZDwskKfbNY1O745smiU0dxipdrI2XyAEW2voASKC6kTdZODrzJvN304fBhZ7U5pzA2ID79ABwJwdGZHQ9muR48FMO/5LOLwq9m6Sim6BzgYNDHV8aVToFgsWL+WtZ+yE7x+wV+qH/q8vESIdYKdyL2gwNRgw0abLPHHK8mFNN/MbmRR9f5d89mXr9WR1aYVgPS/bWCzQ86e/XqT/UqLFyJgskTquaB9AJ4UgBg4L0X4T/kLbT4k/MgD37By7K0DZR23PWnYlGfxwJDvf7vAQylz4DHs73mpGns8Dz9BP7BlgJ/sdc4xGZER62J2+MPJGI7SoUKdHvPERMdOTxdw/xLsmBSRhhB+AGHyj+i3MnzB9VAKV6VCVGwuhUeBovF/cvYT+LPwQZUra6x9TMBMcTr75D0bx9u0KQZ2ESNJeYViOrVWRbAooSxqhfYgjn6bskU0WSQK0lhSh2z4YxNwUXz/GIEkbTwEqtBK0bDlYC/qs2eq6ZbtCF7pUlRVGrNDBB8UywthilQhF+Llt0GBrJ5PllYu2MFmUXP2psAtuGz9plYhCHr/xU6hfTSxXh4Mgqx+1lYadauYZpyv5LjBvI1RUKT2CuFOjvdB6eCIb6YvPmEHD+9gltKNPh89Oldm2bdmz7OlS8oCTiJcXU3E5Wkn0xr+FF/tDfIOavob5CpJ32nIihYM+3fQJUd5E89wPRWyBQnADfv/YEkO8q/G2fxW41LiXoDjOjFYk6vUJ3BjTc99EP7K4S+IcyuD+8o4zexqEq10XyAEgTV8FAvigLrxiaHeNpR27692HlscEoprEXKKdDFWKdUa6dNS1YlxAfZ81/t/pkFwjCw4JVN/+1+DjAYhDhAgCMJlEI3EVNvW83qpxRJHEFwGXHtfnZ/nRnWWriZNd86Dgitau5Fffld8ciD4Tt5o0ynvyvxAv8s+TfdxZeDrjEONJ4pua8cdCYR3Ag1EVwn38ncNx43J7N/z725f1PfP9EnqaQXdtBVqArnTHygIbb7z9VjblA++wxMQaOqpvRYHKwb+gbKKpONhl8IlBmLu+5Pkh2JvODenRvCr/XpamYr4VuUPYHQnaTRaWRV97IoKs7UuEwp06WuABHu0opz7AMv3DMlG0kvS9C+6An3/VNpqoYsy/UiUKc5oDdimf/IMxAVmNTI+8yUFZPVQFpf0LLVzEai42gBOD+EsH8yDEujKp4uMaTqdUjbJoiEzFeDRPNnoMa8VQchuF9Wf+dt7tcpmCg0PH+HO2GZc5Xfdv+XPR9UHeHQVuEDsHyMb3njVwklm7WEVBCBsnE/V2Zm2hWXb16RL2o8RQjmDuA+btmbpzl75+jyphC3urtfpMr8Ij/fNc2Qvhbfr0mNkveOj5yMQEjW+u25o2roflD7SOgwaOEDliBrQI4KB2/nz2GhDD7sSChDqgKfx3iMBhTLpfBahxC/PVgihc0OrCeyFt+qa4Ya0hwfIep0rBuyvZ684oiewkE7SFnK+w/yCVibPHpLnytq1duNfhRknRWFA3pk/8v/+7XYvtwA1qhibrerk7NnoP0wE3324oFkiEg9T1wOIXkAaGTkN4aOcfr/spbgPkk28OeTISrcJeM2gpkG/A3xQUAX9Qbvn3WZc8nF+ybpIC2D/XGX0l4HXb0/f9of5jN+JfOe5UubixGtjLXLLnuUye2DWTjdXSt6vDMQvO+RaEirr6JAgMJ7NJG2R0/xWuXAQbUHnE32zdPMOv4tVuGBTSdl4irFVl9hdnT4mn5muVFaryJ1mrpsrNcBJXyIKqS6o+urpcyn7tSg82kscy2LXwhCo8t2WIMiG1n75TCFvGbfKd3ibmQ+4+Sn4zcbPJzQWZJk2C4eBNpG0zBAB6qk7uDiqOYs+LRWptQPQrTTAR/LP13nCVx+VXvGR0DazKXC5zqHMK9AwPRC6oENynDlTWdTJDAxQeb6XgbSy0DoI/udsEZOYpoJuMxrwYSL4iJmb+35jI3LCAw0fYjXgOKxlipS8ZHDVbt8Fp2vrx/MdWEWzGpqydPK9jwTt0oYwO0pyhT7DZhUOVbFQqSyWBla4mn368KlDPgrgdZHBZD8V1NxqAL7iyPm5VCXGvssMbGAwR7N+GHCwC2jb+dVN0l8ZK2wiDL7rF9erGJ3B0PMEfVB0xyHmSX+rVQC5szrQxdKLfilWOlCMNA8SCml29hBmrJJlG9vMf4p7Torv/l7ECRqIxiRkCFHz073YcSlFxvGXDylnZW8ROA93B7IQw1/qsAuOO4ccVe4Vjw3K4NOanm4SstFiyNPgcUlGok4bNu6iXkAGDl6Np6AYP4PWNfC6PWfIvt92w8A85/rO/3raOXVuwNNfJvkf98L76f4d6PuBIz4QEgql6WmPkEhoTh2AnGcXenE4RWiqNTT4W66lnv1SgMswKUuX9MxtQviUdiI8Zh+2+mSMeGSU0s27wWUixTg768LFWfCJtHexBlOXAJfdz6efDBSa0uFVgmgQZLthtdBTjIKxKW8UhI04LWE3+VpbtA7+dABju/SvpWXzRN0C8EZq0N1Kr9RTE4mPc2p2NzWq6xTvZpPbWjX6gTWLBD8Frahujpf3jlqyLbWhQoksY1Bk5y6TWLhMvhjRYqx1cG47dmstWmHyHwuFeoxsrGhG8Rh7ktA0h0G//fTD0V/GUrU1fuoZ8esqz64jlPjjxKBMpiXECCqfIjfVX4yNoSJSKNiWfomiwPWtuFIrUgWOhqIdXhnslfR7VT3aw1FOiPj0Gtx7a81ucQ/rHzNWQiDQhCYZkFVUxyB+blHXluPWBA9tr+HKx+bxSs/az93briiH22hTDBsIAFoyIXlNs7/SXrn+Tyeaybs8sOxvzA3efp8JIvHP8d20SC6wm5hbVtsUxL8nSeHQjZWfg/Qh4ltLKFFPeo4e5X1/s3IzGH5UoHvwC4AGGU+MfXKNNXtQMC+fFE6TldfjqXhqVbpukD5STAF+erzS64uErKi+P6scppbfT9UV+2KGOxLWNOJHCYojGlBe96GxdxO6TA5qKlPmA9LdXEmPn83FM8Kz84STea2fqIQUrwRW44Eoltww1y+3cg9olVz3WE3vb/Zxv5GwNT4ZEdJV+kkNx6niT1IgoLsch1ND8svqoAbRCekGMhXPOJmkSLav61q/LH1GmNZsrtsWcsBTlSampib3fX3WEwOVkaFrPZeQOmeDqb8xCzDdzVTVOvHwmOdVz1Qhc7eWyUPyshLNVqoEJAxjIyJpfdEzJA9IUTVVz4dlUMQibFe9N3blW0TbCIFpppx+mMRd3nkgP0nY2ZnHMMqVMDDWcXzkNjsDLjVnsaoMBbhDejvuy7RDTZiMk3TCMD7vOjsbw8vjRfHW061FcxGWZMgfO8R0AQUhGI8ysTukU4WDAHpQHJcz1JDjtDqr1X8qjMJtj+RMI7bai5I4OwDW+sbUQRmCXr+izvijnnsBtDzLGqpnochpftTRZtcg7DUpzkfKjQujSvo5fn8682AdtHP1wRGTLT09ZFLwX8TVD3qQrEMXkm/L0/QlRXqwJ4uVisHxa1odQ4J6dxbNqVxopFDWnMzAWBWA98F/Hig1F20KP80qZKr+YtJUjD8u2qHEdNpSxaAPwKJsDtN7d1ao3A79EKYe3GUj3e5Nty18K5tb3ESLpSdwwHQJioI+1OfQpHW36sBxq37WfPA6kkP+J5FxueESBfP3KWlPqoQoTIEMntwuiHLZ5Ik6agjCOruB4AWoe7Fb45+0421SOk+CVxnOZvkn3XiiE4FMBYM7BOlG3Bolo4xERq/0VWGVIT4U10GMBOagMm48QzBLcGO9TjlgMYfa516xEeWVy+l+Q0faNfNYjvLd0HrhUdFvaToLgd73D1s8w5fF6/Dd+UmEy78PAr1X7fKEZbHmdO3oUp5Nkc+a5Zp5jRZSfBvnKFCy7ST4WWmc9Sj7ZE3JFgmZsNqRMKL0gxG8S6SvOBdghiAZdUNj01SJa1MV3RatqA1hbDijPdo2nyI4G9REr1e8bIiFJPhjL+SUjd9DVezUgs9DC4GMrwlpJGcIpD4uJQr47tSvyO4yEePNzTf2CHUTV/JaPKGpmtxxbSBEiPWxeasbnpnH+zUTj+2lvhfZ//TwuZ3kFOLiJvb1vQdto2b44BvFfF/151t3lwfXJM7mBs1z6mmIxUFnF4s+qeXfrvUbDnSr1oZV4+32+X47KFnevnvzjP7uG43yd4P+kvOpCLaxIXo/9jjrflm0qN8xQYmaxZca1un29LYdW3izceGOaqpPDTY0abo6PSvM4T7BbwUZ39tmu+rW7ggOFCPGqi0eZ5yy+KjhfovMU+SbF3wb90jqpNalEAc1bpm8nMPJqXDu1UVbrjCxdn59BSMSWE6TaxyWJal1U/znEHnfGvLZ9d3pmnbs37myWWSk0FPdhjSe01nEOpRmUI74f86Y173MnrTXcLML78OYcaoQU51frm38TirGagH85gOxxfZeRr13U+Kq9tbYQkyizWYUbUClgcB4asCEcPa6kGFWHLNkojeHRWsm37D8ApNs9GU+x+L7pP7MnGwdWoExCS4yuUE7DJ1nIqzpsks5EqxdIAuhgllPiEL4NVGHx90qknq4Vw6vTs2QrSmvjy1BLDSmswJ/bj2yipbiZUOsbXZshsOIk1MwVPGUbFJmPCXaff+Yi2/EHOWjkMfLu8+CZs5fdtdL+IY7Z62my3OmBUvszsWYyePPEwdms+u2fZeQezQi6LMLEG3gCIxpVETqYs/yq8K/XGQ3QiATasvLY8whArlbZ73/1WeyvJrIoImwOwDmbS8Ti4xDNAPvbwxADgF+3tQQrRYMf2y2MFHXX8Almd4H4jFfiy0wZ7H0R3pnYHtQ8yILEAu7hueeXoVFhrKP/4h/X1asJ0T2SdTsrF6dUkvwQStGnU+5z2fM0SyJruism/wPEKewlp60WbHuwlBBkV1mnKwm8pm5Sfnl1h8dD5yimV3tnA3k5fVMFVd5KWwy072MUfb0WfEdwh7npiLOD0/a6dSdFDMSS9xxey+3CEMa1CyjfPXY7Ry1xgcHO0HKT/eZWZD0LLEr2KC1HPs26ba6qmzHnLVmXFAmYsjCDnGykxN9DHQknxXF6EDYKYaQsh9fRrEQaScHorG/i6vZ/qVbyTYJZs0e0+e5ZCIYNelkTxW1t/IzIpJyu4zjanZFWmmTGbQNvM7zxyveGfn38Jc9srKWcW484jC9A/uJzZGUtxp+EuoXsaryLQfvh6DU3Ap2xw3FP7yjSLmRNqxvWsCT6YrJsaEfbwlQJScaWhGIQcVCac0mzd0aFcCUCG+oCbwRyfaWKL7jJhZUJTmCR11/88x8gklsWktwL6+zPVrSIgCAvzeVZPE25AJ2NZI7a6Q8QEV5iOBktycUJNSa160JRS7+N7Lt8xquu+fTnSJygJIwVU0kqc4YcHeC4tEX7tZ8BCVCt+aY3A7vQpG3tZzauZeG/IzJPr5UUEr/DtoWXSe80DW6p6p1ByjAZmYguBSL2V226T9PWX5Qffu/F/oyXRvx6fbquKG5Zuw58cEPPvn1N7EXh33uGldy4lqHgJeC5em9r3J4mVQuX3WqqU1cEa6VNLdT67dRn1Opxo1PdZ30KT1IbCgsQCntrKKRKi5eK/YVTVDaP41x+woyXdSZ9bYb6j8ckF1s0Fva8esVWgUCQasOeld3StvZaIu700sL8Yjc/BdcgMaZMXSqh6DS5jey+wRX3POv/ENT8H9W67lwLFI7U4pCkm0EGmhtF0eM2rvPPhq+0aBnQ6Oypb7Bm22tq/C1nTXrjviAvKl/p0pQ1/pgaNJfPMYAOfH3mSIwL8Ra2kGt8e+2ORbUNliiYHIfrQ+Z1g2POg26RO8pm3kYSVqr2tVE/kwuTzQbh13ooY98M3vcIv3iQsPvWzk2dpmpWi6AVM3cG5PGnXiOA6i2Kx//umbR7AbQxW615HYbH7fT43fgFuujdw=</div><script src="/yelee/lib/crypto-js.js"></script><script src="/yelee/lib/blog-encrypt.js"></script><link href="/yelee/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      <categories>
          
          <category> 前端面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端面试 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ES6中简约强大数组操作组合</title>
      <link href="/yelee/2018/09/07/ES6%E4%B8%AD%E7%AE%80%E7%BA%A6%E5%BC%BA%E5%A4%A7%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%BB%84%E5%90%88/"/>
      <url>/yelee/2018/09/07/ES6%E4%B8%AD%E7%AE%80%E7%BA%A6%E5%BC%BA%E5%A4%A7%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%BB%84%E5%90%88/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ES6-数组新增方法"><a href="#ES6-数组新增方法" class="headerlink" title="ES6 数组新增方法"></a>ES6 数组新增方法</h2><h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h3><p><code>array.reduce(callback[, initialValue])</code></p><a id="more"></a><p>数组求和</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br><span class="line">numbers.reduce(<span class="function">(<span class="params">prev, cur, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'prev: '</span> + prev + <span class="string">'; '</span> + <span class="string">'cur: '</span> + cur + <span class="string">';'</span>)</span><br><span class="line">  <span class="keyword">return</span> prev + cur</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">prev: <span class="number">10</span></span><br><span class="line">cur: <span class="number">20</span></span><br><span class="line">prev: <span class="number">30</span></span><br><span class="line">cur: <span class="number">30</span></span><br><span class="line">prev: <span class="number">60</span></span><br><span class="line">cur: <span class="number">40</span></span><br></pre></td></tr></table></figure><p>这第二个参数就是设置 prev 的初始类型和初始值，比如为 0，就表示 prev 的初始值为 number 类型，值为 0，因此，reduce 的最终结果也会是 number 类型。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br><span class="line">numbers.reduce(<span class="function">(<span class="params">prev, cur, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'prev: '</span> + prev + <span class="string">'; '</span> + <span class="string">'cur: '</span> + cur + <span class="string">';'</span>)</span><br><span class="line">  <span class="keyword">return</span> prev + cur</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">prev: <span class="number">0</span></span><br><span class="line">cur: <span class="number">10</span></span><br><span class="line">prev: <span class="number">10</span></span><br><span class="line">cur: <span class="number">20</span></span><br><span class="line">prev: <span class="number">30</span></span><br><span class="line">cur: <span class="number">30</span></span><br><span class="line">prev: <span class="number">60</span></span><br><span class="line">cur: <span class="number">40</span></span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.zhangxinxu.com/wordpress/2013/04/es5%E6%96%B0%E5%A2%9E%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/" target="_blank" rel="noopener">https://www.zhangxinxu.com/wordpress/2013/04/es5%E6%96%B0%E5%A2%9E%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/</a></p><p><a href="https://segmentfault.com/a/1190000005921341" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005921341</a></p><p><a href="https://segmentfault.com/a/1190000013972464" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013972464</a></p><p><a href="https://segmentfault.com/a/1190000013121115" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013121115</a></p>]]></content>
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>干掉状态从session到token</title>
      <link href="/yelee/2018/09/07/%E5%B9%B2%E6%8E%89%E7%8A%B6%E6%80%81%E4%BB%8Esession%E5%88%B0token/"/>
      <url>/yelee/2018/09/07/%E5%B9%B2%E6%8E%89%E7%8A%B6%E6%80%81%E4%BB%8Esession%E5%88%B0token/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="美好的旧时光"><a href="#美好的旧时光" class="headerlink" title="美好的旧时光"></a>美好的旧时光</h2><p>我经常怀念三十年前那美好的旧时光， 工作很轻松， 生活很悠闲。</p><p>上班的时候偶尔有些 HTTP 的请求发到我这里， 我简单的看一下， 取出相对应的 html 文档，图片，发回去就可以了， 然后就可以继续喝茶聊天。</p><a id="more"></a><p>我的创造者们对我很好， 他们制定的一个简单 HTTP 协议， 就是请求加响应， 尤其是我不用记住是谁刚刚发了 HTTP 请求， 每个请求对我来说都是全新的！</p><p>邮件服务器很羡慕我， 他说：老弟，你的生活太惬意了， 哪像我， 每次有人从客户端访问邮箱， 我都得专门给他建立一个会话， 来处理他发的消息， 你倒好， 完全不用管理会话。</p><p>这是由应用的特性决定的， 如果邮件服务器不管理会话， 那多个人之间的邮件消息就会完全混到一起了， 乱作一团了。</p><p>而 30 年前的 Web 基本上就是文档的浏览而已， 既然是浏览，我作为一个服务器， 为什么要记住谁在一段时间里都浏览了什么文档呢？</p><p>2</p><h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><p>但是好日子没持续多久， 很快大家就不满足于静态的 Html 文档了， 交互式的 Web 应用开始兴起， 尤其是论坛， 在线购物等网站。</p><p>我马上就遇到了和邮件服务器一样的问题， 那就是必须管理会话，必须记住哪些人登录系统， 哪些人往自己的购物车中放了商品， 也就是说我必须把每个人区分开。</p><p>这对我来说是个不小的挑战， 由于 HTTP 协议的无状态特性， 我必须加点小手段，才能完成会话管理。</p><p>我想出的办法就是给大家发一个会话标识(session id), 说白了就是一个随机的字符串，每个人收到的都不一样， 每次大家向我发起 HTTP 请求的时候，把这个字符串给一并捎过来， 这样我就能区分开谁是谁了。</p><p>3</p><h2 id="沉重的负担"><a href="#沉重的负担" class="headerlink" title="沉重的负担"></a>沉重的负担</h2><p>大家都很高兴， 可是我就不爽了。</p><p>每个人只需要保存自己的 session id，而我需要保存所有人的 session id ！ 如果访问我的人多了， 就得由成千上万，甚至几十万个。</p><p>这对我来说是一个巨大的开销 ， 严重的限制了我的扩展能力， 比如说我用两个机器组成了一个集群， 小 F 通过机器 A 登录了系统， 那 session id 会保存在机器 A 上， 假设小 F 的下一次请求被转发到机器 B 怎么办？ 机器 B 可没有小 F 的 session id 啊。</p><p>有时候我会采用一点小伎俩： <strong>session sticky</strong> ， 就是让小 F 的请求一直粘连在机器 A 上， 但是这也不管用， 要是机器 A 挂掉了， 还得转到机器 B 去。</p><p>那我只好做 session 的复制了， 把 session id 在两个机器之间搬来搬去， 快累死了。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vNJe66yhKRkVOxqS9gxftlwCuh8yicUcPPFaMMLv0oia9Xzf5IutmIPwQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><blockquote><ul><li>后来有个叫 <strong>Memcached</strong> 的给我支了招： 把 session id 集中存储到一个地方， 所有的机器都来访问这个地方的数据， 这样一来，就不用复制了， 但是增加了单点失败的可能性， 要是那个负责 session 的机器挂了， 所有人都得重新登录一遍， 估计得被人骂死。</li></ul></blockquote><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vwDyicwnvVayaKBpxXY4W5mUgQDwHD7Iwu3yY2OhV4qXG49oMbIgQP0A/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>我也尝试把这个单点的机器也搞出集群，增加可靠性， 但不管如何， 这小小的 session 对我来说是一个沉重的负担。</p><p>4</p><h3 id="时间换空间"><a href="#时间换空间" class="headerlink" title="时间换空间"></a>时间换空间</h3><p>这几天的晚上我一直在思考， 我为什么要保存这可恶的 session 呢， 只让每个客户端去保存该多好？</p><p>可是如果我不保存这些 session id , 我怎么验证客户端发给我的 session id 的确是我生成的呢？ 如果我不去验证，我都不知道他们是不是合法登录的用户， 那些不怀好意的家伙们就可以伪造 session id , 为所欲为了。</p><p>嗯，对了，关键点就是验证 ！</p><blockquote><ul><li>比如说， 小 F 已经登录了系统， 我给他发一个 <strong>令牌(token)</strong>， 里边包含了小 F 的 user id， 下一次小 F 再次通过 Http 请求访问我的时候， 把这个 token 通过 Http header 带过来不就可以了。</li></ul></blockquote><p>不过这和 session id 没有本质区别啊， 任何人都可以可以伪造， 所以我得想点儿办法， 让别人伪造不了。</p><blockquote><ul><li><strong>那就对数据做一个签名吧， 比如说我用 HMAC-SHA256 算法，加上一个只有我才知道的密钥， 对数据做一个签名， 把这个签名和数据一起作为 token ， 由于密钥别人不知道， 就无法伪造 token 了。</strong></li></ul></blockquote><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vicfOmZHQhQ7e6Wjk7licKBMh38rPZfnEQxAibWXjY84P0icEVoFU51ibwiaQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>这个 token 我不保存， 当小 F 把这个 token 给我发过来的时候，我再用同样的 HMAC-SHA256 算法和同样的密钥，对数据再计算一次签名， 和 token 中的签名做个比较， 如果相同， 我就知道小 F 已经登录过了，并且可以直接取到小 F 的 user id , 如果不相同， 数据部分肯定被人篡改过， 我就告诉发送者： 对不起，没有认证。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vNJe66yhKRkVOxqS9gxftlwCuh8yicUcPPFaMMLv0oia9Xzf5IutmIPwQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>Token 中的数据是明文保存的（虽然我会用 Base64 做下编码， 但那不是加密）， 还是可以被别人看到的， 所以我不能在其中保存像密码这样的敏感信息。</p><p>当然， 如果一个人的 token 被别人偷走了， 那我也没办法， 我也会认为小偷就是合法用户， 这其实和一个人的 session id 被别人偷走是一样的。</p><blockquote><ul><li>这样一来， 我就不保存 session id 了， <strong>我只是生成 token , 然后验证 token ， 我用我的 CPU 计算时间获取了我的 session 存储空间 ！</strong></li></ul></blockquote><p>解除了 session id 这个负担， 可以说是无事一身轻， 我的机器集群现在可以轻松地做水平扩展， 用户访问量增大， 直接加机器就行。 这种无状态的感觉实在是太好了！</p><p>（完）</p>]]></content>
      
      <categories>
          
          <category> 状态保持 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>element-ui更换主题和按需引入组件</title>
      <link href="/yelee/2018/09/04/element-ui%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5%E7%BB%84%E4%BB%B6/"/>
      <url>/yelee/2018/09/04/element-ui%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5%E7%BB%84%E4%BB%B6/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="element-ui-使用初体验"><a href="#element-ui-使用初体验" class="headerlink" title="element-ui 使用初体验"></a>element-ui 使用初体验</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>手上有些项目用的<code>element-ui</code>，刚好有空琢磨一下怎么减小打包文件大小和打包速度方面，为了演示实验，用 vue-cli 生成初始项目，在这仅对 element-ui 主题和组件方面来优化。</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack vuecli</span><br></pre></td></tr></table></figure><h3 id="完整引入"><a href="#完整引入" class="headerlink" title="完整引入"></a>完整引入</h3><p>完整地将 ui 和样式引入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span></span><br></pre></td></tr></table></figure><p>在页面简单使用三个组件，看看效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"block"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"demonstration"</span>&gt;</span>区分颜色<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-rate</span> <span class="attr">v-model</span>=<span class="string">"value1"</span> <span class="attr">:colors</span>=<span class="string">"['#99A9BF', '#F7BA2A', '#FF9900']"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-rate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">icon</span>=<span class="string">"el-icon-search"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"success"</span> <span class="attr">icon</span>=<span class="string">"el-icon-check"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"info"</span> <span class="attr">icon</span>=<span class="string">"el-icon-message"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"warning"</span> <span class="attr">icon</span>=<span class="string">"el-icon-star-off"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"danger"</span> <span class="attr">icon</span>=<span class="string">"el-icon-delete"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/gb/element-ui更换主题和按需引入组件/0.bmp" alt=""></p><p>再看一下打包后的资源大小情况<code>npm run build --report</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: fa47514a97341329a7c0</span><br><span class="line">Version: webpack 3.11.0</span><br><span class="line">Time: 20363ms</span><br><span class="line">                                                  Asset       Size  Chunks                    Chunk Names</span><br><span class="line">                 static/fonts/element-icons.6f0a763.ttf      11 kB          [emitted]</span><br><span class="line">               static/js/vendor.5efcf828140d5dbedda9.js     714 kB       0  [emitted]  [big]  vendor</span><br><span class="line">                  static/js/app.a4a31db472f653b911e7.js      12 kB       1  [emitted]         app</span><br><span class="line">             static/js/manifest.2ae2e69a05c33dfc65f8.js  857 bytes       2  [emitted]         manifest</span><br><span class="line">    static/css/app.f24bb0ae3686720fe2e00c5a2024b8f1.css     185 kB       1  [emitted]         app</span><br><span class="line">static/css/app.f24bb0ae3686720fe2e00c5a2024b8f1.css.map     267 kB          [emitted]</span><br><span class="line">           static/js/vendor.5efcf828140d5dbedda9.js.map    2.73 MB       0  [emitted]         vendor</span><br><span class="line">              static/js/app.a4a31db472f653b911e7.js.map    22.8 kB       1  [emitted]         app</span><br><span class="line">         static/js/manifest.2ae2e69a05c33dfc65f8.js.map    4.97 kB       2  [emitted]         manifest</span><br><span class="line">                                             index.html  508 bytes          [emitted]</span><br></pre></td></tr></table></figure><p>发现打包后提取公共模块<code>static/js/vendor.js</code>有 714kb</p><p>再看一下各个模块占用情况：</p><p><img src="/gb/element-ui更换主题和按需引入组件/1.bmp" alt=""></p><p>发现<code>elment-ui.common.js</code>占用最大。所有模块资源总共有 708kb。怎么才能减小打包后的大小呢？很容易就会想到 ui 的引入和样式的引入中，实际我们只使用了三个组件，却整体都被打包了，在这里引入这三个组件即可。</p><h3 id="按需引入组件样式"><a href="#按需引入组件样式" class="headerlink" title="按需引入组件样式"></a>按需引入组件样式</h3><p>新建一个<code>element-variables.scss</code>文件（为什么是 SCSS 文件，后面自定义主题会用到）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/*icon字体路径变量*/</span><br><span class="line">$--font-path: &quot;~element-ui/lib/theme-chalk/fonts&quot;;</span><br><span class="line"></span><br><span class="line">/*按需引入用到的组件的scss文件和基础scss文件*/</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/base.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/rate.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/button.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/row.scss&quot;;</span><br></pre></td></tr></table></figure><h3 id="按需引入组件"><a href="#按需引入组件" class="headerlink" title="按需引入组件"></a>按需引入组件</h3><p>新建一个<code>elementConfig.js</code>文件，将项目用到的 element 组件引入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Rate, Row, Button &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  install(V) &#123;</span><br><span class="line">    V.use(Rate)</span><br><span class="line">    V.use(Button)</span><br><span class="line">    V.use(Row)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第一次优化后打包分析"><a href="#第一次优化后打包分析" class="headerlink" title="第一次优化后打包分析"></a>第一次优化后打包分析</h3><p>将以上<code>element-variables.scss</code>和<code>elementConfig.js</code>引入到<code>main.js</code>中。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'@/assets/js/elementConfig'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'@/assets/css/element-variables.scss'</span></span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI)</span><br></pre></td></tr></table></figure><p>貌似上面一切都很顺理成章，打包后大小会减小。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: <span class="number">3</span>ba9b74482f121efd3aa</span><br><span class="line">Version: webpack <span class="number">3.11</span><span class="number">.0</span></span><br><span class="line">Time: <span class="number">18854</span>ms</span><br><span class="line">                                                  Asset       Size  Chunks                    Chunk Names</span><br><span class="line">                 <span class="keyword">static</span>/fonts/element-icons<span class="number">.6</span>f0a763.ttf      <span class="number">11</span> kB          [emitted]</span><br><span class="line">               <span class="keyword">static</span>/js/vendor<span class="number">.11</span>c71f168a2d61b547a0.js     <span class="number">714</span> kB       <span class="number">0</span>  [emitted]  [big]  vendor</span><br><span class="line">                  <span class="keyword">static</span>/js/app.dbb5b49dad2d42b3598c.js    <span class="number">11.2</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line">             <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js  <span class="number">857</span> bytes       <span class="number">2</span>  [emitted]         manifest</span><br><span class="line">    <span class="keyword">static</span>/css/app.bf52525d6279e7fb87b4db770d119a8d.css    <span class="number">25.7</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line"><span class="keyword">static</span>/css/app.bf52525d6279e7fb87b4db770d119a8d.css.map      <span class="number">63</span> kB          [emitted]</span><br><span class="line">           <span class="keyword">static</span>/js/vendor<span class="number">.11</span>c71f168a2d61b547a0.js.map    <span class="number">2.73</span> MB       <span class="number">0</span>  [emitted]         vendor</span><br><span class="line">              <span class="keyword">static</span>/js/app.dbb5b49dad2d42b3598c.js.map      <span class="number">21</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line">         <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js.map    <span class="number">4.97</span> kB       <span class="number">2</span>  [emitted]         manifest</span><br><span class="line">                                             index.html  <span class="number">508</span> bytes          [emitted]</span><br></pre></td></tr></table></figure><p>结果可知，<code>static/js/vendor.js</code>还是 714kb！</p><p>再看各个模块占用情况：</p><p><img src="/gb/element-ui更换主题和按需引入组件/2.bmp" alt=""></p><p>WHAT?竟然模块都没什么变化，岂不是竹篮打水，事与愿违。</p><h3 id="再次打包优化尝试"><a href="#再次打包优化尝试" class="headerlink" title="再次打包优化尝试"></a>再次打包优化尝试</h3><p>后来查到有人同样遇到这个问题，提出一个<a href="https://github.com/ElemeFE/element/issues/6362#issuecomment-323517538" target="_blank" rel="noopener">issues#6362</a>，原来只引入需要的<code>element-ui</code>组件，<code>webpack</code>还是把整体的 ui 库和样式都打包了，需要一个<code>webpack</code>的<code>babel</code>插件<code>babel-plugin-component</code>，这样才能真正按需引入打包。这块其实被写到官方文档更换 <a href="http://element-cn.eleme.io/#/zh-CN/component/custom-theme" target="_blank" rel="noopener">自定义主题</a> 的配置了。</p><p>于是<code>npm i babel-pugin-componet -D</code>安装后，在增加<code>.babelrc</code>文件插件配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"presets"</span>: [</span><br><span class="line">    [<span class="string">"env"</span>, &#123;</span><br><span class="line">      <span class="string">"modules"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"targets"</span>: &#123;</span><br><span class="line">        <span class="string">"browsers"</span>: [<span class="string">"&gt; 1%"</span>, <span class="string">"last 2 versions"</span>, <span class="string">"not ie &lt;= 8"</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="string">"stage-2"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"plugins"</span>: [<span class="string">"transform-vue-jsx"</span>, <span class="string">"transform-runtime"</span>, [<span class="string">"component"</span>, &#123;</span><br><span class="line">    <span class="string">"libraryName"</span>: <span class="string">"element-ui"</span>,</span><br><span class="line">    <span class="string">"styleLibraryName"</span>: <span class="string">"theme-chalk"</span></span><br><span class="line">  &#125;]]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>页面运行正常，再次打包。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: <span class="number">9</span>cc71dead6d7646c9ed4</span><br><span class="line">Version: webpack <span class="number">3.11</span><span class="number">.0</span></span><br><span class="line">Time: <span class="number">9963</span>ms</span><br><span class="line">                                                  Asset       Size  Chunks             Chunk Names</span><br><span class="line">                 <span class="keyword">static</span>/fonts/element-icons<span class="number">.6</span>f0a763.ttf      <span class="number">11</span> kB          [emitted]</span><br><span class="line">                  <span class="keyword">static</span>/js/app<span class="number">.77</span>c0883f4f0fc0bf5cbc.js    <span class="number">11.4</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line">               <span class="keyword">static</span>/js/vendor<span class="number">.942130</span>fd13274b901889.js     <span class="number">126</span> kB       <span class="number">1</span>  [emitted]  vendor</span><br><span class="line">             <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js  <span class="number">857</span> bytes       <span class="number">2</span>  [emitted]  manifest</span><br><span class="line">    <span class="keyword">static</span>/css/app.b140020e5dbee406ae70780b43ba7ddc.css    <span class="number">27.8</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line"><span class="keyword">static</span>/css/app.b140020e5dbee406ae70780b43ba7ddc.css.map    <span class="number">91.4</span> kB          [emitted]</span><br><span class="line">              <span class="keyword">static</span>/js/app<span class="number">.77</span>c0883f4f0fc0bf5cbc.js.map    <span class="number">21.1</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line">           <span class="keyword">static</span>/js/vendor<span class="number">.942130</span>fd13274b901889.js.map     <span class="number">613</span> kB       <span class="number">1</span>  [emitted]  vendor</span><br><span class="line">         <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js.map    <span class="number">4.97</span> kB       <span class="number">2</span>  [emitted]  manifest</span><br><span class="line">                                             index.html  <span class="number">508</span> bytes          [emitted]</span><br></pre></td></tr></table></figure><p><code>static/js/vendor.js</code>确实变小了，126kB。再来看各个模块分析图。</p><p><img src="/gb/element-ui更换主题和按需引入组件/3.bmp" alt=""></p><p>模块总共 135.03KB，少了 5 倍！</p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p><code>element-ui</code>的<code>theme-chalk</code>使用<code>SCSS</code>编写，如果在自己的项目中也是用<code>SCSS</code>，那么可以直接在项目中改变样式变量，因此可以在前面新建的<code>element-variables.scss</code>文件用新的主题颜色变量覆盖即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/*主题颜色变量*/</span><br><span class="line">$--color-primary: #f0f;</span><br><span class="line"></span><br><span class="line">/*icon字体路径变量*/</span><br><span class="line">$--font-path: &quot;~element-ui/lib/theme-chalk/fonts&quot;;</span><br></pre></td></tr></table></figure><p>可能你已经注意到了，这里没有分别引入用到的组件样式了，是因为<code>babel-plugin-component</code>帮我们按需引入了对应的样式。</p><p>现在我们的主题就变成了</p><p><img src="/gb/element-ui更换主题和按需引入组件/4.bmp" alt=""></p><p>如果你没有用到<code>SCSS</code>，可以用<code>element-theme</code>主题编译插件，生成自定义主题文件引入。</p><p>完~ps：个人见解有限，欢迎指正。</p>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> element-ui </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端必备vscode插件</title>
      <link href="/yelee/2018/09/03/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87vscode%E6%8F%92%E4%BB%B6/"/>
      <url>/yelee/2018/09/03/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87vscode%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这篇文章只要让你做一些基础的配置，把 vscode 变得更加顺手；<br>插件的需求不是一成不变，有些插件我已经移除了。。在最新的 VSCODE 1.9.1 中，<br>部分以前用插件实现的功能已经集成了，那就没有必要存在了。这里就不做推荐了复制代码</p><a id="more"></a><h1 id="必备插件"><a href="#必备插件" class="headerlink" title="必备插件"></a>必备插件</h1><hr><h2 id="功能性"><a href="#功能性" class="headerlink" title="功能性"></a>功能性</h2><ol><li>Auto Close Tag : 匹配标签，关闭对应的标签。很实用【HTML/XML】 Auto</li><li>Rename Tag : sublime 和 webstorm 也有这个内置功能，改变标签的时候同时改动开闭合标签；【HTML/XML】</li><li>beautify : 良好的拓展性，可以格式化 JSON|JS|HTML|CSS|SCSS,比内置格式化好用</li><li>Code Runner : 代码编译运行看结果，支持众多语言</li><li>colorize : 会给颜色代码增加一个当前匹配代码颜色的背景，非常好</li><li>Document This : JSDOC 注解调用，值得易用</li><li>Git History : 不得不赞的插件，谁用谁知道，功能很赞</li><li>HTML CSS Support : 这个也是必备插件之一</li><li>Path Autocomplete : 路径智能补全</li><li>Path Intellisense ： 路径智能提示</li><li>SCSS IntelliSense Preview : SCSS 智能提醒，配置强大</li><li>Syncing: 这个同步插件要比官方市场那个最高下载量的要好，支持删除同步！！！</li><li>Version Lens : 可以及时看到 package.json 内部版本的变动，很实用</li><li>Output Colorizer : 可以终端日志输出着色，实用</li></ol><h2 id="代码片段插件"><a href="#代码片段插件" class="headerlink" title="代码片段插件"></a>代码片段插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JavaScript (ES6) code snippets  : ES6的代码片段，实用</span><br><span class="line">JavaScript Snippet Pack   : ES5及以下的代码片段，实用</span><br></pre></td></tr></table></figure><h2 id="语法校验"><a href="#语法校验" class="headerlink" title="语法校验"></a>语法校验</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stylelint : 比内置的要全，更智能</span><br></pre></td></tr></table></figure><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><ol><li>Panda:用了相当久的一套颜色高亮，个人感觉很耐看</li><li>Enki Theme (Material Design Inspired) : 当前用的代码高亮，个人感觉很赞</li><li>Material Icon Theme : 一套扁平化的文件图标，内置的 seti 也很优秀，还有 simple icon 和 vscode-icons</li></ol><p>作者：爱吃 kiwi<br>链接：<a href="https://leekiwi.github.io/">https://leekiwi.github.io/</a><br>来源：github<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      <categories>
          
          <category> 实用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nodejs学习笔记</title>
      <link href="/yelee/2018/08/28/node-js-study-note/"/>
      <url>/yelee/2018/08/28/node-js-study-note/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Nodejs-学习笔记"><a href="#Nodejs-学习笔记" class="headerlink" title="Nodejs 学习笔记"></a>Nodejs 学习笔记</h2><p><strong>node 内部对模块输出 module.exports 的实现</strong></p><p>变量 module 是 Node 在加载 js 文件前准备的一个变量，并将其传入加载函数</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 准备module对象</span><br><span class="line">var module = &#123;</span><br><span class="line">    id: &apos;hello&apos;,</span><br><span class="line">    exports: &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var load = function(module) &#123;</span><br><span class="line">    // 读取的hello.js代码</span><br><span class="line">    function greet(name) &#123;</span><br><span class="line">        console.log(&apos;Hello, &apos; + name + &apos;!&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    module.exports = greet;</span><br><span class="line"></span><br><span class="line">    // hello.js代码结束</span><br><span class="line">    return module.exports;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var exported = load(module);</span><br><span class="line"></span><br><span class="line">// 保存module</span><br><span class="line">save(module, exported);</span><br></pre></td></tr></table></figure><p>默认情况下，Node 准备的 exports 变量和 module.exports 变量实际上是同一个变量，所以一下两种写法都支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// method 1</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    foo: foo,</span><br><span class="line">    bar: bar</span><br><span class="line">&#125;;</span><br><span class="line">or</span><br><span class="line">module.exports.foo = foo;</span><br><span class="line">module.exports.bar = bar;</span><br><span class="line"></span><br><span class="line">// method 2</span><br><span class="line">exports.foo = foo;</span><br><span class="line">exports.bar = bar;</span><br></pre></td></tr></table></figure><p><strong>process</strong></p><p>下一轮事件循环 回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">process.nextTick(function() &#123;</span><br><span class="line">    console.log(&apos;nextTick callback&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>程序即将退出 回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">process.on(&apos;exit&apos;, function(code) &#123;</span><br><span class="line">    console.log(&apos;about to exit with code&apos; + code);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">console.log(&apos;nextTick set&apos;);</span><br></pre></td></tr></table></figure><p><strong>readFile/readFileSync writeFile/writeFileSync stat</strong></p><p>异步读取一个文本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&apos;./hello.js&apos;, &apos;utf-8&apos;, function(err, data) &#123;</span><br><span class="line">    console.log(&apos;read file start...&apos;);</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>异步读取一个二进制文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&apos;1.jpg&apos;, function(err, data) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // 返回一个buffer对象</span><br><span class="line">        console.log(data);</span><br><span class="line">        // Buffer对象转化成字符串</span><br><span class="line">        console.log(data.toString(&apos;utf-8&apos;));</span><br><span class="line">        // 文件大小</span><br><span class="line">        console.log(data.length + &apos; bytes&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同步读取一个文件直接返回，读取错误用 try…catch 捕获</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">    var data = fs.readFileSync(&apos;./1.jpg&apos;);</span><br><span class="line">    console.log(data);</span><br><span class="line">&#125;</span><br><span class="line">catch(err) &#123;</span><br><span class="line">    console.log(err);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(&apos;readFileSync ended&apos;);</span><br></pre></td></tr></table></figure><p>异步写入一个文件，默认是以 UTF-8 编码写入文本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var data = &apos;Hello,Node.js&apos;;</span><br><span class="line">// var data = fs.readFileSync(&apos;./1.jpg&apos;);</span><br><span class="line">fs.writeFile(&apos;output.txt&apos;, data, function(err) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        console.log(&apos;write file finished&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同步写入文本到一个文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var data = &apos;Hello,Node.js,I am sync data&apos;;</span><br><span class="line">fs.writeFileSync(&apos;output.txt&apos;, data);</span><br><span class="line">console.log(&apos;writeFileSync ended&apos;);</span><br></pre></td></tr></table></figure><p>获取文件信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">fs.stat(&apos;./1.jpg&apos;, function(err, stat) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // 是否是文件</span><br><span class="line">        console.log(&apos;isFile:&apos; + stat.isFile());</span><br><span class="line">        // 是否是目录</span><br><span class="line">        console.log(&apos;isDirectory:&apos; + stat.isDirectory());</span><br><span class="line"></span><br><span class="line">        if(stat.isFile()) &#123;</span><br><span class="line">            // 文件大小</span><br><span class="line">            console.log(&apos;size:&apos; + stat.size);</span><br><span class="line">            // 创建时间，Date对象</span><br><span class="line">            console.log(&apos;birth time:&apos; + stat.birthtime);</span><br><span class="line">            // 修改时间，Date对象</span><br><span class="line">            console.log(&apos;modified time:&apos; + stat.mtime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>PS:绝大部分需要在服务器运行期反复执行业务逻辑，必须使用异步代码服务器启动时如果需要读取配置文件，或者结束时需要写入到状态文件时，可以使用同步代码</p><p><strong>createReadStream createWriteStream pipe</strong></p><p>在 node.js 中，流也是一个对象，我们只需要响应流的事件就可以了。<br>data 事件表示流的数据已经可以读取了，end 事件表示这个流已经到末尾了，没有数据可以读取了，error 事件表示出错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var rs = fs.createReadStream(&apos;./data.txt&apos;, &apos;utf-8&apos;);</span><br><span class="line"></span><br><span class="line">// data事件可能有多次，每次传递的chunk是流的一部分数据</span><br><span class="line">rs.on(&apos;data&apos;, function(chunk) &#123;</span><br><span class="line">    console.log(&apos;data event:&apos;, chunk);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(&apos;end&apos;, function (chunk) &#123;</span><br><span class="line">    console.log(&apos;end event:&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(&apos;error&apos;, function (chunk) &#123;</span><br><span class="line">    console.log(&apos;error event:&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>以流的形式写入文件，只需要不断调用 write()方法，最后以 end()结束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var ws = fs.createWriteStream(&apos;./data.txt&apos;);</span><br><span class="line">ws.write(&apos;user stream write data\n&apos;);</span><br><span class="line">ws.write(&apos;loading...\n&apos;);</span><br><span class="line">ws.write(&apos;END&apos;);</span><br><span class="line">ws.end();</span><br></pre></td></tr></table></figure><p>pipe()把一个文件流和另一个文件流串起来，这样源文件的所有数据就自动写入到目标文件里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var rs = fs.createReadStream(&apos;./data.txt&apos;);</span><br><span class="line">var ors = fs.createReadStream(&apos;./output.txt&apos;);</span><br><span class="line">var ws = fs.createWriteStream(&apos;./output.txt&apos;);</span><br><span class="line">rs.pipe(ws);</span><br></pre></td></tr></table></figure><p>创建一个服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var server = http.createServer(function(request, response) &#123;</span><br><span class="line">    // http请求头的method和url</span><br><span class="line">    console.log(&apos;header meathod:&apos;, request.method);</span><br><span class="line">    console.log(&apos;header url:&apos;, request.url);</span><br><span class="line"></span><br><span class="line">    // 将http响应200写入response，同时设置content-type</span><br><span class="line">    response.writeHead(200, &#123;&apos;Content-Type&apos;: &apos;text/html&apos;&#125;);</span><br><span class="line"></span><br><span class="line">    // 将http响应的html内容写入response</span><br><span class="line">    response.end(&apos;&lt;h1&gt;Hello world!&lt;/h1&gt;&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">console.log(&apos;Server is running at http://localhost:8080&apos;);</span><br></pre></td></tr></table></figure><p>实现一个文件服务器，拼接访问路径读取本地文件，从命令参数获取 root 目录，默认是当前目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">var root = path.resolve(&apos;.&apos;);</span><br><span class="line">console.log(&apos;Static root dir:&apos; + root);</span><br><span class="line"></span><br><span class="line">// 创建服务器</span><br><span class="line"> var server = http.createServer(function (request, response) &#123;</span><br><span class="line">    // node提供url模块解析url字符串 获取url的path</span><br><span class="line"></span><br><span class="line">    var pathname = url.parse(request.url).pathname;</span><br><span class="line"></span><br><span class="line">    if (pathname === &apos;/favicon.ico&apos;) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    console.log(&apos;url:&apos;, url.parse(request.url));</span><br><span class="line"></span><br><span class="line">    // 获取对应本地文件路径</span><br><span class="line">    var filepath = path.join(root, pathname);</span><br><span class="line">    // 读取文件状态</span><br><span class="line">    fs.stat(filepath, function (err, stats) &#123;</span><br><span class="line">        // 文件出错</span><br><span class="line">        if (err) &#123;</span><br><span class="line">            console.log(&apos;file error!&apos;);</span><br><span class="line">            response.end(&apos;&lt;h1&gt;file error!&lt;/h1&gt;&apos;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 是文件</span><br><span class="line">        if (stats.isFile()) &#123;</span><br><span class="line">            console.log(&apos;200 &apos; + request.url);</span><br><span class="line">            response.writeHead(200);</span><br><span class="line">            // 将文件流导入response</span><br><span class="line">            fs.createReadStream(filepath).pipe(response);</span><br><span class="line">        &#125;</span><br><span class="line">        // 文件不存在</span><br><span class="line">        else &#123;</span><br><span class="line">            console.log(&apos;404 &apos; + request.url);</span><br><span class="line">            response.writeHead(404);</span><br><span class="line">            // 将文件流导入response</span><br><span class="line">            response.end(&apos;&lt;h1&gt;404 not found!&lt;/h1&gt;&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">console.info(&apos;Server is runing at http://localhost:8080/&apos;);</span><br></pre></td></tr></table></figure><p>express 是第一代流行的 web 框架，它对 Node.js 的 HTTP 进行封装，语法基于 ES5，要实现异步代码，只有一个方法：回调。</p><p>koa2 完全基于 ES7 开发，使用 Promise 配合 async 实现异步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">// 创建一个Koa对象</span><br><span class="line">const app = new Koa();</span><br><span class="line"></span><br><span class="line">// 对于任何请求，app将调用该异步函数处理请求</span><br><span class="line">// ctx是koa封装request和response变量</span><br><span class="line">// next是koa传入的将要处理下一个异步函数</span><br><span class="line">// 每个async函数称为middleware</span><br><span class="line">// app.use()顺序决定了middleware的顺序</span><br><span class="line"></span><br><span class="line">app.use(async(ctx, next) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">    fs.readFile(&apos;./data.txt&apos;, &apos;utf-8&apos;, function(err, data) &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 调用下一个middleware，如果没有调用，则下一个middleware不会执行</span><br><span class="line">    await next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.use(async(ctx, next) =&gt; &#123;</span><br><span class="line">    ctx.response.type = &apos;text/html&apos;;</span><br><span class="line">    ctx.response.body = &apos;&lt;h1&gt;Hello, koa!&lt;/h1&gt;&apos;;</span><br><span class="line">    console.log(&apos;response end&apos;);</span><br><span class="line">    // 调用下一个middleware</span><br><span class="line">    await next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(3000);</span><br><span class="line">console.log(&apos;app started at http://localhost:3000/&apos;);</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>对MVC、MVP和MVVM的简单认识</title>
      <link href="/yelee/2018/08/27/%E5%AF%B9MVC%E3%80%81MVP%E5%92%8CMVVM%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/"/>
      <url>/yelee/2018/08/27/%E5%AF%B9MVC%E3%80%81MVP%E5%92%8CMVVM%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="MVVM-的前世与今生"><a href="#MVVM-的前世与今生" class="headerlink" title="MVVM 的前世与今生"></a>MVVM 的前世与今生</h2><h3 id="1-先聊一下-MVC"><a href="#1-先聊一下-MVC" class="headerlink" title="1. 先聊一下 MVC"></a>1. 先聊一下 MVC</h3><p>MVC：Model（模型） View（视图） Controller（控制器），主要是基于分层的目的，让彼此的职责分开。</p><p>View 通过 Controller 和 Model 联系，Controller 是 View 和 Model 的协调者，view 和 Model 不直接联系，基本联系都是单向的。</p><a id="more"></a><h3 id="2-顺带提下-MVP"><a href="#2-顺带提下-MVP" class="headerlink" title="2. 顺带提下 MVP"></a>2. 顺带提下 MVP</h3><p>MVP：是从 MVC 模式演变而来的，都是通过 Controller/Presenter 负责逻辑的处理+Model 提供数据+View 负责显示。</p><p>在 MVP 中，Presenter 完全把 View 和 Model 进行分离，主要的程序逻辑在 Presenter 里实现。并且，Presenter 和 View 是没有直接关联的，是通过定义好的接口进行交互，从而使得在变更 View 的时候可以保持 Presenter 不变。</p><h3 id="3-再聊聊-MVVN"><a href="#3-再聊聊-MVVN" class="headerlink" title="3. 再聊聊 MVVN"></a>3. 再聊聊 MVVN</h3><p>MVVM：Model + View + ViewModel，把 MVC 中的 Controller 和 MVP 中的 Presenter 改成 ViewModel</p><p>view 的变化会自动更新到 ViewModel，ViewModel 的变化也会自动同步到 View 上显示。这种自动同步是因为 ViewModel 中的属性实现了 Observer，当属性变更时都能触发对应操作。</p><ul><li>View 是 HTML 文本的 js 模板；</li><li>ViewModel 是业务逻辑层（一切 js 可视业务逻辑，比如表单按钮提交，自定义事件的注册和处理逻辑都在 viewmodel 里面负责监控俩边的数据）；</li><li>Model 数据层，对数据的处理（与后台数据交互的增删改查）</li></ul><p>提一下我熟悉的 MVVM 框架：vue.js，Vue.js 是一个构建数据驱动的 web 界面的渐进式框架。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。核心是一个响应的数据绑定系统。</p><h3 id="4-一句话总结下不同之处"><a href="#4-一句话总结下不同之处" class="headerlink" title="4. 一句话总结下不同之处"></a>4. 一句话总结下不同之处</h3><p>MVC 中联系是单向的，MVP 中 P 和 V 通过接口交互，MVVP 的联系是双向的</p>]]></content>
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CDN原理介绍</title>
      <link href="/yelee/2018/08/27/CDN%E5%8E%9F%E7%90%86%E7%90%86%E8%A7%A3/"/>
      <url>/yelee/2018/08/27/CDN%E5%8E%9F%E7%90%86%E7%90%86%E8%A7%A3/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CDN-原理剖析"><a href="#CDN-原理剖析" class="headerlink" title="CDN 原理剖析"></a>CDN 原理剖析</h2><blockquote><blockquote><p>内容分发网络（Content delivery network 或 Content distribution network，缩写：CDN）是指一种通过互联网互相连接的电脑网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、视频、应用程序及其他文件发送给用户，来提供高性能、可扩展性及低成本的网络内容传递给用户。</p></blockquote></blockquote><a id="more"></a><blockquote><h3 id="为什么需要-CDN"><a href="#为什么需要-CDN" class="headerlink" title="为什么需要 CDN"></a>为什么需要 CDN</h3><p>根本上的原因是，访问速度对互联网应用的用户体验、口碑、甚至说直接的营收都有巨大的影响，任何的企业都渴望自己站点有更快的访问速度。而 HTTP 传输时延对 web 的访问速度的影响很大，在绝大多数情况下是起决定性作用的，这是由 TCP/IP 协议的一些特点决定的。物理层上的原因是光速有限、信道有限，协议上的原因有丢包、慢启动、拥塞控制等。</p><p>要提高访问速度，最简单的做法当然就是多设置几个服务器，让终端用户离服务器“更近”。典型的例子是各类下载网站在不同地域不同运营商设置镜像站，或者是像 Google 那样设置多个数据中心。但是多设几个服务器的问题也不少，一是多地部署时的困难，二是一致性没法保障，三则是管理困难、成本很高。实际上，在排除多地容灾等特殊需求的情况下，对大多数公司这种做法是不太可取的。当然，这种方案真正做好了，甚至是比后续所说的使用 CDN 要好的。</p><p>CDN 是一种公共服务，他本身有很多台位于不同地域、接入不同运营商的服务器，而所谓的使用 CDN 实质上就是让 CDN 作为网站的门面，用户访问到的是 CDN 服务器，而不是直接访问到网站。由于 CDN 内部对 TCP 的优化、对静态资源的缓存、预取，加上用户访问 CDN 时，会被智能地分配到最近的节点，降低大量延迟，让访问速度可以得到很大提升。</p><h3 id="CDN-的原理"><a href="#CDN-的原理" class="headerlink" title="CDN 的原理"></a>CDN 的原理</h3><blockquote><p>CDN 做了两件事，一是让用户访问最近的节点，二是从缓存或者源站获取资源</p></blockquote><p>CDN 有个源站的概念，源站就是提供内容的站点(网站的真实服务器), 从源站取内容的过程叫做回源。</p><p>每次访问的具体流程如图（以最普通的 CDN 为例）</p><p><img src="https://cloud.githubusercontent.com/assets/5894477/22008791/4edc00b0-dcb9-11e6-9663-ed19a3fa3182.png" alt="流程图"></p><p>具体举个例子：</p><p>用户在首次访问 <a href="https://assets-cdn.github.com/pinned-octocat.svg" target="_blank" rel="noopener">https://assets-cdn.github.com/pinned-octocat.svg</a> , 假设不委托 local DNS 服务器递归查询，会经历以下几个过程</p><ol><li>浏览器检查本地有没有这个东东的有效缓存，有则使用缓存，没有有效缓存则进行对<code>assets-cdn.github.com</code>的 DNS 查询，获得一个 CNAME 记录, <code>igithub.map.fastly.net</code>,值得注意的是，多个加速域名可以解析到同一个 CNAME，CDN 回源和缓存的时候考虑到了 hostname，+1；</li><li>进行对<code>github.map.fastly.net</code>的 DNS 查询，获得一个 A/AAAA 记录，给出地址<code>103.245.222.133</code>（视网站不同返回的不一样，可以有多个）, 这一步对 CDN 来说时十分重要的，它给出了离用户最近的边缘节点；</li><li>浏览器选一个返回的地址，然后进行真正的 http 请求，开始向<code>103.245.222.133</code>握手，握手完了把 http 请求头也发给了该边缘服务器;</li><li>边缘服务器检查自己的 cache 里面有没有<code>https://assets-cdn.github.com/pinned-octocat.svg</code>这个资源，有则返回给用户，如果没有，向 CDN 中心服务器发起请求;</li><li>CDN 中心服务器检查自己的 cache 里面有没有这个资源，有则返回给边缘服务器，没有则回源;</li><li>中心服务器发现客户配置了<code>github.map.fastly.net</code>的回源地址(这个只有 cdn 会知道，假设是<code>xxx.xxx.xxx.xxx</code>)，就把 http 请求发到源站地址上，源站返回后返回给请求方;</li></ol><p>可以看出 CDN 加速的原理很大部分是跟 DNS 挂钩在一起的，CDN 供应商几乎一定需要一个智能 DNS 服务器。CDN 可以拿到所有的明文数据，所以对数据安全性、保密性要求比较高的企业会选择自建 CDN 或者设置 NS 记录，指向自建的智能 DNS 服务器。</p><p>上述步骤每一步都可以缓存，注意是每一步！ 所以 CDN 要清除缓存很难，因为有很多服务器上的缓存要清除。无论是用户对边缘服务器的请求，还是 CDN 服务器的回源都可以使用 https。</p><p>注意，实际环境中图中每个服务器都可以是集群，甚至 CDN 分区域中心和总中心。</p></blockquote>]]></content>
      
      <categories>
          
          <category> 用户体验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端性能优化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vscode 实现设备上设置统一</title>
      <link href="/yelee/2018/08/24/vscode%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5/"/>
      <url>/yelee/2018/08/24/vscode%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一键同步-vscode-上的插件"><a href="#一键同步-vscode-上的插件" class="headerlink" title="一键同步 vscode 上的插件"></a>一键同步 vscode 上的插件</h2><p>准备工作：电脑上需安装 VSCode，拥有一个 github 账户。实现同步的功能主要依赖于 VSCode 插件 “Settings Sync”</p><h1 id="Setting-Sync-可同步包含的所有扩展和完整的用户文件夹"><a href="#Setting-Sync-可同步包含的所有扩展和完整的用户文件夹" class="headerlink" title="Setting Sync 可同步包含的所有扩展和完整的用户文件夹"></a>Setting Sync 可同步包含的所有扩展和完整的用户文件夹</h1><a id="more"></a><ol><li>设置文件</li><li>快捷键设置文件</li><li>Launch File</li><li>Snippets Folder</li><li>VSCode 扩展设置</li><li>工作空间</li></ol><h1 id="Setting-Sync-快捷键"><a href="#Setting-Sync-快捷键" class="headerlink" title="Setting Sync 快捷键"></a>Setting Sync 快捷键</h1><ol><li>上传： <code>Shift + Alt + U</code> (Sync: Update / Upload Settings)</li><li>下载： <code>Shift + Alt + D</code> (Sync: Download Settings)</li></ol><p>如果快捷键有冲突，可<code>Ctrl + K + S</code>快捷键设置配置其它快捷键 或 <code>Ctrl + P / F1</code> 在命令窗口输入 &gt;sync 即会出现相应命令供选择<br><img src="https://upload-images.jianshu.io/upload_images/7323128-6b887c855f200189.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170824104107261-1046727224.png"></p><h1 id="Step1-安装-同步插件”Settings-Sync”"><a href="#Step1-安装-同步插件”Settings-Sync”" class="headerlink" title="Step1. 安装 同步插件”Settings Sync”"></a>Step1. 安装 同步插件”Settings Sync”</h1><p><img src="https://upload-images.jianshu.io/upload_images/7323128-78990ea142e0f083.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823100639527-466207576.png"></p><h1 id="Step2-进入-github-gt-Settings-在左侧-Developer-settings-gt-Personal-access-tokens"><a href="#Step2-进入-github-gt-Settings-在左侧-Developer-settings-gt-Personal-access-tokens" class="headerlink" title="Step2. 进入 github -&gt; Settings 在左侧 Developer settings -&gt; Personal access tokens"></a>Step2. 进入 github -&gt; Settings 在左侧 Developer settings -&gt; Personal access tokens</h1><p><img src="https://upload-images.jianshu.io/upload_images/7323128-72b710b21917ce93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101018886-1450593067.png"></p><h1 id="Step3-点击按钮-Generate-new-token-新增一个-token"><a href="#Step3-点击按钮-Generate-new-token-新增一个-token" class="headerlink" title="Step3. 点击按钮 Generate new token 新增一个 token"></a>Step3. 点击按钮 Generate new token 新增一个 token</h1><p>图 1:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-a9e06366f6acbf24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101243980-1384930832.png"><br>图 2:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-2f69bf05699ce6a7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101418527-2001799760.png"><br>图 3:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-8d5ebc31a1a3cd97.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101508918-1034003796.png"><br>记住你自己生成的 token 值，在 VSCode 配置上回用得到，最好找个笔记保存下来。</p><h1 id="Step4-回到-VSCode-配置将-token-配置到本地"><a href="#Step4-回到-VSCode-配置将-token-配置到本地" class="headerlink" title="Step4. 回到 VSCode 配置将 token 配置到本地"></a>Step4. 回到 VSCode 配置将 token 配置到本地</h1><p>(Sync: Update / Uplaod Settings) <code>Shift + Alt + U</code> 在弹窗里输入你的 token， 回车后会生成 syncSummary.txt 文件</p><p><img src="https://upload-images.jianshu.io/upload_images/7323128-4561bc7955172c6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170824103332230-1621543570.png"></p><p>syncSummary.txt 文件会存储 VSCode 的设置及所安装的插件列表<br>有点类似 package.json 这样形式的文件<br>可以将自己的 token 分享到自己的团队里面去，这样团队可以共用一套设置。</p><h1 id="Step5-设置上同步下载设置"><a href="#Step5-设置上同步下载设置" class="headerlink" title="Step5. 设置上同步下载设置"></a>Step5. 设置上同步下载设置</h1><p>(Sync: Download Settings) <code>Shift + Alt + D</code> 在弹窗里输入你的 gist 值，稍后片刻便可同步成功</p><h1 id="Step6-如果要重置同步设置，变更其它-token"><a href="#Step6-如果要重置同步设置，变更其它-token" class="headerlink" title="Step6. 如果要重置同步设置，变更其它 token"></a>Step6. 如果要重置同步设置，变更其它 token</h1><p><code>Ctrl+P / F1</code> 弹出输入&gt;sync,即可重新配置你的其它 token 来同步</p>]]></content>
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> setting </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>正则表达式</title>
      <link href="/yelee/2018/08/22/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/yelee/2018/08/22/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="正则规则汇总"><a href="#正则规则汇总" class="headerlink" title="正则规则汇总"></a>正则规则汇总</h2><p>对字符串的处理，一般分为字符串操作和正则操作。</p><h5 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h5><ul><li>str.search(regStr) 返回 regStr 在 str 中第一个出现的位置</li><li>str.replace(regStr,newStr) 返回替换在 str 中 regStr 后字符串</li></ul><a id="more"></a><ul><li>str.substring(n1,n2) 返回 str 从 n1 位置到 n2 位置前一个字符串</li><li>str.chartAt(n) 返回 n 位置字符</li><li>str.split(regStr) 返回以 regStr 隔开的数组</li><li>str.match(reg) 返回在 str 中符合正则 reg 的字符串数组</li></ul><h5 id="正则操作"><a href="#正则操作" class="headerlink" title="正则操作"></a>正则操作</h5><p>var reg=new RegExp(regStr,’i’); //创建正则对象</p><p>var reg=/regStr/i; //隐式创建正则对象</p><ul><li>reg.test(str) str 是否包含 reg 返回 true/false</li><li>reg.exec(str) 返回匹配到的字符串和最后一次的匹配字符串最后位置的下一个索引</li></ul><h4 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h4><ol><li>/a|b/ a 或 b</li><li>/[abc]/ a 或 b 或 c</li><li>/[a-zA-Z0-9]/ 所有数字和字母</li><li>/[^a-za-z0-9]/ 除了数字和字母</li><li>/.+/ 任意字符</li><li>/\d/ 等价于/[0-9]/ 数字</li><li>/\w/ 等价于/[a-z0-9_]/ 数字、字母和下划线</li><li>/\s/ 等价于/“ “/ 空格</li><li>/\D/ 等价于/[^0-9]/ 非数字</li><li>/\W/ 等价于/[^a-z0-9_]/ 除了数字、字母和划线</li><li>/\S/ 等价于/[^” “]/ 除了空格</li><li>/\d{n,m}/ 数字最少出现 n 次，最多出现 m 次</li><li>/\d{1,}/ 等价于/\d+/ 数字最少出现 1 次</li><li>/\d{0,}/ 等价于/\d*/ 数字最少出现 0 次</li><li>/\d{0,1}/ 等价于/\d?/ 数字最多出现 1 次</li><li>/^\d$/ 以数字开头且以数字结尾</li><li>/[\u4e00-\u9fa5]/ 汉字匹配范围</li><li>\b 单词边界</li><li>\B 非单词边界</li><li>?=n 匹配任何其后紧接指定字符串 n 的字符串</li><li>?!n 匹配任何其后没有紧接指定字符串 n 的字符串</li></ol><h4 id="疑难点"><a href="#疑难点" class="headerlink" title="疑难点"></a>疑难点</h4><p>在个人接触正则过程中遇到的一些不易理解的地方</p><blockquote><p>用圆括号将所有选择项括起来，相邻的选择项之间用|分隔。但用圆括号会有一个副作用，是相关的匹配会被缓存，此时可用?:放在第一个选项前来消除这种副作用。其中?:是非捕获元之一，还有两个非捕获元是?=和?!，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。</p></blockquote><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>(?:pattern)</td><td>匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 “或” 字符 (\</td><td>) 来组合一个模式的各个部分是很有用。例如， ‘industr(?:y\</td><td>ies) 就是一个比 ‘industry\</td><td>industries’ 更简略的表达式。</td></tr><tr><td>(?=pattern</td><td>正向预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，’Windows (?=95\</td><td>98\</td><td>NT\</td><td>2000)’ 能匹配 “Windows 2000” 中的 “Windows” ，但不能匹配 “Windows 3.1” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td>(?!pattern)</td><td>负向预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如’Windows (?!95\</td><td>98\</td><td>NT\</td><td>2000)’ 能匹配 “Windows 3.1” 中的 “Windows”，但不能匹配 “Windows 2000” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr></tbody></table><p>一直对正则中的 match 和 exec 不易分清，下面来做一下比较。</p><h5 id="1-match"><a href="#1-match" class="headerlink" title="1. match"></a>1. match</h5><p>match 方法属于 String 正则表达方法</p><p>语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.match(regexp)</span><br></pre></td></tr></table></figure><p>str：要进行匹配的字符串</p><p>regexp：一个正则表达式(或者由 RegExp()构造成的正则表达式)</p><p>match 的用法主要区分就是正则表达式是否有全局标示 g</p><ol><li><p>如果有 g 全局标志，那么返回的数组保存的是，所有匹配的内容。</p></li><li><p>如果没有 g 全局标志，那么返回的数组 arr.arr[0]保存的是完整的匹配.arr[1]保存的是第一个括号里捕获的字串，依此类推 arr[n]保存的是第 n 个括号捕获的内容。</p></li></ol><h5 id="2-exec"><a href="#2-exec" class="headerlink" title="2. exec"></a>2. exec</h5><p>与 match 方法不同 exec 属于正则表达式的方法</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var result1 = regexp.exec(str);</span><br></pre></td></tr></table></figure><p>regexp：正则表达式</p><p>str：要匹配的字串</p><p>exec 与 match 的关联就是 exec（g 有没有都无影响）就等价于不含有 g 全局标志的 match，即返回数组 arr[0]为匹配的完整串，其余的为括号里捕获的字符串。</p><p>但如果有 g 对 exec 本身的影响是，当一个具有 g 的正则表达式调用 exec()时，他将该对象的 lastIndex 设置到紧接这匹配子串的字符位置。当第二次调用 exec 时将从<br>lastIndex 所指示的字符位置开始检索，利用这个特点可以反复调用 exec 遍历所有匹配，等价于 match 具有 g 标志。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arrmatch = str.match(reg);</span><br><span class="line">for(var i =0; i &lt; arrmatch.length; i++)&#123;</span><br><span class="line">    document.write(arrmatch[i] +&quot;----&gt;&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可见上面的 exec 和 match 是等价的.</p><p>reg.exec(str) 返回匹配到的字符串和最后一次的匹配字符串最后位置的下一个索引如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var str = &quot;abc123bef345olj89,ed&quot;;</span><br><span class="line">var reg = /\d+/g;</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li><p>主要区分 match 具有 g 和没有 g 的区别，没有 g 的时候与 exec 是等价的。</p></li><li><p>而 exec 返回的串类型不受 g 影响，但具有 g 时候会驱动 lastIndex 可以模拟遍历所有匹配，可以与 match 具有 g 的时候等价。</p></li></ul><h4 id="顺便加强理解"><a href="#顺便加强理解" class="headerlink" title="顺便加强理解"></a>顺便加强理解</h4><ol><li>ip 正则表达式<br>格式由”.”分割成四段，每一段范围是 0-255，拿出其中一段进行分析</li></ol><table><thead><tr><th>范围</th><th>表达式</th></tr></thead><tbody><tr><td>0-9</td><td>\d</td></tr><tr><td>10-99</td><td>[1-9]\d</td></tr><tr><td>100-199</td><td>1\d{2}</td></tr><tr><td>200-249</td><td>2[0-4]\d</td></tr><tr><td>250-255</td><td>25[0-5]</td></tr></tbody></table><p>所以，其中一段构成的正则表达式是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5]</span><br></pre></td></tr></table></figure><p>，<br>整个 ip 正则为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])$/</span><br></pre></td></tr></table></figure><ol start="2"><li>同理端口号范围是 0-65535</li></ol><table><thead><tr><th>范围</th><th>表达式</th></tr></thead><tbody><tr><td>0-9</td><td>\d</td></tr><tr><td>10-99</td><td>[1-9]\d</td></tr><tr><td>100-999</td><td>[1-9]\d{2}</td></tr><tr><td>1000-9999</td><td>[1-9]\d{3}</td></tr><tr><td>10000-59999</td><td>[1-5]\d{4}</td></tr><tr><td>60000-64999</td><td>6[0-4]\d{3}</td></tr><tr><td>65000-65499</td><td>65[0-4]\d{2}</td></tr><tr><td>65500-65529</td><td>655[0-2]\d</td></tr><tr><td>65530-65535</td><td>65553[0-5]</td></tr></tbody></table><p>所以，整个端口号正则为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/\d|[1-9]\d&#123;1,3&#125;|[1-5]d&#123;4&#125;|6[0-4]\d&#123;3&#125;|65[0-4]\d&#123;2&#125;|655[0-2]\d|65553[0-5]/</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript 正则 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>理解同步、异步和事件循环</title>
      <link href="/yelee/2018/08/20/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
      <url>/yelee/2018/08/20/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="JavaScript-运行机制"><a href="#JavaScript-运行机制" class="headerlink" title="JavaScript 运行机制"></a>JavaScript 运行机制</h2><ol><li>所有同步任务都在主线程上执行，形成一个执行栈；</li></ol><a id="more"></a><ol start="2"><li><p>主线程发起异步请求，相应的工作线程就会去执行异步任务，主线程可以继续执行后面的代码；</p></li><li><p>主线程之外，还存在一个”任务队列”（task queue）。只要异步任务有了运行结果，就在”任务队列”之中放置一个事件，也就是一个消息；</p></li><li><p>一旦”执行栈”中的所有同步任务执行完毕，系统就会读取”任务队列”，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行；</p></li><li><p>主线程把当前的事件执行完成之后，再去读取任务队列，如此反复重复执行，这样就行程了事件循环。</p></li></ol><h4 id="1、单线程"><a href="#1、单线程" class="headerlink" title="1、单线程"></a>1、单线程</h4><p>JS 引擎在解释和执行 JavaScript 代码线程只有一个，叫做<strong>主线程</strong>。<br>但实际还存在其他线程，如：处理 Ajax 请求线程，处理 DOM 事件线程，定时器线程，和文件读写线程等，叫做<strong>工作线程</strong>。</p><h4 id="2、同步和异步"><a href="#2、同步和异步" class="headerlink" title="2、同步和异步"></a>2、同步和异步</h4><p>同步：如果函数返回的时候，调用者就能够得到预期结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.sqrt(2);</span><br></pre></td></tr></table></figure><p>异步：函数返回的时候，调用者还不能够得到预期结果，而是需要通过一定手段得到。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&quot;foo.txt&quot;, &quot;utf8&quot;, function(err, data)&#123;</span><br><span class="line">    console.log(data)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上面代码中，我们希望 fs.readFile 函数读取文件，并打印出来，但是在 fs.readFile 函数返回时，我们期望的结果并不会发生，而是要等文件全部读取完成之后。</p><h5 id="异步-AJAX："><a href="#异步-AJAX：" class="headerlink" title="异步 AJAX："></a>异步 AJAX：</h5><blockquote><p>主线程：“你好，AJAX 线程。请你帮我发个 HTTP 请求吧，我把请求地址和参数都给你了。”</p></blockquote><blockquote><p>AJAX 线程：“好的，主线程。我马上去发，但可能要花点儿时间呢，你可以先去忙别的。”</p></blockquote><blockquote><p>主线程：：“谢谢，你拿到响应后告诉我一声啊。”</p></blockquote><blockquote><p>(接着，主线程做其他事情去了。一顿饭的时间后，它收到了响应到达的通知。)</p></blockquote><h5 id="同步-AJAX："><a href="#同步-AJAX：" class="headerlink" title="同步 AJAX："></a>同步 AJAX：</h5><blockquote><p>主线程：“你好，AJAX 线程。请你帮我发个 HTTP 请求吧，我把请求地址和参数都给你了。”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>主线程：：“喂，AJAX 线程，你怎么不说话？”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>主线程：：“喂！喂喂喂！”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>(一炷香的时间后)</p></blockquote><blockquote><p>主线程：：“喂！求你说句话吧！”</p></blockquote><blockquote><p>AJAX 线程：“主线程，不好意思，我在工作的时候不能说话。你的请求已经发完了，拿到响应数据了，给你。”</p></blockquote><p>正因为 JavaScript 时单线程，同步容易造成阻塞，所以，对于耗时和操作事件不确定操作，使用异步就成了必然选择。</p><h4 id="3、异步过程"><a href="#3、异步过程" class="headerlink" title="3、异步过程"></a>3、异步过程</h4><p>一个异步过程通常时这样的：</p><blockquote><p>主线程发起一个异步请求，相应的工作线程接收线程请求并告知主线程已收到；主线程可以继续执行后面的代码，同时工作线程执行异步任务；工作线程完成工作后，通知主线程；主线程收到通知后，执行一定动作（调用回调函数）。</p></blockquote><p>异步函数通常具有一下形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A(arg..., callbackFn)</span><br></pre></td></tr></table></figure><p>他可以叫做异步过程的<strong>发起函数</strong>，或者叫做异步任务<strong>注册函数</strong>。</p><p>从主线程的角度看，一个一度过程包括两个要素：</p><ul><li>发起函数（注册函数）</li><li>回到函数</li></ul><h4 id="4、消息队列和事件循环"><a href="#4、消息队列和事件循环" class="headerlink" title="4、消息队列和事件循环"></a>4、消息队列和事件循环</h4><p>异步过程中，工作线程在异步操作完成后需要通知主线程。那么这个通知机制时怎样实现的呢？答案是利用消息队列和事件循环。</p><p>一句话概括：</p><blockquote><p>工作线程将消息放到消息队列，主线程通过事件循环过程去取消息。</p></blockquote><p>消息队列：消息队列是一个先进先出的队列，放着各种消息。</p><p>事件循环：事件循环是指主线程从消息队列中取消息，执行的过程。</p><p>实际上，主线程只会做一件事，就是从消息队列里面取消息、执行消息，再去消息，再执行。当消息队列为空时，就会等待知道消息队列变成非空。而且主线程只有在将当前的消息执行完成后，才会去取下一个消息。这种机制就叫做事件循环机制，取一个消息并执行的过程叫做一次循环。</p><p>消息队列中放的消息是什么东西？消息的具体结构当然跟具体的实现有关，可以认为：</p><blockquote><p>消息就是注册异步任务时添加的回调函数。</p></blockquote><p>以异步 Ajax 为例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&apos;http://segmentfault.com&apos;, function(resp) &#123;</span><br><span class="line">    console.log(&apos;我是响应：&apos;, resp);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>主线程发起 Ajax 请求后，会继续执行其他代码。Ajax 线程负责请求 segmentfault.com，拿到响应后，它会把响应封装成一个 JavaScript 对象，然后构成一条消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var message = function() &#123;</span><br><span class="line">    callbackFn();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 callbackFn 就是前面代码中成功响应时的回调函数。</p><p>主线程在执行完当前循环中所有代码后，就会到消息队列取出这条消息（也就是 message 函数），并执行它，到此为止，就完成了工作线程对主线程的通知，回调函数也就得到了执行。如果一开始主线程就没有提供回调函数，Ajax 线程在收到 HTTP 响应后，也就没有必要通知主线程，从而没必要往消息队列放消息。</p><blockquote><p>异步过程的回调函数，一定不在当前这一轮事件循环中执行。</p></blockquote><h4 id="5、异步与事件"><a href="#5、异步与事件" class="headerlink" title="5、异步与事件"></a>5、异步与事件</h4><blockquote><p>消息队列中的每条消息实际上都对应着一个事件</p></blockquote><p>有一类很重要的异步过程：DOM 事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var button = document.getElement(&apos;#btn&apos;);</span><br><span class="line">button.addEventListener(&apos;click&apos;, function(e) &#123;</span><br><span class="line">    console.log();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>从事件的角度来看，上述代码表示：在按钮上添加了一个鼠标单击事件的事件监听器；当用户点击按钮时，鼠标单击事件触发，事件监听器函数被调用。</p><p>从异步过程的角度看，addEventListener 函数就是异步过程的发起函数，事件监听器函数就是异步过程的回调函数。事件触发时，表示异步任务完成，会将事件监听器函数封装成一条消息放到消息队列中，等待主线程执行。</p><p>事件的概念实际上并不是必须的，事件机制实际上就是异步过程的通知机制。我觉得它的存在是为了编程接口对开发者更友好。</p><p>另一方面，所有的异步过程也都可以用事件来描述。例如：setTimeout 可以看成对应一个时间到了！的事件。前文的 setTimeout(fn, 1000);可以看成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timer.addEventListener(&apos;timeout&apos;, 1000, fn);</span><br></pre></td></tr></table></figure><blockquote><p>工作线程是生产者，主线程是消费者(只有一个消费者)。工作线程执行异步任务，执行完成后把对应的回调函数封装成一条消息放到消息队列中；主线程不断地从消息队列中取消息并执行，当消息队列空时主线程阻塞，直到消息队列再次非空。</p></blockquote><h4 id="6、macrotasks-与-microtasks-的区别"><a href="#6、macrotasks-与-microtasks-的区别" class="headerlink" title="6、macrotasks 与 microtasks 的区别"></a>6、macrotasks 与 microtasks 的区别</h4><blockquote><p>macrotasks: setTimeout setInterval setImmediate I/O UI 渲染</p></blockquote><blockquote><p>microtasks: Promise process.nextTick Object.observe MutationObserver</p></blockquote><p>microtask 会在当前循环中执行完成,而 macrotask 会在下一个循环中执行</p>]]></content>
      
      <categories>
          
          <category> js高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git简记</title>
      <link href="/yelee/2018/07/27/Git%E7%AE%80%E8%AE%B0/"/>
      <url>/yelee/2018/07/27/Git%E7%AE%80%E8%AE%B0/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Git-食用手册"><a href="#Git-食用手册" class="headerlink" title="Git 食用手册"></a>Git 食用手册</h2><h3 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h3><p>最近有个项目比较赶，于是决定 8 个人一个并行完成，单独把项目拿出来用 gitea 管理，没人分一个模块开发，对应也给分支，效果不过，从中也帮助自己重新温习了一下 git 的使用，小记一下。</p><a id="more"></a><h3 id="1-安装和使用"><a href="#1-安装和使用" class="headerlink" title="1. 安装和使用"></a>1. 安装和使用</h3><ul><li><p>在 MAC 上，安装 homebrew，然后通过<a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">homebrew</a> 安装 Git。</p><blockquote><p>在 MAC 上另一种安装方法，从 AppStore 安装 Xcode，Xcode 集成了 Git，不过默认没有安装，你需要运行 Xcode，选择菜单“Xcode”-&gt;“Preferences”，在弹出窗口中找到“Downloads”，选择“Command Line Tools”，点“Install”就可以完成安装了。</p></blockquote></li><li><p>在 Windows 上，下载<a href="http://rj.baidu.com/soft/detail/40642.html" target="_blank" rel="noopener">安装包</a>，默认下一步，安装完成即可。</p></li><li><p>安装完后自报家门</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;wuwhs&quot;</span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>创建版本库<br>初始化一个 Git 仓库，使用<code>git init</code>命令。添加文件到 Git 仓库，分两步：</p><ol><li>第一步，使用命令<code>git add &lt;file&gt;</code>，注意，可反复多次使用，添加多个文件；</li><li>第二步，使用命令<code>git commit</code>，完成。</li></ol></li></ul><h3 id="2-时光穿梭"><a href="#2-时光穿梭" class="headerlink" title="2. 时光穿梭"></a>2. 时光穿梭</h3><p><img src="https://note.youdao.com/yws/public/resource/813e8f68e489060d70ccfdff42b3aecc/xmlnote/8849F03FF3934C8087DA9645B9BD9C5F/14633" alt=""></p><ul><li><p>如果<code>git status</code>告诉你有文件被修改过，用<code>git diff</code>可以查看修改内容。</p></li><li><p>HEAD 指向的版本就是当前版本，因此，Git 允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</p></li><li><p>穿梭前，用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本。</p></li><li><p>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本，<code>git log --pretty=oneline --abbrev-commit</code>在一行显示缩写提交号。</p></li><li><p>场景 1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p></li><li><p>当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD file</code>，就回到了场景 1，第二步按场景 1 操作。</p></li><li><p>命令<code>git rm</code>用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。</p></li></ul><h3 id="3-远程仓库"><a href="#3-远程仓库" class="headerlink" title="3. 远程仓库"></a>3. 远程仓库</h3><ul><li><p>创建 SSH Key。<code>$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code>。</p></li><li><p>登陆 GitHub，打开“Account settings”，“SSH Keys”页面。<br>然后，点“Add SSH Key”，填上任意 Title，在 Key 文本框里粘贴 id_rsa.pub 文件的内容。</p></li><li><p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>。</p></li><li><p>关联后，使用命令<code>git push -u origin master</code>第一次推送 master 分支的所有内容。</p></li><li><p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改。</p></li><li><p>要克隆一个仓库，首先必须知道仓库的地址，然后使用<code>git clone</code>命令克隆。</p></li></ul><h3 id="4-分支管理"><a href="#4-分支管理" class="headerlink" title="4. 分支管理"></a>4. 分支管理</h3><ul><li><p>Git 鼓励大量使用分支。</p></li><li><p>查看分支：<code>git branch</code>。</p></li><li><p>创建分支：<code>git branch &lt;name&gt;</code>。</p></li><li><p>切换分支：<code>git checkout &lt;name&gt;</code>。</p></li><li><p>创建+切换到当前分支：<code>git checkout -b &lt;name&gt;</code>。</p></li><li><p>合并某分支到当前分支：<code>git merge &lt;name&gt;</code>。</p></li><li><p>删除分支：<code>git branch -d &lt;name&gt;</code>。</p></li><li><p>当 Git 无法自动合并分支时，就必须首先剞劂冲突，解决冲突后，再提交，合并完成用<code>git log --graph</code>命令可以看到分支合并图。</p></li><li><p>合并分支时，加上<code>--no-ff</code>参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而<code>fash-forward</code>合并就看不出来曾经做过合并。</p></li><li><p>当手头工作没有完成时，先把工作现场<code>git stash</code>一下，然后去修复 bug，修复后，再<code>git stash list</code>查看历史 stash，一是用<code>git stash apply</code>恢复，但恢复后，stash 内容并不删除，你需要用<code>git stash drop</code>来删除；另一种方式是用<code>git stash pop</code>，恢复的同时把 stash 内容也删了。</p></li><li><p>查看远程库信息，使用<code>git remote -v</code>。</p></li><li><p>从本地推送分支，使用<code>git push origin branch-name</code>，如果失败，先用<code>git pull</code>抓取远程的新提交。</p></li><li><p>再本地创建和远程分支对应的分支，使用<code>git checkout -b branch-name origin/branch-name</code>，本地和远程分支的名称最好一致。</p></li><li><p>从远程抓取分支，使用<code>git pull</code>，如果有冲突，要先处理冲突。</p></li></ul><h3 id="5-标签"><a href="#5-标签" class="headerlink" title="5. 标签"></a>5. 标签</h3><ul><li><p>命令<code>git tag &lt;name&gt;</code>用于新建一个标签，默认为<code>HEAD</code>,也可以指定一个 commit id。</p></li><li><p><code>git tag -a &lt;tagname&gt; -m &quot;balabala...&quot;</code>可以指定标签信息。</p></li><li><p><code>git tag -s &lt;tagname&gt; -m &quot;balabala...&quot;</code>可以用 PGP 签名标签。</p></li><li><p>命令<code>git tag</code>可以查看所有标签。</p></li><li><p>命令<code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签。</p></li><li><p>命令<code>git push origin --tags</code>可以推送全部未推送过的本地标签。</p></li><li><p>命令<code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签。</p></li><li><p>命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>可以删除一个远程标签。</p></li></ul><h3 id="6-举个应用栗子"><a href="#6-举个应用栗子" class="headerlink" title="6. 举个应用栗子"></a>6. 举个应用栗子</h3><ol><li>最初在远程创建项目仓库有<code>master</code>和<code>develp</code>分支，参与开发人员先在自己一个文件夹下，调出<code>git Bash</code>，然后输入命令<code>git init</code>，再把仓库<code>git clone</code>下来</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www</span><br><span class="line">$ git init</span><br><span class="line">Initialized empty Git repository in D:/appSoft/wampserver/wamp64/www/.git/</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www (master)</span><br><span class="line">$ git clone git@github.com:wuwhs/demo.git</span><br><span class="line">Cloning into &apos;demo&apos;...</span><br><span class="line">Warning: Permanently added the RSA host key for IP address &apos;13.229.188.59&apos; to the list of known hosts.</span><br><span class="line">warning: You appear to have cloned an empty repository.</span><br><span class="line">Checking connectivity... done.</span><br></pre></td></tr></table></figure><ol start="2"><li><code>cd demo</code>进入<code>clone</code>下载的目录里，用<code>git branch develop</code>在本地创建一个对应的<code>develop</code>分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www (master)</span><br><span class="line">$ cd demo</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch</span><br><span class="line">* master</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch develop</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch</span><br><span class="line">  develop</span><br><span class="line">* master</span><br></pre></td></tr></table></figure><p>再次用<code>git branch</code>查看已经新建了一个<code>develop</code>分支</p><ol start="3"><li><code>git checkout develop</code>切换到当前<code>develop</code>分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git checkout develop</span><br><span class="line">Switched to branch &apos;develop&apos;</span><br></pre></td></tr></table></figure><ol start="4"><li>用<code>git pull origin develop:develop</code>，即：<code>git pull origin &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code>，当本地和远程分支名相同时，可以简写成一个，也就是<code>git pull origin develop</code>，拉取远程<code>develop</code>分支完成，然后开发人员就可以在这个分支上工作了</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull origin develop:develop</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   7ff2cb0..7ab2842  develop    -&gt; develop</span><br><span class="line">   7ff2cb0..7ab2842  develop    -&gt; origin/develop</span><br><span class="line">warning: fetch updated the current branch head.</span><br><span class="line">fast-forwarding your working tree from</span><br><span class="line">commit 7ff2cb0627be357fa15db4e38e1bfe8fc820b8ec.</span><br><span class="line">Already up-to-date.</span><br></pre></td></tr></table></figure><ol start="5"><li>当一天了工作完成，要提交到远程分支，首先要拉取一下别人提交的代码，防止版本冲突</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Compressing objects: 100% (2/2), done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   f848dc7..d696375  develop    -&gt; origin/develop</span><br><span class="line">Updating f848dc7..d696375</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><p>PS：直接偷懒<code>pull</code>可能会出现没有找到<code>tracking</code>的分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">There is no tracking information for the current branch.</span><br><span class="line">Please specify which branch you want to merge with.</span><br><span class="line">See git-pull(1) for details.</span><br><span class="line"></span><br><span class="line">git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class="line"></span><br><span class="line">If you wish to set tracking information for this branch you can do so with:</span><br><span class="line"></span><br><span class="line">git branch --set-upstream-to=origin/&lt;branch&gt; develop</span><br></pre></td></tr></table></figure><p>这时候要手动添加一下对应分支依赖<code>git branch --set-upstream-to=origin/&lt;branch&gt; develop</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git branch --set-upstream-to=origin/develop develop</span><br><span class="line">Branch develop set up to track remote branch develop from origin.</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Compressing objects: 100% (2/2), done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   f848dc7..d696375  develop    -&gt; origin/develop</span><br><span class="line">Updating f848dc7..d696375</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><ol start="6"><li>将本地分支提交到对应远程分支上，<code>git push origin develop:develop</code>，即：<code>git push origin &lt;远程主机&gt;&lt;本地分支名&gt;:&lt;远程分支名&gt;</code>，如果名称一样可以简写，也就是<code>git push origin develop</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git push origin develop:develop</span><br><span class="line">Counting objects: 9, done.</span><br><span class="line">Delta compression using up to 4 threads.</span><br><span class="line">Compressing objects: 100% (5/5), done.</span><br><span class="line">Writing objects: 100% (9/9), 759 bytes | 0 bytes/s, done.</span><br><span class="line">Total 9 (delta 1), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (1/1), done.</span><br><span class="line">To git@github.com:wuwhs/demo.git</span><br><span class="line">   d696375..3c00c0c  develop -&gt; develop</span><br></pre></td></tr></table></figure><ol start="7"><li>项目测试 OK 了，本地分支合并到<code>master</code>分支上，要用到<code>git merge &lt;branch&gt;</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git checkout master</span><br><span class="line">Switched to branch &apos;master&apos;</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git merge develop</span><br><span class="line">Updating c4d0377..3c00c0c</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 9 +++++++++</span><br><span class="line"> 1 file changed, 9 insertions(+)</span><br></pre></td></tr></table></figure><p>常用的操作就以上七步了，当然会有不同情形的应用。</p><h3 id="7-附录：git-cheat-sheet"><a href="#7-附录：git-cheat-sheet" class="headerlink" title="7. 附录：git-cheat-sheet"></a>7. 附录：git-cheat-sheet</h3><p>一般而言，常用的就是以上那些命令，有人专门的整理了一份比较全一点的文档 git-cheat-sheet，方便查阅。</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>列出当前配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --list</span><br></pre></td></tr></table></figure><p>列出 repository 配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --local --list</span><br></pre></td></tr></table></figure><p>列出全局配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global --list</span><br></pre></td></tr></table></figure><p>列出系统配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --system --list</span><br></pre></td></tr></table></figure><p>设置用户名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;[firstname lastname]&quot;</span><br></pre></td></tr></table></figure><p>设置用户邮箱：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email &quot;[valid-email]&quot;</span><br></pre></td></tr></table></figure><p>设置 git 命令输出为彩色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global color.ui auto</span><br></pre></td></tr></table></figure><p>设置 git 使用的文本编辑器设：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global core.editor vi</span><br></pre></td></tr></table></figure><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>Repository 配置对应的配置文件路径[–local]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;repo&gt;/.git/config</span><br></pre></td></tr></table></figure><p>用户全局配置对应的配置文件路径[–global]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.gitconfig</span><br></pre></td></tr></table></figure><p>系统配置对应的配置文件路径[–local]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/gitconfig</span><br></pre></td></tr></table></figure><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p>复制一个已创建的仓库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 通过 SSH</span><br><span class="line">$ git clone ssh://user@domain.com/repo.git</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#通过 HTTP</span><br><span class="line">$ git clone http://domain.com/user/repo.git</span><br></pre></td></tr></table></figure><p>创建一个新的本地仓库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><h4 id="本地修改"><a href="#本地修改" class="headerlink" title="本地修改"></a>本地修改</h4><p>显示工作路径下已修改的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure><p>显示与上次提交版本文件的不同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff</span><br></pre></td></tr></table></figure><p>把当前所有修改添加到下次提交中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure><p>把对某个文件的修改添加到下次提交中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add -p &lt;file&gt;</span><br></pre></td></tr></table></figure><p>提交本地的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -a</span><br></pre></td></tr></table></figure><p>提交之前已标记的变化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit</span><br></pre></td></tr></table></figure><p>附加消息提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &apos;message here&apos;</span><br></pre></td></tr></table></figure><p>提交，并将提交时间设置为之前的某个日期:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --date=&quot;`date --date=&apos;n day ago&apos;`&quot; -am &quot;Commit Message&quot;</span><br></pre></td></tr></table></figure><p>修改上次提交<br>（请勿修改已发布的提交记录!）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit --amend</span><br></pre></td></tr></table></figure><p>修改上次提交的 committer date：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIT_COMMITTER_DATE=&quot;date&quot; git commit --amend</span><br></pre></td></tr></table></figure><p>修改上次提交的 author date：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend --date=&quot;date&quot;</span><br></pre></td></tr></table></figure><p>把当前分支中未提交的修改移动到其他分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git checkout branch2</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><p>将 stashed changes 应用到当前分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash apply</span><br></pre></td></tr></table></figure><p>删除最新一次的 stashed changes：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash drop</span><br></pre></td></tr></table></figure><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>从当前目录的所有文件中查找文本内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git grep &quot;Hello&quot;</span><br></pre></td></tr></table></figure><p>在某一版本中搜索文本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git grep &quot;Hello&quot; v2.5</span><br></pre></td></tr></table></figure><h4 id="提交历史"><a href="#提交历史" class="headerlink" title="提交历史"></a>提交历史</h4><p>从最新提交开始，显示所有的提交记录（显示 hash， 作者信息，提交的标题和时间）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log</span><br></pre></td></tr></table></figure><p>显示所有提交（仅显示提交的 hash 和 message）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline</span><br></pre></td></tr></table></figure><p>显示某个用户的所有提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --author=&quot;username&quot;</span><br></pre></td></tr></table></figure><p>显示某个文件的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log -p &lt;file&gt;</span><br></pre></td></tr></table></figure><p>仅显示远端分支与远端分支提交记录的差集：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline &lt;origin/master&gt;..&lt;remote/master&gt; --left-right</span><br></pre></td></tr></table></figure><p>谁，在什么时间，修改了文件的什么内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git blame &lt;file&gt;</span><br></pre></td></tr></table></figure><p>显示 reflog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog show</span><br></pre></td></tr></table></figure><p>删除 reflog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog delete</span><br></pre></td></tr></table></figure><h4 id="分支与标签"><a href="#分支与标签" class="headerlink" title="分支与标签"></a>分支与标签</h4><p>列出所有的分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br></pre></td></tr></table></figure><p>列出所有的远端分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -r</span><br></pre></td></tr></table></figure><p>切换分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>创建并切换到新分支:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>基于当前分支创建新分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch &lt;new-branch&gt;</span><br></pre></td></tr></table></figure><p>基于远程分支创建新的可追溯的分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch --track &lt;new-branch&gt; &lt;remote-branch&gt;</span><br></pre></td></tr></table></figure><p>删除本地分支:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -d &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>强制删除一个本地分支：<br>将会丢失未合并的修改！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -D &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>给当前版本打标签：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><p>给当前版本打标签并附加消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><h4 id="更新与发布"><a href="#更新与发布" class="headerlink" title="更新与发布"></a>更新与发布</h4><p>列出当前配置的远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br></pre></td></tr></table></figure><p>显示远程端的信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote show &lt;remote&gt;</span><br></pre></td></tr></table></figure><p>添加新的远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add &lt;remote&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>下载远程端版本，但不合并到 HEAD 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch &lt;remote&gt;</span><br></pre></td></tr></table></figure><p>下载远程端版本，并自动与 HEAD 版本合并：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote pull &lt;remote&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>将远程端版本合并到本地版本中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin master</span><br></pre></td></tr></table></figure><p>以 rebase 方式将远端分支与本地合并：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>将本地版本发布到远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push remote &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>删除远程端分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git push &lt;remote&gt; :&lt;branch&gt; (since Git v1.5.0)</span><br><span class="line"># or</span><br><span class="line">git push &lt;remote&gt; --delete &lt;branch&gt; (since Git v1.7.0)</span><br></pre></td></tr></table></figure><p>发布标签:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push --tags</span><br></pre></td></tr></table></figure><p>合并与重置(Rebase)<br>将分支合并到当前 HEAD 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>将当前 HEAD 版本重置到分支中:<br>请勿重置已发布的提交!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>退出重置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase --abort</span><br></pre></td></tr></table></figure><p>解决冲突后继续重置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase --continue</span><br></pre></td></tr></table></figure><p>使用配置好的 merge tool 解决冲突：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git mergetool</span><br></pre></td></tr></table></figure><p>在编辑器中手动解决冲突后，标记文件为已解决冲突：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git add &lt;resolved-file&gt;</span><br><span class="line">$ git rm &lt;resolved-file&gt;</span><br></pre></td></tr></table></figure><p>合并提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase -i &lt;commit-just-before-first&gt;</span><br></pre></td></tr></table></figure><p>把上面的内容替换为下面的内容：</p><p>原内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pick &lt;commit_id&gt;</span><br><span class="line">pick &lt;commit_id2&gt;</span><br><span class="line">pick &lt;commit_id3&gt;</span><br></pre></td></tr></table></figure><p>替换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pick &lt;commit_id&gt;</span><br><span class="line">squash &lt;commit_id2&gt;</span><br><span class="line">squash &lt;commit_id3&gt;</span><br></pre></td></tr></table></figure><h4 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h4><p>放弃工作目录下的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard HEAD</span><br></pre></td></tr></table></figure><p>移除缓存区的所有文件（i.e. 撤销上次 git add）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset HEAD</span><br></pre></td></tr></table></figure><p>放弃某个文件的所有本地修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout HEAD &lt;file&gt;</span><br></pre></td></tr></table></figure><p>重置一个提交（通过创建一个截然不同的新提交）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git revert &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到指定的版本，并抛弃该版本之后的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>用远端分支强制覆盖本地分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard &lt;remote/branch&gt; e.g., upstream/master, origin/my-feature</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到上一次提交的版本，并将之后的修改标记为未添加到缓存区的修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到上一次提交的版本，并保留未提交的本地修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --keep &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>删除添加.gitignore 文件前错误提交的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git rm -r --cached .</span><br><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;remove xyz file&quot;</span><br></pre></td></tr></table></figure><p>完~</p><p>可参考文章：</p><ol><li><a href="http://rogerdudler.github.io/git-guide/" target="_blank" rel="noopener">git-guide</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰 git 教程</a></li><li><a href="https://www.git-scm.com/" target="_blank" rel="noopener">git-scm</a></li><li><a href="https://blog.csdn.net/github_37515447/article/details/56840610" target="_blank" rel="noopener">Git Cheat Sheet 中文版</a></li></ol>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>搞定css三列布局</title>
      <link href="/yelee/2018/07/22/%E6%90%9E%E5%AE%9Acss%E4%B8%89%E5%88%97%E5%B8%83%E5%B1%80/"/>
      <url>/yelee/2018/07/22/%E6%90%9E%E5%AE%9Acss%E4%B8%89%E5%88%97%E5%B8%83%E5%B1%80/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="三列布局"><a href="#三列布局" class="headerlink" title="三列布局"></a>三列布局</h2><blockquote><p>谈到布局，首先就要想到定位，当别人问我，css 的 position 定位有哪些取值，分别表示什么意思？呃…..</p></blockquote><h3 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h3><p>position 有六个属性值：static、relative、absolute、fixed、sticky 和 inherit。</p><a id="more"></a><ul><li>static（默认）：元素框正常生成。块级元素生成一个矩形框，作为文档流的一部分；行内元素则会创建一个或多个行框，置于父级元素中。</li><li>relative：元素框相对于之前正常文档流中的位置发生偏移，并且原先的位置仍然被占据。发生偏移的时候，可能会覆盖其他元素。</li><li>absolute：元素框不再占有文档位置，并且相对于包含块进行偏移（所谓包含块就是最近一级外层元素 position 不为 static 的元素）。</li><li>fixed：元素框不再占有文档流位置，并且相对于视窗进行定位。</li><li>sticky：css3 新增属性值，粘性定位，相当于 relative 和 fixed 的混合。最初会被当作是 relative，相对原来位置进行偏移；一旦超过一定的阈值，会被当成 fixed 定位，相对于视口定位。</li></ul><h3 id="三列布局-1"><a href="#三列布局-1" class="headerlink" title="三列布局"></a>三列布局</h3><p>三列布局，其中一列宽度自适应，在 PC 端最常用之一，搞定了三列布局，其他一样的套路。</p><h5 id="方式一：浮动布局"><a href="#方式一：浮动布局" class="headerlink" title="方式一：浮动布局"></a>方式一：浮动布局</h5><p>缺点：html 结构不正确,当包含区域宽度小于左右框之和，右边框会被挤下来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.float .center &#123;</span><br><span class="line">        /* left: 300px;</span><br><span class="line">        right: 300px; */</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式二：定位布局"><a href="#方式二：定位布局" class="headerlink" title="方式二：定位布局"></a>方式二：定位布局</h4><p>缺点：要求父级要有非 static 定位，如果没有，左右框容易偏移出去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.position &#123;</span><br><span class="line">        position: relative;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .left &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .right &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        right: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .center &#123;</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout position&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式三：表格布局"><a href="#方式三：表格布局" class="headerlink" title="方式三：表格布局"></a>方式三：表格布局</h4><p>缺点：没什么缺点，恐惧 table</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.table &#123;</span><br><span class="line">        display: table;</span><br><span class="line">        width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table &gt; article &#123;</span><br><span class="line">        display: table-cell;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .center &#123;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .right &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout table&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式四：flex-弹性布局"><a href="#方式四：flex-弹性布局" class="headerlink" title="方式四：flex 弹性布局"></a>方式四：flex 弹性布局</h4><p>缺点：兼容性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.flex &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        flex-shrink: 0; /* 不缩小 */</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .center &#123;</span><br><span class="line">        flex-grow: 1; /* 增大 */</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .right &#123;</span><br><span class="line">        flex-shrink: 0; /* 不缩小 */</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout flex&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式五：grid-栅格布局"><a href="#方式五：grid-栅格布局" class="headerlink" title="方式五：grid 栅格布局"></a>方式五：grid 栅格布局</h4><p>缺点：兼容性 Firefox 52, Safari 10.1, Chrome 57, Opera 44</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.grid &#123;</span><br><span class="line">        display: grid;</span><br><span class="line">        grid-template-columns: 300px 1fr 300px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .left &#123;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .center &#123;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .right &#123;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout grid&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式六：圣杯布局"><a href="#方式六：圣杯布局" class="headerlink" title="方式六：圣杯布局"></a>方式六：圣杯布局</h4><p>缺点：需要多加一层标签，html 顺序不对，占用了布局框的 margin 属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.cup:after &#123;</span><br><span class="line">        clear: both;</span><br><span class="line">        content: &quot;&quot;;</span><br><span class="line">        display: table;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .center &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line">        float: left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .center &gt; div &#123;</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        overflow: auto;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -100%;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .right &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout cup&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;h1&gt;我是圣杯布局中间框&lt;/h1&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是圣杯布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是圣杯布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> 布局 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>水平且垂直居中方法（9种）</title>
      <link href="/yelee/2018/06/01/%E6%B0%B4%E5%B9%B3%E4%B8%94%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%EF%BC%889%E7%A7%8D%EF%BC%89/"/>
      <url>/yelee/2018/06/01/%E6%B0%B4%E5%B9%B3%E4%B8%94%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%EF%BC%889%E7%A7%8D%EF%BC%89/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="水平且垂直居中方法有哪些？"><a href="#水平且垂直居中方法有哪些？" class="headerlink" title="水平且垂直居中方法有哪些？"></a>水平且垂直居中方法有哪些？</h2><p>这在实际工作中经常用到，小记一下。</p><h4 id="演示-HTML-结构"><a href="#演示-HTML-结构" class="headerlink" title="演示 HTML 结构"></a>演示 HTML 结构</h4><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span> <span class="attr">class</span>=<span class="string">"div"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>i<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/gb/水平且垂直居中方法（9种）/0.bmp" alt=""></p><p>一般的，水平居中相对垂直居中简单很多，对于内联元素，父级元素设置<code>text-align: center;</code>；对于块级元素，子级元素设置<code>margin: 0 auto;</code>。以下结合水平居中强调实现垂直居中。</p><h4 id="1、已知父级元素宽高，父级元素定位非-static，子级元素定位设为position-absolute-fixed，再利用margin、left和top属性居中。"><a href="#1、已知父级元素宽高，父级元素定位非-static，子级元素定位设为position-absolute-fixed，再利用margin、left和top属性居中。" class="headerlink" title="1、已知父级元素宽高，父级元素定位非 static，子级元素定位设为position: absolute/fixed，再利用margin、left和top属性居中。"></a>1、已知父级元素宽高，父级元素定位非 static，子级元素定位设为<code>position: absolute/fixed</code>，再利用<code>margin</code>、<code>left</code>和<code>top</code>属性居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：需要已知父级元素固定宽高，才能确定<code>margin-left</code>和<code>margin-right</code>。</p><h4 id="2、子级元素是内联元素，父级元素设置line-height属性垂直居中。"><a href="#2、子级元素是内联元素，父级元素设置line-height属性垂直居中。" class="headerlink" title="2、子级元素是内联元素，父级元素设置line-height属性垂直居中。"></a>2、子级元素是内联元素，父级元素设置<code>line-height</code>属性垂直居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">120px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: normal;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：需要已知父级元素的固定高度，才可以确定<code>line-height</code>。</p><h4 id="3、子级元素是内联元素，父级元素用display-table-cell-和vertical-align-middle-属性实现垂直居中。"><a href="#3、子级元素是内联元素，父级元素用display-table-cell-和vertical-align-middle-属性实现垂直居中。" class="headerlink" title="3、子级元素是内联元素，父级元素用display: table-cell;和vertical-align: middle;属性实现垂直居中。"></a>3、子级元素是内联元素，父级元素用<code>display: table-cell;</code>和<code>vertical-align: middle;</code>属性实现垂直居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>inline-block</code>、<code>table-cell</code>不兼容 ie67</p><h4 id="4、对于子级是块级元素，父级元素同样用display-table-cell-和vertical-align-middle-属性实现垂直居中，水平方向居中用margin-0-auto-。"><a href="#4、对于子级是块级元素，父级元素同样用display-table-cell-和vertical-align-middle-属性实现垂直居中，水平方向居中用margin-0-auto-。" class="headerlink" title="4、对于子级是块级元素，父级元素同样用display: table-cell;和vertical-align: middle;属性实现垂直居中，水平方向居中用margin: 0 auto;。"></a>4、对于子级是块级元素，父级元素同样用<code>display: table-cell;</code>和<code>vertical-align: middle;</code>属性实现垂直居中，水平方向居中用<code>margin: 0 auto;</code>。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>table-cell</code>不兼容 ie67</p><h4 id="5、利用-css3-translate特性：位移是基于元素宽高的。"><a href="#5、利用-css3-translate特性：位移是基于元素宽高的。" class="headerlink" title="5、利用 css3 translate特性：位移是基于元素宽高的。"></a>5、利用 css3 <code>translate</code>特性：位移是基于元素宽高的。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-ms-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>translate</code>属性兼容 IE9+</p><h4 id="6、当父级是浮动的，用display-table-cell-会失效，这时需要包三层，第一层display-table-，第二层display-table-cell-第三次居中层"><a href="#6、当父级是浮动的，用display-table-cell-会失效，这时需要包三层，第一层display-table-，第二层display-table-cell-第三次居中层" class="headerlink" title="6、当父级是浮动的，用display: table-cell;会失效，这时需要包三层，第一层display: table;，第二层display: table-cell; 第三次居中层"></a>6、当父级是浮动的，用<code>display: table-cell;</code>会失效，这时需要包三层，第一层<code>display: table;</code>，第二层<code>display: table-cell;</code> 第三次居中层</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="comment">/* text-align: center; */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div3</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="comment">/* display: inline-block; */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，但 HTML 标签层数较多。</p><h4 id="7、绝对定位加四边定位为-0。"><a href="#7、绝对定位加四边定位为-0。" class="headerlink" title="7、绝对定位加四边定位为 0。"></a>7、绝对定位加四边定位为 0。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，但把定位属性全用上了</p><h4 id="8、利用-flex-布局justify-content-center-和align-items-center-属性居中。"><a href="#8、利用-flex-布局justify-content-center-和align-items-center-属性居中。" class="headerlink" title="8、利用 flex 布局justify-content: center;和align-items: center;属性居中。"></a>8、利用 flex 布局<code>justify-content: center;</code>和<code>align-items: center;</code>属性居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，兼容 IE10+</p><h4 id="9、利用-grid-布局，划分成-3x3-栅格，第二行第二列格子垂直水平居中"><a href="#9、利用-grid-布局，划分成-3x3-栅格，第二行第二列格子垂直水平居中" class="headerlink" title="9、利用 grid 布局，划分成 3x3 栅格，第二行第二列格子垂直水平居中"></a>9、利用 grid 布局，划分成 3x3 栅格，第二行第二列格子垂直水平居中</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">  <span class="attribute">grid-row-start</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">grid-column-start</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，兼容性 Firefox 52, Safari 10.1, Chrome 57, Opera 44</p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>深入理解BFC</title>
      <link href="/yelee/2018/05/21/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3BFC/"/>
      <url>/yelee/2018/05/21/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3BFC/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="BFC-概念"><a href="#BFC-概念" class="headerlink" title="BFC 概念"></a>BFC 概念</h2><h2 id="1、相关定义"><a href="#1、相关定义" class="headerlink" title="1、相关定义"></a>1、相关定义</h2><h3 id="1-1-Formatting-context"><a href="#1-1-Formatting-context" class="headerlink" title="1.1 Formatting context"></a>1.1 Formatting context</h3><p>Formatting context 是 W3C CSS2.1 规定中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素如何定位，以及和其他元素的关系和相互作用。最常见的 Formatting context 有 Block formatting context（简称 BFC）和 Inline formatting context（简称 IFC）。<br>css2.1 中只有 BFC 和 IFC，css3 中还增加了 GFC 和 FFC。</p><a id="more"></a><h3 id="1-2-BFC-定义"><a href="#1-2-BFC-定义" class="headerlink" title="1.2 BFC 定义"></a>1.2 BFC 定义</h3><p>BFC(Block formatting context)直译为“块级格式化上下文”。它是独立的渲染区域，只有 Block-level box 参与，它规定了内部的 Block-level Box 如何布局，并且与这个区域外部毫不相干。</p><h3 id="1-3-BFC-布局规则："><a href="#1-3-BFC-布局规则：" class="headerlink" title="1.3 BFC 布局规则："></a>1.3 BFC 布局规则：</h3><ul><li>内部的 Box 会在垂直方向，一个接一个地放置；</li><li>Box 垂直方向地距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠</li><li>每个元素的 margin box 的左边，与包含块 border box 的左边相接触（对于从左往右的格式化，否则相反）。即便存在浮动也是如此。</li><li>BFC 的区域不会与 float box 重叠。</li><li>BFC 就是页面的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</li><li>计算 BFC 的高度时，浮动元素页参与计算。<br>-</li></ul><h2 id="2、作用"><a href="#2、作用" class="headerlink" title="2、作用"></a>2、作用</h2><h3 id="2-1-可生成-BFC-的元素"><a href="#2-1-可生成-BFC-的元素" class="headerlink" title="2.1 可生成 BFC 的元素"></a>2.1 可生成 BFC 的元素</h3><ul><li>根元素 html；</li><li>float 属性不为 none；</li><li>position 为 absolute 或 fixed；</li><li>display 为 inline-block， table-cell，table-caption，flex， inline-flex；</li><li>overflow 不为 visible；</li></ul><h3 id="2-2-场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。"><a href="#2-2-场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。" class="headerlink" title="2.2 场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。"></a>2.2 场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .left-center-right.float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: rgba(0, 0, 0, 0.7);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .left-center-right.float .center &#123;</span><br><span class="line">        background-color: rgb(13, 218, 233);</span><br><span class="line">        height: 200px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .left-center-right.float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;left-center-right float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;我是左边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;我是右边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;我是中间区域块&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p>中间自适应栏边界会延展左右浮动区域<br><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/67CD3941EFC8420AAB3D54CB766DE219/7159" alt="image"></p><p>此时需要把中间栏变成 BFC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.left-center-right.float .center &#123;</span><br><span class="line">    background-color: rgb(13, 218, 233);</span><br><span class="line">    height: 200px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/97EE88BCB7AC428E95F9F9A5580639A7/7175" alt="image"></p><h3 id="2-3-场景二：子级元素有浮动，父级元素塌陷问题"><a href="#2-3-场景二：子级元素有浮动，父级元素塌陷问题" class="headerlink" title="2.3 场景二：子级元素有浮动，父级元素塌陷问题"></a>2.3 场景二：子级元素有浮动，父级元素塌陷问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .all-children-float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: rgba(0, 0, 0, 0.7);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .all-children-float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;all-children-float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;我是左边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;我是右边区域块&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/1B737A83C8D04BF9B0ABDE2EF28DF0E6/7190" alt="image"></p><p>此时需要将父级元素变成 BFC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.all-children-float &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/D00321F3DC9C4D578E6C89DD23DB0AB2/7200" alt="image"></p><h3 id="2-3-场景三：垂直方向-margin-出现重合"><a href="#2-3-场景三：垂直方向-margin-出现重合" class="headerlink" title="2.3 场景三：垂直方向 margin 出现重合"></a>2.3 场景三：垂直方向 margin 出现重合</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .verticle-block .block1 &#123;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(13, 218, 233);</span><br><span class="line">        margin: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .verticle-block .block2 &#123;</span><br><span class="line">        width: 150px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">        margin: 30px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;verticle-block&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;block1&quot;&gt;我是区域块1&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;block2&quot;&gt;我是区域块2&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><blockquote><p>Box 垂直方向的距离 margin 决定，属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠。</p></blockquote><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/4C9FBEC4951F4006939CD8AAEC698B21/7214" alt="image"></p><p>我们的做法是包一层标签，并转化成 BFC。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.wrapper1 &#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;section class=&quot;verticle-block&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;wrapper1&quot;&gt;</span><br><span class="line">        &lt;article class=&quot;block1&quot;&gt;我是区域块1&lt;/article&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;article class=&quot;block2&quot;&gt;我是区域块2&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/56A0200CB1424C20AB9930AA4CAC44E2/7217" alt="image"></p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css BFC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>css中的一些坑</title>
      <link href="/yelee/2018/05/06/css%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
      <url>/yelee/2018/05/06/css%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CSS-踩坑记"><a href="#CSS-踩坑记" class="headerlink" title="CSS 踩坑记"></a>CSS 踩坑记</h2><h4 id="1、如果子元素全部设置为浮动，则父元素是塌陷的"><a href="#1、如果子元素全部设置为浮动，则父元素是塌陷的" class="headerlink" title="1、如果子元素全部设置为浮动，则父元素是塌陷的"></a>1、如果子元素全部设置为浮动，则父元素是塌陷的</h4><ol><li>在元素末尾加块级空元素设置 clear:both；<a id="more"></a></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.last</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- more --><ol start="2"><li>在父级容器设置 before/after 模拟一个块级空元素</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>父级容器直接设置 overflow: auto/hidden;</li></ol><h4 id="2、普通文档流中块级垂直外边距合并"><a href="#2、普通文档流中块级垂直外边距合并" class="headerlink" title="2、普通文档流中块级垂直外边距合并"></a>2、普通文档流中块级垂直外边距合并</h4><p>解决办法：用 padding 代替，或改成 inline-block，或改成 float，或绝对定位</p><h4 id="3、使用-transition-闪屏"><a href="#3、使用-transition-闪屏" class="headerlink" title="3、使用 transition 闪屏"></a>3、使用 transition 闪屏</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">  <span class="attribute">-webkit-backface-visibility</span>: hidden;</span><br><span class="line">  <span class="attribute">-webkit-perspective</span>: <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过渡动画在没有启动硬件加速的情况下，会出现抖动现象，解决方案：用 translated3d、translateZ、transform 自动启动硬件加速，即改为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translated3d</span>(0, 0, 0);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translated3d</span>(0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ps:硬件加速导致 cpu 性能占用增加，电池电量消耗加大</p><h4 id="4、超出内容用”…”表示"><a href="#4、超出内容用”…”表示" class="headerlink" title="4、超出内容用”…”表示"></a>4、超出内容用”…”表示</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line-clamp"</span>&gt;</span></span><br><span class="line">来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line-clamp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">  <span class="attribute">-webkit-line-clamp</span>: <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>-webkit-line-clamp 用来限制在一个块元素显示的文本的行数</li><li>display: -webkit-box; 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示</li><li>-webkit-box-orient 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式</li></ol><p>缺点：<br>只有移动端和 webkit 浏览器支持</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/7959E51B5140437DA4C084E6B8E7472E/12000" alt=""></p><p>还不够，最后末尾最好有点渐变到”…”</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/D7C74A4FC9624AC7A638FC223AFF6926/12008" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line-clamp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.line-clamp</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">'...'</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(to right, transparent, #fff 55%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>将 height 设置为 line-height 整数倍，防止超出文字露出</li><li>ie10+才支持 linear-gradient 属性</li></ol><p>缺点：</p><p>当文字少于区域大小时，也会出现省略号</p><h4 id="输入框-placeholder-文字带颜色"><a href="#输入框-placeholder-文字带颜色" class="headerlink" title="输入框 placeholder 文字带颜色"></a>输入框 placeholder 文字带颜色</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* WebKit browsers */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-moz-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Mozilla Firefox 19+ */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:-ms-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Internet Explorer 10+ */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>移动端适配-rem</title>
      <link href="/yelee/2018/04/27/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D-rem/"/>
      <url>/yelee/2018/04/27/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D-rem/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="通过封装-rem-js-动态获取屏幕宽度"><a href="#通过封装-rem-js-动态获取屏幕宽度" class="headerlink" title="通过封装 rem.js,动态获取屏幕宽度"></a>通过封装 rem.js,动态获取屏幕宽度</h2><blockquote><p>通过 js 去动态计算根元素的 font-size，这样所有设备分辨率都能兼容适应</p></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">//designWidth:设计稿的实际宽度值，需要根据实际设置</span><br><span class="line">//maxWidth:制作稿的最大宽度值，需要根据实际设置</span><br><span class="line">//这段js的最后面有两个参数记得要设置，一个为设计稿实际宽度，一个为制作稿最大宽度，例如设计稿为750，最大宽度为750，则为(750,750)</span><br><span class="line">;</span><br><span class="line">(function(designWidth, maxWidth) &#123;</span><br><span class="line">    var doc = document,</span><br><span class="line">        win = window,</span><br><span class="line">        docEl = doc.documentElement,</span><br><span class="line">        remStyle = document.createElement(&quot;style&quot;),</span><br><span class="line">        tid;</span><br><span class="line"></span><br><span class="line">    function refreshRem() &#123;</span><br><span class="line">        var width = docEl.getBoundingClientRect().width;</span><br><span class="line">        maxWidth = maxWidth || 540;</span><br><span class="line">        width &gt; maxWidth &amp;&amp; (width = maxWidth);</span><br><span class="line">        var rem = width * 100 / designWidth;</span><br><span class="line">        remStyle.innerHTML = &apos;html&#123;font-size:&apos; + rem + &apos;px;&#125;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (docEl.firstElementChild) &#123;</span><br><span class="line">        docEl.firstElementChild.appendChild(remStyle);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        var wrap = doc.createElement(&quot;div&quot;);</span><br><span class="line">        wrap.appendChild(remStyle);</span><br><span class="line">        doc.write(wrap.innerHTML);</span><br><span class="line">        wrap = null;</span><br><span class="line">    &#125;</span><br><span class="line">    //要等 wiewport 设置好后才能执行 refreshRem，不然 refreshRem 会执行2次；</span><br><span class="line">    refreshRem();</span><br><span class="line"></span><br><span class="line">    win.addEventListener(&quot;resize&quot;, function() &#123;</span><br><span class="line">        clearTimeout(tid); //防止执行两次</span><br><span class="line">        tid = setTimeout(refreshRem, 300);</span><br><span class="line">    &#125;, false);</span><br><span class="line"></span><br><span class="line">    win.addEventListener(&quot;pageshow&quot;, function(e) &#123;</span><br><span class="line">        if (e.persisted) &#123; // 浏览器后退的时候重新计算</span><br><span class="line">            clearTimeout(tid);</span><br><span class="line">            tid = setTimeout(refreshRem, 300);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, false);</span><br><span class="line"></span><br><span class="line">    if (doc.readyState === &quot;complete&quot;) &#123;</span><br><span class="line">        doc.body.style.fontSize = &quot;16px&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        doc.addEventListener(&quot;DOMContentLoaded&quot;, function(e) &#123;</span><br><span class="line">            doc.body.style.fontSize = &quot;16px&quot;;</span><br><span class="line">        &#125;, false);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(640, 750);</span><br></pre></td></tr></table></figure><blockquote><p>当然也可以用 media query 设置适配集中主流的屏幕尺寸</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">html &#123;</span><br><span class="line">    font-size : 20px;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 401px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 25px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 428px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 26.75px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 481px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 30px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 569px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 35px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 641px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 40px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>提供一个移动端 base.css</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">body,</span><br><span class="line">dl,</span><br><span class="line">dd,</span><br><span class="line">ul,</span><br><span class="line">ol,</span><br><span class="line">h1,</span><br><span class="line">h2,</span><br><span class="line">h3,</span><br><span class="line">h4,</span><br><span class="line">h5,</span><br><span class="line">h6,</span><br><span class="line">pre,</span><br><span class="line">form,</span><br><span class="line">input,</span><br><span class="line">textarea,</span><br><span class="line">p,</span><br><span class="line">hr,</span><br><span class="line">thead,</span><br><span class="line">tbody,</span><br><span class="line">tfoot,</span><br><span class="line">th,</span><br><span class="line">td &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ul,</span><br><span class="line">ol &#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a &#123;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html &#123;</span><br><span class="line">    -ms-text-size-adjust: none;</span><br><span class="line">    -webkit-text-size-adjust: none;</span><br><span class="line">    text-size-adjust: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    line-height: 1.5;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body,</span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">select,</span><br><span class="line">textarea &#123;</span><br><span class="line">    font-family: &apos;helvetica neue&apos;, tahoma, &apos;hiragino sans gb&apos;, stheiti, &apos;wenquanyi micro hei&apos;, \5FAE\8F6F\96C5\9ED1, \5B8B\4F53, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b,</span><br><span class="line">strong &#123;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">i,</span><br><span class="line">em &#123;</span><br><span class="line">    font-style: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table &#123;</span><br><span class="line">    border-collapse: collapse;</span><br><span class="line">    border-spacing: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table th,</span><br><span class="line">table td &#123;</span><br><span class="line">    border: 1px solid #ddd;</span><br><span class="line">    padding: 5px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table th &#123;</span><br><span class="line">    font-weight: inherit;</span><br><span class="line">    border-bottom-width: 2px;</span><br><span class="line">    border-bottom-color: #ccc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">img &#123;</span><br><span class="line">    border: 0 none;</span><br><span class="line">    width: auto\9;</span><br><span class="line">    max-width: 100%;</span><br><span class="line">    vertical-align: top;</span><br><span class="line">    height: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">select,</span><br><span class="line">textarea &#123;</span><br><span class="line">    font-family: inherit;</span><br><span class="line">    font-size: 100%;</span><br><span class="line">    margin: 0;</span><br><span class="line">    vertical-align: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">html input[type=&quot;button&quot;],</span><br><span class="line">input[type=&quot;reset&quot;],</span><br><span class="line">input[type=&quot;submit&quot;] &#123;</span><br><span class="line">    -webkit-appearance: button;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button[disabled],</span><br><span class="line">input[disabled] &#123;</span><br><span class="line">    cursor: default;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;checkbox&quot;],</span><br><span class="line">input[type=&quot;radio&quot;] &#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;search&quot;] &#123;</span><br><span class="line">    -webkit-appearance: textfield;</span><br><span class="line">    -moz-box-sizing: content-box;</span><br><span class="line">    -webkit-box-sizing: content-box;</span><br><span class="line">    box-sizing: content-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;search&quot;]::-webkit-search-decoration &#123;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input:focus &#123;</span><br><span class="line">    outline: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">select[size],</span><br><span class="line">select[multiple],</span><br><span class="line">select[size][multiple] &#123;</span><br><span class="line">    border: 1px solid #AAA;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">article,</span><br><span class="line">aside,</span><br><span class="line">details,</span><br><span class="line">figcaption,</span><br><span class="line">figure,</span><br><span class="line">footer,</span><br><span class="line">header,</span><br><span class="line">hgroup,</span><br><span class="line">main,</span><br><span class="line">nav,</span><br><span class="line">section,</span><br><span class="line">summary &#123;</span><br><span class="line">    display: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">audio,</span><br><span class="line">canvas,</span><br><span class="line">video,</span><br><span class="line">progress &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    background: #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input::-webkit-input-speech-button &#123;</span><br><span class="line">    display: none</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">textarea &#123;</span><br><span class="line">    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> mobile </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue的数据驱动原理及简单实现</title>
      <link href="/yelee/2017/09/10/vue%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E5%8E%9F%E7%90%86%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/"/>
      <url>/yelee/2017/09/10/vue%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E5%8E%9F%E7%90%86%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Vue双向数据绑定原理"><a href="#Vue双向数据绑定原理" class="headerlink" title="Vue双向数据绑定原理"></a>Vue双向数据绑定原理</h2><h3 id="1、目标实现"><a href="#1、目标实现" class="headerlink" title="1、目标实现"></a>1、目标实现</h3><ol><li>理解双向数据绑定原理；</li><li>实现 &#123;&#123; &#125;&#125;、v-model和基本事件指令v-bind（:）、v-on（@）；</li><li>新增属性的双向绑定处理；<a id="more"></a></li></ol><h3 id="2、双向数据绑定原理"><a href="#2、双向数据绑定原理" class="headerlink" title="2、双向数据绑定原理"></a>2、双向数据绑定原理</h3><p>vue实现对数据的双向绑定，通过对数据劫持结合发布者-订阅者模式实现的。</p><h4 id="2-1-Object-defineProperty"><a href="#2-1-Object-defineProperty" class="headerlink" title="2.1 Object.defineProperty"></a>2.1 Object.defineProperty</h4><p>vue通过Object.defineProperty来实现数据劫持，会对数据对象每个属性添加对应的get和set方法，对数据进行读取和赋值操作就分别调用get和set方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">    enumerable: <span class="literal">true</span>,</span><br><span class="line">    configurable: <span class="literal">true</span>,</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;,</span><br><span class="line">    set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>我们可以将一些方法放到里面，从而完成对数据的监听（劫持）和视图的同步更新。</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/F8D35A0DDA0C438990651233F3954DD3/6460" alt="image"></p><h4 id="2-2-过程说明"><a href="#2-2-过程说明" class="headerlink" title="2.2 过程说明"></a>2.2 过程说明</h4><p>实现双向数据绑定，首先要对数据进行数据监听，需要一个监听器Observer，监听所有属性。如果属性发生变化，会调用setter和getter，再去告诉订阅者Watcher是否需要更新。由于订阅者有很多个，我们需要一个消息订阅器Dep来专门收集这些订阅者，然后在监听器Observer和订阅者Watcher之间进行统一管理。还有，我们需要一个指令解析器Complie，对每个元素进行扫描和解析，将相关指令对应初始化成一个订阅者Watcher，并替换模板数据或绑定相应函数。当订阅者Watcher接收到相应属性的变化，就会执行对应的更新函数，从而更新视图。</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/A6333A71A8E243A38EAD196BB13F9EE7/6463" alt="image"></p><h3 id="3、实现Observer"><a href="#3、实现Observer" class="headerlink" title="3、实现Observer"></a>3、实现Observer</h3><p>Observer是一个数据监听器，核心方法是我们提到过的Object.defineProperty。如果要监听所有属性的话，则需要通过递归遍历，对每个子属性都defineProperty。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data || <span class="keyword">typeof</span> data !== <span class="string">"object"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = data;</span><br><span class="line">    <span class="keyword">this</span>.walk(data);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性遍历</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    walk: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="built_in">Object</span>.keys(data).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">            self.defineReactive(data, key, data[key]);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    defineReactive: <span class="function"><span class="keyword">function</span>(<span class="params">data, key, val</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        observe(val);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">            enumerable: <span class="literal">true</span>,</span><br><span class="line">            configurable: <span class="literal">true</span>,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> val;</span><br><span class="line">            &#125;,</span><br><span class="line">            set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (newVal === val) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                val = newVal;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"属性："</span> + key + <span class="string">"被监听了，现在值为："</span> + newVal);</span><br><span class="line"></span><br><span class="line">                updateView(newVal);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        updateView(val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Observer(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听数据</span></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新视图</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; val</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateView</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $name = <span class="built_in">document</span>.querySelector(<span class="string">"#name"</span>);</span><br><span class="line">    $name.innerHTML = val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myvm = <span class="keyword">new</span> MyVue(&#123;</span><br><span class="line">    el: <span class="string">"#demo"</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        name: <span class="string">"hello word"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/93FC8BA149764033996B07C9031FBE2D/6483" alt="image"></p><h3 id="4、实现Dep"><a href="#4、实现Dep" class="headerlink" title="4、实现Dep"></a>4、实现Dep</h3><p>在流程介绍中，我们需要创建一个可以订阅者的订阅器Dep，主要负责手机订阅者，属性变化的时候执行相应的订阅者，更新函数。下面稍加改造Observer，就可以插入我们的订阅器。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    defineReactive: <span class="function"><span class="keyword">function</span>(<span class="params">data, key, val</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dep = <span class="keyword">new</span> Dep();</span><br><span class="line"></span><br><span class="line">        observe(val);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">            enumerable: <span class="literal">true</span>,</span><br><span class="line">            configurable: <span class="literal">true</span>,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否需要添加订阅者 什么时候添加订阅者呢？ 与实际页面DOM有关联的data属性才添加相应的订阅者</span></span><br><span class="line">                <span class="keyword">if</span> (Dep.target) &#123;</span><br><span class="line">                    <span class="comment">// 添加一个订阅者</span></span><br><span class="line">                    dep.addSub(Dep.target);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> val;</span><br><span class="line">            &#125;,</span><br><span class="line">            set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (newVal === val) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                val = newVal;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"属性："</span> + key + <span class="string">"被监听了，现在值为："</span> + newVal);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 通知所有订阅者</span></span><br><span class="line">                dep.notify(newVal);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        updateView(val);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 订阅器标识本身实例</span></span><br><span class="line">        Dep.target = dep;</span><br><span class="line">        <span class="comment">// 强行执行getter，往订阅器中添加订阅者</span></span><br><span class="line">        <span class="keyword">var</span> v = data[key];</span><br><span class="line">        <span class="comment">// 释放自己</span></span><br><span class="line">        Dep.target = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Observer(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订阅器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Dep</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.subs = [];</span><br><span class="line">    <span class="keyword">this</span>.target = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dep.prototype = &#123;</span><br><span class="line">    addSub: <span class="function"><span class="keyword">function</span>(<span class="params">sub</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subs.push(sub);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"this.subs:"</span>, <span class="keyword">this</span>.subs);</span><br><span class="line">    &#125;,</span><br><span class="line">    notify: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subs.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">sub</span>) </span>&#123;</span><br><span class="line">            sub.update(data);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    update: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        updateView(val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>PS:将订阅器Dep添加到一个订阅者设计到getter里面，是为了让Watcher初始化进行触发。</p><h3 id="5、实现Watcher"><a href="#5、实现Watcher" class="headerlink" title="5、实现Watcher"></a>5、实现Watcher</h3><p>订阅者Watcher在初始化的时候需要将自己添加到订阅器Dep中，那该如何添加呢？我们已经知道监听器Observer是在get函数执行添加了订阅者Watcher的操作，所以我们只要在订阅者Watcher初始化的时候触发对应的get函数去执行添加订阅者操作。那么，怎样去触发get函数？很简单，只需获取对应的属性值就可以触发了，因为我们已经用Object.defineProperty监听了所有属性。vue在这里做了个技巧处理，就是咋我们添加订阅者的时候，做一个判断，判断是否是事先缓存好的Dep.target，在订阅者添加成功后，把target重置null即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订阅者</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; vm vue对象</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; exp 属性值</span></span><br><span class="line"><span class="comment"> * @param &#123;Function&#125; cb 回调函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Watcher</span>(<span class="params">vm, exp, cb</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.vm = vm;</span><br><span class="line">    <span class="keyword">this</span>.exp = exp;</span><br><span class="line">    <span class="keyword">this</span>.cb = cb;</span><br><span class="line">    <span class="comment">// 将自己添加到订阅器</span></span><br><span class="line">    <span class="keyword">this</span>.value = <span class="keyword">this</span>.get();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Watcher.prototype = &#123;</span><br><span class="line">    update: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.run();</span><br><span class="line">    &#125;,</span><br><span class="line">    run: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> value = <span class="keyword">this</span>.vm.data[<span class="keyword">this</span>.exp];</span><br><span class="line">        <span class="keyword">var</span> oldVal = <span class="keyword">this</span>.value;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (value !== oldVal) &#123;</span><br><span class="line">            <span class="keyword">this</span>.value = value;</span><br><span class="line">            <span class="keyword">this</span>.cb.call(<span class="keyword">this</span>.vm, value, oldVal);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 缓存自己 做个标记</span></span><br><span class="line">        Dep.target = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 强制执行监听器里的get函数</span></span><br><span class="line">        <span class="comment">// this.vm.data[this.exp] 调用getter，添加一个订阅者sub，存入到全局变量subs</span></span><br><span class="line">        <span class="keyword">var</span> value = <span class="keyword">this</span>.vm.data[<span class="keyword">this</span>.exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 释放自己</span></span><br><span class="line">        Dep.target = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> $name = <span class="built_in">document</span>.querySelector(<span class="string">"#name"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给name属性添加一个订阅者到订阅器中，当属性发生变化后，触发回调</span></span><br><span class="line">    <span class="keyword">var</span> w = <span class="keyword">new</span> Watcher(<span class="keyword">this</span>, <span class="string">"name"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        $name.innerHTML = val;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里，其实已经实现了我们的双向数据绑定：能够根据初始数据初始化页面特定元素，同时当数据改变也能更新视图。</p><h3 id="5、实现Compile"><a href="#5、实现Compile" class="headerlink" title="5、实现Compile"></a>5、实现Compile</h3><p>步骤4整个过程都能有去解析DOM节点，而是直接固定节点进行替换。接下来我们就来实现一个解析器，完成一些解析和绑定工作。</p><ol><li>获取页面的DOM节点，遍历存入到文档碎片对象中；</li><li>解析出文本节点，匹配&#123;&#123;&#125;&#125;（暂时只做”&#123;&#123;&#125;&#125;”的解析），用初始化数据替换，并添加相应订阅者；</li><li>分离出节点的指令v-on、v-bind和v-model，绑定相应的事件和函数；</li></ol><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/BD96748FED95467A8B44B1AFFB499D44/6764" alt="image"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编译器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; el 根元素</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; vm vue对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Compile</span>(<span class="params">el, vm</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.vm = vm;</span><br><span class="line">    <span class="keyword">this</span>.el = <span class="built_in">document</span>.querySelector(el);</span><br><span class="line">    <span class="keyword">this</span>.fragment = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>.init();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Compile.prototype = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.el) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"this.el:"</span>, <span class="keyword">this</span>.el);</span><br><span class="line">            <span class="comment">// 移除页面元素生成文档碎片</span></span><br><span class="line">            <span class="keyword">this</span>.fragment = <span class="keyword">this</span>.nodeToFragment(<span class="keyword">this</span>.el);</span><br><span class="line">            <span class="comment">// 编译文档碎片</span></span><br><span class="line">            <span class="keyword">this</span>.compileElement(<span class="keyword">this</span>.fragment);</span><br><span class="line">            <span class="keyword">this</span>.el.appendChild(<span class="keyword">this</span>.fragment);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"DOM Selector is not exist"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 页面DOM节点转化成文档碎片</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    nodeToFragment: <span class="function"><span class="keyword">function</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> fragment = <span class="built_in">document</span>.createDocumentFragment();</span><br><span class="line">        <span class="keyword">var</span> child = el.firstChild;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 此处添加打印，出来的不是页面中原始的DOM，而是编译后的？</span></span><br><span class="line">        <span class="comment">// NodeList是引用关系，在编译后相应的值被替换了，这里打印出来的NodeList是后来被引用更新了的</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"el:"</span>, el);</span><br><span class="line">        <span class="comment">// console.log("el.firstChild:", el.firstChild.nodeValue);</span></span><br><span class="line">        <span class="keyword">while</span> (child) &#123;</span><br><span class="line">            <span class="comment">// append后，原el上的子节点被删除了，挂载在文档碎片上</span></span><br><span class="line">            fragment.appendChild(child);</span><br><span class="line">            child = el.firstChild;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译文档碎片，遍历到当前是文本节点则去编译文本节点，如果当前是元素节点，并且存在子节点，则继续递归遍历</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileElement: <span class="function"><span class="keyword">function</span>(<span class="params">fragment</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> childNodes = fragment.childNodes;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        [].slice.call(childNodes).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// var reg = /\&#123;\&#123;\s*(.+)\s*\&#125;\&#125;/g;</span></span><br><span class="line">            <span class="keyword">var</span> reg = <span class="regexp">/\&#123;\&#123;\s*((?:.|\n)+?)\s*\&#125;\&#125;/g</span>;</span><br><span class="line">            <span class="keyword">var</span> text = node.textContent;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (self.isElementNode(node)) &#123;</span><br><span class="line">                self.compileAttr(node);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (self.isTextNode(node) &amp;&amp; reg.test(text)) &#123;</span><br><span class="line">                reg.lastIndex = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">/* var match;</span></span><br><span class="line"><span class="comment">                while(match = reg.exec(text)) &#123;</span></span><br><span class="line"><span class="comment">                    self.compileText(node, match[1]);</span></span><br><span class="line"><span class="comment">                &#125; */</span></span><br><span class="line"></span><br><span class="line">                self.compileText(node, reg.exec(text)[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (node.childNodes &amp;&amp; node.childNodes.length) &#123;</span><br><span class="line">                self.compileElement(node);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileAttr: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> nodeAttrs = node.attributes;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Array</span>.prototype.forEach.call(nodeAttrs, <span class="function"><span class="keyword">function</span>(<span class="params">attr</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> attrName = attr.name;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 只对vue本身指令进行操作</span></span><br><span class="line">            <span class="keyword">if</span> (self.isDirective(attrName)) &#123;</span><br><span class="line">                <span class="keyword">var</span> exp = attr.value;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// v-on指令</span></span><br><span class="line">                <span class="keyword">if</span> (self.isOnDirective(attrName)) &#123;</span><br><span class="line">                    self.compileOn(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// v-bind指令</span></span><br><span class="line">                <span class="keyword">if</span>(self.isBindDirective(attrName)) &#123;</span><br><span class="line">                    self.compileBind(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// v-model</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (self.isModelDirective(attrName)) &#123;</span><br><span class="line">                    self.compileModel(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                node.removeAttribute(attrName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译文档碎片节点文本，即对标记替换</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileText: <span class="function"><span class="keyword">function</span>(<span class="params">node, exp</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> exps = exp.split(<span class="string">"."</span>);</span><br><span class="line">        <span class="keyword">var</span> initText = <span class="keyword">this</span>.vm.data[exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化视图</span></span><br><span class="line">        <span class="keyword">this</span>.updateText(node, initText);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加一个订阅者到订阅器</span></span><br><span class="line">        <span class="keyword">var</span> w = <span class="keyword">new</span> Watcher(<span class="keyword">this</span>.vm, exp, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">            self.updateText(node, val);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-on指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileOn: <span class="function"><span class="keyword">function</span>(<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// @xxx v-on:xxx</span></span><br><span class="line">        <span class="keyword">var</span> onRE = <span class="regexp">/^@|^v-on:/</span>;</span><br><span class="line">        <span class="keyword">var</span> eventType = attrName.replace(onRE, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> cb = vm.methods[exp];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (eventType &amp;&amp; cb) &#123;</span><br><span class="line">            node.addEventListener(eventType, cb.bind(vm), <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-bind指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileBind: <span class="function"><span class="keyword">function</span> (<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// :xxx v-bind:xxx</span></span><br><span class="line">        <span class="keyword">var</span> bindRE = <span class="regexp">/^:|^v-bind:/</span>;</span><br><span class="line">        <span class="keyword">var</span> attr = attrName.replace(bindRE, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> val = vm.data[exp];</span><br><span class="line"></span><br><span class="line">        node.setAttribute(attr, val);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-model指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileModel: <span class="function"><span class="keyword">function</span>(<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> val = <span class="keyword">this</span>.vm.data[exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化视图</span></span><br><span class="line">        <span class="keyword">this</span>.modelUpdater(node, val);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加一个订阅者到订阅器</span></span><br><span class="line">        <span class="keyword">new</span> Watcher(<span class="keyword">this</span>.vm, exp, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            self.modelUpdater(node, value);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绑定input事件</span></span><br><span class="line">        node.addEventListener(<span class="string">"input"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> newVal = e.target.value;</span><br><span class="line">            <span class="keyword">if</span> (val === newVal) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            self.vm.data[exp] = newVal;</span><br><span class="line">            <span class="comment">// val = newVal;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新文档碎片相应的文本节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    updateText: <span class="function"><span class="keyword">function</span>(<span class="params">node, val</span>) </span>&#123;</span><br><span class="line">        node.textContent = <span class="keyword">typeof</span> val === <span class="string">"undefined"</span> ? <span class="string">""</span> : val;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * model更新节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    modelUpdater: <span class="function"><span class="keyword">function</span>(<span class="params">node, val, oldVal</span>) </span>&#123;</span><br><span class="line">        node.value = <span class="keyword">typeof</span> val == <span class="string">"undefined"</span> ? <span class="string">""</span> : val;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是vue指令，包括v-xxx:,:xxx,@xxx</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dirRE = <span class="regexp">/^v-|^@|^:/</span>;</span><br><span class="line">        <span class="keyword">return</span> dirRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-on指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isOnDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> onRE = <span class="regexp">/^v-on:|^@/</span>;</span><br><span class="line">        <span class="keyword">return</span> onRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-bind指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isBindDirective: <span class="function"><span class="keyword">function</span> (<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> bindRE = <span class="regexp">/^v-bind:|^:/</span>;</span><br><span class="line">        <span class="keyword">return</span> bindRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-model指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isModelDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> mdRE = <span class="regexp">/^v-model/</span>;</span><br><span class="line">        <span class="keyword">return</span> mdRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断元素节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isElementNode: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> node.nodeType == <span class="number">1</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文本节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isTextNode: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> node.nodeType == <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.methods = options.methods;</span><br><span class="line"></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Compile(options.el, <span class="keyword">this</span>.vm);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们就可以调用指令v-bind、v-on和v-model。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="undefined">            color: red;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-bind:class</span>=<span class="string">"myColor"</span>&gt;</span>&amp;#123;&amp;#123; name &amp;#125;&amp;#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">v-model</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"clickOk"</span>&gt;</span>Ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> myvm = <span class="keyword">new</span> MyVue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">"#demo"</span>,</span></span><br><span class="line"><span class="undefined">    data: &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">"hello word"</span>,</span></span><br><span class="line"><span class="javascript">        myColor: <span class="string">"red"</span></span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="javascript">        clickOk: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">"I am OK"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    myvm.data.name = <span class="string">"wawawa...vue was born"</span>;</span></span><br><span class="line"><span class="undefined">&#125;, 2000);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/0442953EE78A48C3B26FFE48B1731582/6629" alt="image"></p><h3 id="5、其他"><a href="#5、其他" class="headerlink" title="5、其他"></a>5、其他</h3><h4 id="5-1-proxy代理data"><a href="#5-1-proxy代理data" class="headerlink" title="5.1 proxy代理data"></a>5.1 proxy代理data</h4><p>可能注意到了，我们不管是在赋值还是取值，都是在myvm.data.someAttr上操作的，而在vue上我们习惯直接myvm.someAttr这种形式。怎样实现呢？同样，我们可以用Object.defineProperty对data所有属性做一个代理，即访问vue实例属性时，代理到data上。很简单，实现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 将数据拓展到vue的根，方便读取和设置</span><br><span class="line"> */</span><br><span class="line">MyVue.prototype.proxy = function(key) &#123;</span><br><span class="line">    var self = this;</span><br><span class="line"></span><br><span class="line">    Object.defineProperty(this, key, &#123;</span><br><span class="line">        enumerable: true,</span><br><span class="line">        configurable: true,</span><br><span class="line">        get: function proxyGetter() &#123;</span><br><span class="line">            return self.data[key];</span><br><span class="line">        &#125;,</span><br><span class="line">        set: function proxySetter(newVal) &#123;</span><br><span class="line">            self.data[key] = newVal;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/71B50262A5944F928CDA8CFD8944A538/6670" alt="image"></p><h4 id="5-2-parsePath"><a href="#5-2-parsePath" class="headerlink" title="5.2 parsePath"></a>5.2 parsePath</h4><p>上面对于data的操作只是到对于简单的基本类型属性，对于对象属性的改变该怎么更新到位呢？其实，只要深度遍历对象属性路径，就可以找到要访问属性值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据对象属性路径，最终获取值</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; obj 对象</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; path 路径</span></span><br><span class="line"><span class="comment"> * return 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parsePath</span>(<span class="params">obj, path</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bailRE = <span class="regexp">/[^\w.$]/</span>;</span><br><span class="line">    <span class="keyword">if</span> (bailRE.test(path)) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> segments = path.split(<span class="string">'.'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; segments.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!obj) &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        obj = obj[segments[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用这个方法替换我们的所有取值操作<br>vm[exp] =&gt; parsePath(vm, exp)</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/BB5F59CFD0244D4991E13B5D35F88AF3/6709" alt="image"></p><h3 id="6、新增属性的双向数据绑定"><a href="#6、新增属性的双向数据绑定" class="headerlink" title="6、新增属性的双向数据绑定"></a>6、新增属性的双向数据绑定</h3><h4 id="6-1-给对象添加属性"><a href="#6-1-给对象添加属性" class="headerlink" title="6.1 给对象添加属性"></a>6.1 给对象添加属性</h4><p>Vue 不允许在已经创建的实例上动态添加新的根级响应式属性 (root-level reactive property)。然而它可以使用 Vue.set(object, key, value) 方法将响应属性添加到嵌套的对象上。<br>也就是我们需要在Vue原型上添加一个set方法去设置新添加的属性，新属性同样要进行监听和添加订阅者。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue的set方法，用于外部新增属性 Vue.$set(target, key, val)</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; target 数据</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; key 属性</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; val 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params">target, key, val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(target)) &#123;</span><br><span class="line">        target.length = <span class="built_in">Math</span>.max(target.length, key);</span><br><span class="line">        target.splice(key, <span class="number">1</span>, val);</span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (target.hasOwnProperty(key)) &#123;</span><br><span class="line">        target[key] = val;</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> ob = (target).$Observer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!ob) &#123;</span><br><span class="line">        target[key] = val;</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对新增属性定义监听</span></span><br><span class="line">    ob.defineReactive(target, key, val);</span><br><span class="line"></span><br><span class="line">    ob.dep.notify();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyVue.prototype.$set = set;</span><br></pre></td></tr></table></figure><h4 id="6-1-给数组对象添加属性"><a href="#6-1-给数组对象添加属性" class="headerlink" title="6.1 给数组对象添加属性"></a>6.1 给数组对象添加属性</h4><p>把数组看成一个特殊的对象，就很容易理解了，对于unshift、push和splice变异方法是添加了对象的属性的，需要对新加的属性进行监听和添加订阅者。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arrKeys = [<span class="string">"push"</span>, <span class="string">"pop"</span>, <span class="string">"shift"</span>, <span class="string">"unshift"</span>, <span class="string">"splice"</span>, <span class="string">"sort"</span>, <span class="string">"reverse"</span>];</span><br><span class="line"><span class="keyword">var</span> extendArr = [];</span><br><span class="line"></span><br><span class="line">arrKeys.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">    def(extendArr, key, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result,</span><br><span class="line">            arrProto = <span class="built_in">Array</span>.prototype,</span><br><span class="line">            ob = <span class="keyword">this</span>.$Observer,</span><br><span class="line">            arr = arrProto.slice.call(<span class="built_in">arguments</span>),</span><br><span class="line">            inserted,</span><br><span class="line">            index;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"push"</span>:</span><br><span class="line">                inserted = arr;</span><br><span class="line">                index = <span class="keyword">this</span>.length;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"unshift"</span>:</span><br><span class="line">                inserted = arr;</span><br><span class="line">                index = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"splice"</span>:</span><br><span class="line">                inserted = arr.slice(<span class="number">2</span>);</span><br><span class="line">                index = arr[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        result = arrProto[key].apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听新增数组对象属性</span></span><br><span class="line">        <span class="keyword">if</span> (inserted) &#123;</span><br><span class="line">            ob.observeArray(inserted);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ob.dep.notify();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arrayKeys = <span class="built_in">Object</span>.getOwnPropertyNames(extendArr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.dep = <span class="keyword">new</span> Dep();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data || <span class="keyword">typeof</span> data !== <span class="string">"object"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在每个object上添加一个observer</span></span><br><span class="line">    def(data, <span class="string">"$Observer"</span>, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 继承变异方法</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(data)) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把数组变异方法的处理，添加到原型链上</span></span><br><span class="line">        data.__proto__ = extendArr;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听数组对象属性</span></span><br><span class="line">        <span class="keyword">this</span>.observeArray(data);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">        <span class="keyword">this</span>.walk(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    observeArray: <span class="function"><span class="keyword">function</span>(<span class="params">items</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"items:"</span>, items);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, l = items.length; i &lt; l; i++) &#123;</span><br><span class="line">            observe(items[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue-cli中遇到的坑</title>
      <link href="/yelee/2017/09/02/vue-cli%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
      <url>/yelee/2017/09/02/vue-cli%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Vue-cli-脚手架"><a href="#Vue-cli-脚手架" class="headerlink" title="Vue-cli 脚手架"></a>Vue-cli 脚手架</h2><p>项目构建自动化，错误查起来越来越不知所措，坑很多，踩过后要记录，防止踩第二遍</p><h4 id="vue-单文件-import-css-文件，不加-会报错"><a href="#vue-单文件-import-css-文件，不加-会报错" class="headerlink" title="vue 单文件@import css 文件，不加~会报错"></a>vue 单文件@import css 文件，不加<code>~</code>会报错</h4><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">@import &apos;assets/css/variable&apos;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[HMR] bundle has 1 errors</span><br><span class="line">172:176 ./~/css-loader?&#123;&quot;minimize&quot;:false,&quot;sourceMap&quot;:false&#125;!./~/vue-loader/lib/style-compiler?&#123;&quot;vue&quot;:true,&quot;id&quot;:&quot;data-v-be4708e4&quot;,&quot;scoped&quot;:true,&quot;hasInlineConfig&quot;:false&#125;!./~/stylus-loader?&#123;&quot;sourceMap&quot;:false&#125;!./~/vue-loader/lib/selector.js?type=styles&amp;index=0!./src/components/views/programs/Programs.vue</span><br><span class="line">Module build failed: Error: D:\appSoft\wampserver\wamp64\www\iHomed_vue\src\components\views\programs\Programs.vue:200:9</span><br><span class="line">   196| &#125;</span><br><span class="line">   197| &lt;/script&gt;</span><br><span class="line">   198|</span><br><span class="line">   199| &lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">   200| @import &apos;assets/css/variable&apos;</span><br><span class="line">----------------^</span><br><span class="line">   201|</span><br></pre></td></tr></table></figure><p>正确写法<code>@import &#39;~assets/css/variable&#39;</code></p><h4 id="vue-cli-中-config-index-js-配置说明"><a href="#vue-cli-中-config-index-js-配置说明" class="headerlink" title="vue-cli 中 config/index.js 配置说明"></a>vue-cli 中 config/index.js 配置说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  build: &#123;</span><br><span class="line">    env: require(&apos;./prod.env&apos;), // 使用 config/prod.env.js 中定义的编译环境</span><br><span class="line">    index: path.resolve(__dirname, &apos;../dist/index.html&apos;), // 编译输入的 index.html 文件</span><br><span class="line">    assetsRoot: path.resolve(__dirname, &apos;../dist&apos;), // 编译输出的静态资源路径</span><br><span class="line">    assetsSubDirectory: &apos;static&apos;, // 编译输出的二级目录</span><br><span class="line">    assetsPublicPath: &apos;/&apos;, // 编译发布的根目录，可配置为资源服务器域名或 CDN 域名</span><br><span class="line">    productionSourceMap: true, // 是否开启 cssSourceMap</span><br><span class="line">    // Gzip off by default as many popular static hosts such as</span><br><span class="line">    // Surge or Netlify already gzip all static assets for you.</span><br><span class="line">    // Before setting to `true`, make sure to:</span><br><span class="line">    // npm install --save-dev compression-webpack-plugin</span><br><span class="line">    productionGzip: false, // 是否开启 gzip</span><br><span class="line">    productionGzipExtensions: [&apos;js&apos;, &apos;css&apos;], // 需要使用 gzip 压缩的文件扩展名</span><br><span class="line">    // Run the build command with an extra argument to</span><br><span class="line">    // View the bundle analyzer report after build finishes:</span><br><span class="line">    // `npm run build --report`</span><br><span class="line">    // Set to `true` or `false` to always turn it on or off</span><br><span class="line">    bundleAnalyzerReport: process.env.npm_config_report</span><br><span class="line">  &#125;,</span><br><span class="line">  dev: &#123; // dev 环境</span><br><span class="line">    env: require(&apos;./dev.env&apos;), // 使用 config/dev.env.js 中定义的编译环境</span><br><span class="line">    port: 8084, // 运行测试页面的端口</span><br><span class="line">    autoOpenBrowser: true, // 自动在浏览器中打开</span><br><span class="line">    assetsSubDirectory: &apos;static&apos;, // 编译输出的二级目录</span><br><span class="line">    assetsPublicPath: &apos;/&apos;, // 编译发布的根目录，可配置为资源服务器域名或 CDN 域名</span><br><span class="line">    proxyTable: &#123;&#125;, // 需要 proxyTable 代理的接口（可跨域）</span><br><span class="line">    // CSS Sourcemaps off by default because relative paths are &quot;buggy&quot;</span><br><span class="line">    // with this option, according to the CSS-Loader README</span><br><span class="line">    // (https://github.com/webpack/css-loader#sourcemaps)</span><br><span class="line">    // In our experience, they generally work as expected,</span><br><span class="line">    // just be aware of this issue when enabling this option.</span><br><span class="line">    cssSourceMap: false  // 是否开启 cssSourceMap</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>曾经不易理解的两点<code>assetsSubDirectory</code>和<code>assetsPublicPath</code></p><ol><li><p>assetsSubDirectory<br>被 webpack 编译处理过的资源文件都会在这个 build.assetsRoot 目录下，如果 assetsRoot 值是<code>&quot;/web/app&quot;</code>，assetsSubDirectory 值为<code>&quot;static&quot;</code>，那么，webpack 将把所有资源编译到<code>web/app/static</code>目录下</p></li><li><p>assetsPublicPath<br>这个是通过 http 服务器运行的 url 路径，大多数情况下，这个是根目录（/）。如果你的后台框架对静态资源 url 前缀有要求，你仅需改变这个参数。比如不用本地的，而用线上的 CDN。</p></li></ol><h4 id="父子组件嵌套，各个钩子函数触发顺序"><a href="#父子组件嵌套，各个钩子函数触发顺序" class="headerlink" title="父子组件嵌套，各个钩子函数触发顺序"></a>父子组件嵌套，各个钩子函数触发顺序</h4><p>偶然看到这个问题：vue 中父子组件各个钩子函数触发顺序是怎样的？一时还真背问到了，在项目中添加打印才发现是这样子的</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/E40E6B0ED1F5479F909A69469C83D99A/12039" alt=""></p><p>顺序是：先依次触发父级组件<code>beforeCreate</code>、<code>create</code>和<code>beforeMounte</code>，再依次触发子级组件<code>beforeCreate</code>、<code>create</code>、<code>beforeMounte</code>和<code>mounted</code>，最后父级组件<code>mounted</code></p><h4 id="父子组件之间通信，兄弟组件之间通信"><a href="#父子组件之间通信，兄弟组件之间通信" class="headerlink" title="父子组件之间通信，兄弟组件之间通信"></a>父子组件之间通信，兄弟组件之间通信</h4><p>这个问题基本清晰，在这归纳一下</p><h5 id="1-父组件数据传给子组件"><a href="#1-父组件数据传给子组件" class="headerlink" title="1. 父组件数据传给子组件"></a>1. 父组件数据传给子组件</h5><p>通过<code>props</code>属性传递</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent-component</span> <span class="attr">:parent-data</span>=<span class="string">"pdata"</span>&gt;</span><span class="tag">&lt;/<span class="name">parent-component</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    parentData: &#123;</span><br><span class="line">      type: <span class="built_in">String</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="string">''</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-子组件传数据给父组件"><a href="#2-子组件传数据给父组件" class="headerlink" title="2. 子组件传数据给父组件"></a>2. 子组件传数据给父组件</h5><p>使用<code>$emit</code>派发</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent-component</span> <span class="attr">:parent-data:sync</span>=<span class="string">"pdata"</span> @<span class="attr">handle-callback</span>=<span class="string">"handlerCallback"</span>&gt;</span><span class="tag">&lt;/<span class="name">parent-component</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handlerCallback(params) &#123;</span><br><span class="line">      <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'handleCallback'</span>, params)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'update:parentData'</span>, someData)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-兄弟组件数据传递"><a href="#3-兄弟组件数据传递" class="headerlink" title="3. 兄弟组件数据传递"></a>3. 兄弟组件数据传递</h5><ol><li>对于大型项目，用 vue 官方推荐的 vuex</li><li><p>EventBus</p><ul><li><p>提取 bus.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">const</span> bus = <span class="keyword">new</span> Vue()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> bus</span><br></pre></td></tr></table></figure></li><li><p>兄弟组件 1 发送数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">'./bus'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'busEvent1'</span>, someData)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>兄弟组件 2 接收数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">'./bus'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$on(<span class="string">'busEvent1'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(data)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>子组件 A <code>$emit</code>派发某个事件，再由父组件<code>@handle-callback=&quot;handlerCallback&quot;</code>监听获取数据，然后，父组件<code>$refs</code>直接访问到子组件 B 的方法，从而间接实现从子组件 A 到子组件 B 的数据传递</p></li></ol><h4 id="props-在子组件中被重写报错"><a href="#props-在子组件中被重写报错" class="headerlink" title="props 在子组件中被重写报错"></a>props 在子组件中被重写报错</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue.esm.js?<span class="number">06e7</span>:<span class="number">591</span> [Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop<span class="string">'s value. Prop being mutated: "isShow"</span></span><br></pre></td></tr></table></figure><p><strong>解决方案</strong><br><code>props</code>传过来的参数通过<code>Vue.$emit</code>提交修改</p><h4 id="在props和data中使用this"><a href="#在props和data中使用this" class="headerlink" title="在props和data中使用this"></a>在<code>props</code>和<code>data</code>中使用<code>this</code></h4><p>在 Vue2.2.2 或更高版本才能这样使用，低于这个版本时，注入的值会在<code>props</code>和<code>data</code>初始化之后得到。</p><h4 id="对于高阶插件-组件库，解决组件与其子孙组件数据传输问题"><a href="#对于高阶插件-组件库，解决组件与其子孙组件数据传输问题" class="headerlink" title="对于高阶插件/组件库，解决组件与其子孙组件数据传输问题"></a>对于高阶插件/组件库，解决组件与其子孙组件数据传输问题</h4><ol><li><p>解决方案一：<code>$attrs</code>和<code>$listener</code></p><p>使用属性和方法不通过<code>props</code>传递，在子孙组件中直接用<code>$attrs</code>和<code>$listeners</code>接收。不过支持 v2.4.0+。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父级组件</span></span><br><span class="line">&lt;ul id=<span class="string">"app6"</span>&gt;</span><br><span class="line">&lt;item</span><br><span class="line"><span class="class"><span class="keyword">class</span></span>=<span class="string">"item"</span></span><br><span class="line">:model=<span class="string">"treeData"</span></span><br><span class="line">:count=<span class="string">"123"</span></span><br><span class="line">@abc=<span class="string">"function()&#123;&#125;"</span></span><br><span class="line">&gt;<span class="xml"><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 子孙组件</span></span><br><span class="line"><span class="regexp">inheritAttrs: false,</span></span><br><span class="line"><span class="regexp">created () &#123;</span></span><br><span class="line"><span class="regexp">    let attrs = this.$attrs;</span></span><br><span class="line"><span class="regexp">    console.log('mode:', attrs.mode);</span></span><br><span class="line"><span class="regexp">    console.log('count:', attrs.count);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    let listeners = this.$listeners;</span></span><br><span class="line"><span class="regexp">    console.log('bac:', listeners.abc);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>解决方案二：<code>provide/inject</code></p><p>父级组件传入<code>provide</code>数据选项，子孙组件注入<code>inject</code>数据。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line">provide: &#123;</span><br><span class="line">  foo: <span class="string">'bar'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子孙组件</span></span><br><span class="line">inject: [<span class="string">'foo'</span>] <span class="comment">// or inject: &#123; name: 'foo', defult: '' &#125;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue-cli </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
