<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>前端</title>
      <link href="/2018/09/13/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"/>
      <url>/2018/09/13/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="security">  <div class="input-container">  <input type="password" class="form-control" id="pass" placeholder="请输入密码以访问" />    <label for="pass">请输入密码以访问</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      <categories>
          
          <category> 前端面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端面试 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>myblog</title>
      <link href="/2018/09/11/%E6%96%B0%E5%A2%9E%E5%8A%9F%E8%83%BD/"/>
      <url>/2018/09/11/%E6%96%B0%E5%A2%9E%E5%8A%9F%E8%83%BD/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><h3 id="新增-live2d-看板娘功能-新增网站-favicon"><a href="#新增-live2d-看板娘功能-新增网站-favicon" class="headerlink" title="新增 live2d 看板娘功能,新增网站 favicon"></a>新增 live2d 看板娘功能,新增网站 favicon</h3><a id="more"></a><h1 id="动漫人物"><a href="#动漫人物" class="headerlink" title="动漫人物"></a>动漫人物</h1><h1 id="live2d"><a href="#live2d" class="headerlink" title="live2d:"></a>live2d:</h1><h1 id="enable-true"><a href="#enable-true" class="headerlink" title="enable: true"></a>enable: true</h1><h1 id="scriptFrom-local"><a href="#scriptFrom-local" class="headerlink" title="scriptFrom: local"></a>scriptFrom: local</h1><h1 id="pluginRootPath-live2dw"><a href="#pluginRootPath-live2dw" class="headerlink" title="pluginRootPath: live2dw/"></a>pluginRootPath: live2dw/</h1><h1 id="pluginJsPath-lib"><a href="#pluginJsPath-lib" class="headerlink" title="pluginJsPath: lib/"></a>pluginJsPath: lib/</h1><h1 id="pluginModelPath-assets"><a href="#pluginModelPath-assets" class="headerlink" title="pluginModelPath: assets/"></a>pluginModelPath: assets/</h1><h1 id="tagMode-false"><a href="#tagMode-false" class="headerlink" title="tagMode: false"></a>tagMode: false</h1><h1 id="debug-false"><a href="#debug-false" class="headerlink" title="debug: false"></a>debug: false</h1><h1 id="model"><a href="#model" class="headerlink" title="model:"></a>model:</h1><h1 id="use-live2d-widget-model-hibiki"><a href="#use-live2d-widget-model-hibiki" class="headerlink" title="use: live2d-widget-model-hibiki"></a>use: live2d-widget-model-hibiki</h1><h1 id="display"><a href="#display" class="headerlink" title="display:"></a>display:</h1><h1 id="position-right"><a href="#position-right" class="headerlink" title="position: right"></a>position: right</h1><h1 id="width-150"><a href="#width-150" class="headerlink" title="width: 150"></a>width: 150</h1><h1 id="height-300"><a href="#height-300" class="headerlink" title="height: 300"></a>height: 300</h1><h1 id="mobile"><a href="#mobile" class="headerlink" title="mobile:"></a>mobile:</h1><h1 id="show-true"><a href="#show-true" class="headerlink" title="show: true"></a>show: true</h1><h1 id="Live2D"><a href="#Live2D" class="headerlink" title="Live2D"></a>Live2D</h1><h2 id="https-github-com-xiazeyu-live2d-widget-js"><a href="#https-github-com-xiazeyu-live2d-widget-js" class="headerlink" title="https://github.com/xiazeyu/live2d-widget.js"></a><a href="https://github.com/xiazeyu/live2d-widget.js" target="_blank" rel="noopener">https://github.com/xiazeyu/live2d-widget.js</a></h2><h2 id="https-l2dwidget-js-org-docs-class-src-index-js-L2Dwidget-html-instance-method-init"><a href="#https-l2dwidget-js-org-docs-class-src-index-js-L2Dwidget-html-instance-method-init" class="headerlink" title="https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init"></a><a href="https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init" target="_blank" rel="noopener">https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init</a></h2><h1 id="live2d-1"><a href="#live2d-1" class="headerlink" title="live2d:"></a>live2d:</h1><h1 id="model-1"><a href="#model-1" class="headerlink" title="model:"></a>model:</h1><h1 id="scale-1"><a href="#scale-1" class="headerlink" title="scale: 1"></a>scale: 1</h1><h1 id="hHeadPos-0-5"><a href="#hHeadPos-0-5" class="headerlink" title="hHeadPos: 0.5"></a>hHeadPos: 0.5</h1><h1 id="vHeadPos-0-618"><a href="#vHeadPos-0-618" class="headerlink" title="vHeadPos: 0.618"></a>vHeadPos: 0.618</h1><h1 id="use-live2d-widget-model-koharu"><a href="#use-live2d-widget-model-koharu" class="headerlink" title="use: live2d-widget-model-koharu"></a>use: live2d-widget-model-koharu</h1><h1 id="display-1"><a href="#display-1" class="headerlink" title="display:"></a>display:</h1><h1 id="superSample-2"><a href="#superSample-2" class="headerlink" title="superSample: 2"></a>superSample: 2</h1><h1 id="width-120"><a href="#width-120" class="headerlink" title="width: 120"></a>width: 120</h1><h1 id="height-200"><a href="#height-200" class="headerlink" title="height: 200"></a>height: 200</h1><h1 id="position-right-模型在网页显示位置"><a href="#position-right-模型在网页显示位置" class="headerlink" title="position: right // 模型在网页显示位置"></a>position: right // 模型在网页显示位置</h1><h1 id="hOffset-20"><a href="#hOffset-20" class="headerlink" title="hOffset: 20"></a>hOffset: 20</h1><h1 id="vOffset-150"><a href="#vOffset-150" class="headerlink" title="vOffset: 150"></a>vOffset: 150</h1><h1 id="mobile-1"><a href="#mobile-1" class="headerlink" title="mobile:"></a>mobile:</h1><h1 id="show-false-移动设备是否显示"><a href="#show-false-移动设备是否显示" class="headerlink" title="show: false // 移动设备是否显示"></a>show: false // 移动设备是否显示</h1><h1 id="scale-0-5"><a href="#scale-0-5" class="headerlink" title="scale: 0.5"></a>scale: 0.5</h1><h1 id="react"><a href="#react" class="headerlink" title="react:"></a>react:</h1><h1 id="opacityDefault-0-8"><a href="#opacityDefault-0-8" class="headerlink" title="opacityDefault: 0.8"></a>opacityDefault: 0.8</h1><h1 id="opacityOnHover-0-7"><a href="#opacityOnHover-0-7" class="headerlink" title="opacityOnHover: 0.7"></a>opacityOnHover: 0.7</h1>]]></content>
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 新增功能 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/09/10/hello-world/"/>
      <url>/2018/09/10/hello-world/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="security">  <div class="input-container">  <input type="password" class="form-control" id="pass" placeholder="请输入密码以访问" />    <label for="pass">请输入密码以访问</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
    </entry>
    
    <entry>
      <title>ES6中简约强大数组操作组合</title>
      <link href="/2018/09/07/ES6%E4%B8%AD%E7%AE%80%E7%BA%A6%E5%BC%BA%E5%A4%A7%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%BB%84%E5%90%88/"/>
      <url>/2018/09/07/ES6%E4%B8%AD%E7%AE%80%E7%BA%A6%E5%BC%BA%E5%A4%A7%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%BB%84%E5%90%88/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ES6-数组新增方法"><a href="#ES6-数组新增方法" class="headerlink" title="ES6 数组新增方法"></a>ES6 数组新增方法</h2><h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h3><p><code>array.reduce(callback[, initialValue])</code></p><a id="more"></a><p>数组求和</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br><span class="line">numbers.reduce(<span class="function">(<span class="params">prev, cur, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'prev: '</span> + prev + <span class="string">'; '</span> + <span class="string">'cur: '</span> + cur + <span class="string">';'</span>)</span><br><span class="line">  <span class="keyword">return</span> prev + cur</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">prev: <span class="number">10</span></span><br><span class="line">cur: <span class="number">20</span></span><br><span class="line">prev: <span class="number">30</span></span><br><span class="line">cur: <span class="number">30</span></span><br><span class="line">prev: <span class="number">60</span></span><br><span class="line">cur: <span class="number">40</span></span><br></pre></td></tr></table></figure><p>这第二个参数就是设置 prev 的初始类型和初始值，比如为 0，就表示 prev 的初始值为 number 类型，值为 0，因此，reduce 的最终结果也会是 number 类型。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br><span class="line">numbers.reduce(<span class="function">(<span class="params">prev, cur, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'prev: '</span> + prev + <span class="string">'; '</span> + <span class="string">'cur: '</span> + cur + <span class="string">';'</span>)</span><br><span class="line">  <span class="keyword">return</span> prev + cur</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">prev: <span class="number">0</span></span><br><span class="line">cur: <span class="number">10</span></span><br><span class="line">prev: <span class="number">10</span></span><br><span class="line">cur: <span class="number">20</span></span><br><span class="line">prev: <span class="number">30</span></span><br><span class="line">cur: <span class="number">30</span></span><br><span class="line">prev: <span class="number">60</span></span><br><span class="line">cur: <span class="number">40</span></span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.zhangxinxu.com/wordpress/2013/04/es5%E6%96%B0%E5%A2%9E%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/" target="_blank" rel="noopener">https://www.zhangxinxu.com/wordpress/2013/04/es5%E6%96%B0%E5%A2%9E%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/</a></p><p><a href="https://segmentfault.com/a/1190000005921341" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005921341</a></p><p><a href="https://segmentfault.com/a/1190000013972464" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013972464</a></p><p><a href="https://segmentfault.com/a/1190000013121115" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013121115</a></p>]]></content>
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>干掉状态从session到token</title>
      <link href="/2018/09/07/%E5%B9%B2%E6%8E%89%E7%8A%B6%E6%80%81%E4%BB%8Esession%E5%88%B0token/"/>
      <url>/2018/09/07/%E5%B9%B2%E6%8E%89%E7%8A%B6%E6%80%81%E4%BB%8Esession%E5%88%B0token/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="美好的旧时光"><a href="#美好的旧时光" class="headerlink" title="美好的旧时光"></a>美好的旧时光</h2><p>我经常怀念三十年前那美好的旧时光， 工作很轻松， 生活很悠闲。</p><p>上班的时候偶尔有些 HTTP 的请求发到我这里， 我简单的看一下， 取出相对应的 html 文档，图片，发回去就可以了， 然后就可以继续喝茶聊天。</p><a id="more"></a><p>我的创造者们对我很好， 他们制定的一个简单 HTTP 协议， 就是请求加响应， 尤其是我不用记住是谁刚刚发了 HTTP 请求， 每个请求对我来说都是全新的！</p><p>邮件服务器很羡慕我， 他说：老弟，你的生活太惬意了， 哪像我， 每次有人从客户端访问邮箱， 我都得专门给他建立一个会话， 来处理他发的消息， 你倒好， 完全不用管理会话。</p><p>这是由应用的特性决定的， 如果邮件服务器不管理会话， 那多个人之间的邮件消息就会完全混到一起了， 乱作一团了。</p><p>而 30 年前的 Web 基本上就是文档的浏览而已， 既然是浏览，我作为一个服务器， 为什么要记住谁在一段时间里都浏览了什么文档呢？</p><p>2</p><h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><p>但是好日子没持续多久， 很快大家就不满足于静态的 Html 文档了， 交互式的 Web 应用开始兴起， 尤其是论坛， 在线购物等网站。</p><p>我马上就遇到了和邮件服务器一样的问题， 那就是必须管理会话，必须记住哪些人登录系统， 哪些人往自己的购物车中放了商品， 也就是说我必须把每个人区分开。</p><p>这对我来说是个不小的挑战， 由于 HTTP 协议的无状态特性， 我必须加点小手段，才能完成会话管理。</p><p>我想出的办法就是给大家发一个会话标识(session id), 说白了就是一个随机的字符串，每个人收到的都不一样， 每次大家向我发起 HTTP 请求的时候，把这个字符串给一并捎过来， 这样我就能区分开谁是谁了。</p><p>3</p><h2 id="沉重的负担"><a href="#沉重的负担" class="headerlink" title="沉重的负担"></a>沉重的负担</h2><p>大家都很高兴， 可是我就不爽了。</p><p>每个人只需要保存自己的 session id，而我需要保存所有人的 session id ！ 如果访问我的人多了， 就得由成千上万，甚至几十万个。</p><p>这对我来说是一个巨大的开销 ， 严重的限制了我的扩展能力， 比如说我用两个机器组成了一个集群， 小 F 通过机器 A 登录了系统， 那 session id 会保存在机器 A 上， 假设小 F 的下一次请求被转发到机器 B 怎么办？ 机器 B 可没有小 F 的 session id 啊。</p><p>有时候我会采用一点小伎俩： <strong>session sticky</strong> ， 就是让小 F 的请求一直粘连在机器 A 上， 但是这也不管用， 要是机器 A 挂掉了， 还得转到机器 B 去。</p><p>那我只好做 session 的复制了， 把 session id 在两个机器之间搬来搬去， 快累死了。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vNJe66yhKRkVOxqS9gxftlwCuh8yicUcPPFaMMLv0oia9Xzf5IutmIPwQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><blockquote><ul><li>后来有个叫 <strong>Memcached</strong> 的给我支了招： 把 session id 集中存储到一个地方， 所有的机器都来访问这个地方的数据， 这样一来，就不用复制了， 但是增加了单点失败的可能性， 要是那个负责 session 的机器挂了， 所有人都得重新登录一遍， 估计得被人骂死。</li></ul></blockquote><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vwDyicwnvVayaKBpxXY4W5mUgQDwHD7Iwu3yY2OhV4qXG49oMbIgQP0A/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>我也尝试把这个单点的机器也搞出集群，增加可靠性， 但不管如何， 这小小的 session 对我来说是一个沉重的负担。</p><p>4</p><h3 id="时间换空间"><a href="#时间换空间" class="headerlink" title="时间换空间"></a>时间换空间</h3><p>这几天的晚上我一直在思考， 我为什么要保存这可恶的 session 呢， 只让每个客户端去保存该多好？</p><p>可是如果我不保存这些 session id , 我怎么验证客户端发给我的 session id 的确是我生成的呢？ 如果我不去验证，我都不知道他们是不是合法登录的用户， 那些不怀好意的家伙们就可以伪造 session id , 为所欲为了。</p><p>嗯，对了，关键点就是验证 ！</p><blockquote><ul><li>比如说， 小 F 已经登录了系统， 我给他发一个 <strong>令牌(token)</strong>， 里边包含了小 F 的 user id， 下一次小 F 再次通过 Http 请求访问我的时候， 把这个 token 通过 Http header 带过来不就可以了。</li></ul></blockquote><p>不过这和 session id 没有本质区别啊， 任何人都可以可以伪造， 所以我得想点儿办法， 让别人伪造不了。</p><blockquote><ul><li><strong>那就对数据做一个签名吧， 比如说我用 HMAC-SHA256 算法，加上一个只有我才知道的密钥， 对数据做一个签名， 把这个签名和数据一起作为 token ， 由于密钥别人不知道， 就无法伪造 token 了。</strong></li></ul></blockquote><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vicfOmZHQhQ7e6Wjk7licKBMh38rPZfnEQxAibWXjY84P0icEVoFU51ibwiaQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>这个 token 我不保存， 当小 F 把这个 token 给我发过来的时候，我再用同样的 HMAC-SHA256 算法和同样的密钥，对数据再计算一次签名， 和 token 中的签名做个比较， 如果相同， 我就知道小 F 已经登录过了，并且可以直接取到小 F 的 user id , 如果不相同， 数据部分肯定被人篡改过， 我就告诉发送者： 对不起，没有认证。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vNJe66yhKRkVOxqS9gxftlwCuh8yicUcPPFaMMLv0oia9Xzf5IutmIPwQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>Token 中的数据是明文保存的（虽然我会用 Base64 做下编码， 但那不是加密）， 还是可以被别人看到的， 所以我不能在其中保存像密码这样的敏感信息。</p><p>当然， 如果一个人的 token 被别人偷走了， 那我也没办法， 我也会认为小偷就是合法用户， 这其实和一个人的 session id 被别人偷走是一样的。</p><blockquote><ul><li>这样一来， 我就不保存 session id 了， <strong>我只是生成 token , 然后验证 token ， 我用我的 CPU 计算时间获取了我的 session 存储空间 ！</strong></li></ul></blockquote><p>解除了 session id 这个负担， 可以说是无事一身轻， 我的机器集群现在可以轻松地做水平扩展， 用户访问量增大， 直接加机器就行。 这种无状态的感觉实在是太好了！</p><p>（完）</p>]]></content>
      
      <categories>
          
          <category> 状态保持 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>element-ui更换主题和按需引入组件</title>
      <link href="/2018/09/04/element-ui%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5%E7%BB%84%E4%BB%B6/"/>
      <url>/2018/09/04/element-ui%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5%E7%BB%84%E4%BB%B6/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="element-ui-使用初体验"><a href="#element-ui-使用初体验" class="headerlink" title="element-ui 使用初体验"></a>element-ui 使用初体验</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>手上有些项目用的<code>element-ui</code>，刚好有空琢磨一下怎么减小打包文件大小和打包速度方面，为了演示实验，用 vue-cli 生成初始项目，在这仅对 element-ui 主题和组件方面来优化。</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack vuecli</span><br></pre></td></tr></table></figure><h3 id="完整引入"><a href="#完整引入" class="headerlink" title="完整引入"></a>完整引入</h3><p>完整地将 ui 和样式引入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span></span><br></pre></td></tr></table></figure><p>在页面简单使用三个组件，看看效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"block"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"demonstration"</span>&gt;</span>区分颜色<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-rate</span> <span class="attr">v-model</span>=<span class="string">"value1"</span> <span class="attr">:colors</span>=<span class="string">"['#99A9BF', '#F7BA2A', '#FF9900']"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-rate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">icon</span>=<span class="string">"el-icon-search"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"success"</span> <span class="attr">icon</span>=<span class="string">"el-icon-check"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"info"</span> <span class="attr">icon</span>=<span class="string">"el-icon-message"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"warning"</span> <span class="attr">icon</span>=<span class="string">"el-icon-star-off"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"danger"</span> <span class="attr">icon</span>=<span class="string">"el-icon-delete"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/gb/element-ui更换主题和按需引入组件/0.bmp" alt=""></p><p>再看一下打包后的资源大小情况<code>npm run build --report</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: fa47514a97341329a7c0</span><br><span class="line">Version: webpack 3.11.0</span><br><span class="line">Time: 20363ms</span><br><span class="line">                                                  Asset       Size  Chunks                    Chunk Names</span><br><span class="line">                 static/fonts/element-icons.6f0a763.ttf      11 kB          [emitted]</span><br><span class="line">               static/js/vendor.5efcf828140d5dbedda9.js     714 kB       0  [emitted]  [big]  vendor</span><br><span class="line">                  static/js/app.a4a31db472f653b911e7.js      12 kB       1  [emitted]         app</span><br><span class="line">             static/js/manifest.2ae2e69a05c33dfc65f8.js  857 bytes       2  [emitted]         manifest</span><br><span class="line">    static/css/app.f24bb0ae3686720fe2e00c5a2024b8f1.css     185 kB       1  [emitted]         app</span><br><span class="line">static/css/app.f24bb0ae3686720fe2e00c5a2024b8f1.css.map     267 kB          [emitted]</span><br><span class="line">           static/js/vendor.5efcf828140d5dbedda9.js.map    2.73 MB       0  [emitted]         vendor</span><br><span class="line">              static/js/app.a4a31db472f653b911e7.js.map    22.8 kB       1  [emitted]         app</span><br><span class="line">         static/js/manifest.2ae2e69a05c33dfc65f8.js.map    4.97 kB       2  [emitted]         manifest</span><br><span class="line">                                             index.html  508 bytes          [emitted]</span><br></pre></td></tr></table></figure><p>发现打包后提取公共模块<code>static/js/vendor.js</code>有 714kb</p><p>再看一下各个模块占用情况：</p><p><img src="/gb/element-ui更换主题和按需引入组件/1.bmp" alt=""></p><p>发现<code>elment-ui.common.js</code>占用最大。所有模块资源总共有 708kb。怎么才能减小打包后的大小呢？很容易就会想到 ui 的引入和样式的引入中，实际我们只使用了三个组件，却整体都被打包了，在这里引入这三个组件即可。</p><h3 id="按需引入组件样式"><a href="#按需引入组件样式" class="headerlink" title="按需引入组件样式"></a>按需引入组件样式</h3><p>新建一个<code>element-variables.scss</code>文件（为什么是 SCSS 文件，后面自定义主题会用到）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/*icon字体路径变量*/</span><br><span class="line">$--font-path: &quot;~element-ui/lib/theme-chalk/fonts&quot;;</span><br><span class="line"></span><br><span class="line">/*按需引入用到的组件的scss文件和基础scss文件*/</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/base.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/rate.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/button.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/row.scss&quot;;</span><br></pre></td></tr></table></figure><h3 id="按需引入组件"><a href="#按需引入组件" class="headerlink" title="按需引入组件"></a>按需引入组件</h3><p>新建一个<code>elementConfig.js</code>文件，将项目用到的 element 组件引入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Rate, Row, Button &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  install(V) &#123;</span><br><span class="line">    V.use(Rate)</span><br><span class="line">    V.use(Button)</span><br><span class="line">    V.use(Row)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第一次优化后打包分析"><a href="#第一次优化后打包分析" class="headerlink" title="第一次优化后打包分析"></a>第一次优化后打包分析</h3><p>将以上<code>element-variables.scss</code>和<code>elementConfig.js</code>引入到<code>main.js</code>中。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'@/assets/js/elementConfig'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'@/assets/css/element-variables.scss'</span></span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI)</span><br></pre></td></tr></table></figure><p>貌似上面一切都很顺理成章，打包后大小会减小。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: <span class="number">3</span>ba9b74482f121efd3aa</span><br><span class="line">Version: webpack <span class="number">3.11</span><span class="number">.0</span></span><br><span class="line">Time: <span class="number">18854</span>ms</span><br><span class="line">                                                  Asset       Size  Chunks                    Chunk Names</span><br><span class="line">                 <span class="keyword">static</span>/fonts/element-icons<span class="number">.6</span>f0a763.ttf      <span class="number">11</span> kB          [emitted]</span><br><span class="line">               <span class="keyword">static</span>/js/vendor<span class="number">.11</span>c71f168a2d61b547a0.js     <span class="number">714</span> kB       <span class="number">0</span>  [emitted]  [big]  vendor</span><br><span class="line">                  <span class="keyword">static</span>/js/app.dbb5b49dad2d42b3598c.js    <span class="number">11.2</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line">             <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js  <span class="number">857</span> bytes       <span class="number">2</span>  [emitted]         manifest</span><br><span class="line">    <span class="keyword">static</span>/css/app.bf52525d6279e7fb87b4db770d119a8d.css    <span class="number">25.7</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line"><span class="keyword">static</span>/css/app.bf52525d6279e7fb87b4db770d119a8d.css.map      <span class="number">63</span> kB          [emitted]</span><br><span class="line">           <span class="keyword">static</span>/js/vendor<span class="number">.11</span>c71f168a2d61b547a0.js.map    <span class="number">2.73</span> MB       <span class="number">0</span>  [emitted]         vendor</span><br><span class="line">              <span class="keyword">static</span>/js/app.dbb5b49dad2d42b3598c.js.map      <span class="number">21</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line">         <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js.map    <span class="number">4.97</span> kB       <span class="number">2</span>  [emitted]         manifest</span><br><span class="line">                                             index.html  <span class="number">508</span> bytes          [emitted]</span><br></pre></td></tr></table></figure><p>结果可知，<code>static/js/vendor.js</code>还是 714kb！</p><p>再看各个模块占用情况：</p><p><img src="/gb/element-ui更换主题和按需引入组件/2.bmp" alt=""></p><p>WHAT?竟然模块都没什么变化，岂不是竹篮打水，事与愿违。</p><h3 id="再次打包优化尝试"><a href="#再次打包优化尝试" class="headerlink" title="再次打包优化尝试"></a>再次打包优化尝试</h3><p>后来查到有人同样遇到这个问题，提出一个<a href="https://github.com/ElemeFE/element/issues/6362#issuecomment-323517538" target="_blank" rel="noopener">issues#6362</a>，原来只引入需要的<code>element-ui</code>组件，<code>webpack</code>还是把整体的 ui 库和样式都打包了，需要一个<code>webpack</code>的<code>babel</code>插件<code>babel-plugin-component</code>，这样才能真正按需引入打包。这块其实被写到官方文档更换 <a href="http://element-cn.eleme.io/#/zh-CN/component/custom-theme" target="_blank" rel="noopener">自定义主题</a> 的配置了。</p><p>于是<code>npm i babel-pugin-componet -D</code>安装后，在增加<code>.babelrc</code>文件插件配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"presets"</span>: [</span><br><span class="line">    [<span class="string">"env"</span>, &#123;</span><br><span class="line">      <span class="string">"modules"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"targets"</span>: &#123;</span><br><span class="line">        <span class="string">"browsers"</span>: [<span class="string">"&gt; 1%"</span>, <span class="string">"last 2 versions"</span>, <span class="string">"not ie &lt;= 8"</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="string">"stage-2"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"plugins"</span>: [<span class="string">"transform-vue-jsx"</span>, <span class="string">"transform-runtime"</span>, [<span class="string">"component"</span>, &#123;</span><br><span class="line">    <span class="string">"libraryName"</span>: <span class="string">"element-ui"</span>,</span><br><span class="line">    <span class="string">"styleLibraryName"</span>: <span class="string">"theme-chalk"</span></span><br><span class="line">  &#125;]]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>页面运行正常，再次打包。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: <span class="number">9</span>cc71dead6d7646c9ed4</span><br><span class="line">Version: webpack <span class="number">3.11</span><span class="number">.0</span></span><br><span class="line">Time: <span class="number">9963</span>ms</span><br><span class="line">                                                  Asset       Size  Chunks             Chunk Names</span><br><span class="line">                 <span class="keyword">static</span>/fonts/element-icons<span class="number">.6</span>f0a763.ttf      <span class="number">11</span> kB          [emitted]</span><br><span class="line">                  <span class="keyword">static</span>/js/app<span class="number">.77</span>c0883f4f0fc0bf5cbc.js    <span class="number">11.4</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line">               <span class="keyword">static</span>/js/vendor<span class="number">.942130</span>fd13274b901889.js     <span class="number">126</span> kB       <span class="number">1</span>  [emitted]  vendor</span><br><span class="line">             <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js  <span class="number">857</span> bytes       <span class="number">2</span>  [emitted]  manifest</span><br><span class="line">    <span class="keyword">static</span>/css/app.b140020e5dbee406ae70780b43ba7ddc.css    <span class="number">27.8</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line"><span class="keyword">static</span>/css/app.b140020e5dbee406ae70780b43ba7ddc.css.map    <span class="number">91.4</span> kB          [emitted]</span><br><span class="line">              <span class="keyword">static</span>/js/app<span class="number">.77</span>c0883f4f0fc0bf5cbc.js.map    <span class="number">21.1</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line">           <span class="keyword">static</span>/js/vendor<span class="number">.942130</span>fd13274b901889.js.map     <span class="number">613</span> kB       <span class="number">1</span>  [emitted]  vendor</span><br><span class="line">         <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js.map    <span class="number">4.97</span> kB       <span class="number">2</span>  [emitted]  manifest</span><br><span class="line">                                             index.html  <span class="number">508</span> bytes          [emitted]</span><br></pre></td></tr></table></figure><p><code>static/js/vendor.js</code>确实变小了，126kB。再来看各个模块分析图。</p><p><img src="/gb/element-ui更换主题和按需引入组件/3.bmp" alt=""></p><p>模块总共 135.03KB，少了 5 倍！</p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p><code>element-ui</code>的<code>theme-chalk</code>使用<code>SCSS</code>编写，如果在自己的项目中也是用<code>SCSS</code>，那么可以直接在项目中改变样式变量，因此可以在前面新建的<code>element-variables.scss</code>文件用新的主题颜色变量覆盖即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/*主题颜色变量*/</span><br><span class="line">$--color-primary: #f0f;</span><br><span class="line"></span><br><span class="line">/*icon字体路径变量*/</span><br><span class="line">$--font-path: &quot;~element-ui/lib/theme-chalk/fonts&quot;;</span><br></pre></td></tr></table></figure><p>可能你已经注意到了，这里没有分别引入用到的组件样式了，是因为<code>babel-plugin-component</code>帮我们按需引入了对应的样式。</p><p>现在我们的主题就变成了</p><p><img src="/gb/element-ui更换主题和按需引入组件/4.bmp" alt=""></p><p>如果你没有用到<code>SCSS</code>，可以用<code>element-theme</code>主题编译插件，生成自定义主题文件引入。</p><p>完~ps：个人见解有限，欢迎指正。</p>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> element-ui </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端必备vscode插件</title>
      <link href="/2018/09/03/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87vscode%E6%8F%92%E4%BB%B6/"/>
      <url>/2018/09/03/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87vscode%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这篇文章只要让你做一些基础的配置，把 vscode 变得更加顺手；<br>插件的需求不是一成不变，有些插件我已经移除了。。在最新的 VSCODE 1.9.1 中，<br>部分以前用插件实现的功能已经集成了，那就没有必要存在了。这里就不做推荐了复制代码</p><a id="more"></a><h1 id="必备插件"><a href="#必备插件" class="headerlink" title="必备插件"></a>必备插件</h1><hr><h2 id="功能性"><a href="#功能性" class="headerlink" title="功能性"></a>功能性</h2><ol><li>Auto Close Tag : 匹配标签，关闭对应的标签。很实用【HTML/XML】 Auto</li><li>Rename Tag : sublime 和 webstorm 也有这个内置功能，改变标签的时候同时改动开闭合标签；【HTML/XML】</li><li>beautify : 良好的拓展性，可以格式化 JSON|JS|HTML|CSS|SCSS,比内置格式化好用</li><li>Code Runner : 代码编译运行看结果，支持众多语言</li><li>colorize : 会给颜色代码增加一个当前匹配代码颜色的背景，非常好</li><li>Document This : JSDOC 注解调用，值得易用</li><li>Git History : 不得不赞的插件，谁用谁知道，功能很赞</li><li>HTML CSS Support : 这个也是必备插件之一</li><li>Path Autocomplete : 路径智能补全</li><li>Path Intellisense ： 路径智能提示</li><li>SCSS IntelliSense Preview : SCSS 智能提醒，配置强大</li><li>Syncing: 这个同步插件要比官方市场那个最高下载量的要好，支持删除同步！！！</li><li>Version Lens : 可以及时看到 package.json 内部版本的变动，很实用</li><li>Output Colorizer : 可以终端日志输出着色，实用</li></ol><h2 id="代码片段插件"><a href="#代码片段插件" class="headerlink" title="代码片段插件"></a>代码片段插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JavaScript (ES6) code snippets  : ES6的代码片段，实用</span><br><span class="line">JavaScript Snippet Pack   : ES5及以下的代码片段，实用</span><br></pre></td></tr></table></figure><h2 id="语法校验"><a href="#语法校验" class="headerlink" title="语法校验"></a>语法校验</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stylelint : 比内置的要全，更智能</span><br></pre></td></tr></table></figure><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><ol><li>Panda:用了相当久的一套颜色高亮，个人感觉很耐看</li><li>Enki Theme (Material Design Inspired) : 当前用的代码高亮，个人感觉很赞</li><li>Material Icon Theme : 一套扁平化的文件图标，内置的 seti 也很优秀，还有 simple icon 和 vscode-icons</li></ol><p>作者：爱吃 kiwi<br>链接：<a href="https://leekiwi.github.io/">https://leekiwi.github.io/</a><br>来源：github<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      <categories>
          
          <category> 实用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nodejs学习笔记</title>
      <link href="/2018/08/28/node-js-study-note/"/>
      <url>/2018/08/28/node-js-study-note/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Nodejs-学习笔记"><a href="#Nodejs-学习笔记" class="headerlink" title="Nodejs 学习笔记"></a>Nodejs 学习笔记</h2><p><strong>node 内部对模块输出 module.exports 的实现</strong></p><p>变量 module 是 Node 在加载 js 文件前准备的一个变量，并将其传入加载函数</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 准备module对象</span><br><span class="line">var module = &#123;</span><br><span class="line">    id: &apos;hello&apos;,</span><br><span class="line">    exports: &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var load = function(module) &#123;</span><br><span class="line">    // 读取的hello.js代码</span><br><span class="line">    function greet(name) &#123;</span><br><span class="line">        console.log(&apos;Hello, &apos; + name + &apos;!&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    module.exports = greet;</span><br><span class="line"></span><br><span class="line">    // hello.js代码结束</span><br><span class="line">    return module.exports;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var exported = load(module);</span><br><span class="line"></span><br><span class="line">// 保存module</span><br><span class="line">save(module, exported);</span><br></pre></td></tr></table></figure><p>默认情况下，Node 准备的 exports 变量和 module.exports 变量实际上是同一个变量，所以一下两种写法都支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// method 1</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    foo: foo,</span><br><span class="line">    bar: bar</span><br><span class="line">&#125;;</span><br><span class="line">or</span><br><span class="line">module.exports.foo = foo;</span><br><span class="line">module.exports.bar = bar;</span><br><span class="line"></span><br><span class="line">// method 2</span><br><span class="line">exports.foo = foo;</span><br><span class="line">exports.bar = bar;</span><br></pre></td></tr></table></figure><p><strong>process</strong></p><p>下一轮事件循环 回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">process.nextTick(function() &#123;</span><br><span class="line">    console.log(&apos;nextTick callback&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>程序即将退出 回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">process.on(&apos;exit&apos;, function(code) &#123;</span><br><span class="line">    console.log(&apos;about to exit with code&apos; + code);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">console.log(&apos;nextTick set&apos;);</span><br></pre></td></tr></table></figure><p><strong>readFile/readFileSync writeFile/writeFileSync stat</strong></p><p>异步读取一个文本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&apos;./hello.js&apos;, &apos;utf-8&apos;, function(err, data) &#123;</span><br><span class="line">    console.log(&apos;read file start...&apos;);</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>异步读取一个二进制文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&apos;1.jpg&apos;, function(err, data) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // 返回一个buffer对象</span><br><span class="line">        console.log(data);</span><br><span class="line">        // Buffer对象转化成字符串</span><br><span class="line">        console.log(data.toString(&apos;utf-8&apos;));</span><br><span class="line">        // 文件大小</span><br><span class="line">        console.log(data.length + &apos; bytes&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同步读取一个文件直接返回，读取错误用 try…catch 捕获</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">    var data = fs.readFileSync(&apos;./1.jpg&apos;);</span><br><span class="line">    console.log(data);</span><br><span class="line">&#125;</span><br><span class="line">catch(err) &#123;</span><br><span class="line">    console.log(err);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(&apos;readFileSync ended&apos;);</span><br></pre></td></tr></table></figure><p>异步写入一个文件，默认是以 UTF-8 编码写入文本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var data = &apos;Hello,Node.js&apos;;</span><br><span class="line">// var data = fs.readFileSync(&apos;./1.jpg&apos;);</span><br><span class="line">fs.writeFile(&apos;output.txt&apos;, data, function(err) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        console.log(&apos;write file finished&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同步写入文本到一个文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var data = &apos;Hello,Node.js,I am sync data&apos;;</span><br><span class="line">fs.writeFileSync(&apos;output.txt&apos;, data);</span><br><span class="line">console.log(&apos;writeFileSync ended&apos;);</span><br></pre></td></tr></table></figure><p>获取文件信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">fs.stat(&apos;./1.jpg&apos;, function(err, stat) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // 是否是文件</span><br><span class="line">        console.log(&apos;isFile:&apos; + stat.isFile());</span><br><span class="line">        // 是否是目录</span><br><span class="line">        console.log(&apos;isDirectory:&apos; + stat.isDirectory());</span><br><span class="line"></span><br><span class="line">        if(stat.isFile()) &#123;</span><br><span class="line">            // 文件大小</span><br><span class="line">            console.log(&apos;size:&apos; + stat.size);</span><br><span class="line">            // 创建时间，Date对象</span><br><span class="line">            console.log(&apos;birth time:&apos; + stat.birthtime);</span><br><span class="line">            // 修改时间，Date对象</span><br><span class="line">            console.log(&apos;modified time:&apos; + stat.mtime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>PS:绝大部分需要在服务器运行期反复执行业务逻辑，必须使用异步代码服务器启动时如果需要读取配置文件，或者结束时需要写入到状态文件时，可以使用同步代码</p><p><strong>createReadStream createWriteStream pipe</strong></p><p>在 node.js 中，流也是一个对象，我们只需要响应流的事件就可以了。<br>data 事件表示流的数据已经可以读取了，end 事件表示这个流已经到末尾了，没有数据可以读取了，error 事件表示出错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var rs = fs.createReadStream(&apos;./data.txt&apos;, &apos;utf-8&apos;);</span><br><span class="line"></span><br><span class="line">// data事件可能有多次，每次传递的chunk是流的一部分数据</span><br><span class="line">rs.on(&apos;data&apos;, function(chunk) &#123;</span><br><span class="line">    console.log(&apos;data event:&apos;, chunk);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(&apos;end&apos;, function (chunk) &#123;</span><br><span class="line">    console.log(&apos;end event:&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(&apos;error&apos;, function (chunk) &#123;</span><br><span class="line">    console.log(&apos;error event:&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>以流的形式写入文件，只需要不断调用 write()方法，最后以 end()结束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var ws = fs.createWriteStream(&apos;./data.txt&apos;);</span><br><span class="line">ws.write(&apos;user stream write data\n&apos;);</span><br><span class="line">ws.write(&apos;loading...\n&apos;);</span><br><span class="line">ws.write(&apos;END&apos;);</span><br><span class="line">ws.end();</span><br></pre></td></tr></table></figure><p>pipe()把一个文件流和另一个文件流串起来，这样源文件的所有数据就自动写入到目标文件里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var rs = fs.createReadStream(&apos;./data.txt&apos;);</span><br><span class="line">var ors = fs.createReadStream(&apos;./output.txt&apos;);</span><br><span class="line">var ws = fs.createWriteStream(&apos;./output.txt&apos;);</span><br><span class="line">rs.pipe(ws);</span><br></pre></td></tr></table></figure><p>创建一个服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var server = http.createServer(function(request, response) &#123;</span><br><span class="line">    // http请求头的method和url</span><br><span class="line">    console.log(&apos;header meathod:&apos;, request.method);</span><br><span class="line">    console.log(&apos;header url:&apos;, request.url);</span><br><span class="line"></span><br><span class="line">    // 将http响应200写入response，同时设置content-type</span><br><span class="line">    response.writeHead(200, &#123;&apos;Content-Type&apos;: &apos;text/html&apos;&#125;);</span><br><span class="line"></span><br><span class="line">    // 将http响应的html内容写入response</span><br><span class="line">    response.end(&apos;&lt;h1&gt;Hello world!&lt;/h1&gt;&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">console.log(&apos;Server is running at http://localhost:8080&apos;);</span><br></pre></td></tr></table></figure><p>实现一个文件服务器，拼接访问路径读取本地文件，从命令参数获取 root 目录，默认是当前目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">var root = path.resolve(&apos;.&apos;);</span><br><span class="line">console.log(&apos;Static root dir:&apos; + root);</span><br><span class="line"></span><br><span class="line">// 创建服务器</span><br><span class="line"> var server = http.createServer(function (request, response) &#123;</span><br><span class="line">    // node提供url模块解析url字符串 获取url的path</span><br><span class="line"></span><br><span class="line">    var pathname = url.parse(request.url).pathname;</span><br><span class="line"></span><br><span class="line">    if (pathname === &apos;/favicon.ico&apos;) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    console.log(&apos;url:&apos;, url.parse(request.url));</span><br><span class="line"></span><br><span class="line">    // 获取对应本地文件路径</span><br><span class="line">    var filepath = path.join(root, pathname);</span><br><span class="line">    // 读取文件状态</span><br><span class="line">    fs.stat(filepath, function (err, stats) &#123;</span><br><span class="line">        // 文件出错</span><br><span class="line">        if (err) &#123;</span><br><span class="line">            console.log(&apos;file error!&apos;);</span><br><span class="line">            response.end(&apos;&lt;h1&gt;file error!&lt;/h1&gt;&apos;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 是文件</span><br><span class="line">        if (stats.isFile()) &#123;</span><br><span class="line">            console.log(&apos;200 &apos; + request.url);</span><br><span class="line">            response.writeHead(200);</span><br><span class="line">            // 将文件流导入response</span><br><span class="line">            fs.createReadStream(filepath).pipe(response);</span><br><span class="line">        &#125;</span><br><span class="line">        // 文件不存在</span><br><span class="line">        else &#123;</span><br><span class="line">            console.log(&apos;404 &apos; + request.url);</span><br><span class="line">            response.writeHead(404);</span><br><span class="line">            // 将文件流导入response</span><br><span class="line">            response.end(&apos;&lt;h1&gt;404 not found!&lt;/h1&gt;&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">console.info(&apos;Server is runing at http://localhost:8080/&apos;);</span><br></pre></td></tr></table></figure><p>express 是第一代流行的 web 框架，它对 Node.js 的 HTTP 进行封装，语法基于 ES5，要实现异步代码，只有一个方法：回调。</p><p>koa2 完全基于 ES7 开发，使用 Promise 配合 async 实现异步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">// 创建一个Koa对象</span><br><span class="line">const app = new Koa();</span><br><span class="line"></span><br><span class="line">// 对于任何请求，app将调用该异步函数处理请求</span><br><span class="line">// ctx是koa封装request和response变量</span><br><span class="line">// next是koa传入的将要处理下一个异步函数</span><br><span class="line">// 每个async函数称为middleware</span><br><span class="line">// app.use()顺序决定了middleware的顺序</span><br><span class="line"></span><br><span class="line">app.use(async(ctx, next) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">    fs.readFile(&apos;./data.txt&apos;, &apos;utf-8&apos;, function(err, data) &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 调用下一个middleware，如果没有调用，则下一个middleware不会执行</span><br><span class="line">    await next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.use(async(ctx, next) =&gt; &#123;</span><br><span class="line">    ctx.response.type = &apos;text/html&apos;;</span><br><span class="line">    ctx.response.body = &apos;&lt;h1&gt;Hello, koa!&lt;/h1&gt;&apos;;</span><br><span class="line">    console.log(&apos;response end&apos;);</span><br><span class="line">    // 调用下一个middleware</span><br><span class="line">    await next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(3000);</span><br><span class="line">console.log(&apos;app started at http://localhost:3000/&apos;);</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>对MVC、MVP和MVVM的简单认识</title>
      <link href="/2018/08/27/%E5%AF%B9MVC%E3%80%81MVP%E5%92%8CMVVM%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/"/>
      <url>/2018/08/27/%E5%AF%B9MVC%E3%80%81MVP%E5%92%8CMVVM%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="MVVM-的前世与今生"><a href="#MVVM-的前世与今生" class="headerlink" title="MVVM 的前世与今生"></a>MVVM 的前世与今生</h2><h3 id="1-先聊一下-MVC"><a href="#1-先聊一下-MVC" class="headerlink" title="1. 先聊一下 MVC"></a>1. 先聊一下 MVC</h3><p>MVC：Model（模型） View（视图） Controller（控制器），主要是基于分层的目的，让彼此的职责分开。</p><p>View 通过 Controller 和 Model 联系，Controller 是 View 和 Model 的协调者，view 和 Model 不直接联系，基本联系都是单向的。</p><a id="more"></a><h3 id="2-顺带提下-MVP"><a href="#2-顺带提下-MVP" class="headerlink" title="2. 顺带提下 MVP"></a>2. 顺带提下 MVP</h3><p>MVP：是从 MVC 模式演变而来的，都是通过 Controller/Presenter 负责逻辑的处理+Model 提供数据+View 负责显示。</p><p>在 MVP 中，Presenter 完全把 View 和 Model 进行分离，主要的程序逻辑在 Presenter 里实现。并且，Presenter 和 View 是没有直接关联的，是通过定义好的接口进行交互，从而使得在变更 View 的时候可以保持 Presenter 不变。</p><h3 id="3-再聊聊-MVVN"><a href="#3-再聊聊-MVVN" class="headerlink" title="3. 再聊聊 MVVN"></a>3. 再聊聊 MVVN</h3><p>MVVM：Model + View + ViewModel，把 MVC 中的 Controller 和 MVP 中的 Presenter 改成 ViewModel</p><p>view 的变化会自动更新到 ViewModel，ViewModel 的变化也会自动同步到 View 上显示。这种自动同步是因为 ViewModel 中的属性实现了 Observer，当属性变更时都能触发对应操作。</p><ul><li>View 是 HTML 文本的 js 模板；</li><li>ViewModel 是业务逻辑层（一切 js 可视业务逻辑，比如表单按钮提交，自定义事件的注册和处理逻辑都在 viewmodel 里面负责监控俩边的数据）；</li><li>Model 数据层，对数据的处理（与后台数据交互的增删改查）</li></ul><p>提一下我熟悉的 MVVM 框架：vue.js，Vue.js 是一个构建数据驱动的 web 界面的渐进式框架。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。核心是一个响应的数据绑定系统。</p><h3 id="4-一句话总结下不同之处"><a href="#4-一句话总结下不同之处" class="headerlink" title="4. 一句话总结下不同之处"></a>4. 一句话总结下不同之处</h3><p>MVC 中联系是单向的，MVP 中 P 和 V 通过接口交互，MVVP 的联系是双向的</p>]]></content>
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>正则表达式</title>
      <link href="/2018/08/22/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2018/08/22/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="正则规则汇总"><a href="#正则规则汇总" class="headerlink" title="正则规则汇总"></a>正则规则汇总</h2><p>对字符串的处理，一般分为字符串操作和正则操作。</p><h5 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h5><ul><li>str.search(regStr) 返回 regStr 在 str 中第一个出现的位置</li><li>str.replace(regStr,newStr) 返回替换在 str 中 regStr 后字符串</li></ul><a id="more"></a><ul><li>str.substring(n1,n2) 返回 str 从 n1 位置到 n2 位置前一个字符串</li><li>str.chartAt(n) 返回 n 位置字符</li><li>str.split(regStr) 返回以 regStr 隔开的数组</li><li>str.match(reg) 返回在 str 中符合正则 reg 的字符串数组</li></ul><h5 id="正则操作"><a href="#正则操作" class="headerlink" title="正则操作"></a>正则操作</h5><p>var reg=new RegExp(regStr,’i’); //创建正则对象</p><p>var reg=/regStr/i; //隐式创建正则对象</p><ul><li>reg.test(str) str 是否包含 reg 返回 true/false</li><li>reg.exec(str) 返回匹配到的字符串和最后一次的匹配字符串最后位置的下一个索引</li></ul><h4 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h4><ol><li>/a|b/ a 或 b</li><li>/[abc]/ a 或 b 或 c</li><li>/[a-zA-Z0-9]/ 所有数字和字母</li><li>/[^a-za-z0-9]/ 除了数字和字母</li><li>/.+/ 任意字符</li><li>/\d/ 等价于/[0-9]/ 数字</li><li>/\w/ 等价于/[a-z0-9_]/ 数字、字母和下划线</li><li>/\s/ 等价于/“ “/ 空格</li><li>/\D/ 等价于/[^0-9]/ 非数字</li><li>/\W/ 等价于/[^a-z0-9_]/ 除了数字、字母和划线</li><li>/\S/ 等价于/[^” “]/ 除了空格</li><li>/\d{n,m}/ 数字最少出现 n 次，最多出现 m 次</li><li>/\d{1,}/ 等价于/\d+/ 数字最少出现 1 次</li><li>/\d{0,}/ 等价于/\d*/ 数字最少出现 0 次</li><li>/\d{0,1}/ 等价于/\d?/ 数字最多出现 1 次</li><li>/^\d$/ 以数字开头且以数字结尾</li><li>/[\u4e00-\u9fa5]/ 汉字匹配范围</li><li>\b 单词边界</li><li>\B 非单词边界</li><li>?=n 匹配任何其后紧接指定字符串 n 的字符串</li><li>?!n 匹配任何其后没有紧接指定字符串 n 的字符串</li></ol><h4 id="疑难点"><a href="#疑难点" class="headerlink" title="疑难点"></a>疑难点</h4><p>在个人接触正则过程中遇到的一些不易理解的地方</p><blockquote><p>用圆括号将所有选择项括起来，相邻的选择项之间用|分隔。但用圆括号会有一个副作用，是相关的匹配会被缓存，此时可用?:放在第一个选项前来消除这种副作用。其中?:是非捕获元之一，还有两个非捕获元是?=和?!，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。</p></blockquote><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>(?:pattern)</td><td>匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 “或” 字符 (\</td><td>) 来组合一个模式的各个部分是很有用。例如， ‘industr(?:y\</td><td>ies) 就是一个比 ‘industry\</td><td>industries’ 更简略的表达式。</td></tr><tr><td>(?=pattern</td><td>正向预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，’Windows (?=95\</td><td>98\</td><td>NT\</td><td>2000)’ 能匹配 “Windows 2000” 中的 “Windows” ，但不能匹配 “Windows 3.1” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td>(?!pattern)</td><td>负向预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如’Windows (?!95\</td><td>98\</td><td>NT\</td><td>2000)’ 能匹配 “Windows 3.1” 中的 “Windows”，但不能匹配 “Windows 2000” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr></tbody></table><p>一直对正则中的 match 和 exec 不易分清，下面来做一下比较。</p><h5 id="1-match"><a href="#1-match" class="headerlink" title="1. match"></a>1. match</h5><p>match 方法属于 String 正则表达方法</p><p>语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.match(regexp)</span><br></pre></td></tr></table></figure><p>str：要进行匹配的字符串</p><p>regexp：一个正则表达式(或者由 RegExp()构造成的正则表达式)</p><p>match 的用法主要区分就是正则表达式是否有全局标示 g</p><ol><li><p>如果有 g 全局标志，那么返回的数组保存的是，所有匹配的内容。</p></li><li><p>如果没有 g 全局标志，那么返回的数组 arr.arr[0]保存的是完整的匹配.arr[1]保存的是第一个括号里捕获的字串，依此类推 arr[n]保存的是第 n 个括号捕获的内容。</p></li></ol><h5 id="2-exec"><a href="#2-exec" class="headerlink" title="2. exec"></a>2. exec</h5><p>与 match 方法不同 exec 属于正则表达式的方法</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var result1 = regexp.exec(str);</span><br></pre></td></tr></table></figure><p>regexp：正则表达式</p><p>str：要匹配的字串</p><p>exec 与 match 的关联就是 exec（g 有没有都无影响）就等价于不含有 g 全局标志的 match，即返回数组 arr[0]为匹配的完整串，其余的为括号里捕获的字符串。</p><p>但如果有 g 对 exec 本身的影响是，当一个具有 g 的正则表达式调用 exec()时，他将该对象的 lastIndex 设置到紧接这匹配子串的字符位置。当第二次调用 exec 时将从<br>lastIndex 所指示的字符位置开始检索，利用这个特点可以反复调用 exec 遍历所有匹配，等价于 match 具有 g 标志。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arrmatch = str.match(reg);</span><br><span class="line">for(var i =0; i &lt; arrmatch.length; i++)&#123;</span><br><span class="line">    document.write(arrmatch[i] +&quot;----&gt;&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可见上面的 exec 和 match 是等价的.</p><p>reg.exec(str) 返回匹配到的字符串和最后一次的匹配字符串最后位置的下一个索引如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var str = &quot;abc123bef345olj89,ed&quot;;</span><br><span class="line">var reg = /\d+/g;</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li><p>主要区分 match 具有 g 和没有 g 的区别，没有 g 的时候与 exec 是等价的。</p></li><li><p>而 exec 返回的串类型不受 g 影响，但具有 g 时候会驱动 lastIndex 可以模拟遍历所有匹配，可以与 match 具有 g 的时候等价。</p></li></ul><h4 id="顺便加强理解"><a href="#顺便加强理解" class="headerlink" title="顺便加强理解"></a>顺便加强理解</h4><ol><li>ip 正则表达式<br>格式由”.”分割成四段，每一段范围是 0-255，拿出其中一段进行分析</li></ol><table><thead><tr><th>范围</th><th>表达式</th></tr></thead><tbody><tr><td>0-9</td><td>\d</td></tr><tr><td>10-99</td><td>[1-9]\d</td></tr><tr><td>100-199</td><td>1\d{2}</td></tr><tr><td>200-249</td><td>2[0-4]\d</td></tr><tr><td>250-255</td><td>25[0-5]</td></tr></tbody></table><p>所以，其中一段构成的正则表达式是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5]</span><br></pre></td></tr></table></figure><p>，<br>整个 ip 正则为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])$/</span><br></pre></td></tr></table></figure><ol start="2"><li>同理端口号范围是 0-65535</li></ol><table><thead><tr><th>范围</th><th>表达式</th></tr></thead><tbody><tr><td>0-9</td><td>\d</td></tr><tr><td>10-99</td><td>[1-9]\d</td></tr><tr><td>100-999</td><td>[1-9]\d{2}</td></tr><tr><td>1000-9999</td><td>[1-9]\d{3}</td></tr><tr><td>10000-59999</td><td>[1-5]\d{4}</td></tr><tr><td>60000-64999</td><td>6[0-4]\d{3}</td></tr><tr><td>65000-65499</td><td>65[0-4]\d{2}</td></tr><tr><td>65500-65529</td><td>655[0-2]\d</td></tr><tr><td>65530-65535</td><td>65553[0-5]</td></tr></tbody></table><p>所以，整个端口号正则为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/\d|[1-9]\d&#123;1,3&#125;|[1-5]d&#123;4&#125;|6[0-4]\d&#123;3&#125;|65[0-4]\d&#123;2&#125;|655[0-2]\d|65553[0-5]/</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript 正则 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>理解同步、异步和事件循环</title>
      <link href="/2018/08/20/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
      <url>/2018/08/20/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="JavaScript-运行机制"><a href="#JavaScript-运行机制" class="headerlink" title="JavaScript 运行机制"></a>JavaScript 运行机制</h2><ol><li>所有同步任务都在主线程上执行，形成一个执行栈；</li></ol><a id="more"></a><ol start="2"><li><p>主线程发起异步请求，相应的工作线程就会去执行异步任务，主线程可以继续执行后面的代码；</p></li><li><p>主线程之外，还存在一个”任务队列”（task queue）。只要异步任务有了运行结果，就在”任务队列”之中放置一个事件，也就是一个消息；</p></li><li><p>一旦”执行栈”中的所有同步任务执行完毕，系统就会读取”任务队列”，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行；</p></li><li><p>主线程把当前的事件执行完成之后，再去读取任务队列，如此反复重复执行，这样就行程了事件循环。</p></li></ol><h4 id="1、单线程"><a href="#1、单线程" class="headerlink" title="1、单线程"></a>1、单线程</h4><p>JS 引擎在解释和执行 JavaScript 代码线程只有一个，叫做<strong>主线程</strong>。<br>但实际还存在其他线程，如：处理 Ajax 请求线程，处理 DOM 事件线程，定时器线程，和文件读写线程等，叫做<strong>工作线程</strong>。</p><h4 id="2、同步和异步"><a href="#2、同步和异步" class="headerlink" title="2、同步和异步"></a>2、同步和异步</h4><p>同步：如果函数返回的时候，调用者就能够得到预期结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.sqrt(2);</span><br></pre></td></tr></table></figure><p>异步：函数返回的时候，调用者还不能够得到预期结果，而是需要通过一定手段得到。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&quot;foo.txt&quot;, &quot;utf8&quot;, function(err, data)&#123;</span><br><span class="line">    console.log(data)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上面代码中，我们希望 fs.readFile 函数读取文件，并打印出来，但是在 fs.readFile 函数返回时，我们期望的结果并不会发生，而是要等文件全部读取完成之后。</p><h5 id="异步-AJAX："><a href="#异步-AJAX：" class="headerlink" title="异步 AJAX："></a>异步 AJAX：</h5><blockquote><p>主线程：“你好，AJAX 线程。请你帮我发个 HTTP 请求吧，我把请求地址和参数都给你了。”</p></blockquote><blockquote><p>AJAX 线程：“好的，主线程。我马上去发，但可能要花点儿时间呢，你可以先去忙别的。”</p></blockquote><blockquote><p>主线程：：“谢谢，你拿到响应后告诉我一声啊。”</p></blockquote><blockquote><p>(接着，主线程做其他事情去了。一顿饭的时间后，它收到了响应到达的通知。)</p></blockquote><h5 id="同步-AJAX："><a href="#同步-AJAX：" class="headerlink" title="同步 AJAX："></a>同步 AJAX：</h5><blockquote><p>主线程：“你好，AJAX 线程。请你帮我发个 HTTP 请求吧，我把请求地址和参数都给你了。”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>主线程：：“喂，AJAX 线程，你怎么不说话？”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>主线程：：“喂！喂喂喂！”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>(一炷香的时间后)</p></blockquote><blockquote><p>主线程：：“喂！求你说句话吧！”</p></blockquote><blockquote><p>AJAX 线程：“主线程，不好意思，我在工作的时候不能说话。你的请求已经发完了，拿到响应数据了，给你。”</p></blockquote><p>正因为 JavaScript 时单线程，同步容易造成阻塞，所以，对于耗时和操作事件不确定操作，使用异步就成了必然选择。</p><h4 id="3、异步过程"><a href="#3、异步过程" class="headerlink" title="3、异步过程"></a>3、异步过程</h4><p>一个异步过程通常时这样的：</p><blockquote><p>主线程发起一个异步请求，相应的工作线程接收线程请求并告知主线程已收到；主线程可以继续执行后面的代码，同时工作线程执行异步任务；工作线程完成工作后，通知主线程；主线程收到通知后，执行一定动作（调用回调函数）。</p></blockquote><p>异步函数通常具有一下形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A(arg..., callbackFn)</span><br></pre></td></tr></table></figure><p>他可以叫做异步过程的<strong>发起函数</strong>，或者叫做异步任务<strong>注册函数</strong>。</p><p>从主线程的角度看，一个一度过程包括两个要素：</p><ul><li>发起函数（注册函数）</li><li>回到函数</li></ul><h4 id="4、消息队列和事件循环"><a href="#4、消息队列和事件循环" class="headerlink" title="4、消息队列和事件循环"></a>4、消息队列和事件循环</h4><p>异步过程中，工作线程在异步操作完成后需要通知主线程。那么这个通知机制时怎样实现的呢？答案是利用消息队列和事件循环。</p><p>一句话概括：</p><blockquote><p>工作线程将消息放到消息队列，主线程通过事件循环过程去取消息。</p></blockquote><p>消息队列：消息队列是一个先进先出的队列，放着各种消息。</p><p>事件循环：事件循环是指主线程从消息队列中取消息，执行的过程。</p><p>实际上，主线程只会做一件事，就是从消息队列里面取消息、执行消息，再去消息，再执行。当消息队列为空时，就会等待知道消息队列变成非空。而且主线程只有在将当前的消息执行完成后，才会去取下一个消息。这种机制就叫做事件循环机制，取一个消息并执行的过程叫做一次循环。</p><p>消息队列中放的消息是什么东西？消息的具体结构当然跟具体的实现有关，可以认为：</p><blockquote><p>消息就是注册异步任务时添加的回调函数。</p></blockquote><p>以异步 Ajax 为例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&apos;http://segmentfault.com&apos;, function(resp) &#123;</span><br><span class="line">    console.log(&apos;我是响应：&apos;, resp);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>主线程发起 Ajax 请求后，会继续执行其他代码。Ajax 线程负责请求 segmentfault.com，拿到响应后，它会把响应封装成一个 JavaScript 对象，然后构成一条消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var message = function() &#123;</span><br><span class="line">    callbackFn();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 callbackFn 就是前面代码中成功响应时的回调函数。</p><p>主线程在执行完当前循环中所有代码后，就会到消息队列取出这条消息（也就是 message 函数），并执行它，到此为止，就完成了工作线程对主线程的通知，回调函数也就得到了执行。如果一开始主线程就没有提供回调函数，Ajax 线程在收到 HTTP 响应后，也就没有必要通知主线程，从而没必要往消息队列放消息。</p><blockquote><p>异步过程的回调函数，一定不在当前这一轮事件循环中执行。</p></blockquote><h4 id="5、异步与事件"><a href="#5、异步与事件" class="headerlink" title="5、异步与事件"></a>5、异步与事件</h4><blockquote><p>消息队列中的每条消息实际上都对应着一个事件</p></blockquote><p>有一类很重要的异步过程：DOM 事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var button = document.getElement(&apos;#btn&apos;);</span><br><span class="line">button.addEventListener(&apos;click&apos;, function(e) &#123;</span><br><span class="line">    console.log();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>从事件的角度来看，上述代码表示：在按钮上添加了一个鼠标单击事件的事件监听器；当用户点击按钮时，鼠标单击事件触发，事件监听器函数被调用。</p><p>从异步过程的角度看，addEventListener 函数就是异步过程的发起函数，事件监听器函数就是异步过程的回调函数。事件触发时，表示异步任务完成，会将事件监听器函数封装成一条消息放到消息队列中，等待主线程执行。</p><p>事件的概念实际上并不是必须的，事件机制实际上就是异步过程的通知机制。我觉得它的存在是为了编程接口对开发者更友好。</p><p>另一方面，所有的异步过程也都可以用事件来描述。例如：setTimeout 可以看成对应一个时间到了！的事件。前文的 setTimeout(fn, 1000);可以看成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timer.addEventListener(&apos;timeout&apos;, 1000, fn);</span><br></pre></td></tr></table></figure><blockquote><p>工作线程是生产者，主线程是消费者(只有一个消费者)。工作线程执行异步任务，执行完成后把对应的回调函数封装成一条消息放到消息队列中；主线程不断地从消息队列中取消息并执行，当消息队列空时主线程阻塞，直到消息队列再次非空。</p></blockquote><h4 id="6、macrotasks-与-microtasks-的区别"><a href="#6、macrotasks-与-microtasks-的区别" class="headerlink" title="6、macrotasks 与 microtasks 的区别"></a>6、macrotasks 与 microtasks 的区别</h4><blockquote><p>macrotasks: setTimeout setInterval setImmediate I/O UI 渲染</p></blockquote><blockquote><p>microtasks: Promise process.nextTick Object.observe MutationObserver</p></blockquote><p>microtask 会在当前循环中执行完成,而 macrotask 会在下一个循环中执行</p>]]></content>
      
      <categories>
          
          <category> js高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git简记</title>
      <link href="/2018/07/27/Git%E7%AE%80%E8%AE%B0/"/>
      <url>/2018/07/27/Git%E7%AE%80%E8%AE%B0/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Git-食用手册"><a href="#Git-食用手册" class="headerlink" title="Git 食用手册"></a>Git 食用手册</h2><h3 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h3><p>最近有个项目比较赶，于是决定 8 个人一个并行完成，单独把项目拿出来用 gitea 管理，没人分一个模块开发，对应也给分支，效果不过，从中也帮助自己重新温习了一下 git 的使用，小记一下。</p><a id="more"></a><h3 id="1-安装和使用"><a href="#1-安装和使用" class="headerlink" title="1. 安装和使用"></a>1. 安装和使用</h3><ul><li><p>在 MAC 上，安装 homebrew，然后通过<a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">homebrew</a> 安装 Git。</p><blockquote><p>在 MAC 上另一种安装方法，从 AppStore 安装 Xcode，Xcode 集成了 Git，不过默认没有安装，你需要运行 Xcode，选择菜单“Xcode”-&gt;“Preferences”，在弹出窗口中找到“Downloads”，选择“Command Line Tools”，点“Install”就可以完成安装了。</p></blockquote></li><li><p>在 Windows 上，下载<a href="http://rj.baidu.com/soft/detail/40642.html" target="_blank" rel="noopener">安装包</a>，默认下一步，安装完成即可。</p></li><li><p>安装完后自报家门</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;wuwhs&quot;</span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>创建版本库<br>初始化一个 Git 仓库，使用<code>git init</code>命令。添加文件到 Git 仓库，分两步：</p><ol><li>第一步，使用命令<code>git add &lt;file&gt;</code>，注意，可反复多次使用，添加多个文件；</li><li>第二步，使用命令<code>git commit</code>，完成。</li></ol></li></ul><h3 id="2-时光穿梭"><a href="#2-时光穿梭" class="headerlink" title="2. 时光穿梭"></a>2. 时光穿梭</h3><p><img src="https://note.youdao.com/yws/public/resource/813e8f68e489060d70ccfdff42b3aecc/xmlnote/8849F03FF3934C8087DA9645B9BD9C5F/14633" alt=""></p><ul><li><p>如果<code>git status</code>告诉你有文件被修改过，用<code>git diff</code>可以查看修改内容。</p></li><li><p>HEAD 指向的版本就是当前版本，因此，Git 允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</p></li><li><p>穿梭前，用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本。</p></li><li><p>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本，<code>git log --pretty=oneline --abbrev-commit</code>在一行显示缩写提交号。</p></li><li><p>场景 1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p></li><li><p>当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD file</code>，就回到了场景 1，第二步按场景 1 操作。</p></li><li><p>命令<code>git rm</code>用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。</p></li></ul><h3 id="3-远程仓库"><a href="#3-远程仓库" class="headerlink" title="3. 远程仓库"></a>3. 远程仓库</h3><ul><li><p>创建 SSH Key。<code>$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code>。</p></li><li><p>登陆 GitHub，打开“Account settings”，“SSH Keys”页面。<br>然后，点“Add SSH Key”，填上任意 Title，在 Key 文本框里粘贴 id_rsa.pub 文件的内容。</p></li><li><p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>。</p></li><li><p>关联后，使用命令<code>git push -u origin master</code>第一次推送 master 分支的所有内容。</p></li><li><p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改。</p></li><li><p>要克隆一个仓库，首先必须知道仓库的地址，然后使用<code>git clone</code>命令克隆。</p></li></ul><h3 id="4-分支管理"><a href="#4-分支管理" class="headerlink" title="4. 分支管理"></a>4. 分支管理</h3><ul><li><p>Git 鼓励大量使用分支。</p></li><li><p>查看分支：<code>git branch</code>。</p></li><li><p>创建分支：<code>git branch &lt;name&gt;</code>。</p></li><li><p>切换分支：<code>git checkout &lt;name&gt;</code>。</p></li><li><p>创建+切换到当前分支：<code>git checkout -b &lt;name&gt;</code>。</p></li><li><p>合并某分支到当前分支：<code>git merge &lt;name&gt;</code>。</p></li><li><p>删除分支：<code>git branch -d &lt;name&gt;</code>。</p></li><li><p>当 Git 无法自动合并分支时，就必须首先剞劂冲突，解决冲突后，再提交，合并完成用<code>git log --graph</code>命令可以看到分支合并图。</p></li><li><p>合并分支时，加上<code>--no-ff</code>参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而<code>fash-forward</code>合并就看不出来曾经做过合并。</p></li><li><p>当手头工作没有完成时，先把工作现场<code>git stash</code>一下，然后去修复 bug，修复后，再<code>git stash list</code>查看历史 stash，一是用<code>git stash apply</code>恢复，但恢复后，stash 内容并不删除，你需要用<code>git stash drop</code>来删除；另一种方式是用<code>git stash pop</code>，恢复的同时把 stash 内容也删了。</p></li><li><p>查看远程库信息，使用<code>git remote -v</code>。</p></li><li><p>从本地推送分支，使用<code>git push origin branch-name</code>，如果失败，先用<code>git pull</code>抓取远程的新提交。</p></li><li><p>再本地创建和远程分支对应的分支，使用<code>git checkout -b branch-name origin/branch-name</code>，本地和远程分支的名称最好一致。</p></li><li><p>从远程抓取分支，使用<code>git pull</code>，如果有冲突，要先处理冲突。</p></li></ul><h3 id="5-标签"><a href="#5-标签" class="headerlink" title="5. 标签"></a>5. 标签</h3><ul><li><p>命令<code>git tag &lt;name&gt;</code>用于新建一个标签，默认为<code>HEAD</code>,也可以指定一个 commit id。</p></li><li><p><code>git tag -a &lt;tagname&gt; -m &quot;balabala...&quot;</code>可以指定标签信息。</p></li><li><p><code>git tag -s &lt;tagname&gt; -m &quot;balabala...&quot;</code>可以用 PGP 签名标签。</p></li><li><p>命令<code>git tag</code>可以查看所有标签。</p></li><li><p>命令<code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签。</p></li><li><p>命令<code>git push origin --tags</code>可以推送全部未推送过的本地标签。</p></li><li><p>命令<code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签。</p></li><li><p>命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>可以删除一个远程标签。</p></li></ul><h3 id="6-举个应用栗子"><a href="#6-举个应用栗子" class="headerlink" title="6. 举个应用栗子"></a>6. 举个应用栗子</h3><ol><li>最初在远程创建项目仓库有<code>master</code>和<code>develp</code>分支，参与开发人员先在自己一个文件夹下，调出<code>git Bash</code>，然后输入命令<code>git init</code>，再把仓库<code>git clone</code>下来</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www</span><br><span class="line">$ git init</span><br><span class="line">Initialized empty Git repository in D:/appSoft/wampserver/wamp64/www/.git/</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www (master)</span><br><span class="line">$ git clone git@github.com:wuwhs/demo.git</span><br><span class="line">Cloning into &apos;demo&apos;...</span><br><span class="line">Warning: Permanently added the RSA host key for IP address &apos;13.229.188.59&apos; to the list of known hosts.</span><br><span class="line">warning: You appear to have cloned an empty repository.</span><br><span class="line">Checking connectivity... done.</span><br></pre></td></tr></table></figure><ol start="2"><li><code>cd demo</code>进入<code>clone</code>下载的目录里，用<code>git branch develop</code>在本地创建一个对应的<code>develop</code>分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www (master)</span><br><span class="line">$ cd demo</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch</span><br><span class="line">* master</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch develop</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch</span><br><span class="line">  develop</span><br><span class="line">* master</span><br></pre></td></tr></table></figure><p>再次用<code>git branch</code>查看已经新建了一个<code>develop</code>分支</p><ol start="3"><li><code>git checkout develop</code>切换到当前<code>develop</code>分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git checkout develop</span><br><span class="line">Switched to branch &apos;develop&apos;</span><br></pre></td></tr></table></figure><ol start="4"><li>用<code>git pull origin develop:develop</code>，即：<code>git pull origin &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code>，当本地和远程分支名相同时，可以简写成一个，也就是<code>git pull origin develop</code>，拉取远程<code>develop</code>分支完成，然后开发人员就可以在这个分支上工作了</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull origin develop:develop</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   7ff2cb0..7ab2842  develop    -&gt; develop</span><br><span class="line">   7ff2cb0..7ab2842  develop    -&gt; origin/develop</span><br><span class="line">warning: fetch updated the current branch head.</span><br><span class="line">fast-forwarding your working tree from</span><br><span class="line">commit 7ff2cb0627be357fa15db4e38e1bfe8fc820b8ec.</span><br><span class="line">Already up-to-date.</span><br></pre></td></tr></table></figure><ol start="5"><li>当一天了工作完成，要提交到远程分支，首先要拉取一下别人提交的代码，防止版本冲突</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Compressing objects: 100% (2/2), done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   f848dc7..d696375  develop    -&gt; origin/develop</span><br><span class="line">Updating f848dc7..d696375</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><p>PS：直接偷懒<code>pull</code>可能会出现没有找到<code>tracking</code>的分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">There is no tracking information for the current branch.</span><br><span class="line">Please specify which branch you want to merge with.</span><br><span class="line">See git-pull(1) for details.</span><br><span class="line"></span><br><span class="line">git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class="line"></span><br><span class="line">If you wish to set tracking information for this branch you can do so with:</span><br><span class="line"></span><br><span class="line">git branch --set-upstream-to=origin/&lt;branch&gt; develop</span><br></pre></td></tr></table></figure><p>这时候要手动添加一下对应分支依赖<code>git branch --set-upstream-to=origin/&lt;branch&gt; develop</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git branch --set-upstream-to=origin/develop develop</span><br><span class="line">Branch develop set up to track remote branch develop from origin.</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Compressing objects: 100% (2/2), done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   f848dc7..d696375  develop    -&gt; origin/develop</span><br><span class="line">Updating f848dc7..d696375</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><ol start="6"><li>将本地分支提交到对应远程分支上，<code>git push origin develop:develop</code>，即：<code>git push origin &lt;远程主机&gt;&lt;本地分支名&gt;:&lt;远程分支名&gt;</code>，如果名称一样可以简写，也就是<code>git push origin develop</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git push origin develop:develop</span><br><span class="line">Counting objects: 9, done.</span><br><span class="line">Delta compression using up to 4 threads.</span><br><span class="line">Compressing objects: 100% (5/5), done.</span><br><span class="line">Writing objects: 100% (9/9), 759 bytes | 0 bytes/s, done.</span><br><span class="line">Total 9 (delta 1), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (1/1), done.</span><br><span class="line">To git@github.com:wuwhs/demo.git</span><br><span class="line">   d696375..3c00c0c  develop -&gt; develop</span><br></pre></td></tr></table></figure><ol start="7"><li>项目测试 OK 了，本地分支合并到<code>master</code>分支上，要用到<code>git merge &lt;branch&gt;</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git checkout master</span><br><span class="line">Switched to branch &apos;master&apos;</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git merge develop</span><br><span class="line">Updating c4d0377..3c00c0c</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 9 +++++++++</span><br><span class="line"> 1 file changed, 9 insertions(+)</span><br></pre></td></tr></table></figure><p>常用的操作就以上七步了，当然会有不同情形的应用。</p><h3 id="7-附录：git-cheat-sheet"><a href="#7-附录：git-cheat-sheet" class="headerlink" title="7. 附录：git-cheat-sheet"></a>7. 附录：git-cheat-sheet</h3><p>一般而言，常用的就是以上那些命令，有人专门的整理了一份比较全一点的文档 git-cheat-sheet，方便查阅。</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>列出当前配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --list</span><br></pre></td></tr></table></figure><p>列出 repository 配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --local --list</span><br></pre></td></tr></table></figure><p>列出全局配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global --list</span><br></pre></td></tr></table></figure><p>列出系统配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --system --list</span><br></pre></td></tr></table></figure><p>设置用户名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;[firstname lastname]&quot;</span><br></pre></td></tr></table></figure><p>设置用户邮箱：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email &quot;[valid-email]&quot;</span><br></pre></td></tr></table></figure><p>设置 git 命令输出为彩色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global color.ui auto</span><br></pre></td></tr></table></figure><p>设置 git 使用的文本编辑器设：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global core.editor vi</span><br></pre></td></tr></table></figure><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>Repository 配置对应的配置文件路径[–local]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;repo&gt;/.git/config</span><br></pre></td></tr></table></figure><p>用户全局配置对应的配置文件路径[–global]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.gitconfig</span><br></pre></td></tr></table></figure><p>系统配置对应的配置文件路径[–local]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/gitconfig</span><br></pre></td></tr></table></figure><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p>复制一个已创建的仓库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 通过 SSH</span><br><span class="line">$ git clone ssh://user@domain.com/repo.git</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#通过 HTTP</span><br><span class="line">$ git clone http://domain.com/user/repo.git</span><br></pre></td></tr></table></figure><p>创建一个新的本地仓库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><h4 id="本地修改"><a href="#本地修改" class="headerlink" title="本地修改"></a>本地修改</h4><p>显示工作路径下已修改的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure><p>显示与上次提交版本文件的不同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff</span><br></pre></td></tr></table></figure><p>把当前所有修改添加到下次提交中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure><p>把对某个文件的修改添加到下次提交中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add -p &lt;file&gt;</span><br></pre></td></tr></table></figure><p>提交本地的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -a</span><br></pre></td></tr></table></figure><p>提交之前已标记的变化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit</span><br></pre></td></tr></table></figure><p>附加消息提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &apos;message here&apos;</span><br></pre></td></tr></table></figure><p>提交，并将提交时间设置为之前的某个日期:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --date=&quot;`date --date=&apos;n day ago&apos;`&quot; -am &quot;Commit Message&quot;</span><br></pre></td></tr></table></figure><p>修改上次提交<br>（请勿修改已发布的提交记录!）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit --amend</span><br></pre></td></tr></table></figure><p>修改上次提交的 committer date：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIT_COMMITTER_DATE=&quot;date&quot; git commit --amend</span><br></pre></td></tr></table></figure><p>修改上次提交的 author date：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend --date=&quot;date&quot;</span><br></pre></td></tr></table></figure><p>把当前分支中未提交的修改移动到其他分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git checkout branch2</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><p>将 stashed changes 应用到当前分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash apply</span><br></pre></td></tr></table></figure><p>删除最新一次的 stashed changes：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash drop</span><br></pre></td></tr></table></figure><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>从当前目录的所有文件中查找文本内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git grep &quot;Hello&quot;</span><br></pre></td></tr></table></figure><p>在某一版本中搜索文本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git grep &quot;Hello&quot; v2.5</span><br></pre></td></tr></table></figure><h4 id="提交历史"><a href="#提交历史" class="headerlink" title="提交历史"></a>提交历史</h4><p>从最新提交开始，显示所有的提交记录（显示 hash， 作者信息，提交的标题和时间）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log</span><br></pre></td></tr></table></figure><p>显示所有提交（仅显示提交的 hash 和 message）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline</span><br></pre></td></tr></table></figure><p>显示某个用户的所有提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --author=&quot;username&quot;</span><br></pre></td></tr></table></figure><p>显示某个文件的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log -p &lt;file&gt;</span><br></pre></td></tr></table></figure><p>仅显示远端分支与远端分支提交记录的差集：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline &lt;origin/master&gt;..&lt;remote/master&gt; --left-right</span><br></pre></td></tr></table></figure><p>谁，在什么时间，修改了文件的什么内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git blame &lt;file&gt;</span><br></pre></td></tr></table></figure><p>显示 reflog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog show</span><br></pre></td></tr></table></figure><p>删除 reflog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog delete</span><br></pre></td></tr></table></figure><h4 id="分支与标签"><a href="#分支与标签" class="headerlink" title="分支与标签"></a>分支与标签</h4><p>列出所有的分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br></pre></td></tr></table></figure><p>列出所有的远端分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -r</span><br></pre></td></tr></table></figure><p>切换分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>创建并切换到新分支:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>基于当前分支创建新分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch &lt;new-branch&gt;</span><br></pre></td></tr></table></figure><p>基于远程分支创建新的可追溯的分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch --track &lt;new-branch&gt; &lt;remote-branch&gt;</span><br></pre></td></tr></table></figure><p>删除本地分支:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -d &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>强制删除一个本地分支：<br>将会丢失未合并的修改！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -D &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>给当前版本打标签：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><p>给当前版本打标签并附加消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><h4 id="更新与发布"><a href="#更新与发布" class="headerlink" title="更新与发布"></a>更新与发布</h4><p>列出当前配置的远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br></pre></td></tr></table></figure><p>显示远程端的信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote show &lt;remote&gt;</span><br></pre></td></tr></table></figure><p>添加新的远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add &lt;remote&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>下载远程端版本，但不合并到 HEAD 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch &lt;remote&gt;</span><br></pre></td></tr></table></figure><p>下载远程端版本，并自动与 HEAD 版本合并：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote pull &lt;remote&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>将远程端版本合并到本地版本中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin master</span><br></pre></td></tr></table></figure><p>以 rebase 方式将远端分支与本地合并：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>将本地版本发布到远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push remote &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>删除远程端分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git push &lt;remote&gt; :&lt;branch&gt; (since Git v1.5.0)</span><br><span class="line"># or</span><br><span class="line">git push &lt;remote&gt; --delete &lt;branch&gt; (since Git v1.7.0)</span><br></pre></td></tr></table></figure><p>发布标签:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push --tags</span><br></pre></td></tr></table></figure><p>合并与重置(Rebase)<br>将分支合并到当前 HEAD 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>将当前 HEAD 版本重置到分支中:<br>请勿重置已发布的提交!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>退出重置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase --abort</span><br></pre></td></tr></table></figure><p>解决冲突后继续重置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase --continue</span><br></pre></td></tr></table></figure><p>使用配置好的 merge tool 解决冲突：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git mergetool</span><br></pre></td></tr></table></figure><p>在编辑器中手动解决冲突后，标记文件为已解决冲突：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git add &lt;resolved-file&gt;</span><br><span class="line">$ git rm &lt;resolved-file&gt;</span><br></pre></td></tr></table></figure><p>合并提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase -i &lt;commit-just-before-first&gt;</span><br></pre></td></tr></table></figure><p>把上面的内容替换为下面的内容：</p><p>原内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pick &lt;commit_id&gt;</span><br><span class="line">pick &lt;commit_id2&gt;</span><br><span class="line">pick &lt;commit_id3&gt;</span><br></pre></td></tr></table></figure><p>替换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pick &lt;commit_id&gt;</span><br><span class="line">squash &lt;commit_id2&gt;</span><br><span class="line">squash &lt;commit_id3&gt;</span><br></pre></td></tr></table></figure><h4 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h4><p>放弃工作目录下的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard HEAD</span><br></pre></td></tr></table></figure><p>移除缓存区的所有文件（i.e. 撤销上次 git add）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset HEAD</span><br></pre></td></tr></table></figure><p>放弃某个文件的所有本地修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout HEAD &lt;file&gt;</span><br></pre></td></tr></table></figure><p>重置一个提交（通过创建一个截然不同的新提交）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git revert &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到指定的版本，并抛弃该版本之后的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>用远端分支强制覆盖本地分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard &lt;remote/branch&gt; e.g., upstream/master, origin/my-feature</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到上一次提交的版本，并将之后的修改标记为未添加到缓存区的修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到上一次提交的版本，并保留未提交的本地修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --keep &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>删除添加.gitignore 文件前错误提交的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git rm -r --cached .</span><br><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;remove xyz file&quot;</span><br></pre></td></tr></table></figure><p>完~</p><p>可参考文章：</p><ol><li><a href="http://rogerdudler.github.io/git-guide/" target="_blank" rel="noopener">git-guide</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰 git 教程</a></li><li><a href="https://www.git-scm.com/" target="_blank" rel="noopener">git-scm</a></li><li><a href="https://blog.csdn.net/github_37515447/article/details/56840610" target="_blank" rel="noopener">Git Cheat Sheet 中文版</a></li></ol>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>搞定css三列布局</title>
      <link href="/2018/07/22/%E6%90%9E%E5%AE%9Acss%E4%B8%89%E5%88%97%E5%B8%83%E5%B1%80/"/>
      <url>/2018/07/22/%E6%90%9E%E5%AE%9Acss%E4%B8%89%E5%88%97%E5%B8%83%E5%B1%80/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="三列布局"><a href="#三列布局" class="headerlink" title="三列布局"></a>三列布局</h2><blockquote><p>谈到布局，首先就要想到定位，当别人问我，css 的 position 定位有哪些取值，分别表示什么意思？呃…..</p></blockquote><h3 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h3><p>position 有六个属性值：static、relative、absolute、fixed、sticky 和 inherit。</p><a id="more"></a><ul><li>static（默认）：元素框正常生成。块级元素生成一个矩形框，作为文档流的一部分；行内元素则会创建一个或多个行框，置于父级元素中。</li><li>relative：元素框相对于之前正常文档流中的位置发生偏移，并且原先的位置仍然被占据。发生偏移的时候，可能会覆盖其他元素。</li><li>absolute：元素框不再占有文档位置，并且相对于包含块进行偏移（所谓包含块就是最近一级外层元素 position 不为 static 的元素）。</li><li>fixed：元素框不再占有文档流位置，并且相对于视窗进行定位。</li><li>sticky：css3 新增属性值，粘性定位，相当于 relative 和 fixed 的混合。最初会被当作是 relative，相对原来位置进行偏移；一旦超过一定的阈值，会被当成 fixed 定位，相对于视口定位。</li></ul><h3 id="三列布局-1"><a href="#三列布局-1" class="headerlink" title="三列布局"></a>三列布局</h3><p>三列布局，其中一列宽度自适应，在 PC 端最常用之一，搞定了三列布局，其他一样的套路。</p><h5 id="方式一：浮动布局"><a href="#方式一：浮动布局" class="headerlink" title="方式一：浮动布局"></a>方式一：浮动布局</h5><p>缺点：html 结构不正确,当包含区域宽度小于左右框之和，右边框会被挤下来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.float .center &#123;</span><br><span class="line">        /* left: 300px;</span><br><span class="line">        right: 300px; */</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式二：定位布局"><a href="#方式二：定位布局" class="headerlink" title="方式二：定位布局"></a>方式二：定位布局</h4><p>缺点：要求父级要有非 static 定位，如果没有，左右框容易偏移出去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.position &#123;</span><br><span class="line">        position: relative;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .left &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .right &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        right: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .center &#123;</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout position&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式三：表格布局"><a href="#方式三：表格布局" class="headerlink" title="方式三：表格布局"></a>方式三：表格布局</h4><p>缺点：没什么缺点，恐惧 table</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.table &#123;</span><br><span class="line">        display: table;</span><br><span class="line">        width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table &gt; article &#123;</span><br><span class="line">        display: table-cell;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .center &#123;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .right &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout table&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式四：flex-弹性布局"><a href="#方式四：flex-弹性布局" class="headerlink" title="方式四：flex 弹性布局"></a>方式四：flex 弹性布局</h4><p>缺点：兼容性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.flex &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        flex-shrink: 0; /* 不缩小 */</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .center &#123;</span><br><span class="line">        flex-grow: 1; /* 增大 */</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .right &#123;</span><br><span class="line">        flex-shrink: 0; /* 不缩小 */</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout flex&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式五：grid-栅格布局"><a href="#方式五：grid-栅格布局" class="headerlink" title="方式五：grid 栅格布局"></a>方式五：grid 栅格布局</h4><p>缺点：兼容性 Firefox 52, Safari 10.1, Chrome 57, Opera 44</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.grid &#123;</span><br><span class="line">        display: grid;</span><br><span class="line">        grid-template-columns: 300px 1fr 300px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .left &#123;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .center &#123;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .right &#123;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout grid&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式六：圣杯布局"><a href="#方式六：圣杯布局" class="headerlink" title="方式六：圣杯布局"></a>方式六：圣杯布局</h4><p>缺点：需要多加一层标签，html 顺序不对，占用了布局框的 margin 属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.cup:after &#123;</span><br><span class="line">        clear: both;</span><br><span class="line">        content: &quot;&quot;;</span><br><span class="line">        display: table;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .center &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line">        float: left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .center &gt; div &#123;</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        overflow: auto;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -100%;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .right &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout cup&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;h1&gt;我是圣杯布局中间框&lt;/h1&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是圣杯布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是圣杯布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> 布局 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>水平且垂直居中方法（9种）</title>
      <link href="/2018/06/01/%E6%B0%B4%E5%B9%B3%E4%B8%94%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%EF%BC%889%E7%A7%8D%EF%BC%89/"/>
      <url>/2018/06/01/%E6%B0%B4%E5%B9%B3%E4%B8%94%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%EF%BC%889%E7%A7%8D%EF%BC%89/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="水平且垂直居中方法有哪些？"><a href="#水平且垂直居中方法有哪些？" class="headerlink" title="水平且垂直居中方法有哪些？"></a>水平且垂直居中方法有哪些？</h2><p>这在实际工作中经常用到，小记一下。</p><h4 id="演示-HTML-结构"><a href="#演示-HTML-结构" class="headerlink" title="演示 HTML 结构"></a>演示 HTML 结构</h4><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span> <span class="attr">class</span>=<span class="string">"div"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>i<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/gb/水平且垂直居中方法（9种）/0.bmp" alt=""></p><p>一般的，水平居中相对垂直居中简单很多，对于内联元素，父级元素设置<code>text-align: center;</code>；对于块级元素，子级元素设置<code>margin: 0 auto;</code>。以下结合水平居中强调实现垂直居中。</p><h4 id="1、已知父级元素宽高，父级元素定位非-static，子级元素定位设为position-absolute-fixed，再利用margin、left和top属性居中。"><a href="#1、已知父级元素宽高，父级元素定位非-static，子级元素定位设为position-absolute-fixed，再利用margin、left和top属性居中。" class="headerlink" title="1、已知父级元素宽高，父级元素定位非 static，子级元素定位设为position: absolute/fixed，再利用margin、left和top属性居中。"></a>1、已知父级元素宽高，父级元素定位非 static，子级元素定位设为<code>position: absolute/fixed</code>，再利用<code>margin</code>、<code>left</code>和<code>top</code>属性居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：需要已知父级元素固定宽高，才能确定<code>margin-left</code>和<code>margin-right</code>。</p><h4 id="2、子级元素是内联元素，父级元素设置line-height属性垂直居中。"><a href="#2、子级元素是内联元素，父级元素设置line-height属性垂直居中。" class="headerlink" title="2、子级元素是内联元素，父级元素设置line-height属性垂直居中。"></a>2、子级元素是内联元素，父级元素设置<code>line-height</code>属性垂直居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">120px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: normal;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：需要已知父级元素的固定高度，才可以确定<code>line-height</code>。</p><h4 id="3、子级元素是内联元素，父级元素用display-table-cell-和vertical-align-middle-属性实现垂直居中。"><a href="#3、子级元素是内联元素，父级元素用display-table-cell-和vertical-align-middle-属性实现垂直居中。" class="headerlink" title="3、子级元素是内联元素，父级元素用display: table-cell;和vertical-align: middle;属性实现垂直居中。"></a>3、子级元素是内联元素，父级元素用<code>display: table-cell;</code>和<code>vertical-align: middle;</code>属性实现垂直居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>inline-block</code>、<code>table-cell</code>不兼容 ie67</p><h4 id="4、对于子级是块级元素，父级元素同样用display-table-cell-和vertical-align-middle-属性实现垂直居中，水平方向居中用margin-0-auto-。"><a href="#4、对于子级是块级元素，父级元素同样用display-table-cell-和vertical-align-middle-属性实现垂直居中，水平方向居中用margin-0-auto-。" class="headerlink" title="4、对于子级是块级元素，父级元素同样用display: table-cell;和vertical-align: middle;属性实现垂直居中，水平方向居中用margin: 0 auto;。"></a>4、对于子级是块级元素，父级元素同样用<code>display: table-cell;</code>和<code>vertical-align: middle;</code>属性实现垂直居中，水平方向居中用<code>margin: 0 auto;</code>。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>table-cell</code>不兼容 ie67</p><h4 id="5、利用-css3-translate特性：位移是基于元素宽高的。"><a href="#5、利用-css3-translate特性：位移是基于元素宽高的。" class="headerlink" title="5、利用 css3 translate特性：位移是基于元素宽高的。"></a>5、利用 css3 <code>translate</code>特性：位移是基于元素宽高的。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-ms-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>translate</code>属性兼容 IE9+</p><h4 id="6、当父级是浮动的，用display-table-cell-会失效，这时需要包三层，第一层display-table-，第二层display-table-cell-第三次居中层"><a href="#6、当父级是浮动的，用display-table-cell-会失效，这时需要包三层，第一层display-table-，第二层display-table-cell-第三次居中层" class="headerlink" title="6、当父级是浮动的，用display: table-cell;会失效，这时需要包三层，第一层display: table;，第二层display: table-cell; 第三次居中层"></a>6、当父级是浮动的，用<code>display: table-cell;</code>会失效，这时需要包三层，第一层<code>display: table;</code>，第二层<code>display: table-cell;</code> 第三次居中层</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="comment">/* text-align: center; */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div3</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="comment">/* display: inline-block; */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，但 HTML 标签层数较多。</p><h4 id="7、绝对定位加四边定位为-0。"><a href="#7、绝对定位加四边定位为-0。" class="headerlink" title="7、绝对定位加四边定位为 0。"></a>7、绝对定位加四边定位为 0。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，但把定位属性全用上了</p><h4 id="8、利用-flex-布局justify-content-center-和align-items-center-属性居中。"><a href="#8、利用-flex-布局justify-content-center-和align-items-center-属性居中。" class="headerlink" title="8、利用 flex 布局justify-content: center;和align-items: center;属性居中。"></a>8、利用 flex 布局<code>justify-content: center;</code>和<code>align-items: center;</code>属性居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，兼容 IE10+</p><h4 id="9、利用-grid-布局，划分成-3x3-栅格，第二行第二列格子垂直水平居中"><a href="#9、利用-grid-布局，划分成-3x3-栅格，第二行第二列格子垂直水平居中" class="headerlink" title="9、利用 grid 布局，划分成 3x3 栅格，第二行第二列格子垂直水平居中"></a>9、利用 grid 布局，划分成 3x3 栅格，第二行第二列格子垂直水平居中</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">  <span class="attribute">grid-row-start</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">grid-column-start</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，兼容性 Firefox 52, Safari 10.1, Chrome 57, Opera 44</p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>深入理解BFC</title>
      <link href="/2018/05/21/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3BFC/"/>
      <url>/2018/05/21/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3BFC/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1、相关定义"><a href="#1、相关定义" class="headerlink" title="1、相关定义"></a>1、相关定义</h2><h3 id="1-1-Formatting-context"><a href="#1-1-Formatting-context" class="headerlink" title="1.1 Formatting context"></a>1.1 Formatting context</h3><p>Formatting context 是 W3C CSS2.1 规定中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素如何定位，以及和其他元素的关系和相互作用。最常见的 Formatting context 有 Block formatting context（简称 BFC）和 Inline formatting context（简称 IFC）。<br>css2.1 中只有 BFC 和 IFC，css3 中还增加了 GFC 和 FFC。</p><a id="more"></a><h3 id="1-2-BFC-定义"><a href="#1-2-BFC-定义" class="headerlink" title="1.2 BFC 定义"></a>1.2 BFC 定义</h3><p>BFC(Block formatting context)直译为“块级格式化上下文”。它是独立的渲染区域，只有 Block-level box 参与，它规定了内部的 Block-level Box 如何布局，并且与这个区域外部毫不相干。</p><h3 id="1-3-BFC-布局规则："><a href="#1-3-BFC-布局规则：" class="headerlink" title="1.3 BFC 布局规则："></a>1.3 BFC 布局规则：</h3><ul><li>内部的 Box 会在垂直方向，一个接一个地放置；</li><li>Box 垂直方向地距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠</li><li>每个元素的 margin box 的左边，与包含块 border box 的左边相接触（对于从左往右的格式化，否则相反）。即便存在浮动也是如此。</li><li>BFC 的区域不会与 float box 重叠。</li><li>BFC 就是页面的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</li><li>计算 BFC 的高度时，浮动元素页参与计算。<br>-</li></ul><h2 id="2、作用"><a href="#2、作用" class="headerlink" title="2、作用"></a>2、作用</h2><h3 id="2-1-可生成-BFC-的元素"><a href="#2-1-可生成-BFC-的元素" class="headerlink" title="2.1 可生成 BFC 的元素"></a>2.1 可生成 BFC 的元素</h3><ul><li>根元素 html；</li><li>float 属性不为 none；</li><li>position 为 absolute 或 fixed；</li><li>display 为 inline-block， table-cell，table-caption，flex， inline-flex；</li><li>overflow 不为 visible；</li></ul><h3 id="2-2-场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。"><a href="#2-2-场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。" class="headerlink" title="2.2 场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。"></a>2.2 场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .left-center-right.float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: rgba(0, 0, 0, 0.7);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .left-center-right.float .center &#123;</span><br><span class="line">        background-color: rgb(13, 218, 233);</span><br><span class="line">        height: 200px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .left-center-right.float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;left-center-right float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;我是左边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;我是右边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;我是中间区域块&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p>中间自适应栏边界会延展左右浮动区域<br><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/67CD3941EFC8420AAB3D54CB766DE219/7159" alt="image"></p><p>此时需要把中间栏变成 BFC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.left-center-right.float .center &#123;</span><br><span class="line">    background-color: rgb(13, 218, 233);</span><br><span class="line">    height: 200px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/97EE88BCB7AC428E95F9F9A5580639A7/7175" alt="image"></p><h3 id="2-3-场景二：子级元素有浮动，父级元素塌陷问题"><a href="#2-3-场景二：子级元素有浮动，父级元素塌陷问题" class="headerlink" title="2.3 场景二：子级元素有浮动，父级元素塌陷问题"></a>2.3 场景二：子级元素有浮动，父级元素塌陷问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .all-children-float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: rgba(0, 0, 0, 0.7);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .all-children-float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;all-children-float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;我是左边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;我是右边区域块&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/1B737A83C8D04BF9B0ABDE2EF28DF0E6/7190" alt="image"></p><p>此时需要将父级元素变成 BFC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.all-children-float &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/D00321F3DC9C4D578E6C89DD23DB0AB2/7200" alt="image"></p><h3 id="2-3-场景三：垂直方向-margin-出现重合"><a href="#2-3-场景三：垂直方向-margin-出现重合" class="headerlink" title="2.3 场景三：垂直方向 margin 出现重合"></a>2.3 场景三：垂直方向 margin 出现重合</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .verticle-block .block1 &#123;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(13, 218, 233);</span><br><span class="line">        margin: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .verticle-block .block2 &#123;</span><br><span class="line">        width: 150px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">        margin: 30px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;verticle-block&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;block1&quot;&gt;我是区域块1&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;block2&quot;&gt;我是区域块2&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><blockquote><p>Box 垂直方向的距离 margin 决定，属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠。</p></blockquote><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/4C9FBEC4951F4006939CD8AAEC698B21/7214" alt="image"></p><p>我们的做法是包一层标签，并转化成 BFC。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.wrapper1 &#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;section class=&quot;verticle-block&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;wrapper1&quot;&gt;</span><br><span class="line">        &lt;article class=&quot;block1&quot;&gt;我是区域块1&lt;/article&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;article class=&quot;block2&quot;&gt;我是区域块2&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/56A0200CB1424C20AB9930AA4CAC44E2/7217" alt="image"></p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css BFC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>css中的一些坑</title>
      <link href="/2018/05/06/css%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
      <url>/2018/05/06/css%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CSS-踩坑记"><a href="#CSS-踩坑记" class="headerlink" title="CSS 踩坑记"></a>CSS 踩坑记</h2><h4 id="1、如果子元素全部设置为浮动，则父元素是塌陷的"><a href="#1、如果子元素全部设置为浮动，则父元素是塌陷的" class="headerlink" title="1、如果子元素全部设置为浮动，则父元素是塌陷的"></a>1、如果子元素全部设置为浮动，则父元素是塌陷的</h4><ol><li>在元素末尾加块级空元素设置 clear:both；<a id="more"></a></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.last</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- more --><ol start="2"><li>在父级容器设置 before/after 模拟一个块级空元素</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>父级容器直接设置 overflow: auto/hidden;</li></ol><h4 id="2、普通文档流中块级垂直外边距合并"><a href="#2、普通文档流中块级垂直外边距合并" class="headerlink" title="2、普通文档流中块级垂直外边距合并"></a>2、普通文档流中块级垂直外边距合并</h4><p>解决办法：用 padding 代替，或改成 inline-block，或改成 float，或绝对定位</p><h4 id="3、使用-transition-闪屏"><a href="#3、使用-transition-闪屏" class="headerlink" title="3、使用 transition 闪屏"></a>3、使用 transition 闪屏</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">  <span class="attribute">-webkit-backface-visibility</span>: hidden;</span><br><span class="line">  <span class="attribute">-webkit-perspective</span>: <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过渡动画在没有启动硬件加速的情况下，会出现抖动现象，解决方案：用 translated3d、translateZ、transform 自动启动硬件加速，即改为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translated3d</span>(0, 0, 0);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translated3d</span>(0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ps:硬件加速导致 cpu 性能占用增加，电池电量消耗加大</p><h4 id="4、超出内容用”…”表示"><a href="#4、超出内容用”…”表示" class="headerlink" title="4、超出内容用”…”表示"></a>4、超出内容用”…”表示</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line-clamp"</span>&gt;</span></span><br><span class="line">来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line-clamp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">  <span class="attribute">-webkit-line-clamp</span>: <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>-webkit-line-clamp 用来限制在一个块元素显示的文本的行数</li><li>display: -webkit-box; 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示</li><li>-webkit-box-orient 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式</li></ol><p>缺点：<br>只有移动端和 webkit 浏览器支持</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/7959E51B5140437DA4C084E6B8E7472E/12000" alt=""></p><p>还不够，最后末尾最好有点渐变到”…”</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/D7C74A4FC9624AC7A638FC223AFF6926/12008" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line-clamp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.line-clamp</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">'...'</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(to right, transparent, #fff 55%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>将 height 设置为 line-height 整数倍，防止超出文字露出</li><li>ie10+才支持 linear-gradient 属性</li></ol><p>缺点：</p><p>当文字少于区域大小时，也会出现省略号</p><h4 id="输入框-placeholder-文字带颜色"><a href="#输入框-placeholder-文字带颜色" class="headerlink" title="输入框 placeholder 文字带颜色"></a>输入框 placeholder 文字带颜色</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* WebKit browsers */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-moz-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Mozilla Firefox 19+ */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:-ms-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Internet Explorer 10+ */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>移动端适配-rem</title>
      <link href="/2018/04/27/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D-rem/"/>
      <url>/2018/04/27/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D-rem/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="通过封装-rem-js-动态获取屏幕宽度"><a href="#通过封装-rem-js-动态获取屏幕宽度" class="headerlink" title="通过封装 rem.js,动态获取屏幕宽度"></a>通过封装 rem.js,动态获取屏幕宽度</h2><blockquote><p>通过 js 去动态计算根元素的 font-size，这样所有设备分辨率都能兼容适应</p></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">//designWidth:设计稿的实际宽度值，需要根据实际设置</span><br><span class="line">//maxWidth:制作稿的最大宽度值，需要根据实际设置</span><br><span class="line">//这段js的最后面有两个参数记得要设置，一个为设计稿实际宽度，一个为制作稿最大宽度，例如设计稿为750，最大宽度为750，则为(750,750)</span><br><span class="line">;</span><br><span class="line">(function(designWidth, maxWidth) &#123;</span><br><span class="line">    var doc = document,</span><br><span class="line">        win = window,</span><br><span class="line">        docEl = doc.documentElement,</span><br><span class="line">        remStyle = document.createElement(&quot;style&quot;),</span><br><span class="line">        tid;</span><br><span class="line"></span><br><span class="line">    function refreshRem() &#123;</span><br><span class="line">        var width = docEl.getBoundingClientRect().width;</span><br><span class="line">        maxWidth = maxWidth || 540;</span><br><span class="line">        width &gt; maxWidth &amp;&amp; (width = maxWidth);</span><br><span class="line">        var rem = width * 100 / designWidth;</span><br><span class="line">        remStyle.innerHTML = &apos;html&#123;font-size:&apos; + rem + &apos;px;&#125;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (docEl.firstElementChild) &#123;</span><br><span class="line">        docEl.firstElementChild.appendChild(remStyle);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        var wrap = doc.createElement(&quot;div&quot;);</span><br><span class="line">        wrap.appendChild(remStyle);</span><br><span class="line">        doc.write(wrap.innerHTML);</span><br><span class="line">        wrap = null;</span><br><span class="line">    &#125;</span><br><span class="line">    //要等 wiewport 设置好后才能执行 refreshRem，不然 refreshRem 会执行2次；</span><br><span class="line">    refreshRem();</span><br><span class="line"></span><br><span class="line">    win.addEventListener(&quot;resize&quot;, function() &#123;</span><br><span class="line">        clearTimeout(tid); //防止执行两次</span><br><span class="line">        tid = setTimeout(refreshRem, 300);</span><br><span class="line">    &#125;, false);</span><br><span class="line"></span><br><span class="line">    win.addEventListener(&quot;pageshow&quot;, function(e) &#123;</span><br><span class="line">        if (e.persisted) &#123; // 浏览器后退的时候重新计算</span><br><span class="line">            clearTimeout(tid);</span><br><span class="line">            tid = setTimeout(refreshRem, 300);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, false);</span><br><span class="line"></span><br><span class="line">    if (doc.readyState === &quot;complete&quot;) &#123;</span><br><span class="line">        doc.body.style.fontSize = &quot;16px&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        doc.addEventListener(&quot;DOMContentLoaded&quot;, function(e) &#123;</span><br><span class="line">            doc.body.style.fontSize = &quot;16px&quot;;</span><br><span class="line">        &#125;, false);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(640, 750);</span><br></pre></td></tr></table></figure><blockquote><p>当然也可以用 media query 设置适配集中主流的屏幕尺寸</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">html &#123;</span><br><span class="line">    font-size : 20px;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 401px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 25px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 428px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 26.75px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 481px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 30px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 569px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 35px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 641px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 40px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>提供一个移动端 base.css</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">body,</span><br><span class="line">dl,</span><br><span class="line">dd,</span><br><span class="line">ul,</span><br><span class="line">ol,</span><br><span class="line">h1,</span><br><span class="line">h2,</span><br><span class="line">h3,</span><br><span class="line">h4,</span><br><span class="line">h5,</span><br><span class="line">h6,</span><br><span class="line">pre,</span><br><span class="line">form,</span><br><span class="line">input,</span><br><span class="line">textarea,</span><br><span class="line">p,</span><br><span class="line">hr,</span><br><span class="line">thead,</span><br><span class="line">tbody,</span><br><span class="line">tfoot,</span><br><span class="line">th,</span><br><span class="line">td &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ul,</span><br><span class="line">ol &#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a &#123;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html &#123;</span><br><span class="line">    -ms-text-size-adjust: none;</span><br><span class="line">    -webkit-text-size-adjust: none;</span><br><span class="line">    text-size-adjust: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    line-height: 1.5;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body,</span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">select,</span><br><span class="line">textarea &#123;</span><br><span class="line">    font-family: &apos;helvetica neue&apos;, tahoma, &apos;hiragino sans gb&apos;, stheiti, &apos;wenquanyi micro hei&apos;, \5FAE\8F6F\96C5\9ED1, \5B8B\4F53, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b,</span><br><span class="line">strong &#123;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">i,</span><br><span class="line">em &#123;</span><br><span class="line">    font-style: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table &#123;</span><br><span class="line">    border-collapse: collapse;</span><br><span class="line">    border-spacing: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table th,</span><br><span class="line">table td &#123;</span><br><span class="line">    border: 1px solid #ddd;</span><br><span class="line">    padding: 5px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table th &#123;</span><br><span class="line">    font-weight: inherit;</span><br><span class="line">    border-bottom-width: 2px;</span><br><span class="line">    border-bottom-color: #ccc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">img &#123;</span><br><span class="line">    border: 0 none;</span><br><span class="line">    width: auto\9;</span><br><span class="line">    max-width: 100%;</span><br><span class="line">    vertical-align: top;</span><br><span class="line">    height: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">select,</span><br><span class="line">textarea &#123;</span><br><span class="line">    font-family: inherit;</span><br><span class="line">    font-size: 100%;</span><br><span class="line">    margin: 0;</span><br><span class="line">    vertical-align: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">html input[type=&quot;button&quot;],</span><br><span class="line">input[type=&quot;reset&quot;],</span><br><span class="line">input[type=&quot;submit&quot;] &#123;</span><br><span class="line">    -webkit-appearance: button;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button[disabled],</span><br><span class="line">input[disabled] &#123;</span><br><span class="line">    cursor: default;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;checkbox&quot;],</span><br><span class="line">input[type=&quot;radio&quot;] &#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;search&quot;] &#123;</span><br><span class="line">    -webkit-appearance: textfield;</span><br><span class="line">    -moz-box-sizing: content-box;</span><br><span class="line">    -webkit-box-sizing: content-box;</span><br><span class="line">    box-sizing: content-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;search&quot;]::-webkit-search-decoration &#123;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input:focus &#123;</span><br><span class="line">    outline: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">select[size],</span><br><span class="line">select[multiple],</span><br><span class="line">select[size][multiple] &#123;</span><br><span class="line">    border: 1px solid #AAA;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">article,</span><br><span class="line">aside,</span><br><span class="line">details,</span><br><span class="line">figcaption,</span><br><span class="line">figure,</span><br><span class="line">footer,</span><br><span class="line">header,</span><br><span class="line">hgroup,</span><br><span class="line">main,</span><br><span class="line">nav,</span><br><span class="line">section,</span><br><span class="line">summary &#123;</span><br><span class="line">    display: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">audio,</span><br><span class="line">canvas,</span><br><span class="line">video,</span><br><span class="line">progress &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    background: #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input::-webkit-input-speech-button &#123;</span><br><span class="line">    display: none</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">textarea &#123;</span><br><span class="line">    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> mobile </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue的数据驱动原理及简单实现</title>
      <link href="/2017/09/10/vue%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E5%8E%9F%E7%90%86%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/"/>
      <url>/2017/09/10/vue%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E5%8E%9F%E7%90%86%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Vue双向数据绑定原理"><a href="#Vue双向数据绑定原理" class="headerlink" title="Vue双向数据绑定原理"></a>Vue双向数据绑定原理</h2><h3 id="1、目标实现"><a href="#1、目标实现" class="headerlink" title="1、目标实现"></a>1、目标实现</h3><ol><li>理解双向数据绑定原理；</li><li>实现 &#123;&#123; &#125;&#125;、v-model和基本事件指令v-bind（:）、v-on（@）；</li><li>新增属性的双向绑定处理；<a id="more"></a></li></ol><h3 id="2、双向数据绑定原理"><a href="#2、双向数据绑定原理" class="headerlink" title="2、双向数据绑定原理"></a>2、双向数据绑定原理</h3><p>vue实现对数据的双向绑定，通过对数据劫持结合发布者-订阅者模式实现的。</p><h4 id="2-1-Object-defineProperty"><a href="#2-1-Object-defineProperty" class="headerlink" title="2.1 Object.defineProperty"></a>2.1 Object.defineProperty</h4><p>vue通过Object.defineProperty来实现数据劫持，会对数据对象每个属性添加对应的get和set方法，对数据进行读取和赋值操作就分别调用get和set方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">    enumerable: <span class="literal">true</span>,</span><br><span class="line">    configurable: <span class="literal">true</span>,</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;,</span><br><span class="line">    set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>我们可以将一些方法放到里面，从而完成对数据的监听（劫持）和视图的同步更新。</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/F8D35A0DDA0C438990651233F3954DD3/6460" alt="image"></p><h4 id="2-2-过程说明"><a href="#2-2-过程说明" class="headerlink" title="2.2 过程说明"></a>2.2 过程说明</h4><p>实现双向数据绑定，首先要对数据进行数据监听，需要一个监听器Observer，监听所有属性。如果属性发生变化，会调用setter和getter，再去告诉订阅者Watcher是否需要更新。由于订阅者有很多个，我们需要一个消息订阅器Dep来专门收集这些订阅者，然后在监听器Observer和订阅者Watcher之间进行统一管理。还有，我们需要一个指令解析器Complie，对每个元素进行扫描和解析，将相关指令对应初始化成一个订阅者Watcher，并替换模板数据或绑定相应函数。当订阅者Watcher接收到相应属性的变化，就会执行对应的更新函数，从而更新视图。</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/A6333A71A8E243A38EAD196BB13F9EE7/6463" alt="image"></p><h3 id="3、实现Observer"><a href="#3、实现Observer" class="headerlink" title="3、实现Observer"></a>3、实现Observer</h3><p>Observer是一个数据监听器，核心方法是我们提到过的Object.defineProperty。如果要监听所有属性的话，则需要通过递归遍历，对每个子属性都defineProperty。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data || <span class="keyword">typeof</span> data !== <span class="string">"object"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = data;</span><br><span class="line">    <span class="keyword">this</span>.walk(data);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性遍历</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    walk: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="built_in">Object</span>.keys(data).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">            self.defineReactive(data, key, data[key]);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    defineReactive: <span class="function"><span class="keyword">function</span>(<span class="params">data, key, val</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        observe(val);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">            enumerable: <span class="literal">true</span>,</span><br><span class="line">            configurable: <span class="literal">true</span>,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> val;</span><br><span class="line">            &#125;,</span><br><span class="line">            set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (newVal === val) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                val = newVal;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"属性："</span> + key + <span class="string">"被监听了，现在值为："</span> + newVal);</span><br><span class="line"></span><br><span class="line">                updateView(newVal);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        updateView(val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Observer(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听数据</span></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新视图</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; val</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateView</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $name = <span class="built_in">document</span>.querySelector(<span class="string">"#name"</span>);</span><br><span class="line">    $name.innerHTML = val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myvm = <span class="keyword">new</span> MyVue(&#123;</span><br><span class="line">    el: <span class="string">"#demo"</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        name: <span class="string">"hello word"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/93FC8BA149764033996B07C9031FBE2D/6483" alt="image"></p><h3 id="4、实现Dep"><a href="#4、实现Dep" class="headerlink" title="4、实现Dep"></a>4、实现Dep</h3><p>在流程介绍中，我们需要创建一个可以订阅者的订阅器Dep，主要负责手机订阅者，属性变化的时候执行相应的订阅者，更新函数。下面稍加改造Observer，就可以插入我们的订阅器。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    defineReactive: <span class="function"><span class="keyword">function</span>(<span class="params">data, key, val</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dep = <span class="keyword">new</span> Dep();</span><br><span class="line"></span><br><span class="line">        observe(val);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">            enumerable: <span class="literal">true</span>,</span><br><span class="line">            configurable: <span class="literal">true</span>,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否需要添加订阅者 什么时候添加订阅者呢？ 与实际页面DOM有关联的data属性才添加相应的订阅者</span></span><br><span class="line">                <span class="keyword">if</span> (Dep.target) &#123;</span><br><span class="line">                    <span class="comment">// 添加一个订阅者</span></span><br><span class="line">                    dep.addSub(Dep.target);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> val;</span><br><span class="line">            &#125;,</span><br><span class="line">            set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (newVal === val) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                val = newVal;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"属性："</span> + key + <span class="string">"被监听了，现在值为："</span> + newVal);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 通知所有订阅者</span></span><br><span class="line">                dep.notify(newVal);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        updateView(val);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 订阅器标识本身实例</span></span><br><span class="line">        Dep.target = dep;</span><br><span class="line">        <span class="comment">// 强行执行getter，往订阅器中添加订阅者</span></span><br><span class="line">        <span class="keyword">var</span> v = data[key];</span><br><span class="line">        <span class="comment">// 释放自己</span></span><br><span class="line">        Dep.target = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Observer(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订阅器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Dep</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.subs = [];</span><br><span class="line">    <span class="keyword">this</span>.target = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dep.prototype = &#123;</span><br><span class="line">    addSub: <span class="function"><span class="keyword">function</span>(<span class="params">sub</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subs.push(sub);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"this.subs:"</span>, <span class="keyword">this</span>.subs);</span><br><span class="line">    &#125;,</span><br><span class="line">    notify: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subs.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">sub</span>) </span>&#123;</span><br><span class="line">            sub.update(data);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    update: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        updateView(val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>PS:将订阅器Dep添加到一个订阅者设计到getter里面，是为了让Watcher初始化进行触发。</p><h3 id="5、实现Watcher"><a href="#5、实现Watcher" class="headerlink" title="5、实现Watcher"></a>5、实现Watcher</h3><p>订阅者Watcher在初始化的时候需要将自己添加到订阅器Dep中，那该如何添加呢？我们已经知道监听器Observer是在get函数执行添加了订阅者Watcher的操作，所以我们只要在订阅者Watcher初始化的时候触发对应的get函数去执行添加订阅者操作。那么，怎样去触发get函数？很简单，只需获取对应的属性值就可以触发了，因为我们已经用Object.defineProperty监听了所有属性。vue在这里做了个技巧处理，就是咋我们添加订阅者的时候，做一个判断，判断是否是事先缓存好的Dep.target，在订阅者添加成功后，把target重置null即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订阅者</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; vm vue对象</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; exp 属性值</span></span><br><span class="line"><span class="comment"> * @param &#123;Function&#125; cb 回调函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Watcher</span>(<span class="params">vm, exp, cb</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.vm = vm;</span><br><span class="line">    <span class="keyword">this</span>.exp = exp;</span><br><span class="line">    <span class="keyword">this</span>.cb = cb;</span><br><span class="line">    <span class="comment">// 将自己添加到订阅器</span></span><br><span class="line">    <span class="keyword">this</span>.value = <span class="keyword">this</span>.get();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Watcher.prototype = &#123;</span><br><span class="line">    update: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.run();</span><br><span class="line">    &#125;,</span><br><span class="line">    run: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> value = <span class="keyword">this</span>.vm.data[<span class="keyword">this</span>.exp];</span><br><span class="line">        <span class="keyword">var</span> oldVal = <span class="keyword">this</span>.value;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (value !== oldVal) &#123;</span><br><span class="line">            <span class="keyword">this</span>.value = value;</span><br><span class="line">            <span class="keyword">this</span>.cb.call(<span class="keyword">this</span>.vm, value, oldVal);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 缓存自己 做个标记</span></span><br><span class="line">        Dep.target = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 强制执行监听器里的get函数</span></span><br><span class="line">        <span class="comment">// this.vm.data[this.exp] 调用getter，添加一个订阅者sub，存入到全局变量subs</span></span><br><span class="line">        <span class="keyword">var</span> value = <span class="keyword">this</span>.vm.data[<span class="keyword">this</span>.exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 释放自己</span></span><br><span class="line">        Dep.target = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> $name = <span class="built_in">document</span>.querySelector(<span class="string">"#name"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给name属性添加一个订阅者到订阅器中，当属性发生变化后，触发回调</span></span><br><span class="line">    <span class="keyword">var</span> w = <span class="keyword">new</span> Watcher(<span class="keyword">this</span>, <span class="string">"name"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        $name.innerHTML = val;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里，其实已经实现了我们的双向数据绑定：能够根据初始数据初始化页面特定元素，同时当数据改变也能更新视图。</p><h3 id="5、实现Compile"><a href="#5、实现Compile" class="headerlink" title="5、实现Compile"></a>5、实现Compile</h3><p>步骤4整个过程都能有去解析DOM节点，而是直接固定节点进行替换。接下来我们就来实现一个解析器，完成一些解析和绑定工作。</p><ol><li>获取页面的DOM节点，遍历存入到文档碎片对象中；</li><li>解析出文本节点，匹配&#123;&#123;&#125;&#125;（暂时只做”&#123;&#123;&#125;&#125;”的解析），用初始化数据替换，并添加相应订阅者；</li><li>分离出节点的指令v-on、v-bind和v-model，绑定相应的事件和函数；</li></ol><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/BD96748FED95467A8B44B1AFFB499D44/6764" alt="image"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编译器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; el 根元素</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; vm vue对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Compile</span>(<span class="params">el, vm</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.vm = vm;</span><br><span class="line">    <span class="keyword">this</span>.el = <span class="built_in">document</span>.querySelector(el);</span><br><span class="line">    <span class="keyword">this</span>.fragment = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>.init();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Compile.prototype = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.el) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"this.el:"</span>, <span class="keyword">this</span>.el);</span><br><span class="line">            <span class="comment">// 移除页面元素生成文档碎片</span></span><br><span class="line">            <span class="keyword">this</span>.fragment = <span class="keyword">this</span>.nodeToFragment(<span class="keyword">this</span>.el);</span><br><span class="line">            <span class="comment">// 编译文档碎片</span></span><br><span class="line">            <span class="keyword">this</span>.compileElement(<span class="keyword">this</span>.fragment);</span><br><span class="line">            <span class="keyword">this</span>.el.appendChild(<span class="keyword">this</span>.fragment);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"DOM Selector is not exist"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 页面DOM节点转化成文档碎片</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    nodeToFragment: <span class="function"><span class="keyword">function</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> fragment = <span class="built_in">document</span>.createDocumentFragment();</span><br><span class="line">        <span class="keyword">var</span> child = el.firstChild;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 此处添加打印，出来的不是页面中原始的DOM，而是编译后的？</span></span><br><span class="line">        <span class="comment">// NodeList是引用关系，在编译后相应的值被替换了，这里打印出来的NodeList是后来被引用更新了的</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"el:"</span>, el);</span><br><span class="line">        <span class="comment">// console.log("el.firstChild:", el.firstChild.nodeValue);</span></span><br><span class="line">        <span class="keyword">while</span> (child) &#123;</span><br><span class="line">            <span class="comment">// append后，原el上的子节点被删除了，挂载在文档碎片上</span></span><br><span class="line">            fragment.appendChild(child);</span><br><span class="line">            child = el.firstChild;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译文档碎片，遍历到当前是文本节点则去编译文本节点，如果当前是元素节点，并且存在子节点，则继续递归遍历</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileElement: <span class="function"><span class="keyword">function</span>(<span class="params">fragment</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> childNodes = fragment.childNodes;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        [].slice.call(childNodes).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// var reg = /\&#123;\&#123;\s*(.+)\s*\&#125;\&#125;/g;</span></span><br><span class="line">            <span class="keyword">var</span> reg = <span class="regexp">/\&#123;\&#123;\s*((?:.|\n)+?)\s*\&#125;\&#125;/g</span>;</span><br><span class="line">            <span class="keyword">var</span> text = node.textContent;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (self.isElementNode(node)) &#123;</span><br><span class="line">                self.compileAttr(node);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (self.isTextNode(node) &amp;&amp; reg.test(text)) &#123;</span><br><span class="line">                reg.lastIndex = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">/* var match;</span></span><br><span class="line"><span class="comment">                while(match = reg.exec(text)) &#123;</span></span><br><span class="line"><span class="comment">                    self.compileText(node, match[1]);</span></span><br><span class="line"><span class="comment">                &#125; */</span></span><br><span class="line"></span><br><span class="line">                self.compileText(node, reg.exec(text)[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (node.childNodes &amp;&amp; node.childNodes.length) &#123;</span><br><span class="line">                self.compileElement(node);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileAttr: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> nodeAttrs = node.attributes;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Array</span>.prototype.forEach.call(nodeAttrs, <span class="function"><span class="keyword">function</span>(<span class="params">attr</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> attrName = attr.name;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 只对vue本身指令进行操作</span></span><br><span class="line">            <span class="keyword">if</span> (self.isDirective(attrName)) &#123;</span><br><span class="line">                <span class="keyword">var</span> exp = attr.value;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// v-on指令</span></span><br><span class="line">                <span class="keyword">if</span> (self.isOnDirective(attrName)) &#123;</span><br><span class="line">                    self.compileOn(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// v-bind指令</span></span><br><span class="line">                <span class="keyword">if</span>(self.isBindDirective(attrName)) &#123;</span><br><span class="line">                    self.compileBind(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// v-model</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (self.isModelDirective(attrName)) &#123;</span><br><span class="line">                    self.compileModel(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                node.removeAttribute(attrName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译文档碎片节点文本，即对标记替换</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileText: <span class="function"><span class="keyword">function</span>(<span class="params">node, exp</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> exps = exp.split(<span class="string">"."</span>);</span><br><span class="line">        <span class="keyword">var</span> initText = <span class="keyword">this</span>.vm.data[exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化视图</span></span><br><span class="line">        <span class="keyword">this</span>.updateText(node, initText);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加一个订阅者到订阅器</span></span><br><span class="line">        <span class="keyword">var</span> w = <span class="keyword">new</span> Watcher(<span class="keyword">this</span>.vm, exp, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">            self.updateText(node, val);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-on指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileOn: <span class="function"><span class="keyword">function</span>(<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// @xxx v-on:xxx</span></span><br><span class="line">        <span class="keyword">var</span> onRE = <span class="regexp">/^@|^v-on:/</span>;</span><br><span class="line">        <span class="keyword">var</span> eventType = attrName.replace(onRE, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> cb = vm.methods[exp];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (eventType &amp;&amp; cb) &#123;</span><br><span class="line">            node.addEventListener(eventType, cb.bind(vm), <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-bind指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileBind: <span class="function"><span class="keyword">function</span> (<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// :xxx v-bind:xxx</span></span><br><span class="line">        <span class="keyword">var</span> bindRE = <span class="regexp">/^:|^v-bind:/</span>;</span><br><span class="line">        <span class="keyword">var</span> attr = attrName.replace(bindRE, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> val = vm.data[exp];</span><br><span class="line"></span><br><span class="line">        node.setAttribute(attr, val);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-model指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileModel: <span class="function"><span class="keyword">function</span>(<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> val = <span class="keyword">this</span>.vm.data[exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化视图</span></span><br><span class="line">        <span class="keyword">this</span>.modelUpdater(node, val);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加一个订阅者到订阅器</span></span><br><span class="line">        <span class="keyword">new</span> Watcher(<span class="keyword">this</span>.vm, exp, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            self.modelUpdater(node, value);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绑定input事件</span></span><br><span class="line">        node.addEventListener(<span class="string">"input"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> newVal = e.target.value;</span><br><span class="line">            <span class="keyword">if</span> (val === newVal) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            self.vm.data[exp] = newVal;</span><br><span class="line">            <span class="comment">// val = newVal;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新文档碎片相应的文本节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    updateText: <span class="function"><span class="keyword">function</span>(<span class="params">node, val</span>) </span>&#123;</span><br><span class="line">        node.textContent = <span class="keyword">typeof</span> val === <span class="string">"undefined"</span> ? <span class="string">""</span> : val;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * model更新节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    modelUpdater: <span class="function"><span class="keyword">function</span>(<span class="params">node, val, oldVal</span>) </span>&#123;</span><br><span class="line">        node.value = <span class="keyword">typeof</span> val == <span class="string">"undefined"</span> ? <span class="string">""</span> : val;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是vue指令，包括v-<span class="doctag">xxx:</span>,:xxx,@xxx</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dirRE = <span class="regexp">/^v-|^@|^:/</span>;</span><br><span class="line">        <span class="keyword">return</span> dirRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-on指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isOnDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> onRE = <span class="regexp">/^v-on:|^@/</span>;</span><br><span class="line">        <span class="keyword">return</span> onRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-bind指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isBindDirective: <span class="function"><span class="keyword">function</span> (<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> bindRE = <span class="regexp">/^v-bind:|^:/</span>;</span><br><span class="line">        <span class="keyword">return</span> bindRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-model指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isModelDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> mdRE = <span class="regexp">/^v-model/</span>;</span><br><span class="line">        <span class="keyword">return</span> mdRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断元素节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isElementNode: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> node.nodeType == <span class="number">1</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文本节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isTextNode: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> node.nodeType == <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.methods = options.methods;</span><br><span class="line"></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Compile(options.el, <span class="keyword">this</span>.vm);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们就可以调用指令v-bind、v-on和v-model。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="undefined">            color: red;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-bind:class</span>=<span class="string">"myColor"</span>&gt;</span>&amp;#123;&amp;#123; name &amp;#125;&amp;#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">v-model</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"clickOk"</span>&gt;</span>Ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> myvm = <span class="keyword">new</span> MyVue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">"#demo"</span>,</span></span><br><span class="line"><span class="undefined">    data: &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">"hello word"</span>,</span></span><br><span class="line"><span class="javascript">        myColor: <span class="string">"red"</span></span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="javascript">        clickOk: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">"I am OK"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    myvm.data.name = <span class="string">"wawawa...vue was born"</span>;</span></span><br><span class="line"><span class="undefined">&#125;, 2000);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/0442953EE78A48C3B26FFE48B1731582/6629" alt="image"></p><h3 id="5、其他"><a href="#5、其他" class="headerlink" title="5、其他"></a>5、其他</h3><h4 id="5-1-proxy代理data"><a href="#5-1-proxy代理data" class="headerlink" title="5.1 proxy代理data"></a>5.1 proxy代理data</h4><p>可能注意到了，我们不管是在赋值还是取值，都是在myvm.data.someAttr上操作的，而在vue上我们习惯直接myvm.someAttr这种形式。怎样实现呢？同样，我们可以用Object.defineProperty对data所有属性做一个代理，即访问vue实例属性时，代理到data上。很简单，实现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 将数据拓展到vue的根，方便读取和设置</span><br><span class="line"> */</span><br><span class="line">MyVue.prototype.proxy = function(key) &#123;</span><br><span class="line">    var self = this;</span><br><span class="line"></span><br><span class="line">    Object.defineProperty(this, key, &#123;</span><br><span class="line">        enumerable: true,</span><br><span class="line">        configurable: true,</span><br><span class="line">        get: function proxyGetter() &#123;</span><br><span class="line">            return self.data[key];</span><br><span class="line">        &#125;,</span><br><span class="line">        set: function proxySetter(newVal) &#123;</span><br><span class="line">            self.data[key] = newVal;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/71B50262A5944F928CDA8CFD8944A538/6670" alt="image"></p><h4 id="5-2-parsePath"><a href="#5-2-parsePath" class="headerlink" title="5.2 parsePath"></a>5.2 parsePath</h4><p>上面对于data的操作只是到对于简单的基本类型属性，对于对象属性的改变该怎么更新到位呢？其实，只要深度遍历对象属性路径，就可以找到要访问属性值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据对象属性路径，最终获取值</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; obj 对象</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; path 路径</span></span><br><span class="line"><span class="comment"> * return 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parsePath</span>(<span class="params">obj, path</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bailRE = <span class="regexp">/[^\w.$]/</span>;</span><br><span class="line">    <span class="keyword">if</span> (bailRE.test(path)) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> segments = path.split(<span class="string">'.'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; segments.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!obj) &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        obj = obj[segments[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用这个方法替换我们的所有取值操作<br>vm[exp] =&gt; parsePath(vm, exp)</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/BB5F59CFD0244D4991E13B5D35F88AF3/6709" alt="image"></p><h3 id="6、新增属性的双向数据绑定"><a href="#6、新增属性的双向数据绑定" class="headerlink" title="6、新增属性的双向数据绑定"></a>6、新增属性的双向数据绑定</h3><h4 id="6-1-给对象添加属性"><a href="#6-1-给对象添加属性" class="headerlink" title="6.1 给对象添加属性"></a>6.1 给对象添加属性</h4><p>Vue 不允许在已经创建的实例上动态添加新的根级响应式属性 (root-level reactive property)。然而它可以使用 Vue.set(object, key, value) 方法将响应属性添加到嵌套的对象上。<br>也就是我们需要在Vue原型上添加一个set方法去设置新添加的属性，新属性同样要进行监听和添加订阅者。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue的set方法，用于外部新增属性 Vue.$set(target, key, val)</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; target 数据</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; key 属性</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; val 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params">target, key, val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(target)) &#123;</span><br><span class="line">        target.length = <span class="built_in">Math</span>.max(target.length, key);</span><br><span class="line">        target.splice(key, <span class="number">1</span>, val);</span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (target.hasOwnProperty(key)) &#123;</span><br><span class="line">        target[key] = val;</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> ob = (target).$Observer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!ob) &#123;</span><br><span class="line">        target[key] = val;</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对新增属性定义监听</span></span><br><span class="line">    ob.defineReactive(target, key, val);</span><br><span class="line"></span><br><span class="line">    ob.dep.notify();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyVue.prototype.$set = set;</span><br></pre></td></tr></table></figure><h4 id="6-1-给数组对象添加属性"><a href="#6-1-给数组对象添加属性" class="headerlink" title="6.1 给数组对象添加属性"></a>6.1 给数组对象添加属性</h4><p>把数组看成一个特殊的对象，就很容易理解了，对于unshift、push和splice变异方法是添加了对象的属性的，需要对新加的属性进行监听和添加订阅者。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arrKeys = [<span class="string">"push"</span>, <span class="string">"pop"</span>, <span class="string">"shift"</span>, <span class="string">"unshift"</span>, <span class="string">"splice"</span>, <span class="string">"sort"</span>, <span class="string">"reverse"</span>];</span><br><span class="line"><span class="keyword">var</span> extendArr = [];</span><br><span class="line"></span><br><span class="line">arrKeys.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">    def(extendArr, key, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result,</span><br><span class="line">            arrProto = <span class="built_in">Array</span>.prototype,</span><br><span class="line">            ob = <span class="keyword">this</span>.$Observer,</span><br><span class="line">            arr = arrProto.slice.call(<span class="built_in">arguments</span>),</span><br><span class="line">            inserted,</span><br><span class="line">            index;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"push"</span>:</span><br><span class="line">                inserted = arr;</span><br><span class="line">                index = <span class="keyword">this</span>.length;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"unshift"</span>:</span><br><span class="line">                inserted = arr;</span><br><span class="line">                index = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"splice"</span>:</span><br><span class="line">                inserted = arr.slice(<span class="number">2</span>);</span><br><span class="line">                index = arr[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        result = arrProto[key].apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听新增数组对象属性</span></span><br><span class="line">        <span class="keyword">if</span> (inserted) &#123;</span><br><span class="line">            ob.observeArray(inserted);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ob.dep.notify();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arrayKeys = <span class="built_in">Object</span>.getOwnPropertyNames(extendArr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.dep = <span class="keyword">new</span> Dep();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data || <span class="keyword">typeof</span> data !== <span class="string">"object"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在每个object上添加一个observer</span></span><br><span class="line">    def(data, <span class="string">"$Observer"</span>, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 继承变异方法</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(data)) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把数组变异方法的处理，添加到原型链上</span></span><br><span class="line">        data.__proto__ = extendArr;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听数组对象属性</span></span><br><span class="line">        <span class="keyword">this</span>.observeArray(data);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">        <span class="keyword">this</span>.walk(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    observeArray: <span class="function"><span class="keyword">function</span>(<span class="params">items</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"items:"</span>, items);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, l = items.length; i &lt; l; i++) &#123;</span><br><span class="line">            observe(items[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue-cli中遇到的坑</title>
      <link href="/2017/09/02/vue-cli%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
      <url>/2017/09/02/vue-cli%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Vue-cli-脚手架"><a href="#Vue-cli-脚手架" class="headerlink" title="Vue-cli 脚手架"></a>Vue-cli 脚手架</h2><p>项目构建自动化，错误查起来越来越不知所措，坑很多，踩过后要记录，防止踩第二遍</p><h4 id="vue-单文件-import-css-文件，不加-会报错"><a href="#vue-单文件-import-css-文件，不加-会报错" class="headerlink" title="vue 单文件@import css 文件，不加~会报错"></a>vue 单文件@import css 文件，不加<code>~</code>会报错</h4><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">@import &apos;assets/css/variable&apos;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[HMR] bundle has 1 errors</span><br><span class="line">172:176 ./~/css-loader?&#123;&quot;minimize&quot;:false,&quot;sourceMap&quot;:false&#125;!./~/vue-loader/lib/style-compiler?&#123;&quot;vue&quot;:true,&quot;id&quot;:&quot;data-v-be4708e4&quot;,&quot;scoped&quot;:true,&quot;hasInlineConfig&quot;:false&#125;!./~/stylus-loader?&#123;&quot;sourceMap&quot;:false&#125;!./~/vue-loader/lib/selector.js?type=styles&amp;index=0!./src/components/views/programs/Programs.vue</span><br><span class="line">Module build failed: Error: D:\appSoft\wampserver\wamp64\www\iHomed_vue\src\components\views\programs\Programs.vue:200:9</span><br><span class="line">   196| &#125;</span><br><span class="line">   197| &lt;/script&gt;</span><br><span class="line">   198|</span><br><span class="line">   199| &lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">   200| @import &apos;assets/css/variable&apos;</span><br><span class="line">----------------^</span><br><span class="line">   201|</span><br></pre></td></tr></table></figure><p>正确写法<code>@import &#39;~assets/css/variable&#39;</code></p><h4 id="vue-cli-中-config-index-js-配置说明"><a href="#vue-cli-中-config-index-js-配置说明" class="headerlink" title="vue-cli 中 config/index.js 配置说明"></a>vue-cli 中 config/index.js 配置说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  build: &#123;</span><br><span class="line">    env: require(&apos;./prod.env&apos;), // 使用 config/prod.env.js 中定义的编译环境</span><br><span class="line">    index: path.resolve(__dirname, &apos;../dist/index.html&apos;), // 编译输入的 index.html 文件</span><br><span class="line">    assetsRoot: path.resolve(__dirname, &apos;../dist&apos;), // 编译输出的静态资源路径</span><br><span class="line">    assetsSubDirectory: &apos;static&apos;, // 编译输出的二级目录</span><br><span class="line">    assetsPublicPath: &apos;/&apos;, // 编译发布的根目录，可配置为资源服务器域名或 CDN 域名</span><br><span class="line">    productionSourceMap: true, // 是否开启 cssSourceMap</span><br><span class="line">    // Gzip off by default as many popular static hosts such as</span><br><span class="line">    // Surge or Netlify already gzip all static assets for you.</span><br><span class="line">    // Before setting to `true`, make sure to:</span><br><span class="line">    // npm install --save-dev compression-webpack-plugin</span><br><span class="line">    productionGzip: false, // 是否开启 gzip</span><br><span class="line">    productionGzipExtensions: [&apos;js&apos;, &apos;css&apos;], // 需要使用 gzip 压缩的文件扩展名</span><br><span class="line">    // Run the build command with an extra argument to</span><br><span class="line">    // View the bundle analyzer report after build finishes:</span><br><span class="line">    // `npm run build --report`</span><br><span class="line">    // Set to `true` or `false` to always turn it on or off</span><br><span class="line">    bundleAnalyzerReport: process.env.npm_config_report</span><br><span class="line">  &#125;,</span><br><span class="line">  dev: &#123; // dev 环境</span><br><span class="line">    env: require(&apos;./dev.env&apos;), // 使用 config/dev.env.js 中定义的编译环境</span><br><span class="line">    port: 8084, // 运行测试页面的端口</span><br><span class="line">    autoOpenBrowser: true, // 自动在浏览器中打开</span><br><span class="line">    assetsSubDirectory: &apos;static&apos;, // 编译输出的二级目录</span><br><span class="line">    assetsPublicPath: &apos;/&apos;, // 编译发布的根目录，可配置为资源服务器域名或 CDN 域名</span><br><span class="line">    proxyTable: &#123;&#125;, // 需要 proxyTable 代理的接口（可跨域）</span><br><span class="line">    // CSS Sourcemaps off by default because relative paths are &quot;buggy&quot;</span><br><span class="line">    // with this option, according to the CSS-Loader README</span><br><span class="line">    // (https://github.com/webpack/css-loader#sourcemaps)</span><br><span class="line">    // In our experience, they generally work as expected,</span><br><span class="line">    // just be aware of this issue when enabling this option.</span><br><span class="line">    cssSourceMap: false  // 是否开启 cssSourceMap</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>曾经不易理解的两点<code>assetsSubDirectory</code>和<code>assetsPublicPath</code></p><ol><li><p>assetsSubDirectory<br>被 webpack 编译处理过的资源文件都会在这个 build.assetsRoot 目录下，如果 assetsRoot 值是<code>&quot;/web/app&quot;</code>，assetsSubDirectory 值为<code>&quot;static&quot;</code>，那么，webpack 将把所有资源编译到<code>web/app/static</code>目录下</p></li><li><p>assetsPublicPath<br>这个是通过 http 服务器运行的 url 路径，大多数情况下，这个是根目录（/）。如果你的后台框架对静态资源 url 前缀有要求，你仅需改变这个参数。比如不用本地的，而用线上的 CDN。</p></li></ol><h4 id="父子组件嵌套，各个钩子函数触发顺序"><a href="#父子组件嵌套，各个钩子函数触发顺序" class="headerlink" title="父子组件嵌套，各个钩子函数触发顺序"></a>父子组件嵌套，各个钩子函数触发顺序</h4><p>偶然看到这个问题：vue 中父子组件各个钩子函数触发顺序是怎样的？一时还真背问到了，在项目中添加打印才发现是这样子的</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/E40E6B0ED1F5479F909A69469C83D99A/12039" alt=""></p><p>顺序是：先依次触发父级组件<code>beforeCreate</code>、<code>create</code>和<code>beforeMounte</code>，再依次触发子级组件<code>beforeCreate</code>、<code>create</code>、<code>beforeMounte</code>和<code>mounted</code>，最后父级组件<code>mounted</code></p><h4 id="父子组件之间通信，兄弟组件之间通信"><a href="#父子组件之间通信，兄弟组件之间通信" class="headerlink" title="父子组件之间通信，兄弟组件之间通信"></a>父子组件之间通信，兄弟组件之间通信</h4><p>这个问题基本清晰，在这归纳一下</p><h5 id="1-父组件数据传给子组件"><a href="#1-父组件数据传给子组件" class="headerlink" title="1. 父组件数据传给子组件"></a>1. 父组件数据传给子组件</h5><p>通过<code>props</code>属性传递</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent-component</span> <span class="attr">:parent-data</span>=<span class="string">"pdata"</span>&gt;</span><span class="tag">&lt;/<span class="name">parent-component</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    parentData: &#123;</span><br><span class="line">      type: <span class="built_in">String</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="string">''</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-子组件传数据给父组件"><a href="#2-子组件传数据给父组件" class="headerlink" title="2. 子组件传数据给父组件"></a>2. 子组件传数据给父组件</h5><p>使用<code>$emit</code>派发</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent-component</span> <span class="attr">:parent-data:sync</span>=<span class="string">"pdata"</span> @<span class="attr">handle-callback</span>=<span class="string">"handlerCallback"</span>&gt;</span><span class="tag">&lt;/<span class="name">parent-component</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handlerCallback(params) &#123;</span><br><span class="line">      <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'handleCallback'</span>, params)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'update:parentData'</span>, someData)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-兄弟组件数据传递"><a href="#3-兄弟组件数据传递" class="headerlink" title="3. 兄弟组件数据传递"></a>3. 兄弟组件数据传递</h5><ol><li>对于大型项目，用 vue 官方推荐的 vuex</li><li><p>EventBus</p><ul><li><p>提取 bus.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">const</span> bus = <span class="keyword">new</span> Vue()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> bus</span><br></pre></td></tr></table></figure></li><li><p>兄弟组件 1 发送数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">'./bus'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'busEvent1'</span>, someData)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>兄弟组件 2 接收数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">'./bus'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$on(<span class="string">'busEvent1'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(data)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>子组件 A <code>$emit</code>派发某个事件，再由父组件<code>@handle-callback=&quot;handlerCallback&quot;</code>监听获取数据，然后，父组件<code>$refs</code>直接访问到子组件 B 的方法，从而间接实现从子组件 A 到子组件 B 的数据传递</p></li></ol><h4 id="props-在子组件中被重写报错"><a href="#props-在子组件中被重写报错" class="headerlink" title="props 在子组件中被重写报错"></a>props 在子组件中被重写报错</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue.esm.js?<span class="number">06e7</span>:<span class="number">591</span> [Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop<span class="string">'s value. Prop being mutated: "isShow"</span></span><br></pre></td></tr></table></figure><p><strong>解决方案</strong><br><code>props</code>传过来的参数通过<code>Vue.$emit</code>提交修改</p><h4 id="在props和data中使用this"><a href="#在props和data中使用this" class="headerlink" title="在props和data中使用this"></a>在<code>props</code>和<code>data</code>中使用<code>this</code></h4><p>在 Vue2.2.2 或更高版本才能这样使用，低于这个版本时，注入的值会在<code>props</code>和<code>data</code>初始化之后得到。</p><h4 id="对于高阶插件-组件库，解决组件与其子孙组件数据传输问题"><a href="#对于高阶插件-组件库，解决组件与其子孙组件数据传输问题" class="headerlink" title="对于高阶插件/组件库，解决组件与其子孙组件数据传输问题"></a>对于高阶插件/组件库，解决组件与其子孙组件数据传输问题</h4><ol><li><p>解决方案一：<code>$attrs</code>和<code>$listener</code></p><p>使用属性和方法不通过<code>props</code>传递，在子孙组件中直接用<code>$attrs</code>和<code>$listeners</code>接收。不过支持 v2.4.0+。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父级组件</span></span><br><span class="line">&lt;ul id=<span class="string">"app6"</span>&gt;</span><br><span class="line">&lt;item</span><br><span class="line"><span class="class"><span class="keyword">class</span></span>=<span class="string">"item"</span></span><br><span class="line">:model=<span class="string">"treeData"</span></span><br><span class="line">:count=<span class="string">"123"</span></span><br><span class="line">@abc=<span class="string">"function()&#123;&#125;"</span></span><br><span class="line">&gt;<span class="xml"><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 子孙组件</span></span><br><span class="line"><span class="regexp">inheritAttrs: false,</span></span><br><span class="line"><span class="regexp">created () &#123;</span></span><br><span class="line"><span class="regexp">    let attrs = this.$attrs;</span></span><br><span class="line"><span class="regexp">    console.log('mode:', attrs.mode);</span></span><br><span class="line"><span class="regexp">    console.log('count:', attrs.count);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    let listeners = this.$listeners;</span></span><br><span class="line"><span class="regexp">    console.log('bac:', listeners.abc);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>解决方案二：<code>provide/inject</code></p><p>父级组件传入<code>provide</code>数据选项，子孙组件注入<code>inject</code>数据。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line">provide: &#123;</span><br><span class="line">  foo: <span class="string">'bar'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子孙组件</span></span><br><span class="line">inject: [<span class="string">'foo'</span>] <span class="comment">// or inject: &#123; name: 'foo', defult: '' &#125;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue-cli </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
