<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>项目结构tree图</title>
      <link href="/yelee/2018/10/13/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%9B%BE/"/>
      <url>/yelee/2018/10/13/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%9B%BE/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="目录结构介绍"><a href="#目录结构介绍" class="headerlink" title="目录结构介绍"></a>目录结构介绍</h2><pre><code>|-- build                            // webpack配置文件|-- config                           // 项目打包路径|-- src                              // 源码目录|   |-- components                   // 组件|       |-- common                   // 公共组件|           |-- bus.js                // Event Bus|           |-- Header.vue           // 公共头部|           |-- Home.vue                // 公共路由入口|           |-- Sidebar.vue          // 公共左边栏|           |-- Tags.vue                // 页面切换标签组件|       |-- page                        // 主要路由页面|           |-- 403.vue|           |-- 404.vue|           |-- BaseCharts.vue       // 基础图表|           |-- BaseForm.vue         // 基础表单|           |-- BaseTable.vue        // 基础表格|           |-- DashBoard.vue        // 系统首页|           |-- DragList.vue         // 拖拽列表组件|           |-- Icon.vue             // 自定义图标组件|           |-- Login.vue               // 登录|           |-- Markdown.vue         // markdown组件|           |-- Premission.vue       // 权限测试组件|           |-- Upload.vue           // 图片上传|           |-- VueEditor.vue        // 富文本编辑器|   |-- App.vue                      // 页面入口文件|   |-- main.js                      // 程序入口文件，加载各种公共组件|-- .babelrc                         // ES6语法编译配置|-- .editorconfig                    // 代码编写规格|-- .gitignore                       // 忽略的文件|-- index.html                       // 入口html文件|-- package.json                     // 项目及工具的依赖配置文件|-- README.md                        // 说明</code></pre>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实用 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>npm报错：error code EINTEGRITY</title>
      <link href="/yelee/2018/10/13/npm%E6%8A%A5%E9%94%99%EF%BC%9Aerror-code-EINTEGRITY/"/>
      <url>/yelee/2018/10/13/npm%E6%8A%A5%E9%94%99%EF%BC%9Aerror-code-EINTEGRITY/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天 npm install 时候遇到类似的错误</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法:"></a>解决办法:</h3><blockquote><p>一、升级 npm<br><code>npm i -g npm</code></p></blockquote><blockquote><p>二、删除 package-lock.json</p></blockquote><blockquote><p>三、删除缓存目录下的所有数据<br><code>npm cache clean –force</code></p></blockquote><blockquote><p>四、验证缓存数据的有效性和完整性，清理垃圾数据<br><code>npm cache verify</code></p></blockquote><blockquote><p>五、包问题<br>包是在 windows 下发布的，在 linux 安装错误。<br>排查方法：看日志，去除相关的包配置，再安装测试</p></blockquote><p>一般到第四步即可完美解决</p>]]></content>
      
      <categories>
          
          <category> 工作常见问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端</title>
      <link href="/yelee/2018/09/13/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"/>
      <url>/yelee/2018/09/13/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="security">  <div class="input-container">  <input type="password" class="form-control" id="pass" placeholder="请输入密码以访问" />    <label for="pass">请输入密码以访问</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX19ol6iiWMBSDjhJZygl/TWFaN2gL6sGgGrGi5Eptftlk+/4X8vkCtIq6v7rQYb/xBDDEHpGL6yywTQ91Ps11zCVdNhk8aYPY92npAINRznqTapfPiFVAP65YKPvUGC6GrkNAWfyVxHlMZfXaahpgOluvGVpRZ1sL7oh88Pe0L1+0hedjXVZVGwBY7mvOTi1ohM7rclwCOzCgd6WnvZyCj4tf4QKdSmp8TN3njsXMBxnxWz04aeKXT4QD/naJQZvzP0tSlYwyeIqJFPFwlq9a35TCF7fCcNW8yHAfqU/GWoV4QVUoQFlXeQ3ItXP4kYZ4uX9oJxoibjJmMuHCluv49Sq84swnVdnQi6St7N3n/Luyc/YzulG5f3g2NevtQ7d3QHd9oux/UFCCl+0KAR/ekGNnMBpcIq9tNTaxKZMr9vGKd331oj6xcl0LxeyE7w+vg16JvpxvZejKIN2OlncKdJ9nJlqQESv3Q4nMJXE7oFxLBa2t9zwNIGpOcF7YAiuJAn025sbPQHtLPSvBUwCQI959X6gBtog6D/Vv5ezD4nmpwJ8BdWjBADKJ7QDgPcOmIMoQBw7b8LWybFmMHkvLHjzFlPnLji6DnC2DMH+iS1ZDekFAKkrUfN3KP9l9k6B69tm4WT6ex+KJx0vv4WIah9jdFrotg+d2fkII35JTFpKblhKd3cX955osjDyQEr3s3d1Aa+WRinEmKKFVLs51GobYB5IkXwatxNoTo/2ZZi8Zha0ffkpcf3HKMfMW46in3uVVn2UIr9UW7MKxzFC2Np3/yL/8A1CpWvs0ovAOIeO+OX4uVhEKmFf9TC4bylwHLZ5imWD6yjR52g8m/Vi07l+UDlqrwfgeZxyIOsBUQvJtuZx8ylKR/ajI7geE4dSOp8j8RqHsY2Awe/CrL6X7ID70m565SFPPiyoQ9jSYOoWh6udXLNrJLJ918WgOBUdZN2z+zA7xauiz+A+ePtvQQbP7A0PSRTgA3pZ8g+kTIlwdEL27vHYJ3GAmAxBm+nA9hu3rAKagjNbIL5L8fUqcJNhxnOq3aq7/dde07dGd44JALEQs0uuc+luJUh8+XXnPOQXCRKyVchkIfYoyfjpTciVDtqkgpf0gvuDTDnw2dx8kQClt7JuQp6HXk57qUE032wIXML6kG6Gq9hbK6VZztp9uebiwkUwLlBjp5tqiBOn3FN4ski91JDLdEX719L/8E4ZOIolgsJyVa5tnwC/RXLoPEGnOfyWk7N8QA7WvEkDzkgrQswcfThnYhC28IV2aop3vdVmR5RCTpHwMAWFnwjbEE+H0IZfnhbPrQf198CLHhcK514h0YheWWf0ENf5I3reOsMbA0wE/+Hofm3VbNdFPD9/zzb3xBEvgXntfBZ15tHtkIlSgv12a97+JmEwb7vZQu6eEjz+KE95wYfUHztGucHKqJd2xCcy8tWynCXbq9o1KiJD0hB97lCkiJvDgwvaNgLbFiXRu+YWZRK6LUeQx4M2DMGxu0XsTAjG7IHUOLKLa1qzAzcqanTUx86aGenwXEO3etS2kvOfuaeXfct+JqGL6Uasi3if4rkvXxcU6zFfb52uOtHgnM++oxHoxjmt9qallZue94DCf+XK9M4Nd+9YOiz16CQ+lMJqZjOtCO8SzN+1omZL+ClbyXFvBXeEig4wRjxaO/2YSLs6EaJTGLylWPFPj2ydkq49OIlp/OIwMv16xrfC2IFKWdEM9JiMW0FEkHvYWz6ouytw9XpADLPmM/zjPTWDLSZabkZfIxVG1+g0Fz8xE8Odr85hKQaaNg7ndQcpJuCzZzjhx2OOKQ1faENBU+aCQnCmPtvI/L5/JYVrSmGNhkDULu3d2dJN+Rg8cC3gL24yFW1k2dftDue/SP7efNh6mSRkJCEFcF0TtUt6kOTBY+131QwwVO/B7qABcUcErs/OUs3jeDT2f0h5fHeW6NgiD5TK3S6UYp1WZTj+heC2q+1O2+aKtkgXu7SM0Cg3H3VlSNBoDkBIfJjVsKc6nn/oGWAJcqE0bdOPu16ETRckwS1qZOMa3njUECTqG3spjV7IMvFUBaP3VuoEIBivSy4KeV9WUgRzaFRBr3b0aoa78pjVJG+BADEjBuNbCS/3cnFZ6UPyqNTYmDvNQc0nCjcubrXXvAe6eQ9RBYbUEqzmlhWSV9lJ1mnHzL4zwsuRreEkt+nYuKBqj0f3MY7xG2MVKXDt8vrLhtSI3EvBxBRx/L9MY3UIYgjj/VId31/oNEyU/7klq7ZI99cgudToUpbK2k9ZpNj83fUNpTJPZYGkWcfJ2GKMthQnM8dcEZvJTxSj4SIaJlr+byo9MGuujXboB9P4baDL68Mc4kNbIndBymwKnef6oveLUga4I+l1tXf2Wax+TDMHNGAMKWW1SEppVC8OHFaWoLSPUTyY3kmFlTPzLaKfQW6GNmjC6pD5rz+BwkyqPTEppBh/yqNaie+qHK5sOS9phB8oBg/g6SHacROOnNBV4Iio5nyeS4OJZedVJul6WYrMVIUTPvX0NwVLPavmG7onVG86cqtgH55hu+FQSzn8jZEhr5qRdzZ1dfI5u1jnjYZ/R75D3blrRxVbw66MUOmduMX4lgQm6iau3knACTJ9h9ZDoL+Y2bGfIyJ+fjOXAQUYbbLcQfz90RWKXGCfl5j9gK0oPAtpD7HlWrUM+lDkMNQCOCu5shpu9RC1A9lSfPd+kGsH411TGQFClCkVZGPsDWwEYzwmP/3WZ4CjA0bpAXJOirRjw8MrFpTFMegrEpZKQKWRBqyDVHOkcyyFdqNFeOsi9P1MSmBPpSksB7eAE9ZgVLrUFqNPlzWYd8yLMvx8uwLo2SsDnX5mlYDCCYTsuLVup9VaKuk2HoGecRKLgNiSgIPtvESWTA5nTL1kX1Tw178m6LOG62LXu69OoLKTrLF8DUMsdUaGRSvjtSqPvyQtuCBVa5jc1uO9K0PNL4THD+08/7XbMNjnEdi8vKvzgswgRzUSuFwjua2mzb/HAiqgHawGCfiE0onuUdeL6Cc66fpHIfWmCkc6TgnvCl/v+o+YuyINcuCYhuaJTEtBgiQ+Y89OOHLvIH1Hfh6zDhemWy2si1ceCgl1RC0g7D31UQN8tNA8pDTcFkWoCQsTnJK5jIj9+XQmOXj89fKGr6rMXeRKWXhtWtJAz+HgwD/e/SwDAdDMhl4qhP38a43/TfjfBR5Jri4aSFc8OhU0kBuvwMizJjAqnfezV7rHJOXSzFB8JRQ3Wx5Z7zCG7+ZA/xCB7Y5KQI9oVPZJfQ/MB3O3UFi2WdBh2NGGRc7xm9GB+FuCDiI7tSki9x9EbLI9sxa2VfRKg0Jt3nvTxKEFlMoODvo+UNNr9Tt2ddrs9YcXS1UFJ5ARkqlpXJNhRF0Mqe3QVwMFt5BelLEWZ6juHFzfTUEoTlnPqM/3KM5XlJblU4UMhHEtY3wRMHvrRHA6mP353NlJP5MN+xt0kN8Khz9fYdSAyEyDEJBA/CYRT55Ob2HrdQcD6VVpgdfIaQi0hKLD35FGK7ZfG+2YISq/OiNSu8GDZYZb44RAuRqN/YZlhU5cuqKelQJnM/vmrQd6NjnHiIM4e95zn1CTfuCSVzVNKKqia+W6/yD7Jn0AoM+VRN1zONXHaMf003BUPI6W3KTn6dzE5XFaRgacT8ENmbOCtDoUc7j5FiEWwDYYIWTbqiXdlSChmao41McleqvQujHOKfWXt/BNTunhNqV690d94Zii0aqo5SmbHfT2Gu3pXb0MaFKvR3B20Zm4ozxcjdIlh2I3pgX4y70xHkMmVs4yyRrbmX+I4n5d+O/WJQJaloxewPFWoOlKP6NugmPWjZ2abdcdt1JmrwdRRIQ5lS2nh/0N9PBMB2kGtRYOTA3D+lAEaIgMRmwZ28NdRdO4jhlo9C1W4zuJpUP8lwqxH5Jyhcxv3qmShI1QRQHAmxaFCXMvQh99rvfG+DldUCipYIDhL4VylL8tugJurTakaHD9Gonwa45UP0M05xWbGCAhO/HHgoRNXkBLme5LWBRwUprZAY/Mj2ToeMrJJtO5qMp6LO7++6SYPg9r3pPQYkDa1y9doiP+IPpUN3iXXuAU2017SbVk/TBjFIbVTYs6ftCvo8kcmuCzQ/Sc95NB/+jrsNAbDsdAbbPeM1Vpt4Dx2kT4HfBsFEdLiYlCqi/SRczkwLVyGqXrSVX73qP6fEMnTUHMcIuCUdzNA5YFE9OMMYIfTY2R6JW/JNmH0n6zHovT9c3fNYwORy8dl3cUIs/GRJc/BA9DSN/2Mhws9uNQ2YbEaz5Gqz88s66ss8sbVItMxE+xhlNq0lwAZpa31vcN64hWWsx9Cmq1NGVXyYujA9uH196C6taBRNjFshEzURT6Q/H6ZYOXpf36o8BLDCITnzrnQovNmetShjlvDTVgVfjqh+Fn8udmcN1kxEVk2fzqXLmbBZUkCw3nsCQkYQjXEIpGEhzXjwHzy5EZOxNYQpy1wtk09aZlqNkCcSo1mbgTDyxHj2FM5lAvQTBr09KQ2Y77VGj2Sxk94QlA1BK0Qxx3sWdMAK4h4R8NjfN+mlHdNAXSbao1QOv7CpCr9vkI9vzy7PcXH1Qk3/MY66FQAAr6gpPUkhIvPYIkwPtl14TYk3b+o7YGluX8oqX4mk/rCxeTrgH6kXGWrgSYeuOXTBlTWOV88Legl3WEECumOUlW5Lzy/lfrN9BCGsqSy/j7qw6br3aTnCSwrnW9QP0fADaWD2ZNDtBzOrubqEQfjTpGC7lfaq41aNQyZTfqNeV3Y1fTeK4VI4Axkz/+uwjU28yajk2AXLOsUw8FdCJHMc3oHLNwliqib9bUnlNcRu3ZolvHYh+CFKe4m/tRfi2m3V1Uxc5kb4OFRQd1WY4FiSDV4YMGhcoceNy7Ym35CDIzj1uL1Ct6M/ABuQsBjvuuOYMjfnp+EfPlgcre8W4aUpM8Z1URGRwPi6RXa3yVYTXBMYRHtHmUySGzkjQMPCo6Z0BE0gnKmHmz4cfQ4YOsrTIVLs4Rxun99eStz5bl4TcCle//HiOkhBib7u2rNmoST9AiQhuzZ5oaLPYEz37Z/VchHXCjwsYtyd0HrX8A0E6opTNQF7YEpUOPTMUEdaEcthYvg4kI4VDnmSUIh6I4XOerH4s9y0SsmLPy0L8FMyw1E/EOBL8EZwRGnWunV8WU/7VedWF8xhYU2w/xq93IxBAapxkP7D/LLF0DfXHtGz23s+7RMillCaPvs2qbCt6oeUEk6ZoqvcSLnCMncQqpjIJT9ISq8/2Oqxe9dqdiiIeFGcs7DzpjcRTQ6+sSCc8pGXWoZD0fIkpSejT2JaJybFDtmPajj3yLWNtxgAojRYOAbmuqU/2f3w5wkzmzTWW9mLcv87vCxZVh4gy0ExPzkKdrAMp+qeTQ98PRyIpFOXCaJ5DMKWXyFFXjtTfS7n2hLCg6VWea9FMQgZI6Zbe7f8eQkOuTAXId64SOxYRwQRK6Hq1G28YjlHB3m11VfwttvesfDJKqvh+s5IQzFA7pLG6crDFaVSmE49chZxiDV0QUhTmti4BLeyFPm7KuPoypgUZ8U0zbeQ45wprLJrmiXiTZWQllxmFOf2cPfHPNeAoTZaVJqCrAZGpsXYmJH54Ty/gXRY7fzIDPy86TK+08nrTEc81H6jXYSgvvJvK+j4+wn25UPceM/trNIjrY7lCJB48ep5G0rLM4qTWWvg6NS35vFm6IypnMGtD2QwboZIj2VU2VEpZr7m+R6/q0peOxdzBSLKnsrYaXM5mg9Yfcv0DjbjupzNtdPWK77upRw2eBA/qUiHohB3HmmGqhJt3w2hK2yFusMbFIwoQRmbSzk9H85CUJKIz50/qE7zzBo3Zs2Q/VTeZ+plE2/DU+LpfxsoYP+74btjYkFSay/FQwzMV89lRwlYXsAkWDnFoLc5dopxdBxEdtrPjIe7NfOomj/NCdaDywAxaUw6ndZVTr1cxERw1smJhk3KV3eem8eXwYxcC2pjS1n36yZUB7F2f1OmZa3TZ09JQWePP2n8x2VevBUQMCeHi963lBiVGTTlP9tAbQQN2bjHCG4h63QXUfXhyB/OX+7/sna+EMECc/LOIZmLfs5KiVLrlBvpFItvAdXA5i8Wi38cTkow+TQ293tGyzCStOV4hfqdaXArZ5XXL2JP+GgWnOCSAs0/3p2Nk2O9+pZR+dVgwbwsH42DhFSA4xHRm+KCnk7zKVtMSsKU57Kg8aS5XU4EvbOhb48HlajK/LBSvihXKGyJ4LBZQzMnVlrYQTi1YmWrDUdqitQTe4jGA1DUDvDVYI3F+br3AP5EesKNx9ElZ35RkbXzlAOfDxXIfzJ+u/4GDgx6SyHkAE5o+QLc5CMEQ6tt46U+JWhCk1d4GdHiuGDXUBMsjAkEWaNngXZuao+oLZYvB3ju8RocCcj7ZNO7XEWNtKAlny422xf2ABgrzAYF4GMptS8xPFQUoa0RSEwfTRBcVrFQBVxLqlH1Q6jrBT3rN37J1Xiho99O0htk+s1MuZRI3fp48VA35y8EA8XY9a/B/2ojsEziF4sddPBUVusAX1EAQrRp99Ax9LQztkEbcp4w8xZMfBvYCsdYDtJow0f5TxWwImEmzmhIDkWDnkcmvIb+6XVgI1l2AaUpxIBdmrdY+D7uveVdC8gTjOUxT6AXbfwGT4f9UNqN9O06uSNFZnYo7hYz7o5IeSvpJu1l8ga46b0KRhIlZIuV6Ojg4EHo7Q0CvmHQ0A7b9t8doZI2Z/TIfW9peWqh/rWx6wlrsr9sHAua3UjNdvj+NqzS5dPMOgpt8NadK2W5+ZezMnTU+bvXG+Ew9Pngbd5tAkcD+PfK3LU6A0TpGmPIUA/GVVS0rFL4EbapA1QqMe0V2gAA1Xj9qs3ek1MhUe2ZD89nh8X7/Oth1JeUk9XECtF25KJ7ltrMKvW5Ce9Pb0XxjlcjHmlIPh/s95klUReOnGz366HpY4/NTrwfyv+ws+BVo3FLtxxGwOoXElKBpH4Xh4pd40afxvsFy3EKiwujzGkSrdwxiDGCpl2qEeODNCxJwwR+Zyluqyrtud2Pb6aPuo7XsM6EdYMdT5W7UEumfanC/8RR3PNAwN9JmfEthgHPBawmNldIsZIkH6b1o+eV5PUjH6XrfEL2C0Bku0ahqeT5LqqkuZixFwMrIqg9TEmZ/l1qQbBNhL3ijubgd0RSdlTPLVMdCN16Gcda2s+foKV4UxAeIPvHRzRjMa0EQGCaUOgRV89qW3ccXEZ3IypLfC27LCDbBkpvVamJninPnyUD75CuuvkvLrhNTy95UgvGXmMpSENIQ90JuBKOz99LVj8jxGrreFAPyc+zQMGFbGazsZou5npKF7Vstl+i/9QvvNJnCw76/mYKS6Sza3QFe2WcuKKS3lqQIuoG9cAovuvFrlKkS1oCrBmfJ1gN2yOphjuqSEPwF3Nl895PkLF/uXLjLEGo3lNFgfuotTNgpWfRhOVUxDwltErVVml2PLGVFVMV+uPMxuAWJpp+GDbqseNway0sIsmHA6vWeceycuD7RKQeIpfzIoTbZmzZlKb6nn7u9LrHyFWf4cPE7pQkH6Gqmm7yqvDoUXHB69UDZYD42hzrsIv9zzrFKOlFyUG3UvGEXINrH8gH1B1YgdnjQIYNWUJ/RzIo+QhtW8bKohMMCph/f7UXN8PuAewSHsQC30Di+PplKOagx/00nrXaWlUwMGsr8rAomWHPN7xM7WjEItDTT7+3evE2hRmatJmOiOy9nebsShZF+wDeJZU21WLXjnpNR2sk+yLrQT5ypEFoABjJsku/TVAdtyofo/wmf2HN2UkHsPw1MLLynngN/qg+5sPWZUoGfApe+QDH5QvvVZxG7QG7m6MxvvYFMGjfft+dCbLDkpP2/BZcr9ixo3KImoAVCgsUYFdDfxoLfWtkNonLuBi5OWTLmuyc+QoCy7xSlWHj6lPTsnPHveKkuYOcSl8MIwBQm5DdCEaMIdImR2DHh4gmo7/9HcRyynEYVfgiVp5bi7TMg2xsYU5laRnWHfMMqng8MgKra1uWVeT/FYlghGQbaxHLexhgytqx8CSOMVA9JDqPPTa4YldWJYXzQ7pDRSl9bpT86o1IZ9xC4glGB0fumrc/SJHrpcLmkuB1cHtY+ZI1bt3tqJEiVNpxyDyLc6Xvipu/xsRqlDG5Hib5LPMaI9GyrV+Q0eRiJSJKyKJhR1RucD14/WiN+elwCqTuq5YUnOBEQZRF4AQH68lL3An+u+DLGVy8+cW2NXLyeDnr4PwsYI9RjAX7plqrwM5lBUInoY5EM7NpC9hUYcUAbZxqS+OaEDoym3dVT0k/bn0Xk5XTqdOepkqYjW+WhZzzPB/eB28fCJ9tuO+k4rVloaBKsfW3OCK4OcDsW4fZaWltdvookiJOjg5qQ5M9e+LUDEfm7R5+e8ojHvqWWIGDOpZysBTIhGyi7mjvWmC6Zr0mysztvOK+PlZsU6a0olUkqZ5qEQ6mX7k5Ojoh50R4YbS9zujBhTETENP6MQ+F4Sa6zkVd5p/7rdz4Xb6MeYfsNmdP2B6WQgoPFffVJEw2DgP+idZ+wHzn3uvGQhlnBVMv3AZ27g9GPonUArD9ceIpBg4dCItsuKOugizAbKXdocXX5FOZA3H3rm0Lr+T8Piu2qQf1dtbYuBHB4aNtHMdZvQY+syyyhzeyG9Q95UlawFPoHr+MDXGggiaHR5NHNY4A5vS8ZwGKCnaj6r3IH4yFNrfBFtzUSFAZfm94aOeY/5AL4yHYgRY6dftQB2udKES9ZoF2sBjSXVj6zkiAV89+DWznubqh8w5AmAgtWRtQedSMB+/XghAtBmBkWUj/+Mt3r5rwUN0AiIo3ywoJK7Opq1bMhpWPucL8c+Sb8E8GdvID5GxL51YhmxiJHk+NgZa2n51V3xiVGyzbLhuHKyskJCyK1Tt0l40Wdg1oL1WNhZP/CgvYEmV6vNfhkKusDPUols6rVmh8eRix87kQ42mTZO5LkCtx50OzCZFO0MVgG8XX6NPeVZMtKi9O7F9tBBiZR4fCgaQqHKY8vcZIn1X12LUh4YL6OQkkCjwMuCH8I4XHkQT3YJ3N3SzCFXuEMyUeKmaFFPmcBtEyGnIO8T6raRRS2YmK/Oc5kPnp00bV7NDW11DD7sgLHN0neY5frjJittn+WnHYP7u+3LDUrQsViwBeCfqBwNB3Qto2BD2MLINyp5xK2HjQQyagN3Psb5Mav6dvyiw5AF41A5Oa6LEb5bz24MfRxIu6+mIPHxL42fnbmfFZwFewFiPXawNHsyoSl5udWcHoYIz7UkbGO5P/ncyEjlX/XuSg6Fkqqvtl/Rv41r7H8cDUL8n7vfSmF0jD773A8HaFs4uI+NVN7/7Re1quenRJEGR2/PaUO/H2x4o2ptYlP/wbu56BjjfF0WHQTpo7v6qMO+b6GlKBLm1fzNdEj4nGXwQamoajzj3CX40AIXhhJn0RrUeko32dxuNm4bLvPCpAM+a1WCQBSd93VRCBIknI36V2fWgZ/eVPweKIBERLjjsWPJtjrodgXglXVacXhMgolutB4Wfu2XTqjBeidnAhN89VhY41KcISLWJMbmHAVS1DDM4ormV/c3vC1s01WpohZRZ7zEawuIpT2ggHdLQxwYb8sUg0jgnUMUdvKy2cgKxX/NHt8Vgrrv/JLiwr+qINm8+0thnXxCJZjaJk21j/UgDaFHaIBSgkOKOLOQAHe7rnjgah3BZMJrFu3ba2MNqUaNrYwlVlvQb0FapRheyq2es+pRwHLeJRXnNHa/J50Z7PyGhh03eklhrw13EM38b9Xo7zPD2YfNByF1xWa/cthVlPtpH/2WoYk870qUZnyH4JQpIOIen8EStN4KIuWVQhFEdGUtmPK2lTMPrThJOZ+liObbRu77qjcaWduvNTQJS+tXPkrWhichiui5kX0mXl7VOcW8aipQjM6DVI/fSMcht7tEuwo2kbRGSGrDP3UZQS00OYT34oPJYAC8Pwa4YAwXl2uDkH6WpF1avmKVxo1zW/GxVaLN+2buavhR8a1/3scN2OLwSHw6BgI8x3YhijW70Ic8cgEHmVNv7EV/Dawd9HAy2IuVdZOEJN/Imo3EwCrLU7p6B7Rti7mFSWcG7q9QHjP19qMvUWDZAmhoTUBtOq3b0QPyneR/wmN1dl7DzxiW2BRQYGcW1qTQiEWpbV1jUZtFpSVpnl1TxPMbnmKo/Xsvm9VEg8vbH+YJSdm+NqQDKkvxRW54xK7D+eRs2XxgeBAI53/D/EIWtl5iLqO+aUWA6b8PRBq6flE6AqI+F6tjQ8EYqh1nEPoy8SMfam89X7QjUy1UblX6Z1YucTc4vT2MM3Z91bjBuXlr8I4oPZl9egroLab/IC6VWdI5B+Gq0zxwlO4TghkfEdyNUlzr8XCilBXahjCfSQvxf7oU5Dx/6kNYKjoyhuq661eY2G9WhbAkgs6R80FLg7Su2pc+V03PaGuM0x3KcN8rXI4UjzUJvmyKjVlnTT1aWl0K9s7BXlk5P6hLyRltDHJ0w4y2n3ak4MdUHWC6NJjeVMlAt/5OK4glDrhKFI5BMd5Zv5SPK2fj7yLdYMXzpZpLUR4UJDL48ieC/8aPyEqXxXKRDhPSd6cbanUwv9be5zMUDLCfbL7tWllYE84jraamCi7WOTV5AxX+rn3qQozOukyU1xA+fdDuajnh5CcY+yDuNkgsurBMlUNyGszVIgZ6ge9UUH9bLsj9DTyhLfnM5AGTWJnZqJ5huFdj27Wa0RnYbChbE9ZlRsMocOFzz+fr9evyOPkwc1F9vDV3UUEFVHWNjx2quoaPQzmnCgy7NsPmNYZYTywNR2uBHgPe9/Pc9+MTwl2UTsEbk76NBekov+2zq0kLj9xFhzx6NjqrwBHOV8XO5HYnEJTwxAjhzrn5IYLDA8amAKl8eSiIwrRM0Fvt6kvECQR0+G/S7CukkgkkC2OczCO9kd+xRIeSZr6AoC3YCjn8H1mBDr94E5r8H0LNJtBajVr/giGqx2j5aoXL/5ctpPzIPN1dGnVkYCLEKstpOJwt5D7vR3M975jjFcO3bsJ83umB+Oa0Hskk1CJo80IMdo+ssNn+Uv0kRU+rAM8XXCesA8yCO1Lr4gPT09NeRssHsAh3Q3rcqE6qH7KcRTog71Tu4/+GCTXDHJ7NWxVwQk6BvFBljr+2idp3Pr9Xd/N0vD8nK1f7s0ZdVsf4mPy1stp9h4R1FWmL6y+iBuRB5jzf02K7voBeH9fXulsxOM2DpW7sa2sItSgttxuIeSqNINmovWVkuUXWzkd4NQetWZGFS8jddnUcO3r/27gFx0AOMJ4C1e9I1/m31E0mKtApIiFnxVchACAlNtA1Lcks/t9a/1Irc1EXVYrmW2/xEOAjjus4Wbppc0uj+A+MQA+AgQoxtR0Sh+fo9hKVO6cMAK4eptilT13WYPzWgkrEkl0XYfsTMuv3ADfnPCkaEQ7nPMjV0SQmID/LTVXLh2buGdKpyUUUAlW/kaSWBT/6h9xdULm/Sm2VTYkmKbuZa4moadz/lF0KaCyqe1WXtLMkGwfzQm6P7trS7bCm7GyRNyWLMoKh2xq/Rw7qnjmoR9YsG38nobXx4p/8BgK7N698T1/cYd0iEOEA/RCM/8WKS7BvnhuOXZDyxQ+DS/1uLdeR50XpoIdRMc/Vbm68bI+XtC5VMCFkSocjlNJjb8O39AkU7Kd5Wu6S2WBNhqZTKbdekAmcZ0updPeU0Kp3dNVm+eSfNu1XN82EcItCm0JLf3Gi1DqcAdgodktCvozzpebMn64z3PhAReHjbxRJ9s7yr+8TmbeVUk/h3hk9dGFlg++S62S+Q4YYD8DgLSvAsDI4CHwEA4mYw1pIPp+HrIELCQ0Ko+m4rn5QNHAfgYi2TaLPoBHG0b4OolHOKa70Gam1UhWAHau+RFkFtWfV0eXygdbax7PXs4J9m0p71sRLN5PdQTfgqgJsMQmi9M1O7WozFfzlNIj6LXYndrH4yyE3lZLQ8olRkpxB5i1Doifc/LxSzagCwxnDOGwloTHv9f6lx1NbKIyhXqzZc8B6yTka5MTXUl2CK1AZp9yS9Z9aIzl+yQLbpNJQYMSwqcmpkxjA3bsAn64/QtlOf/Zttn7K/6KqSWwWnU9Ebe/jgmO8wozp/Gwwe/yVklJhV/4HIrhHx1AlHpcj0VJLy8kF4R3HWRjLnpnIir5G5Vn1j64gbLbbFY/Cq1P1yI8EJqhzK4TWwHoMtoQYSVto4Q1UDNZBX7Y3XUT6l5lX/qZLZM6bK+gRDPp3wMQnd7IpeQgTeDlyRK7kxIHgPvI0XA/Xv1z4p+X0YjwR7QtSYYAMIP6OS8CORYl4iAUXaCajMCyjTdnC2x3dCjMT23lLOpdA/9wqbCZy5cnTqP9lVSSSKgXWzoAgXyVSy9EoQLkTYkNURdAriBzst/S1rCv4datqpYeJyIkYi3MPAX11Lh8UOPNAQ6rSgDXndIC80THOQIQIRmgKz85RhSQCy5jy1BOaEO27+jmazzO6xjALyvZGHKCX3cWSgJcs+h2Hvt7Ixr04WgpORmc4NcpymEOPfLXzXMh+zNeRd/a8f09Tk5gJofYuB/w2GRQBor+IvJZUNuCUPNccySOd1DnYOlMpturx9X6D0GxW3BrXmdqZHMZeRYK1UlR5/z2rjrXhyVksPDeW40Y6xLakXBcFBqqPAf6qVjVNjXFqUELsAEdbSXSFfaqfs3y6l+Hq0Zp1XOp7XUHrH+ExHo2edInG7h837H+yJsDRKIl7FX89bhDaA+2G7bKg6k8PBTUjVYBGnqksufMz6QBmyeDqP+FzflSqGYeHjtwJbmGGmwecit8COa6gkPlefGFRwys9Y5mSohYKQV355h91ALqxtppMyVnyVYodUJ5UX6YKkSO9rsaM+izOETvO7Mctv/s2bbSe19DscwcM0TnDBfkYbuyQ/JLElkxVx2U5zASMy3bMTAYw3g/C+DtJDjAhQXU8Cxz58wpAcWZYfJzlYWhozi2SuuAJ7PaJkxYf78gaPd0vUe1hcZoWIbyePAsJFuIoE5qFdsEI69mZ1ma1bh4zh9NDgu78OCKf2Paz8TS5Vs/E8qbmOyX4qgVCvnniZTRjPCyqYvMqTWj1cWEEi2prV41nZ5jw/CNv0cl6tPheCgUlScsMbi8ZssWzDTOoTa4l24QezZ1usshYLrZ3qd1BIY5Y4Cbat3aVLUmhhrjKl+a3eVTCHNd5xEttf2UC+bo12KhIdZ6+/salCXOc9pcgT7ve/yiMzmhYgF4RJY5DpKYzoCMbchfOXnIftEJCoT0m6puDfmaF2426pUCiAx41OvrUYdpx/yO5NMQBGvQcuhZFJ1xITLTaBtOor2piWH/XSESX9ib7tt91MfKoPuQB07NZZ/HIF3KiEtW8VkRCAtyhOtr0Zr/wM9yDKAQNDbH7EmjyvCJSuoH/gYdpYSCfNAEBKXKmQaRjPnS+0YHmih05uDjIrR190NJgi3eqYhUw2ZgDdBqc7XICAmIJhilXc6bKw9Ey3KNePM249Y7MYO6rLTX8MYD7wSo9NXsvnGl2up8YdwZ0y3iS31A0TQYZH7tIF0inXsEcvD8byTdYeaDJfqP4fS0ayByLHEjJ9Gqqv8H9R90VUsmj2ehpgaVarhVoew6j8nuKn+djbanp8Uk7lhmBGs6jEDOm9wUuJW6T5Ol5FpJS58S33rbqUyChJB/6xDR+PVwlumf4AszBpDm91zKWVfmXDwgbhXfXQJb+MIeLSUlhe11aluM54xId8v96YZkbWf6jcvM953fa5p3Kgfp4tCA1ez7b9K409+dBi5uGv/CuOx2zuLnt47xv39W1kVEdoKxVzpDF1Ps9og0lfOM4cb9UzaJSPS4qyVmGc9fBZBfh+fz/BIgoF08RBpQkWKa6CPGojK5nfmpmpsAUe0qlkEQaCqOuxTncJZChT5TBXuv8GlpiKhh52y5zCSFBU4IRxFKCQnMH0N3lzGv3zo9J/YQgYvgKIiLWfPWSFaySC6tbR8EbHuEqI37h0bRKL5gmsk0y/6BXPCcFW3+yutmRn+7gPCc/a3GP7CfZLHJzdaRxlTuL8OYpZYrgx68mK+bUHTgiQdlemcmZjcu1/Q03aUq5O32V4lN0uUeRu4j4ydqJSwWRl1mR92NJ7y8rha5Orx/ITEaBVymtjaqAn6ZT7U26uNWhg35iaIy+yw1q2UBdhUPm6Co3rGlfn7dpnPpv8sLCqruTDNqDyzCAMAl4a4ZzaB2wxltb0qTBEq1Ywal8VVbY5m2OKKGCiuBk5x0F2k8IL/I6xZt2vONIc9IewWJzEY+iFWyINzy28MAZAcJEfRtRAKOrinrdBZus9oGi+U+qxBEBriWxnhg4upKRn88ohVfVk6UVRof3Ksrh7+UHZZx19gRcYdO4Njw6TKn6gVX/Cx5muL/HbWeTEIwiEtyrx8CF7/gMsFOgZZK99OzfRLKp1s/XX7tFgObTHvRMmCpqtGc1ksEZSN0p3P3yCXWfpy/TKO0nCvFfy9PDiaGjDV5Pf95l/+UZfrIQlQ9GEmIaXqjQrQZy4KymtJJm7sLpx8F3uy9+Ss6zgJt4RB53MkRKAO9MpZjxBe1qQA7ZoepY3gG8W7szW8dyVh08xliBC0vuqOFjQc84mPQtwH3psgEVdur0gGGmxOkHdBlNTimUNtg3Nlxo1pwr8mYE/CGArHoK1OAZ2sRjgmT7noP+9JhYhNb5Kaoo7EukcHXrkyuGRHC2wUS4Av7nRi/geio2vZ27eVtLGNmTl2NWv9c9JLQFzMhJanp9Wj/fNfQ7I/fUoOPb1Oite1fiYKtDpnmModpKaboiIWd0ouMvwg7efJyQrN4GdHR0WJJ2G86wwhYM/hYb6hsed5pReWvgO7bt49C/vhvyyovPPbHp5dUsvmelD7/5w2LDIA1qsxMi7oYlebOYBtTUrcFnd0/9Ran5/cHK5UvUnAXC9GiL9jF2Q0/d0RfrRQ38HHOFaRl2MXSIRoJ5jt9BlioFZOGw4KzgYZuThgfpP759hCQV9xa+rFYEgv+R4kc/kZ0u5I3ZXjE75Rx5jovc6GuH3KKmuZ+vmpIPQQVvnPG4xtRvuGDzKgc+EctJ2tH/DnVO/N0rODk4wg4s+VFty/3rVE+Ogx68RC82LLRehqna+2w8gJLo50Vsio1mNzIFQvpgSvNiogpqW8NdL0TETLTIIaQY+AKrHBphkw+NiNfanX83Y0U5ZBMK3n9VgKABwVoer/8AajF6yzeNkF95ZVWq0mFYzXHVnkGzzyd+CqV/Gg2bod4YjKj3lU+tCbKXYIZSPeXktt9zNjp9sQ/a8WQ96gZJdPHYlWNBGWopaJzFxHbL80rNtyiagcN+j0eNNBfG+PbugEmHQKgMyellGQscSFjCXyGex0stlJD4qxk1rVa1lf1lnoVlbU3krVzKz6W2cMNyS7AlCx2zvNNB/KpLLDGy7aIWOb7fRbgP/CyY7HKaYZQoH62X/DycZnZIBHdYLTgz+jFirE7ZQGueJY2tz7EQznlqgJ/x3BHaSEqkuPjDVNzvbc1IxsHCvLZiPphyZobI3ZaaTGcAJlLDAnkjpgAeSgORFkks2p/7geIj1Whjzq5LGAQuT5/BcYdHdSQ76i35tcCOTXaXvcSuhMALyJs963UsM5QY6DOoPheAri3JJzUoFTJsIJVzGbFktpJfonQCIzk3lgbN4e2gHRwESEOJCuVgiSy7mJ3Agdr7lqbrNHKCL3brTdIXb8yIpup9rW3VC2truFRgINvaXNG3VBTtnX9rbPRqlb9tZhZmoerds94ij+DnSLO+U8/hXUm9aUzRKce/O+twQusTjM+YqR1m+CSk1L76ZjJzg+Qr9eggsRE7OI165puUxCmnKXYiJqzznaDrx62jDITxtecOjUwKg5n3xvorX/U5TGdRE1CJhZfb9vuglfya0Z8zTBDeYom0lOyisZEd1qb0OYup9MffKw7SuUNFLudjNzW1DDkZQvhtefdbynUnh2u6fiCwwQvOiXEvEB5Uy7R4OqKzO5xLo2qSN5HlLXv94Ycw8DbPOekq091OxeDLrgrweSRm8gDkJxiOB+80L5HqMI4FHPgGROAPiHoMcQE+bgpiyNVCt0e0DPBsCyJiX/K2Q2/W50jjsqRv71QJELURzvHxWUSAJbM0lxEOac6v4J8LPzXcrGhbg7tz8Pmwc5mjA9rpibZDDmjWdKfmKuK/dbw/6r/qyt4EHGixX4HCDD30PQ6Gmk3v8MkyUfu9ukoPnoW9nGcK3vwK9f8Pg/zcjoSdh/OBsd4HxiZxbN7poMFUiLpfa31pnNu9IiVxpEQ1rMZGYAFn7K5bWaIOV4+wZC5EeAFq6sFd1c0lVqFXryKn6MFNo2hz5zaDBNfxpEF8ZgXUy67FaRHgTfjufWIancOntiAqTK57+gFOdGVKPDp8sJuIdpoioooG8Z3tmfo6ZzSg77E0hDV7tfFHgq5ZKcpOJXEjnlKJv7kPBzdwus15nJhnRsvRaKYiRM5VrePR17fb2FaUg2TVWB5mlqbOo7FFmQbJz/3gtDHtdFrpWtQISqY7M2zz5MlH/zZ2TIF7pF3iJFBw+oY57oEVsWtXJNMKee/pLh2BycfibISUUU5/cifvK/edsNlPU/5rus60tjT/w/cEg21qJn/agntriyCf+Ci/a8lz5UDRy+XtXK332jdt4f1HTFAxa+d5pguI3OnoO8z7oTrhNo/zTR9FFgM/pkJU0rIVjHVk6Sj3jzwvjaABKL2pjKqJlf8QcI1KmUKW7J0B2T9vy59SaZ/j3ht/fa76BiTvKG/jT0KSV1Y6NKg84EEy48/wf6HXLytdxOsMDk9bqYlcDEChvTs2AdnIrGbcskDTIl1kczc2re48nn4TvblRumdy2UcAZZeStZWap2v3ZYmm6txJJrf5CmI9N0D1J+QwQHC8YjzekOAAKNEb3zuy4OvAq4dq9Lhelnd27vHmwxsA+7Mpjy55eU5IAFqTYTt4qEBH5QoWzxFxaBgYE0QR6z6xj02mooJSuTwSFui5slDgniCd2iaxhmmQdtybbOTAFFXY/cX4Mb5H+Af5bm/lTOivNhovXoMnSM3kzyGFLXo4RcGMn8EM1/PVc5idJDJtA6W9d2gNcc98ID80IcsoKhC7jsm+oWbWagkMWlAWNfY52LUeMP8gGis8+owpjjYqvkLaqnJwoHTweGfvu+sfth5C+fx43xXTOcq9F5pIUvRC0155Q8TxNRcQtawKOWJjGDWrLuh479Yv03mcB5nAy6kFSl2CFyCCvpzZVEx0gWkGCcxx7Em+2h6Xb4kNSZ3Z7ePTY1C5DOUWiuqb0kInsfywnuCq/TpbCjIQdgeV+3nwaBQs3bNmGPGhGqLmbQaafTbQEwGfSA7jBFqaSuqIWr+QXENBm3gES/FmYJ4AxsyCpGx/mC3hn8B8beyV6QeUgiJ76/VCiZsyxMruMcj6aDnT7nB0TwBCoGi2INH+vCCxasgxi59LP3gdXiqfGNP+8nAqFpGyM+BSqubHP7wfFpbBk+YUZKoQxiEX/wQFSQcRq1f204ijffn1T1eHLSkhbaio6BO3hGZ6cRjxrbdXRPgwmPSlYIEnkiYMmw5ktFc31Ng0nC/8EUyMsBTdD22SlcUss4lPNthf+QdPcfYlt6+gUiB2HcNNG6gM8YB6bntwpcnKmGXVWNvbfmnGFdRvy6ZTuB5cHwh+aR9Aut5pMc+dtHNQPBKvAXbT/A/2DySDbCk3jXSuTuMr0G8menLqhVe7pZfncCJTy1yk6HVCBE5/tDl5Qm0bdjQowk49578ZNHm3wMbsXVM0g8uQOBoCgfjOVel0o+M2WVS7IGj79K9ItMa41RGUXpT6tyriNYMwYSWLnIWH+sd1tULSkp8Pj2mZvZEh8rc7hgStU0Mb/QXiNhIfLYbN88my8nTKHqOGyW4nhrLlnfnmZEwLZFgb5kZpOomT1uPCwXn2cxCA/YA9JUgoJ8WmYxHAbgADfN/FaIrWDpQTHNWZxbwujGbdCqHeP++KZpQ3BBS5UOBry/ZIAI+DtruxcE1u4n9B7ZX54OT7i+vJy90VFY6yyf5LppxjXHUxuJTCMWRI77gUTamN7SbUjQMDY6y9oARkLYSUwvIDDlbwjb8Of10NN9+h/qPt4kh+EPZP2BxMSLfa5bix55cth31zgKOrVS1DBuDsRAPb9lmzSygX0RQ5v1HFJ5GzFr/lhbt5r+JYZmkQJunPADWKYZv3QmciRcHPXE1AytYNOxSFAZLk762ewGI1rUXpHFxapoU4ga+lXxEvG6HCoKX1VkPcV+nFYBv7QvQwjVIxmG55v5YuvkuNXRTYcqZvXf7mLwY0Hhmt15NIdw+MHsuEyUu7S162FhPXBg6xfdTmCSBuejbPUtOs/JfDOZRPCXopNw7B7GfRDwl6TvawMDS0zsrJ5edT1FLDjLUqwkzPgu50keejwdjrPjWrYFRk07q7Y72NOGM4o4jYtsnYupIjPNgFyZ0wpIHqDKIo7doLpXIW6lPD+Ypm78DSoTXNXNfDD4fyOHUa/32lfuDKDeqlndEZ2J4AqB4OFTyIKxPhbFOeEyPVTh4OYEdpviMg2pnPG79ODZGA0q253aKD7+w8d2zC7BszgMgCCtWasi6pXUkcdNJbdfZLrZcOu1m8t+C7rTIat5/y2ZNQKFyr7W1hC/9zQhIyip8MjY3vkXjtgd9LMY9Ijm1WllWnHpmqb6FMCZPbEZ7LAU2wXdREx3TujH6DajdGm94zy109MgOrCxsznCLWkGkU0d1N7X97A4+qMaF8tbbrdNNsrBYLzGL5i7O8NwpqvLN4mAS4kk81GK9R0j2aVP4FU1ThAnwFQywjmM48I28u3A77ywWjNqgsCBfaMHD7qt/3b4e+/Kkd5TkqmiHOY+jZqCLT5Tot/AXVR8F/PNvNzh3a6+kvvGwFGCcUhdu2BqF1qwJK6rc5a8GafhxVSlm6/lPqmhfLsVAd0MuZP3Aly9rZakYqGsyZ7h2k8JMn1+SYn1vNfkDvVW9FZjMOsztDgjL2CfrvU9kZWiAc8/IQ/hTDoJAhwbEAT4E6ZJaEr3BHex5Z5qN8MCaZeqnzQXUYuLiQuwAM26DE4eATH8ryKeiD10ap4pa690jsMapsENwA8TMZUR34rso/CjYR1JnW3BhyQ3ZleYTpmAQOlH/U9RmuWU+eHbZx/4zW8n/4IHlf/fkxchj3KprOqOFqyLlk0Ln/YPkn6uLGheBcVH7cZM69xchLMsQRCQCUj81tIYZ6u06oJ+8C3A3+pA044vhYlnsmejq1Brpnc+Gy0KVxTDPPSgNys4/q/d/WL3w7wDYfcfdvBCGtenQDVSH+HuxhMHz7ETV55+cVO22oSj4XOfZ5pVYPwYDAFmJ36tkvqLOMa+CK7v0Y4eoseJu++sLtZhJCJFSQIE126f2PDYam4KYdwE4LzuTH6DUjl3k4RpoF3BOmEqoRT+ViT3jVLK3sVuRcUokAKkf/ap4BZbejoGTL0W1Yj7EfA+K0EC1LyJgzl0AA2JonO6U5cDM8iNL17Ms216JJPeAk317yrpYIIz1P9c/1lh0VzTCc0dO0fLqr9iW7VzJPLvkKcG6pBYBe946Dz4uokZBeHg2FaiXJ+6JqkCVLNjmYL2uYy5GNCa0T3VkbpYBRAyaVDsSoSx3qUbDLqIGD76iOG3+ZVTQu1Cib53XfuxM9c5R8vbZhRzUFjhjHEuQAED2XzwC6qB/1rv4crt7WafnGqoa2yB7MYBdhwOdyuGoFOvw1JT4/aOL0ZW6NVtI8S3N3FMhG7WpXmqF5aGjtBcaMX5OQRzM3BesIVQ85CcFwvvMS/qtch+GUM+lzrWHK1X3973XiNPGMOLAqBe/+sUTD/H5gvCJPt13ahmI7HiKHlZkWzyHhYuq8E1oPmr5CDTEi7puqiEnn0/s/sH0PsqTn2hKia02uOi5tNPasBM+b0ci5umAXqwmiNZin6QqTzfCH24bULoQHIw7R058vwL9XFkvNTNRcHjtbTHdMvao5Ay/y3hJaAnKleOrbrdzhLxNbtVrap4AT5U0BGVHJqxcHqh2A1NLaTsBIsmzYu5R5jH2pNwU14DWc3HI5U+b4UnXLV++ZYppuNja3yCj56Sinq9INyLk8TvbdUILtWEX4+Attpe4vDwyw9xuGD0ISkpGSM5Lnc36IV8c0Xu0Eps14XqwBVpxEM9uR02PhVj++q2n7CF5U2WWyZ/Bc8cfH8V0Tdq8mLC6nTM4dLYunFXQy1cwSyuubDc9Y5ymA79n6bNR2wS/gn95gaTPdYIEm89nQINczk7eu5BA3o4K73+z+PJwnHwFhY4ARG2eUlrhlvLYa0XsFc3OcMDoc9aQvgplBQRIjK7uTeQJAx8izpCLeKo+N94B8t4VfgiLOkuq/ck7tWVaURbxBM+QsYzO1iA99d03GmCXQ6U6XxzByz6OKtlIG8Zc2qPDcZ+9h4tVTeycoGW56RjDZIpF237mjJgxxTCFVGh12TOvCad8XFySZkSgktE6Rw2zHHYKMF0Q1xIDXmN4xFMV+1GnKiwIbuF08SNU7KfeyzW/YG9/eN4WtgNFU82ePbYLaeF+DLo9gikPqZeNmULL8Oz5JwY+DByTT64ICD+Vudr9rzcHvN8JGOCg2QISz6/1sTQoveTj+/NfjFcK/XtwQoQn3BgTAGkWy4WR1A2XIerNmLFmC+6DL4JydWbQuBofzgRjHrYV/bWI/LUwvm8Ga4KR1bcVwuibh556mpS36OSsuGYLn/85j0Y1zXdvbMdsCp2a8x301IphDIuPMOGlfu/yAtYT11lQBX6AWaOUNbh2DUNpftuth9AInOYRRAZZtEj+Cl2SDQ8Q8XOxdW297DllZG6Kneg08ESqtw/zwmzc/dK4s/GOeeK1yWftzvpeEqSMzuOf57eWv9rFEXCFZPRXu6tV2QapkNxt5hSzwP1P979d7YxumGA4k5PaiquMhaDFvO9QFuZIUaB4sEQHZpu4AqMnmC9U/TA2ocdJWMfqUHB6kdgK7ehzCi2GltB2fwWUPXpruw/PtfbEQK5QILWJlQK8bhN+pDqFIAqk+SlqfEM7FO29WJs728r3z/aB3JDmDZJB/CXQMO7aFaz/1E/fWxZ82NZJAQw5xiIwQclHLGyLf1Sjs64mjyvPKWWPm5JkICUw9ww8Hju5PIob1RfFCwTFRSZ/OaiqdKuS581l/2O9PczyGv54MguitGIjlEDzhBSwqxJzC4uHUxVH6hpIZwYwpAzTKZ9D4qcBlm6BoEgTbZ5oM1KxN1dC7Ej///w0WKNOnK1Nv0TF1AfZQeCGlqjGfM+oL3JuZp1Cr5YK5L+yH1ehd+TFU4rhigbEf3u1o+OjkemtQQ28zpKUwSQPlsTeQCbuvLX63+5K9H1VFOMPTWgj06IV8WVgYu5gAwr2jIfHteYWzcWCCanjByW9NUS0+FCJ0Bl2IVaiGKVWKTdJvslGGEyM79Ffyw5KFs5PLIFOStM1NagvJbLuozPegzRvMFqpXk/TRvbxyxtYafQWc8LLHKhL6p0JTCP1wLztoLYAKd98LLFwvFv73M2GG8Olljicbj7W7FfqGz48/SiLdi47TuwlrGkaNt1ab49gyHkL01d9AK/ogUEI8Lj7/MSw9J9vGup6DDI5hgq/6ldBzJmL/L1TfJ827XJo69xWZhX4cCdTzhmnWfNBolw8tBe7r8o/3vNdqt5ocgsDvn9a/XUb5NoDNS3EB7Lf64uPz9Fxa8T101cuGNogMrQ62opKFbXv4ypsQFlW1VXamjfybgcpGMRv2orm2gqdJc+/DRF+o7YE/wAZEvOqhiZnIK2T5Mspx9Y7y12TLVMLkEIU1qRCGkSyCR3GX3qv4qLtGuEy5hPo+P/e+CD80y84ZveGMlVKzH8OdvtmuictCBEi/8e1op85GnR7Tk/reKNhNJnma71VGFu6tt1Jh83IDU/tALL5HBzfChqn3XWx3u2d6tPM0T9yKLDQhB1Fe5+/iXZygBfK+oYLoWkHJsnQ4OAQBy1GbTtNgAXrvSlAgi40fetalMogE0fEz3rQtKzgzgKFOEz2RS784Mh7qxmniJuRfhINKL+NeaXOeCUGp3kiC4HDW9Rg/4DpYlvMhAx9dsCL2t9p0XGXJyrNVgfvGy9Ng58LNnPns5ZJjxbahCT7dnO74/RbIBOj01TMJyyTpsjts1iUK1V+O7ehXzx5n1+yWs1TCoNN7imbCRy6HOjzWvfP0JzYvtsQni4fleMxwqg68zKgYY95qggLFSEUbNF7KoaPUYmgeI7FIXJzOF8ZdnBkH+ZH/nYMf933vNsAOhzbNC2xqzTUVxEnpi8FnNhyOxW0VHt4yTTERClFkU31DRnaJrjrC0mrDeZdYiZbizeduIcHhZhp1n8DFYVRMw6G2rdK/ZaektGCPyUx0SehYX95oDz0GWyggSuBt12EEqEp2WYzPcPHXqqQqQDkl3J6bDQAIfjmBY7z4yUoWapFTM50LpWGWfms7nJj5sSmC2yHaPxgz8I/GY1U+b7iVlj5LdKn01zfasNoL+Y+pCfZ2gJr1gfET+RxIZ/zikVqsulUp06o+gQlJhjA3km7aUAOeh7juoc+SlU3idfdwv04sg7S96cCQho0Of7vhQl0o7GRFS55U5PUsFSRTZsoeaxwe3leQKP1nYszzhTGtEAeddfdcN0idT2Tsg35bnbAzD/zYfi5xMN/FF6GElOeeyieJ4I/P4JpBbJISPxeNElomjWr8/B46t+cQEQJuYUWDqcd3WauZkrJ+TbeOhJF+QZkgmrscepZlYA3yKkstdLLzIDLtQGZtF4QgL4ab9GdwDfZfcaMNTrbIN/eMCLRqTlxX0JXXvuVc9h1BziBSNXLz5PMlYR2fIGINJkX44shuMFXxdZdym/K6O5WELky579CjKHHXb4cGX/3jcKx2w5OQrXNg8n8CqiwPcDjDKiznr5FeQvZGHsMxzJ1Xdqiaa89FcxRGt7p1E9N1KLZQ2hEfHFtkAOkEZ/C9SR/GdFhEZYItFY0mpS5U0Q5uM1ben4OBq9awIdigad0/Q3s4Gw1MBtvIgacEpk4YF8cD28i1KiNkvGWdv7kxf3BFeJS3YmeQRE+TN0oLsQV8LxPwVmPG5+2R5EyAtgHwzVqUwmlKasFNTBV8LDGqtZ9/oOv7x0LvVWn2g9sV+TSU+lOt4UW948OwRr99cJ65ZkA7otSLzg/s9b9U1HOWQCOZZzAXYbJp9F8n9Zb/9wZ2ThYiKwbpRKOAxtxWaH112Ky99dAE9HDrStADiLNuvS80wI50g3q29FJncH50LhEP2OmblM/dslZzdEMFwgeYnz4b5dSV2KNvzKrNCZTmoxziGuPm/hZoQTXsR18/PzKwv4a8v7FDjot4t2WPiixybwyKsjWdPAq6Zb1sqbqgLO6ruYxMLAbr1QYAS78ee9q340khK1XA38cpzxb3lYoM9REsbAdogQQBh7+rAhcnHBQ3Hs/w8QekCSNtSFGDC2TwTkAZhV9E6reLKhlNWC6YrYzP7zzPmCsC3DvgEczMV49j75eUwp6WTb95T00aPRClk+j/zxixMROJeJ9j24aj1Gy/7jNGSnoicI7yySBKSafV3HLoeucG22j22GW+kEibqottzXHV7i/23iV4bzm5t9v6ByspVD1/cZPdvAKddIOiORDRp71LYBbWxQtdvsCBAiBNcLF5lSyFBr76i6cOC0hO8K0hGtSY+WAX1NxMSmMEOfCJcv2CGdYV0ZcJaMOBiTRArBjg3LvBbPzmzdVHZR1GSCsXDmopFLaSNUr3dsQqCzEdGyZcSwfNZfxqVpoeTHDA93gPD7ndIWqgzNWGEZVfRP3522a2ggk+4cH/QJwlw1h9zGhxN3A80+a172lIywG4uYWrogJKYT2ui/s9Y25WYlrpEHyGY3lvGETTy69NBGqmluhlUNXBVNsFd4nUd06aLVCngCiloWz8wNlay6srcVlFNoAXFA5bi41+8rbFgHJNdxQ2jXj2gciDbSmJEeeIJxir0U8SbObODGdu1iV5JAmhIN2C6f3ft9ZlSgmuSYVqYREAL49qaPutucrGuHr0WPl74a0fEO9mixEgw4lJVpZgCsIdBsPQ6Xwk3TgXJTRzDEHPaIKBhmtkrOEmTvuqEclL9aX3Mkhj4nrC9JC56A1yL9YdEZOLYTC2nrFDVzjfchBKOM/2iVg4GKretKfc3eWweTAiw/j4VzZ0LxENi6g0RqfaqW4ZpRbGqMB0ukjwdvb4jgdJScGSkHFYgpAHgkBJWNuXrzwqVyzhZqQF2mChA4jIrSZOBRlSnGZhJD5NtOBr/uTqCgt9eIAwHjnOqVcvVw7I5ooqhzHhVSeNLATMnmD9T1tGMoNkvMtebiDQNRnIVtrVEo56CaGuAgr21sAnlOOt87pTEGoy4bm8ej5IMk5pXi23ZqrlC+P+hGxT/2EIb6LulZeclLEimrYJ0wnLu1MtUqOthJm1C70oJ3Rr4zA+OFEWx/0/yuWucPnOp+8HbgJYiG4LcmjmX7qh/A/1TnSCq9Y0hqH2dsIe/PTHuOpl2GPrQ3w4CdRz07L5H0DgwtavlvjixB3gwybMZP8ycaA5GsCadiuoxA4kjEzsUs2B9KFC+FD3W5iWjpTxvLWabSRQ0QX9SBKLEC8rc/jetyD7eOQGhX3UmPp7jXNrgQTdUe3xTZsFSAT8cDPveuLoa4TZBleEAYPZkeMFRrtsHsVigoSKeeNcuOGp7H4oEGr68Zr/fYKmj8oheRyfGwKAyNBDBJypFeVHQUbm+A8/+y3P0ZBCOaXi37G+zLXtCW8ZWB01wLemWguB++qEmrddXHZTJsk5KQJ7jDW3hDIhX8EaP/DnG9C+AetitVAUXIX5JEPifpsH7Y/tdsNKHqnxGLfbxNsGMKKFpHh2c1LsMG0F2CiDhezgFckUXCJeCLEWmUialblgghJUl5Ig/VKECpxn/Ta2c6osx4dlFYp/1nCg6FAma0mXuSa7mf4yXlPYYIpKIHdVfCMmgdOg57o7HdxW0j59ahTebTqX2SQRn3JOxDkb8fmZKnVKht5DVQXkBa+j4i/BCWGL989hf0lBXuiOrdJ3aOLdrwE4eOPBArNWsdnETnx3OwdK9J+DY/QMvQsU1TcMCzT/pRwsyHUYINAJ6vH09JkYi+arn3ERYuecy2KvCbJxJSSeinjcfoJxDzPE6hhwojPRAzS1npw3wkwjrCMEIj7vj40SV29E0bancbjjDj4KgoV1LP632ugVKzS15Nu0kfjs5oXGtu0itq0OkeazWr5MpYJmrb/Hv1+RDCZFGgLP9Q2/0DHD8fPv2O9y1+FFpaZPnsx1ikeYK38EOesoKjPMSwceqhFz3iy+1EbvxI7nRym0jr+RorCE+EeqYNA7AehkvNlZ6VJmooeBeos8lYh47iBd+0zAjnBkQQYwj5YlvFJY0U/0rf/iI0urKR/pw+KrfjXVmIykVorlbpf+YqvbAHI3PDjsyXZxBjZxwqIDxudsyKfYGAsPkC6/v96l19cXWpPr1uqRNhk8i7d6FdLuG+K4PheZxaiIRYsPg4wlOu3zsJtnywhgm97XjwA3ONpWojvxIz5ghPDpweYu3n9EXSDB1Op0RPoHrGmOHrPWevJLkIbe6lQyUvY7PQiRbUj40TZOHxa/a7kg6fa1RigwQVHuEjfHmRjK8VGQp68kLMcnaXjy7gYiyCguTtv6T1qC4IIYkmi84On7bxkfVOpFtcNeB07TKIL24T7sDF1sAK/Uw8PxcT1vxjindH1DV/hmLBn0iTfX/lMub6ZoQP9j3CtIBrVdQyq4BTO4BKXbnDj4T1Svx1TQoa4x02jT+NKeOrTmTQSu26u4A7MtqdTuegNgGRKI4u7N1X4alm5ksEWRnJRBpCkz/XDgMJYXal0cUEKE/yJWfnU+kqlQ+iwY/DT0Dsa+XwMWsPgyADCOGi33kCITeDDSqSpaPGB+OyLubo5OM+asO59va+4fsLgRF5c+U2GTVFSpSkopEgUq9VuHU47uPVWLk0q4FRu0RESOPBiqvi1hc0mxKF9CSgcJAY8LW8NO0P7iBMRld2fVVoLbC+sG12T2xbAH2qmyknSybYS8ZrHqmkhJUZe1SU9bWxK454i0FOXcOofSibUOYVjv0yESDPKJz/2jPplekK7+7YjMeifPm4L4oWLN33ffxMNNbP07deTYqJrjzkPM3/xfg+4hUMUs1FgZ4SwPfMiVGoYxCFIiyrB+7ZL/00NnSU12B8JqzdWqfCxgKcXHRf3N8xIUmny4kCoymwBUWqtngn11Nyh8XpAavfWMOzPfybqVxbCj/rv6NP6gpJcplG3nAlyKKbJ96BwJzhmpSDPDGjbD/KtDL8iHJ5xstjw0NIQJn88Jgo8u7lqZmqHjqKwbTk7pOAh9zlZwplXGwI5qdXl8ZTZ58RdPXnNciWwlwgH3mQhlAyJJ34g4rX1NwuUzc6qWJw7JQEsaadmeS843Z6i40YtCEDscVsDolATIZUssqqvrLzNadEdrnvu8Am513FAdQ7Bc1FwWpGOyu6b/T5P4MBie2YkNALMeL6IO5EDItEJ3yeq5acQ/2Zl2KHMqgW1NSudQROM5FYv4PRFn4z4eEpv4Op/X46iD5C1l15FTz0J9IZGPVWXQ733DUT76VZalCg4L10R+DUp/62J43MmqGHlaHU8snne89q6k3FKQM9S3u1toBKhZ3HZjQYfQzuM6MFUHGkBJrs9unagmSeQTHLnH8rMhP8HthRXPx9tVzQgn28xld4UXmgKE0T4vWJtebnB055PVsKjmc5f0H8iKywu/MFiOspkJadu7UI0ksfcm0cuK7skDIyEl1GngElCT5y+qwJ8GdHxZcYkiaE2ZrsVcnBF6DQK3QM3RbxPtyI59P1F3kSNfXXwuZHAZ6VaTxOYvn/Uies1QMS0QO+hpXy335m0B3MCtsFFo2K4T83ckOrLj7d6EwKD5OIERY7a/a9lOml91BWH2Yain0nE0WRBbSc89355tXGY8aAg73+YqUa++a5OlfREySeGd1iqXFxz+S0U9G3WSFvnkcY8nTBkByrbLsPvJq/wcIJunbfL7iV8MV0n+rT/ETcuqfV4WOLmr8tFLgS9k7wye6oUSwT6E+ak7QysfivSmDvwdmB5PzkRUE9NyCu8KXCpyqHymivBERIBlXFxP15p9ehhk7SHvkC2iR7UlxEuAsFECbseuVHeSPc+H0mVSsgen3hxkQAixPEHZ/5woxFvJ+HFwJMmXZaxTa+O/tCsS2M165SddHGmWnHUCFNqc3iOclq0Che6vTuPoAq1+wZCmgm5SlZqIrXDpegsKBkHwdpuX++Rgn13116OZcVjKreyLpqllUnN20aimDtxdINdidv+kkjc+72Uv3f+aqZypSZSthZahXy6vsa9jbS1emanrhc9TsDxnkKN4u+a5ijNsWdUAPN/zxNpyUPyAhJruWNx+VDK+3riZs6T/0Qe2QsCnJtZnzaK0mRs0M0/yxyvfb5zQ8LYu1UloV6pQ9gQFDdkM6Z3aSYhmPs55L88qbVZxiCIVMpnly515sk18SXPecx/49zLc+N/DuX+PLbxVgEUCQTz7ZQocG6DHbdWjqyRb5/Rn2OwHhcakPvdg8gjiXrIX0TGsB3iVetS2id7ODSqQcC7FHxO/0YYXTpJtRaywVvrABQj+EwMcdL+pkyBz2be1q/w1pBb9O+df3gUZ/eseTv2yJ6pLvPD8ZKbldTkiaBrcN/Ff3bDLRKmxUVOOEL/nUPzI+u2u16oyyMKiQGk6PMVOf0Rxp9gkmVkqxKNEAUYTszK5FZHUF4CBzf2mub64bpfSUMH5ghgCMzS/PtoF63oP9JeCTr1S15wl2AmGZ2WYBnbu2HCTyxtvTDeA/h0Q0bT3A8qtIw4qaf2Bt16KaZpQTwX4sYwLaGpPrvrb9TGaGUVFsTnpvKsZRwKXtE0ng54zj15rGI86FE2v6WeuM6EyEzPxO20m3jUyTSkY6DvasLFCykluV3pwWzO9JuecsashzrJ31gv1cYbwEBaNqnCGC+ptIsfjIu02HDOQ0HnwpJ14uDgP+GxTnVXm2jCVNO39CgOBDK8iTBtwkGT2ZGv8evFlTfA79XmWAguzNbaqQQN7aIOVRBWYa8sTxDkjjKTiI9jMEcNlPBrEitdkbaMsNezBSRnP1YCB43//0Khvkgquh9wIu8QGVK9rypGwegnI51JWrIuaUS13zO1VV/UzvbETyr4Nn33dhGPi7hcHWpOuTWc4g+JUN+V6ut+dXQl30v9lKm39wckvLbjC7uHZ+LdzSHhiwppK337ipddedJc9eMguocg+shN86JJBimR0ZdZoCSsgJP3v8ItMWGoMJ8hrhabNqceEXj9Zzt9HkVbeMwtyyC2V88S/MPrMESJaMSGCWLuL1GtahwufV2gsYukVkpoEVIihgRfm1m0rDPC53d1lZpDepTQUaLSsNZTNkCbqhhS8B/YW89Rnwldp449rwJ3xa6pa3j2k3ox8UrKuKTHVEAu9SIW4d52X1RsuZt1IH8obLVlQDRYKuoGJn7zdsgd94MDfhfVtej+giU4mzddb4zpvlghtttxXduKNeiQAX3CoAiT+Y917P5yK8FAHmjcMkqE3pLrz3fumjxvQF/uZU89HNuTmRozJg9W9Kq/xVFrR5o3+Cs8RTxcqvkH7FU5+3U2o6e24m0m+fNz09VZmtyfkjpOwOi6/kFJTVT5m7iFo0YVHkYyGwFKyE3VxumK/l0zRXqnYSUBfgYs8iFmNBJvCx+Bj6G9k2EUVVb1o693mczUw7z6ztOGOpG6JnEonfHzb0PU2+ZXZFUrULFSgFPJyamMVbrWF+d3zWzmiZAeSCj9rerxQQirxajobqMGINxKKN7B0Dsa1yW+m5RBIc3vK4BmjKwVfYVWfhhO8BwedvXzQynNcJ9dXHJkt755u1TdGOuNR0LwdOulO7uI/EVXfugDC1ByjLkpTZ6wKbp/toK86cSFr8mNGnnCG+FEy8V3sAfzkyoMhHAijgdQnld8UO125ut/ssWpDKhQ4JSj/itgjqRIlKC2KE65Cel5JdCnT7aROAmifEtTYJrxUE3edfGRMJ12ixdXF97V/xu3WQAcbt36l+YMDjGsJB7nYHcW3y8M20YBun5L+hJB+fNtWCuX1CxtCLbnCkHl/J9eEacybyw6bVkT1oFQkrPqoqObyW/bUvBr2Jcfw2+HgQeQgFc8IhvYGOFx4OrhBz2tYhXvUasH00QTlk4oEGqo8XVv+vVuDIDL2aH3/O9RAYIBLmkjVvnBHefTOqOhpfx3AHwu+e2Q4xF6nWmvs2G0AytOWUb7SdQGkuNoehWiAcgfFDS7WTXP2OBRjYJrw0CdUgMOdh8gFo+f2MQ/aESUuPtlEmzKZwLX1IZ6CWoHTRXtmHfRZVWovkNwOyli1kMJoTZfcFiz926LSy3zYMRyM0KCyxxyMTH8PIXmDIknxrXIpVxmQ1I3cJz3tGVuh0PMDP+racojykvoPSyqTbGr3K81A88zct2J7+nii8jRaXAF+6GBtz4xF7BF8DwQ78wfjnpbRFXbOeP8dJl7Wvq1u7+ZULmBj5nbV+UsuZ5lcBU/vbpJA9YAUPHZpmN66O/bMCuwRuRLKcMI361yfENY114W9FCYFfRI+aWZzdAuemE9pEHyZv/Mi4ij2jnrxA80TRMak3p1LoDpUu//N911oaWkzOFkRkFny/X/gjYHqIjhWVMwYw0oVhwBcP4B6oLxbr8HqRX6JwM+UFNj+QzIUCP7zzioKW8ZmOSFjvVPhL8ZmkN+yzI5xBMeJHndpKsdjco6DDixLQJjSxoN/ptwOJ5Ijr3OMOr+YZ/BU3HLVY7xeMZ3hjxDAHRMyxZYiAD15N8UWV6af3Af+8E/KpdrHp8MRGKZ2uElGKaMaanaY+nmeWYNfkrDt1nqgv2V/7rdKf4CPI7f/QN6XpuimcSmdwUDHiRnUUcjGuneOiehSm1e71BfEAjSeEkP1Dy8Apk1TaZznnGMGqxSuVVlAoYauDfoNB7Yfcz32wdChIIhVWDkoPmSAI4ekn82m+1s86yivjDhNhY9+Vy3BaAe8LEEp8srcvis29QNlbbaUdB9l0UDrJfHU3bqiZM9O3ktWIVzBbRNLXyDhJ03DdSNbxieWlQGJGWOvX+rqnRSC4Ww/KYmckzZAh25mcLSJuXqcJtGU+lfZb+sFC+hfblME3Wj5hWmYxuGcJxrXWBHLUW92w7saLOTKZnAf7NSwMDoiRqOvUVbqv7ey3aPSa+hdSR68AJ0NDJc1E1wgFNMrzK1uWYwX/7kkmuKdXPFOyr35HVv2yQqusbNfzXAiC69FQJONKPJ5vPHym3B0dr1SKV7NKlwNxQ4ZBvJs8tcuEP3vQEU22WZUTPIhKMO+hGzUw/8GfRIu3W5A7tVEodcMN4hpS7Brruh77PcaYSDF7/fYhUtcZxKa4pxYn6h90iwW5A9uvriZyNMFIdoUI2z0jFei5KtE95wYIFQzflfyvtjYz1JgjBWFnuBMe/P/80RJ3LqQD134wmSGHVXtIhQ1bf46bOsG6Ix4MJwCovqD7sZcwtaoXSjSuJQWXtOkmK+q9eRX5NM2juPd60oAy/FZyF5In/CtDukD4ogn+SbegNQVto9wQ/wmVQhTo0ZoE4V9pLmgMQkNkgLor1P1aukAWsI4Zx3Xa5Prk7qKkiQGVaH8nMb8oawjpIvXhxCYXPYxCSH6by2JFV41pHkPNSM5x3F5iOtS5Jrzi45uFrGBPGZK0akTes9prWdP5pyd/iNuV4IJ+Np9X8JXeYeQ0Uz5qo/aRg98w2lZGHH0oEqC7DD5c4B4J5R4F1TRVdrYq1kZn2/wehY7o68z+xmQ+0QqFt38fTE6KXyW4eBF3lNM5ZpIP9XGRudX1DQmPDshZOynkKXfU7FGyVQ6Xsn3Y2NgAhhgllPqd6pSclFMdG2xwMiH4/yW1bSlaywnDZqX16DCfmtzjLmFmVcz1PjBnZPmXx1pqKYv9LO3Of0zZ6Zav4Rm9nXHnmyNfBj56BDUjn0awn4G1Ezg7WXImaoVcJoAu1/BaSRTD+nyWphkDoYrEUoaw3JMjP2uf1TsvCJOa9yaGwXrxG3i/JcvsvKjNHAkWddWzzhb0LMtbujaD/DPRpRIsx28S/j/JG9rx1+N8XkjbzYJDV2EjA5cIGnYim8xNJqz5rF7OF1d6nUVvzGiU/xcGZ9CPG5gRB/vKF7wOXBDyOTX6TVxFj8ZNFS0+IBlMp+LA2zbtfmS3aTOh4KlznM4kZEowvwKeIPi70uzOYyzhKDX9wxYrOyxQuw+SKem/6NElb7HyXLAJInZbtc8uJT7f0K5mYSzHmMNhL+tg/3WZ4gkKk3X52axciqh5Ixi/1QR1X33z2zgeQZKuKCJYf6D7opVjYQKzls9evNhzw8+Ih0C38/MlbLhunSbc9jAj+ZZf/siLBfo17kBfVXvdRs+zaggNmgm0z10xoBpkFd3trtDHocIKAsTFVMr6hJeysVA4Q5nTpRNfdM5RbKslMjNTbBftuj6jWAEa8IhnUS5hpZv3zNt56K0UjCyTxgv+5QTrpIKrVKwZxriHv+F6J9Qt643eyzA/wsByLkKyxygoYFLfFc23R2bL7JS7wuKrXnkZJDNBJR3VI1VjxUgc2vvkWjJp6ULUnlDpGNuh1fXqqGZ2vUjac/X9fre9Ke/RtoDUJbRe2Q5hjfjNhGupjtbqf+OUTEdRHSFHRONZN5oKWznkggVLiespdxEIn0AJt9ler4JoXKOdnaRyUjZg5FyMPPvtFCqNwKtuCDX1XfLDuxBR8l5S8d2Oco3kvV7vWaHv45O1lAnpbVBQ7437nDswgRat66wV8OtwwjnsBOUapJKl4llv0LRzgqxcPx+SVSgjwwfslWWHWTwdR2i748GMPKoNgi/RP6LfHY3c9XGlvCE0YGQSU7rekuU9mookWjihGQAejIRfILU/Al8F206jc30DV47aDQImfQcbd2fKdUQp+3Dhre94kfQedjpZvc5dZ1E1uMOi1G+XabIPCoZID8NnD4X4Lt6UfMVka3eV0Z8JUjrmp9CZR6TT+OqKU/cq9CBtNTxgYj5pxQwCqZSyykwZR1CDbeL/5yldWfiL7ZvTZTVUfqKSbBMt26zPkwBFYX6joSwufmjpzq+RmCNHSG0hs4BEXfTyQeNz2YdfHzzGx5CfPNOMET8AFiNeY/B5E0HXEPvV9OMQZ16xCf+iKarjLuP/9e0HKtHLB/NYz5PbWFoYvfgFuXa/I4crvjS0jGQIdwJRNR8jAmMHzNUE2B7iblafbxwUfiRwQ0inH6TsadHYNEdipIO/LPfTTUyYP8r3Dc4M/1q3/FBzdKD3MDEOqbivuwGf5dg+n/x4nekIm2rkrgfnwZw+DXrILOvejMiiOH4GjAYlBAsG2LRKsjUj0KHBq8cS2xwCupaT+abThg7omP2rx2SAl1Yqt3NcFjaUqZi2reWh7a1WOfCms0yM+E1T/8L/aqmHhi9iX8JQrezPe5yx0cQdGBZOA7d6t26ZlwUl/ekHRa4W6Q7qsy1vx3tIr+RiZvkRtbOHe7UgxR2uVULDHOk2icudBpbC7AgBgpTBcHhyITzy+J+NvSaKgXsGTVs4Yxd1llRrEqV0vR0ZCNEmpn+U2O7fd8iW7UZpnQRw5JIxWprjgYHHjmeGHjFYYcYag/PmQ2nziuiWm6hmUwFC8O6g+A2qGQSMM1G8ZyTKWWzA78eIp402WXHWIICuRWKZ4FQu1aK3cD6MqiOFz9eo7IpXfsr7+pbEf5VEmeU4J1lIHcyNL5cpMq8o0URBV19iG2qkKcKkVPfmzQ45UDBmhYaexyKmQ+M/32hrqwe2VjvkYhptWxG8zCYcy2DtmiMwArj2W9rarcdQ3csjx7tDekXV/+nvz7KTkLK6MY46cSXnqGflXEz62Q9XgdSLbggcwRIqz+m5bn0PkmT8LSn0A61mEJDbBcKlNjBZ4RQDfgidwvoyNFV101XuwTZXlxRLb4F//CU5JjpCLlS+yT2A3AusbWPLVRO1mgOehwaD6csNM+a3JXlfogmx+i1q7H7LpyAeLCVDCM5RTyXLaZ+k5OfB4JgzNUx6CS0Ktc+4qrszBxTnojUuSfqQmHBSmort5dQrNJ9NclRL0jAO3JFDuy+bHDwlymC0rwaluvViW6hp1Q3lEgI+ON0GV0NBBdOKeQnchVPCTBItdpRwKZGcbAFkj2w1HgPofchQy+IEQZ2om5VbEcXolhv8+4KrT+ZLN+99hFtLHTWpjDbwJHkDc7J/98zSFXLKXkubdqfg1Oa0cPxRQQ5vx7mmk2oh4I0milufT/72WO7z1E5yuAFf4LwaegYhbfuiZESTXk7p1mz3YRoaTSoYOF+mk4YMOBvDyvIOccnXjN9WnlWftJFRDjhZQqaedHwpMbwvLFVJJrmlaUbmfXX7vYCeyqwhfkotnFeCyKsDCGN1h5BFq8Fi5XGaXXvjxWaQWoFjyGn2+rpLk6zjE/xJ6h5CzndEWXf/DDIjY1ehPw+fuoQz2gtmt2rhSZ2al9i/0QNl+sXnmp0yK9Jvsnuuk+Wm4/hKYmX57QOkwsT8BktQr/ZwejW9W9XrNe2VkiaoIMOjd4GoVNrPwOTS3a/4HP2QDErk6xE2ryd+IVyjDCF+e/xuR1ACentRpVxbqkhzqB/aDHXkvMnnMYnehhPTwt2ejFBtNrtlDs/MBfwu97FROtI2eskSd5txdyLXy5EfNEOtRyXKde/0sG42nrxvVKWvSJDb7ogtLhFhWNJ30e0xjznemlznR4HJ8Av3K2YXoAP+GFJLCd4yP0tHHV/dGttQfTahFxqYHlB4Wy49NZov7Hwgm22HnVGfy4Gnnm1+w9GxdtIJukeRD7xrd9hnpZjw757xo3XWqIdtOulSVbL7Q4ycyr6c3HmYrAkcpLrZBMsqqbbnp/fAchlBDiGFsRfdE4uXEO9ORF2H5FWLOM6EIQ8wTLihRdXxtjpcH70kNnMbq/nhG2uJIMxpnihfkVB4Nkv50Y/y/CvKA8C10hJ/99JB+lIhPCDxY/D3YQGexBaju8dUP3MlEQvyvfhP6g+wxRP+zIMnJCjMQQeXXWLDfdQQRZm6+VVrDq2lJaiRAPN+iXdzQTR6ryznczjrT2pBsd9brx0ZD2P1YLb7gz3xzRAVSJgrjozAbaDXDo3de/MXqTML4j+rhR/ueriFtXV9jnxguiM/B1uqK/a1dQJgGs5tY6gDLcQW+oshcmzO5dCHKhCuIMHoiBDdjKnpMwhVY93lUBearVvkM2poKWSFZx1+74hzjq1LOp1hRKRYB3zhlmcuFTEdEkrxHwUQG3aW1zRO921ybK340FRLjc4uMZjOwg+v2ZY021jAs/GUiaFhI+cZcZ7nXSQWQ30CGktKdHIhk/AMX05hpJEtd9yi2s2//Ri7iCLUp+0GnQIZHGEItNLTImQbQvwuoF2w4GeuUEngFDejV3D6T9cHjcr5y8GR5cBNoZ2FTCT/E1CNwckS3/9cmFMuNzjN3LkpU97L9MWyGGtOgckNyMFE0iY+RXodSXzqcgYpqb17YbCHhZNN5BZwrIivc+Q9cufN8YxzDMDkdOG04tx351UxlcH5/WTNaphHvL2vYgtUsN1GD8VD3S4Tn1XaGIDj4vd/bmtyFcW8iLDrix0XVjWWlxEFu7dlATxirGa7fXpP62dIRrfDEPxtDzhdL9DGXhEosdIy+tPApq3RxaktKXRnxhP97M4isdTjhpvE4gMACYpkvxyA1v0vg4yvEFsFjnqUAfU+VeX01095h6S1I6Wp6kP6VDyAInhDcuMap/PPq2h9IDQX935BX6zd3twaAn+TUan7EnxJwsfGqxJUEFfPJXJ4Sqd1+ppBF6umq6OvpzKdDLHPyS8UYJh0cm7vB9xEdlqFEVejJqBnqOQYFQUIFcgXaATQkacidAL38SX5B2jaiz+AmkDrCZgHjrd6WU46klY1SfUysMariGktbVMg/hB373EEuv63cn3sIVxXk+7XecEWvmhk6d+qK7O83yDh8xa/vNW8wk2JENCwSwCVsDs3K4z0WNoWZBD9bOnAjauEwgbncLuIj/KHNWhjhdx444qRzLkAzet8GacD2rTmTFkqg0SyRs7jbc5Bh+Eg6btIC1oevIIJ6ByUBD7fY9xcBmwrQxpb0MpaGRe4Ck+X4Fyu0ABjkgCmwS6u/0/qSyXFAS6ZyOtHyJdp6QDrViqTeeQLNePzF1pE5kLACAuhfBRjkRE6EnmVucKeoLaI01pgX0RwSWI7jyZcOQRaiOieZMzWuqcZJ6L0ICsza/1aTgP5upW0KaM55K6uGvgFumKv55Zi5uxHQDHXmLQ3MYpd/Z+S4Z8e21AXBzxsQdo4RnfNAMRZh/wjwLGjyqsuXkbIjAAmPH6PJFC2jDS+gNrdHL6BJTm3vm7J3npt77UhqzQomT1GidTwFMGb/NSrdwcN6Edh7xaXbCuHQtvrdl1eQMgPXpuc0xTsayXCVU5pVGosbzTc8YfPbHLacfIolX67w5Cs42p5TYcotXjvtQWoF4hs1JTqHp4SNg6L1km4LBdcmu671MtY14cqNVAkf+B4KFw3GPbogQyznkoFp4rLl9Xud/qFUEkh3m8PecStpmzV3EEu3JcWmclGvpCpKWM+d004c/7ft60pybaaucg0wGjrNqcmqxNvs2Bysdl0N6xfk5Rrb+lUtVpts+/J29tjLw2CEOkfGVzcvzIQ6gYN8y0JL0SJ4gwTrPH3s6NmzxT2INVukp3un1dCfgRp6TGcFCshDPi3xgHgicLReYO7Hol9y6AUbJ2VJhc58pRs5+ed3E99LDVC6IZcVLKg8NIMkvX+I0DjN20DZ/2CDYUsdTEYtXLrp89iDhCMI7NGNQpggZyywi/nRe5FjExU7N2y553scnJz7TrrSVPqXaGTfpUcNRj7HDSTS/WY4oZd/SPIdxRS3y4JUfnGbG5r7IApgQSb8Xt1ROKQKVb+2+rsZ254kz6uM28fiJXzu564EVeowr7la13827nBqaLY5Zr94lE2Smo6XzPKHkijVuZJln6PXhyC0Oe/COmG/FgOXZ0v0UKH9d5+cNYVMltzFFriw2GvCPGXNtHHc/+SNtuDJcZAHc9xVG/I6FTDvIGvoK8hNNEcxPj7hhO/8Tqa1PKvI0lOQHE/OUsYv9QjyFeRawmS287VeI3a0JGSJZZcgoAKWX5FL1MZSPuei+cTObG15KC8Y6ggDVXrLkaAVTJgeDYpLPpEmiXwkoCsZsB+XMwXcwUSqE3WCS53RL2hlo2CPv2bQdqa5iAJ9XKPdgydFr1ADFDt874WKM6Kl8lYxJrKL1sPFjFx2C2LhkEVJ29CmUfixptVvbV1zmXT/goTEbiK+MG9xHawmwCPBnRHGOF9IcB5yoyMrSGiqK70jC6bij7lEdGXk4tuy3hetW8JGXDlaVVEuSte3i2ni/bINvYIxYy/RfdHJ4qqZ+u4VSyaKEUPsRIrzRdxwmOaPQNo/GR79kPPUMSuWITWaYqbgdveVW0QPJtm1T55HniVQkzLvgXVvymlNqGoGQGjCS01La4+kXdWnwYjvv8udEAQ63M52Z5rqLOZxeFjz+p/eM9o3qfGXVCbb50/gF0MN8/Wi9FZPIhXmFeVHI2UxhQk7QMD18fprWZ7LuBP95Kr7mh6qU4GdKBbWl3YaZKuafm3g3gtPOWuLA8I5cSfHsOa4A75RXcKgPY01SySwCt/RBGVQnWVxE1d/ELGJrBZTDuOcfxempOGycDNVd9sJKtb/vBikUsZR+CDmQYgDrLZOTalnqPF/5UpYYaN+WwG+I/+wEy0J8lTPfI8peoCmKZ4WtAnSDnDTh1nnc9mQRKrIzpk05/kOjOK6YT9UAIbDXMXGRVi1twVth0v6vr4JlFaWfQKy9SZeioyUIWLYOSZ7m/DUhnx985mUDLxkIry0/M18TtBG1v/yDKZMD04lxhotdFDSoa44jXdfqRePLrHemlnNI5fueSVtRmGLcOymnmRXyrxnbW1+36C2e2mV/st0EVLppNQJ+Fm8eXKsZLbAtKBXW5Ec/6+ZcbcwDlFYEhb12Va+aJdoSEsucPBuwqzfqh+JgeN6h2H71KJoAsfmiqZoQSVPdkk3PtJ5GssDc++L6A0SKcwDkFFfhiMARSc0AENpkO7WeeTAgi1DBYkAp4VlSye5nJik97AdaMifPxXbL5vuzyKOJu8nWP1Wn0vxqO1eLR0SvPBvhSML7EY9StkQQeU37C2xVk+aiLJHg5EZZjhezWBMOcZEX+fGo+rkXULbEYyhIY2Sy5k/DtxIRLCCOAAs7EC9GkskC6NLsV4G+bOl9prThRy8/ra4y30c3YdovPGKAld7JZQejbqzQUm743Sbx5/2TgEAtkxwM0j+nTFv4IODpTHmjlKvNVmYXR1xl9Zq5DG/zugKJP9cJpZTy3mjJ3sf44Rge7HHAdvDhdpWfapRjNDy/Xcyu9kIAhtakrK2o49S0RzBc6EEnm5fU2b8uPN1Pm2k05BeWVbtccUkDoMYXyHLF3APiJLdpEFxtzBig7nPKrDoQOL79vLkDgutmuUiQ/O32qHbVQwLjlC/aPlNsWcpqEszXKSaNgDNGNK8nesdM9eEVzr3qxXCi1UzPt8ZyPdZQEVx034jSswmYHcbIM8rpyciBMpfvqHW2cxkyYhGY4XHnJM8xEtIDORaBhdOVvQMv+LTc/T/TD3PQYrlpfP4TxqGRShgV9TE6mx2P3Rs4ELiqqkIP6UyPqY08bjd7STsJqzt6if7gUnlYLW9kQBqlUYATQai3rYz0jLL0vKxwatO3q6St5fxo7y8rIt6lbwDMmM2HL/jLEgRFBEtIzxiQUfxq1DGizp6x6qGEeR1OrNB7XV6JWuAuP3UzHivuPGwFKqWDVd9kct5TPKFUsrA0nlRFqhe75hChlHH622i+x/P5xdK2TUxkKqSuxst4xpMrUBSD30VmRq4uFs3xKJIM42rTXbID42l1wNSJ8+06mp89xjo06tIat0Jj2SLcUheoCyTPAbzGB3Qkk8ON4zjfLDZBDBD6rrGJm0GLYCAlP8G8+TPuucfhyOUHLLIVwXOhmm98qgdHXIXLHEtwu6Or/VIJG+DCQx6XH26E7Ya3vx9+4W9759yGm18sOAeCxuBRyEmH84av3YmKQfoy/1PIP5yw95h35uR1kKamtaqy2alsg0v304J2/ovsRCfB/3Twavk2OsZVFHKxNfJ2cmr9Y8rll7CVMDot64+7kvr6G7rrTr6PEEw1jDn/AUk4jmRQW5gT3Ta+RNiizXkBRJArmPM73HlE6GJ/Kw4Y1/ivKgN8RLQBojtJKFXecb7xupfncRsMScBt8C7/YmZgIu+AYOK8LjIb4L/fT5nHzRupxIKXmO7M1xw1Hfpc0HKq11MAxRstGPe2yLcclHzbOqHKZpLsbvPWaqouT/2CKC92Yz5gSvdR4GIluu1kaPRvZiMEbs1lf1EqGIPf6G4QK+KkmPBp96wna+lQdjzziCZlJ2jN3kbqC3zcMmLfNpeBnLrFEJwLe0l1Lw6DMt5NZWrr2+V/PqdDH5/ToSeF5Ye0ANZKfepPvqdj28VlqZOZuI8A5qvRZ7MovfqueHPxy0ZiR1VMSSq+YcCU1bb/3PJULZrXK/ftdxtsY/gMmpNkq8MpvVoU9yzkpvQiZEOosLilZN08qGSTx+LQpy6+vKEkIhI58+RsZKY96/pz5eojWYkG2Ghx5QQLDug4qgTM1voJX0hyGta653+cB6y3q46gWePOAZjTZl6QczSGb8/LCjgS+TboRZatfRdf+34YENT8OCD8J168oFIe1h72/q5gitu/l3h8LF4bKzLaBUIuLml/cb4thb7NYQxpPsQkRD6ulUsQ2KSQsfENYbIm4IXt0bQvL5m+tMbzSmZtiDfwsLDcjoH2KGtrZbWxDfc0MV+g8AVsiYA3kIgIuQ0Kh2QVsLpCLkuaQJ3ZgV0sKnp74vlx8b17YXBZYiTBl142eR8Jxqcxl8r9IXj0x650cYCAfWukr7PWqz2f+x1NFZbWGoMmxs8Pk6r0DOKgCpVnKSGFkYisu7LA+AwfpasdtZt6KBsvriH5nfwSbzNTP1RurRZ5Ot488JF3eovAObBGbj+sRaixFVGwY+tzRL95GtmxyvH1fQVhI2YsIZ13fPkD/I31NO21JRMwyiS8CXBEASG6OcAAfrVF+VRDdoc0RwK3ZB7toZN+p9hbfPFTxipMHryoOyO9eE8WXFFrJuk7hyLiN+p1GAkOW6QhcwlLdXPWWN8D2CADOp5LQXhXm3/HtofLY1ivqqHAatwshcBowgmaGnvEG+/MVysrf8dQVfdmIUw90ZmR5SbyPYfuMuwjV3y5JrNpDoDoIEftQtGfN6rWhwri3mrjisXvc6CwLwTuZVToZP6Goizg62JYQIWaebM3G2bd4S/rxuGPsOQjBYNLORqwr9Y+sI8mL4EkN1V0sUlXyHKSh1nEnQ4E5iv2HDqQHizMfptBxeLS3r6jbvXbFuBQRwKFq18J0z7pd5YGIE8OCWIjtpXFJcPpZz8QUwTJyQ4oU611ttOmJU08r2cvky1w1G7vpMCGJIpwpzSYGG8M8ktR4W8MipFxUbcg/qebBKFnW23/4PkYqfKClq9Yd3vS7Q6a1VY3DshoH6DbQmZfuoacu6B6u6aXiGi3U9FWlPFmYDWgRN0yYzs7Gwh2PQDf5thqX6635XZvswue89VDFJUm5Gqyi5BbaOltfQEzYhyOhIEZSp9XNjar40heQ5wQLQ34OVM5WONlNMVUyyORAyae0GmPXuyqs+locS/k6YVuQDxQtzU822ZzEGEDxWw9wsa572gP+2/gTfMqG9WIjQaaOlXJzKEALq2Kt7uWqo0oY9S7c6Pwz7JCCdBygiHv27nwDue9M10bcgSBpes+frAtgR2wFZJNeniAFQSxnKo4qN9V+rbTpX81FV9AeRpYvwXCIqEDYm0YMKx34Hi16T3Jzvg1VMNWXslg9U8AHcKlu/bjJe10S5Tisf7fK4SveXRErq0VWDP1NStc95ps7gkW98ZMw9JoWi+7DSHKtOq7zJ0KIJ39VLu4tAlkrYu9M2kKig91e1LJ4jzZdaVnIsF6BXfru4AxjkHtfWhEH7mYpVm6zlowNvIGLRiJcxxZfhTJV06Kdtg95oRtf9MVJsTBBGOlUNgqVssrPfCGyV3RfrR4q+VIveOEYFJpkPMun4YSmXGD9LhdLJmrJO3jauc8cgqnPTab8Xr6hpGDpvRCduEAvHe3CG4WkDRIqtRYV6rLr/t+iVJT1dmXwAjUdZ1Kg7t5RLw7CjtCtQsZD7/lM/Mn9+JC8XEsXFV+JaZ6zgROs4e6ciGtaGU75ef+FkTs7U8bof9iLx8rxWgDnIvRVEKUpYIPImIJU61DW9yi2643nQ6VPCXOvb6aI3O8kkdSlU+i7jnaXwiZSIeMZp7mwNu2JzWpr979/k851QQDB55eNPr3baI7BqrrIoqwRjGuPL8nb+pryv/zVk5936GGk14imTZrvlLpFQqR9OtVw/Fvqk72uzjtk0/As3a7QpzU2DmETZqb371cScol/TydLoFqy0UZTNtZHfmzjLWZWa0zCgTKpRPVXbhrYxhl3iV4UMpxFapesHJDG65lkP6vMEKBThJZhDbo25ySdd9HidMPVx8fE4L5jmH7nXvUYr6uubrLc6XtXJHTmfnaKDJIdW/SlHHy1DxkkkWkMfBqRePSqd6BilQsqSpV1izGylJgFxGLvQ8+SqF+qhrQScuSGqB3RThPT+it3As988W02vhl5QU/cNKzgeSPanz4BDtDY56nr2MIuIg7pwwdZbEA51IctDsWEYxtQTDma208dgcelBjp3WyD6GtXSITj1jNLlQbX1+nTW1NgT92xYfPNXNeOMVh6vK3g3t6Ifjd8XJbYPKiZ3b3ZqzZ07aoO3LZXRIcG2DMhRdj++tOHAQxOlbF58zhMajXiYl65sHlc1ap33VKSR6tHJIex/ypzGABJAnhn3x1n0RJZEXV9eju0qYM4NaCN8MQFB2aqvFgGylIu7bL+xt10XHmBeyvfhtUcDc57aztMMBBF0lscG8sqHcJLuJaJGlTrnoszRw8le9lDatKeR7QdjE+ZZBL2/w+FK6qRM8Dd6frvng347i5sBDFlS8Gr8xLG+kLgIuSas/kzY8Q0KTLBBb2wyuHTqbkvN4IgWB8KteeinlW3sl2JfhgHyDZzBnU64OmCRuSWQFXllXipVPyscmVpZbv2PK1qUOHAULAxIE1bcluAYlqwhVsgtj817BTgz1ymlOKlaU8/SaTazPbaT8k7vUKf+lzAjecc4RgGnz8Wec886lDZWqiIw9n7kl8Ay7Vknew+AU8x6J6RL0u0EkKzkb1ZKdAPM88pZJtsTgRpUxX38Mj03CL2wSJvYh9lVIxJt5ft3DryI3iYb4TZfo4p7I2vAUm2PEXErMRTXDwRnQu27agrttdwfeClA6jrtMa9nj6RLwzXfvfQXH02S4uaRM/YPnkHSJ/QsD8ab24QhU8Zq9btdIaX/2y11JdtkDDF4nYomaIcqrfki08XTTtPEU3UJ72L/Z1g5dokasK2zQEE+o1tb8yzZot0bR7S6CIrVKIJeSoZ9qh2dKctzolfIcYwXlclp0BWWUVhTO34qdbN03EKvPMYHbCZjXa7Cvbr44JoHYis3wawU+cQcKK6VXWFEypqAyzt+ICeerYwX58rHbPw5O1yD3//tPx+lm9zF8s4LaqWPISNlz/aV0vN543bNurp1OY7CwgPGMJAqIXaTuZubf03schMUba/adtMc/etnGXn3yg6XofGeEguQfZk+PnTYBTtKbJB26Px3qJ6fL30BXHm6in4/lNyYe3h6Y5mRDSlf+1G1w0kY0WeRM4c99hhzbHkFMA7jyCylxQkLRArTzOOTlhJchlRvvmb2R4IfCWU+g+wn4eRYPVn8xadGX0K6dPcVmJ8VhnmM0wUSWXyOWU+SiR1ReLOVabCGThX5aQbDH0nNr5vSiwBam0SiNtNyHLglXAMljXUzjL4S5EIS5BeZXkTfb7l6lNiXFF2sSuvyf6k3pcpxG8CKCl1s6pcqf3+IGogasCptW6+E51guhk48PVoKQBhXvZ5jjeiSMHtKOhYvXj8FKB5FAcbNf2/tGa171ul8peyar3NkD0JMwlqnNqTudjNgBXyoPHOgstGq/6Ci2WgHB+NyawPxxLkGopkarO0B6u8MeM/+v5Va91aoHXcQrL6FqG+alA42jWkZ7CMXAMcYqb9oKY2nuP1mV8WzUUvpdbSwWRdTuDxBpq3s+q8eCbvEXfoLW3Jtpbhf7OpN37sN7OIUH3HrR/jJQNLkUDj0R7AplG/PmbEkpQEuICmFPCkJ85cybUjp4BmqYMdmjsbPIx8JPXFgCEfc/H5qlJ/zK4maISSaXZCo6CgCXVI6ctM398Dk7bekzJL9erIyslSy0RCwmaAL0QXTOx4NfxawfTKkN6gGrkEoKciYA0NeR756xU2fOEKOQkFY/kmPSXYK15+hFo6e+TPZRxji4NaXNsR6WS5zzj29N9qFhQP+vSnjZqlok0U++7PB/sx+W8byrTpVigVTWxPQytSOHzlqvzi8+PQLno+VAWPj5dN3r8gcy71DkchAuSH8j93KQNCSQ5k6w2mjM/4UBoTKm7DJgsZuEj85LhEUKffcEhAvGAUTtnZ7x4GIeX2fWkzjqqID7/eR3txpqOZ3jcNNjbW6koGz9ZjNXGHFcsnzNzhMYtlpGS3Cuy3UKiZQ6bfG5mEQdT/WPGzDVJ3rpEflJBnXYVrN6T9RI1GA2XZNGvKh9vXo+ZaFpzSiAfY9fH/GRYp3ixbdjoBGkhJEJUHZ5OVCv3r5u3frgJt8n0xAj4Xbr1gd/gwisInIyVJG2kv1P/2RvJBSRPck/TML1qn7GHjuQR9raVFs4/oTH1cPVQMCL5YEtMKy8aJaAcvurZEOywjSNQx+MYi5aQZfHB7C4XakMdn0WSUBT/zwQNYX8peI0HzMrSxGPs+CnYVLn7uH1ReThkMtrZ8xKk+37MhRBXb3Dq41/gHghOAZeElz4htM/0HASlUKyih/wt8+iJNZdF6X2cLtAlDLC1VlFLfp7wQAfAulqE1wdMFbIH/NUGdVEBNP+c6Ek93GD2lwTVwAd9yVDV4xf6trZynbsOO0fH+2U55NT9NufTXjU549VNIquIVXnngOPw/ytpMwixS3S0fRSUVslaLOk/Q+cfnZzeBP4SmDocYkok2lHGZhAY/V6SN5N7TDXXdzM06bptWxC3NdhuHhc+F10ZUPA+I8j+XIyAX/aUYzppP9H6uhQJoWTjDlRmpS6tUwboLiKIzpmEQOU7r/h5f4yv+S3FOs2pVmNn4W3tl45bf3JVjTDHYQwlP0oXfFib0v4va2qcox0QpFNJ8nZchAVD7SC7yrSgbQp7RhcMXG5S5+bTJXfe/8bnzjhoUxg9VJzv4M6Ul5CqflX85EgmGeXms3U3Fou0MUquqWLuFng92GX7zFegHWmEdjqHPzf65qbscS7Ljw/oRRYgA0Q5yGlFap+8rEQMvFGm1xo2mHxM8beFWQ/9mAscwaQDOo+e8AeRCt1hwRJtM4KupiNbnthjlGb3ufrV1au+qKhA/uAAZ2Ih0Ucd2byS1vwFrJHFf4J96VwSIjMFpAmqGkOxviXqHInXmpXnk8BQzIwQQU9pW0mnWdhTUWqbnqLA6n6dmZEt5HHwPTyvijFi/w6s82Qt4hrJDgjE0KUCJct23b/OveXcn1MSbOysipy4/MdKUCbuvFT1BnSyKfyJvQxktbpj6CfZ5wS6QUZkEVT1pipHajp4700UsAatixqHx7UYGjDSW5q1+EBD0V0/fDYJQkOOYr6ZUBfaOwVaGFYSyIAs3fUVjvESkdOH8MvFEBZKgC1DlDqsaEPPK83fvtSF9I6qPFION/7RBa8HAWjUcENU5mYMtSMxkA911X5AmspFPHELmFkfZljuuVIVtHt/wd3Awfrav3zoLAx//y7SX2uF6LUJxq2Olvh+qRupGNWkRmAfzFgWhtiz9oPDSc1SPhYQPxwTXbohj+KFHmjQ+0z/SyCa91cWlxfIzO7UG3Gj53P3s5ZEE2kKhpzOH6nZ4Jho/waTOzIXFhRyCPySADdLsEv8vgAIw+rbz2yu7aTkwNIojLIJyIg7IbMuZdklCbp+I6vwfScR60fBipKx72DQ5xqAqEsFp5mSRFaU1/jtiV4JzhYb7AeMCOFP9OTLqm7+OJwHLAazl4x9tAt3Ofm92BgEB8Jj2Z08d9Scrlyt8AAFF+n/kfLnFJlCg1JnEAxjopOnJSvi3f3NEGoaT/wPUyB9CU2ObDUV26jbnEUN15h3bFa1fPB2PK/sun7usNUQL6TMC6WXf5rEyvfN//IH0hq3X4lW/vwo1PLDxnIvfCvsw4Py5YKAJRlWzJt+mpw9almvsUPRrz6BROYX/S5EVJn1bxRJe4buGtM4UrrPJB85jP8q0vz+LZVPGwg++0cU1/7K6y9UYtDT0fRFNkig5DKcasp6ZXRB3X88Ozok8fjIeT01/evv/lr0XL8vrw+w6Gjxyjv5wJtniWv4LskGpYg29/Ja7RQkjAF1bx9fy4xKXyVvIcUShIBZy9RH6G1xWnKjrZ11GsgtyvF3knvTdUyz3WrRoxlrW42hdpUAnR5PIehCOip7GyPzTgqByCrNxgGVsQljol2NohDZo5idu39yQg2b2Y0TA10Ugr2a2twCIvwFs+TfncqDD4fofPizEpZL0fEMTDpTSMG3rGXrh8JToUfFQVYGI4GwLegPx7yv8ZLYj9euwHiVkHGQckV7Zo257g+yA1H1+B98EMGo7KljglakFsSmNAnuhmLOtq3eQLGHqIbaUgkKwPJm2oyBN4gVay1qFP7e21b23KWRzZDhbWADX0UZCrMcbw+uH6nWq83PrdrskKMzFWFndjD80K5buvSdNYQbZEjz31F3L+x7LLiFZNlWyMWZwUii9M/wiQXw7Co3pnOMqqS7x/ALOIqafQaY87sN6+vhFTMP5KUFrNNvAnNMWml5CTRJna3EymnLEtLJGdA2ObtDNxSB9Db8BTulgb80IUs7LMTO5M/j7Dghff3IBXsCDTdUe7JWj683PbGoxsx0phbH5ts0zxnLQaThE7Q6tq1ruXDRcli+Q5C5/Wa/RLRg7ZdSIEsQU623DeajTi2MEK8rwn2xN0R4nG+8wJfg72MyQANiJqHLvZ8C55uCHzrWhp9nV0TA0PTCfCAxWCa3jeLws5nR3Gck/uWC72AbeQVovzAMGyEXryIv+FZ4lwbH/k8heckYDKhzySRi5XynmwC8N+bN4fmaC+K8L9Sy3ZkTCD7PGusuo7y8tnIQBIe1tv9qjjxdtgWG1SbgiiaI1GlVHP56l/TyqBKCuAkTUJ9XqwLY+YxR0lHhCmatLD2cpvdTEx6ddDuOGRhdq4MbrW7vhMQCWKNJPVY5coVkjCUPixgH5OBNz6tQbiTMO3FIYWx2j6/JnKMgDE4zwuL/cWSOwcYhis2kTCl0l6pwUxE1vOiUXtg2qYZCVCpQycCToXHxm3e5OF7LXcvEfXPHRnWhavNwOawmkrocO+6k98t39RQaBHFbxBJf3jGp8fXXr3OTY5NaeIFOiH8VIVauLy8kaZ+/JcJPgXcrstRh7KYjT2ugW+xZ3tlg5t2d37SQKTXs+X5xqIVwEo1LOMhA+UIEsanKIRJej0GXUZWccxjquikX9VFNPtrc0TGYsJossuUEZz8w9aG8MJCn2nxcQyAhNUSdRteXO5sMy332UaxbJtpbXp4/nzBMK9Q6j/5Px/HrHSp7X8j7JLge5awqZtqIZHtVLXPJJXKJ2OovMYai7uO2lAUkdiDpVbQQ5pmFgNySI8DH0Y9ZjNmf06WuyyytSTL6cqlMKO+BfsMmvcov8rVNY77t1xu7mcBoCkODIkmRpbVSmXdo2gkxq6Su02mEtQUa1JUrKx6bmqEMTmI/NsRuUlKxytcV0dovXlz/ACNWnbe4DqX7SddVDa0MeCx1Y5g3spNxu+I7Fn0v0Dw6SJhfQfzhLnlm9CldI8m3fSI1CfEhCU0CDMeP8Qzfi0Z9myK4U82u5imTJozN0DoliceN9xIVwA9DumQd4nvyO+JtGyV6E0JR5N7VHeAkDXQsf4/bSNuRwn5t8SPooDWKLnQhXC/mWqUpxUqTTM4Ry04VljTBfYe0Un8EGR/z6btJVlZkJONV3fbJCmDoNas0OIrs2ctwqgP/C9N2s7bWH9xCJrnua3/DOOAsZ0zo2sQLBnBD09h2mG/KDEir4S+09CDgfGFJTx80XRCpsl01CL8QJq4muZHM8phc2BmRgS0SbFPKo39SdtRDtMUHFGRBIslno+EqpLMQDfMtA8SVyMI/BSMJ5xEmgFRG9tU8cYT/e3eZakwedVvznj4yjJHh/m8whz4v4QT6j6bMWZUb4hDyXuD6qVbRcWRCgnPBth41CmZ6SlrNFR2Ew/WZ6RsoGFwJSZ9Frw+vGzQklo+8ijPfdIdAGj2pcwz4cmliw0/mzx6d8u9yGKcdxPUA3IyYPs/Eq+N0khFnlpXLn9WuLleU3pjnRLWJ0viouSDifuvDV1/LgQeW9XUWwVc+AeRKXI2UvYbLLCbpkCkJazKSMJzNayNz43gu5VtWQcJFCb0boiEvoDsOcM+QN8tXOhdJUYTvDK+BkB8ZVLeWz3v+q+il74wm2R6+jTcvCeaqBonRAtl3R2gxrnfh2H1sGOQoZeDrai3baoACzXyr1ZqY5jyCMNgOT8zz1fXJOr0/4XAr3jzC9pKjIdbgsKQL0oarfrsUye5xOIAQFrbAq3IWxLUVVrvoEdm/cRnNhvMpLIy2nW+aAV6LFf8KPVQvaWGbDXxXyInJfTkTnP3DipsuwYb3D551XR7B8cxZPkRYliA5kwUy2rchcn14kXz2Md7Bb0amSd+g4v73IHSWTOu9Xu1Y0PZe0NjObht3kg++LbgH1MUc7HbppHwe04Gft+MBCzTEsmLPnYl2p7hDfkI1Vsj/Y9szEOUuuzhakYS1e8rorOBMhCzosZ97K0afPNLxs1b7ejampwlJ6jMS/PJHDKYHlt9KLUzVgHBd9YANijNxZ0jHhUZKoThpDm9CdiRimZzSlvB4zmUB6LJ3gew08S0SN7HhopItJfbI5mhiX6A8VhES0yQoNYpUniVX8DISnpR8e2J7fxXSVWRdfJX4g/d+J/lOicD31/+zIQKSSUlNDukgPUbCaWQs3A8cOjJCF2eC8xKyK8eRcY6PfljIueYcU8NIDq1I38rBE53PW3l5xq/SZoEBKHefwK8SX/6PEpvhoZGEDuoqqL7BWSDz0xR+klHNxjxue3uAOlWtP2pCFx1Nl5pSyJmk7uz+PJbUgSdWKsNaoTGTwnhu/WJvwtUacZT1++kPHYlR4saDZ98VJuo73oy0mbZTXpSHIxeVpBjxswmWU3GOpl76jYi+C+K5kAUL5I7nEVb1R3uepZHyzYE7AEKyd9AfaGxMZULK/uC77Ff7Fr1EHEpKCLtfdgV9AiNVxEkktfkwSUHAmTFL71XRAawQxQTZ/8o45raYkw3Pfwab/JZil2vFsMSJfTai4d3hkTeHjyFwR/Xs5Cwquz/hMCu9AmRDUO5BpKZfjMY3A7Wu7gKrpwo61TbgUrfzpFre3326Omq/M4d/KWA5OuWLfLPcaQz41gSDl0K560LvYHCIPZQuJz91BgRm3HUql0zcyIa5IXlB2ySvn5z/JVu/q3jX+FXOip0wDtqVjZoNLxfc4yDmfe2IG86SAvncO9BGmuafSc/pE/QWufTW9agJ5JtAuxBqFRGMOtJf+9qIAzlD5G+VxXjHhF4yNwX24YqvZHXErauiKlIj2YUZPp564J9PNr+2CnloEn91y9JLH/xkF2UOw3Eg/yJ3oLOL0NluL3OCN5JDVn3YElkzGDhuuWPkwSl3G/YeX8yEfkB19LTP5sl+s+YACAub3uM4Yraubej/0u/SrIJv0bsLYE64s8nIwlew5JJ9gg3JelibIZYLFHl8KyfZqT6MpOsA5ejTDc/gVvHvp6mq6H0TgYyPxjOzLaox0yb8yzSdOT4ev05vdqRMKJNAvzaYbK94lsT5jXEue27gZ8CPsMM0oEY4EfVchRC/tESThurKEnc6Vcgs64ClXekKW3AT558AyzQhzxEDJlm4lUVTRjodbKi8fvjjZITzp4Hd0B3dAqAo542oPzlnexMXYu1u69GgRgfxCD8SeM4iapYFPPgv+BKE38o0jfJAmgAgyv0Vb2SaWCj8f3KsC9KCRqViOkJ1+oUxxVTFlSRqUpTQAywQmQHzIjIv92RGNZTl6EdLOY3XASB0XB4ySZBFFlZIxqW7P/aLk3nMnYardxWbP6Iq8QUEmqy5ooFuyKluGCaMTqtnkD0uujjwWWUK2+G4taYlp7KvovQb/zrFmIE60r4s7KzAwIn4P5UJ5DOgBDdOvg9yQGQytQJAeboKdNES6NoSzPX2iHbiP9B4P/7XHYA6OV4o/h7HX3BvoMGLFuFVaczlWdAdVhI3qdH3iDhnQFzOOfaKir0HQ96J8za552Fx8fqFWYJIHu0gAM5p0GaIykNKiRet9+fx8e87dePMiaX16xld7MaHDbLNV3zHinlodSM5VC6UQvOSGWU/7CZgrFYf7zpy9cPnRB2H+6x1ewBw42yhGdkmK/L/Oo0lMWHDSNVRcjjCRuQtlvcX6mJsVh/ygVbNbA/TzLx+Tyz9ruQZZATL8F6GGqWXPNhtLl7GWDQiSTVn5Dvyo3Fnv5Z+YlVaJaLgVL1OzNA8VuXrVDI3uzmRGAZjVo73nDACj1+bd6vctHq0f50pCO9/PNeZBPPBl1ocnGU+F1tz4TmJ0HyNhTCDatsY8PX3xr7IYqUPVqVR+tvlbkP8uGuU6W/p8QJ1iD3JuAy3uZzFyTONVeIObEDzvaYoWOxKa/Glh1y/m/LvXqmoe3ngu5vhFoc9duiZZj1EAAxzXFdQYmuNDFrXpB1OQoAuQQ7sW7rfR2GN942mF/ymHgMabouwsj/Pz/D/TRbBAGbVEX0pEGqaYDgx3AF9DxOQhw5QdAE0L+UcIFT/jrs/NOQSvxBI3B3VHZkLtCdV+5O0XI7rMQAp2oNYabYt6braMtGohBzAYsZz/PCvHCE5LB/N/yry+xi9GCH8h/1PQ1zWGIYQsBqSAJNS4PbNMA6V85IQz0twpqQ24lqxKZDi3KrthpAuiT4uq9Tq3sUnLwXFMRUFu0gHNwY32qTGlsXqivV2SXfLHkRAChll3EBVfajZ/RRtojcRWmONGFmjG9gz0ao3/ctZMS9kp5As+MuJheYUrSQmGGgkhjeIvIwJI3xSiyGUikrF6v7ioCmRc56774RVZKBV09+Jz4HVl8a8vCoUBupr7pUQtivg4Q8On7Rt/SRblZfpSIzsp8k3USZ/lY6V7s/5GaAOinvajgtRbexF63KVDSuKZn9Cih9Pqgf2IuCCkg54mkL/2IAQookAHxb3v2JwM20zqSP6jom0LDqlBC3lFyDCqX61Eic+zWVNti4OpOMQG499MOj7DKCRvgo+kxa9ZgzVllxVG8/A67Re0YBDjMZugVBdneX0PzyAfg3ajASGAMzgprepRMVwuzMh6ReUB74FSpnRyJK4Za16xSrbyh+xDCdzy46Ge2jjI+Doc3LRnaHHoI0ernrejFo6pZbDwBgJxUoV07tlrRFg1oYei5nJewbtYOQ0WZ0BsY4xmE7BsyYz/+eRJc1eY6D/Kf0D1rGvxktTFTEEGvhebKC9uuiVF5oU6R6GOSqfcQn3T/51DRRKShqyu9cvfb2WZEWNvi9XFR1Mb4JNuQQf02VoEqrypbjtJ63I7xpVJ59oQBq0rYfEd03pMCm8As3FNppaPiFstMz7yNfdxjU9GwwPzd1q0+TFDSlho2LdNWCRWMw4m8oLPFg74R7Awi68EPZmfRtsH3WbV8AFOu44VBmbXA9Eg/TT+mxgOHb7u3BN5ACjkHU5UuHQ8OCvs2nvfO0xs0sjPebEvJvckWZ55alHfE+r2VwOPh+v6KfP7as+Go3jBg2CsGKMDC+D9UEK12wIfDHv8iaXj5KH+SUz0PfTMC54khFt18TJjbSJ2rytQL+lRb318GNspExoQkt9ecQvvt6FNWPdvkQ9Qvda0/JB2nXPx9/682v6lYQjPaG5r72VIHgWZRjlvjMzDg/e6E3GHNFaZ/x3/c9JR/CdGHM3MXWBAyRPE1itVWS/54HYI5VnqSoPwDHvRuVwzV2wrM3apVSrlsLo3SMDt5xJVWdNdNhSbTv+wzBgzCFeUFMnWLrth93jm8ILi5NZIHPAE+RQBoAMyweOJy7cR3eTxTNeOareQfUqgdwUh0EOd+v48ULK3zRuThV6aE9zHQgAA3argfhqP6Ac7dwGkybdHELJghLrIEkrPAuTfzHlm1pxPiltg0bJkCpfeW0lNDIlbXek+Mz8sEruzEJREMbJBdJmtESmatJMpBPoJSuIoZaeJu3zDOGjfe7x/X0ATBFtIVEZrhY76foC2jsSGzZh0FwD8zMNS45gEGMX2vudq4jobG9e4OMqR9WL1rscSo5Bl8U6FNwt/yBbr6evjvUaWjoXiJ97nz0KUDGUilRRudmdzUo4mmSPLlITZxbQVOjavl+kQYm2nxqXTx/aAUg84h5E9EiJ+kVlTR49NniGciqHqnuLDnH6TlgCe5NYVH40a1S3b4EwP3jnxlQQigNV2Yzu5/jozn23c78DpykwZopy8hX7zB1IYLcefjEvwNi3dsw/88hFSiYN8OhI3X91FIhozifRWdf5waOoS0pIhS0od3jZttncqfpTLaVn29c8MVr8LlTpS9Qpzim7kDQXzndoBA5PPGS7+6C/CxK91d09ARTJjarubOkfL16taqUNzlJ/zuuS2nVi7nLA481Ka4OjMLCws+k0HtZkzNfcloMq2NfgBxH8p8BaZiMVDtI5dkMmSlPIvMTyj9yBTtLQVldHR5Qq2U61PDiCRYKUF7BBu/0P4/MkFCwz6VdKZzyD6j5q2vD8Kz5ONE6njqrDsPFAF78UgutrFB1EoUnYcQz29NiU/rc2gSNLAVRcyBr607syupBFJSB4JRHKzKBtUDEQZnsh0m8IgUPD5TCtWBUPowae1eZB5UZjlpQJ10bAtbB0vzBXBG5AwIRR+icTAmEd789V9P7/fwqAgV+cJj773E+L/1/xnzauqYtpmjXW31e1rFi3/3FXYXurm5NX4F66Jp1l8w3itqw1yTxGpgiKWkbnaK1sk9S1JTM02x4F126ItO8DUWfOItXnrInCHNJufXthDD0kajPJUc8Ei5vAwQoY2iUWLWQAj8iea/gNvJTdwDUDUN/AtsuQgRcf6XdL6VDkzch6EmpcZ9HGPKCp/djUFKNnMfuHn9tB9J8VBqehRDP1O7svNZcHFI6uokNV2s0NTTe+dBAarv1T+3ZTZj4DslgQZ3UylGnsHqUEjOb4mz60Fcfmi3l9FpbbG9OtpKwtsvmXJO+qQ1tL1F1Ok41sv3g9GggBPeyhaoK9eRHyKXbQ4EyRasfuJSwZ4UNXx3DAE47zkrTo0Wk1T+lyAAyVbJe0LhuHRbewFHapG4FDhtWe8WyppfFT5dypr1Arrl0FQDwtKFjs0tWrcf8LtxlbpIIn34gTyEnC5VQBVhPDrEik4EPFe4nqrdxuSsiEersZGadO/tpCczvvVhVrB0Io8AYcbGoN2jMWJ09m87yRK/wCsQgZ9QH1gjVCvkK1C4/kMc8q9Kvsx+qQBvoX3bHDlphY0DOKwV0ozejqIqdpPAx8YrFV7IekbSK+XFSNCQXB6ZzYKyv3BvoBajOEQNu2AmJq/i6GyBG2ok+BA+r+KvdtNdwOo0I+X7Qtf1h77OwikE7JCvfRnH3FCDr4uao1jw/OpglaGWnfWg9plD36Gt+CHMvAgVuNRjRwPv+y+2OqVjYGGmpnhW/QMCjSbL/uRNPwdKWQN/iV41IRFWRpsIqB8G55NWYYDnFigwTWGnBGkp8u6mi6nlkjJ7elDQM58qRtACrsku+bVjbt2nhTnGmD1u7XDyZY+9ddRj9L0inWwmRvBvimBcs4BNgzw7OnjPIvpfenVEM8em1MM9k93eQDfsc0i6Azy7ShJGCgn5w+zicI8MlMMSFRPPKDMzZ+klUr/2WVglSIg+yvd+Nkv4jIQasrQ75YBW3wIIxcJ1Fo35LS9axhcifIEH2t35jxRRSkpIpLgSxNMwYYRSZ3DEarQsjs2h4iGFYTBQv2sj+02LG+e+E3gkS3F0idzFXXXKxlz0wBUMhZOWLB0Bcc7BTY0P+ymxeQHaJeeLVHqbRpbtT/pVZeLfnd7EQAxMuxUMUgnxYGoWV/XtoB28OMOqxWLcHLIulKPlMTz+MARkM5KBFh2VldLMgh6js/kDU/pAHKSpeqa9FwL3yTsKYNRcpWiDywPYU60cChKPKZJLMTI3YaayEyC+0/IrKX6MVU/6nknAgMsxXt66Ree4f3zVYtUev2mBYVnQ8dCobQkUN88jU0XnwO6kjaq3tqTyLYGNf4MbV31075AyCbZJaH/elpzxUe/QR9Kgg8cPXukgS7gx05xaiJTSdhqtX5FF53vosacVZcnOa/lI8Z9a1fD7tudG+4Oyyij02OVIH64kzI9oQ8ATM+7ekT+kK71/elq5PqolkzM91+VDlpjP9MrVmasMSbwVSLXwVsPs7U48dcHEEZMY2h88IIdzfjYfLxxpQJ8XqF1uFonDub/yYfD1icrVFnGS+a2aFnFJQTAXKv5N5D2dOck7rK1bdlwk1ZKQRC7VA2swLUFrSDadRc9WOyrIzs0zKQ4U+8mR/UODasfLSnyjJbgD13rOSxomnLgg1r7un43YtshZDC30dRI8HWZRDIKP7dXXgJ079miQBvgS1TlHaf9K/7VACnfAG0ToHGy3CbRo5+ruxCdtSqDJVGQPeRX92wzULmrBxXa9qTNTfPwCNkXizVCr6/1OFasm++0BfK8pu4Q3G6AfvEnPGwwxdhX5el7vjQwaX5HhQiPAPJmdAIgfgKbxgowFvwU4s+WVDYej65SKXaYpHEhe/vc0YWepvt40OkFQq8z8JxlgM2hCc2hG5TCw+rJ9zRDmkB6avbzm80eJ6FpEUGVZR//6Njie8u5eySM6HdyqZOM1XyyUJZaGfIK7h4lyYatMJL7+HJpFal+63JYjO5vqbWvI+F8ggq7PfNYGe51G2kfQCgfM6ammwdiPQmTp8cWsCD6I7ng5SlkiyA5Ecrx4zrQXKo6zBUQIARA7356j7ZkHBHo281M921BYOOCZJFn2a4voCeeQJmIVWFlZt+eKRATwR3KLkDXre8leHsBH3uFLrjRbqU1vJJlUw8WlzkZTRzrWtLXE0vAHLrrIDtIxEGmSXcGZ/ar4Up2XU6qLAjki7wa+4UOGNmX5JgVpiUS/2m7A8b4YFfzL7+ep9gNX/sYr+dM9T4axwie1luw90YwEF4BwAbQFx3XOw+GfVT1kD+XwAjrbJeY9jgSkndF8C65Yv+fVOSFqh3qLKvebblfNU+SCMx0BOw/Ngju3lDxIPFh4NMSjeBZgVdqn2mXgo9jqgi+DOV8UIHguHFlIMD9GbLYjgBM3yQxHcU2vcqETZ0DVIRoXYPD+Msk7poVM4IZECikGW2G12VChlQjDvobVq+PrORloFglHC4kvROMvOHH8w5pOw7JkTDLindmddVj9RXlGQa0qmWvkq0LcJrcHV1XP4EsHFQXtgdMExcI8cM/oPUC5s9pM8bj3OUXXfxL1Wmw7zWx0R++65GHvnKWUndlpZIFw+cwjtn+OjSjlrP3t4dVg/+RKM4uGQjGT1OdG+qPcCL/w/Uvy6p5xOBjbw59M3WvN8InktSdn4dMiT/4cAzJEqXHWjX+KF21hpzpRXbW45DsutvCXA1wsO648fPmLeYG1GF6BzmNKyyFqfjSdScGs7YZT0ZVwFoXiG6WoZPinso0avdrTnJHWOanG5Wd5cLBTXv/v8cg1Ye+nGPMDtYBeG27+nVZ4UKjdqHv1Ifxn93N0Zo5xGAZrrcszKYYRcCJEQ6gIoF69HeqnSOAB5F4Q+G4SNeVPLRuZkv73hJPqLGh0CEF8nuhLoYbu03ZWULmNvgKfoT5ETEvFIGdDfg6zave0YajpsXVuboyR2YgM+z9cSyEklYdqRy+Ri6jJvimL+5lw8EV33ZnwCQm7tFehkM9XKSreq7D/JPfu00UukHocmetwbISigdbMFTmpv+qZyyUOUn8hcpp086U4xe9YCKQL91NHY7z0oT4TLkAYmESrswzfaYzSDyOq6XtBxbW9sr9roJFRONQy6V642niQAAr5KLJfqSjyj5Xz4Bh2M+dJ9+P/0MG/5MplaljMpC9229pLkVsK00imdFpWeY3PqZM/3daG40EV1dD52kK93861nvqI126AIS7Bz9oTKvk+HWJb6aX5cKQt8ITsPtiKuaaIekg7TN7Ko/y5SWuGD/DUjO3sJ+SQRSOjpBh4r/DdK717SkcuoivfV8AzQfdfjVUQR+GzRzQs503Z4NDA8tcpOvxU2iGEMaa+ALnOituItXbxNtCn1KtP1eybLFqg9aVzDmRkGbi/7GXvUyHq5NidICk6Z8uK4n0MpeYF2qb69Ck3y372HgzKbGgD67Ph8CdqgkAssPURujt11bJ5oZB7JCDSZvaV8WxwdPeHMoBA9N0Xyn3b4bLFGTisIfdLqrn1WLVANilY/0a2ARjr8/Awc8c/gptCkl4A08QVQMH/KW95G+4DUBDFF6tudf2F6uPxt9FKF4/aL/Rw0mLUtrzpiifmu4UDpdn/Ei0WdZbzCan7DaVfmh2SzHTuKRwrpjmrqK07+8dvV/PH2b75pNyKSAt8daOCMazcmcYNTi3018PwAW87mcxP6YahI9lFqFPngSKMGcWY5+GRByfLWVeMe3kKv7S7t+DhazDGfn9/C6wdaLFUWJahvILzb3lcGNT1vhWNoMc/jBbjY6ff2syduWSrj7BsEdqfisBO0gZMKgJw5WvKolAzOvAcb72zKlgJptTGvyUMk2OiRbPvGZYh2bWe/26al0dzavWzIpR6ARcvmWGDYD7fLFf0qTY2k8X+Y/+NEL9sO2dKjpvz2C0Xg5Auozwk3HaaYo3VAhhPZC/hC4+dROv+O/i77bEHnE9GypINcaUEHGQbVmZPllRfgLKi21cDAWIaGEZCdQT3Hi9Eb62DxmVIbZwLD3as+izwoW83HaEBMzhsmZCVV+4wXDGY+SUKraySdkmvgt+j94vx+te44Ljbi4gVfDPgmj7lCezNoUBcA3RQq7w42s1j70dFcPvY4otwejlDWA5iSJ20nDySXMWPlKsFRWpxYnLzd/Uiv4ct4wv03AgsLqTZUNqHHB5+H2j/ZjWqo5oEdsjpkwwqhKjREY0lGwCFzh8GbmFfIjtxaNekgBv0Sa+7d8jVwjYWXD+NITcuug6hGHlwSBrhUst5wau7QnvKBvIgDqYs0O5JmImUg9r2n6SCZGWmPCyjk+wR46LLH/ZbCK+04ZfcskKPeSX3oE2x7JTzUj/i15eu4wKLKOPcBwbhaX8o8LY9Jgv8cKGcULTsaUvM7ROdLryfxhTF7w2cskJx9A2A4FMcy/DX7ESGuhDT0XMSLq518m5Vyk+zM3iAPiqdaJkgyR8ggfZGn7RJuTOno29AjtD1Gr1ePlnxYivWWXHDRJ5ynXuSPrJXnoVcSGoJLMI7kxIUNyAwrsrFNimMwm3AfnMdpE+sP0ZGdnlJ3NEeZzjotvOBaNB4Wmb21rxa24rpR+AJKMtbJ+umVGtcDBB2WCK5AwCQdQjN1JPBjpedXbvZL/rGRldp1k8haGBEn2Iff03C9mLxxW2pUPpG8Vya9MIgpfe64wnwPR26fMyF6uy/qTFVz4fTDeVONaDBHIcErovNKSFZkeK6hVBmuT9WPoAHMUl2A1I56HqsmVKA3OSGQ7xDdqiP4Y2ES7JBaxK/JqiPQdYuHC9gj8tJ7H9tHwXFeejsIsHdfymyN0jiYIs1p4JAfsDmmOrJh61QJNetm73elpoo8+RH0E3ZDPRpIda0Sc23iAVrFObBv5ODwtusOlOzb/V+cY57cOv8fV8fKLkqdlIWGFp/9BlGgh7eDN6nvbDP9Mi01QXGNm92ccMYc+M78FV0+ia8RH5g4N79nx+g77PdK6R92R2uQIYQBqhv86+NzQybkwucbfJFjBttSzvQrSxcCtlMp7GffGTJGMQd3nvFzmeI8kteqW6ejfQLPsOZusJH/5NJIVcaZb4Y4f97Wzww21FmZuOKaklQ07zt7GJzQVJqEcK1M68/N/wyxaI5vhnonsm0uh5F/4E+LcXFABVi3aOBZeAEhaPdoK4Dx1TUpR47LwZer66QCQUUkMnNhTdvUZ58trDFoWGRIv6TFg+X8BG+OCTOMfL9niDDNMrDcZmyr9eVbneKYAfvMJRBi+RqiDSTUsT45qxJhXxhM1oHWuPWS5oL8FE7S+U0OXDxiqmdysihYK1O5+jIktxTwAQ8+EEsTpEVYwi/o19cymYzEsg31ZMFqi4zeylfaeY/wHG5wf76bzH+M34EbStnxPCotT+uWDod6shddSV2e0r2pWZI0bNgWkWny7wPDz+rIkn/uCpNzA2rNEV1KLdo/8HXEtFNGEu8deRSN9KufVmi2L4op7s1L89EMfBptkGiPXdYq4cv+5LKjlTYIilUNMq86jHqGN8GFXuVEs+v2mpDqg0H59N0UPF0XUGJv38DcFfwP9Ine0yuq35a7K30pGbeW9ExyodKLSVBd1DjCK/0VsdFdL03S2JRvrXPiMKNZDNCZXGezJFj8IpLWwc8R4gGRIJiDNFd2leExpuTasrX0cxqcqcn+rKDYHNKKqUKkbbzRiTWOEwpnb3Xb0Ox0cz0dRgOFnpe+OS4MCEdEOG6wbDaNAl9LT+2J8veoAn2idGNLxLhWzYDAoMo/NqMa1/NrznLSKLkX6e1lxEaFO8NBfCPjrPbosvcyATcb0PKT5UrFdkObFKMQbD5BybOBpiN1YuKK1f07+xacKysJWqDVstWbgsv13lpDRsVLWR7q1YsBskByRw8aE2fFlDMMBeA99XQw3PtlLFTApMLV0qlGlXiQuqNR4L8NRressLgBK8c1mPkJ4A9X/6ejPeN9f0tVz555LO+0tEe+MdLX9Sfz3I8fNBOtHYNmbuk9Eb9FUrr0J+g4EbBLMSYkJ6/O9AvVmeTsjXdWh2oP6whT9HljhmrxjkNeWNtIeJ2SxlKNMFtBVt1MvzE3Mr2+zNELoOo9Q/7mop9zdgmXPiJ8e863e6KNi1Y18nnHpjVt6Xt9idSRmA32xBzNXou424+51vaPmRohSRUqCCHKXfmnUhDKMgshzKD+xsJWuoqyBdqXPGBszad3NJylYB9H5z+ZcFLJetdY8W5a9C/cLIeMFav+eh9l0i6LZEHdclDZAwGgnWrwRNTVb414iulUc7RA6oAV117a4ZnTBwylvhtyvr3ze556kHT7IWSYvRH1SM67DXIQXsavt8Yl5o1sjiw0NCV0kZc6USOKMe+KXcS9VJRfCAiSStm8RVk2UZIC97XqdaCtmhSnCTqoys/Snz4DlZqdlbDJvpkX3YVmjkTI0ENKhtuLKsB0VQAZn+fIuD0p07+0+K56EDTKcucKVBH0OvhjV6SsN0junqN7ZIxVUzorEFOMo2OvW9fz0UjfLNgSe3PQLPFfebXXM+57kWLqIevwHvXIsm5KcofAHAK+upN2NbsNb7LnJYMlQM2TSZ7dGuQz9kcAtch0CzrZ8/dWIADPQYvQSoAIS74VfYIAXI9Y7XtAm+4XKudWOtL3hT91xZ9f71OHqq1nixFZhKQFAzQSE+D+BxgXVh+LBcOtKvHR3/VzT/Nv1m2faOJ0xTod7X3ZQbYZ5Pk+nHz/yVHTtc1F30xhZL4k3RZU+RDyPxeEJIVZI1XTWUE8Tmcfx7468Tyla+ReFfbsU1tnvcFcoOEn9J4J+WLP5mgSAxuu8taA6HjPVWhmE2OTAtvgQzPiwjcWAMrN6n7C+w+cl7AUD1sJDOhkaa6TRIvtxul5mhwbfvNrvC2WDcsBqv7VJedfYuhwG2pi5mnRAuAJpIoJRo1PdQskS990jT0kLoMYK2YbXz/4yBO24obaXN+x+TuXI5K/0iEJ/2LZZzTEmr2U/fXSRVxlOTMb8TwSjCB68KjxcJEWmYdo1ggT4nJXBaFsbGxl0ajxoX+EniplNg2hqIuoZNHQWnBJuUxnw1EK1/JznyFuszEO6yiRi/gBD8kPT7OCNp2ISEPFipnPU2eVoFNH22IA1ssenMb5zZzqGGjnVN1DZq6rXM/TjckzktiTQJxSBxLmftIamhOksvIpu4CGTh9PyjvsR8FtSJd3pL6jrVGhjgIs149H71B3W0mHZndj9XC9PG+tOsFw4t6SaW/4Rt5elw7mU7OfUATWa/kf1KYaMo9qzQMjReLv0Gct5nD1zVvpYBuz7FdyF6AoDKax3rq9lB1EtPk5Gfzegs/ClLGTTzR8IT7tDQUMp6OAac8Se5nZSNpT8+LSawpm2fwzi+zBPpp8rSB3YRbKYwr8Gd6PdtvqG+iJ0fXh1ApbZgcvVJZotv05ahohTqdPOoMXdCxLwZMBEfkkQhj0Q2vxMo22uMI/GN2R5dPPbjW8fhv/VdcMWp8GFlZ0JKyKDDpoFJoFW+xIcU7NAzXouca//MpP08stpjnS72+oAzNwokIQ381SdNWMerWJt+Sq9hMpMsbiQoL1bGaZt/kJlLFGnuV2/VXi4Kb8H5bVYFTlym72Au+R4gx4LC5Rqc9uD1XFV/yAdZef+jpEgp36FDwKMvdkODq+G6vP315/Z8BtAq/IbB4XZHFvHH69lUWnZHjzfFakoqMJks5+ylhLrx2MPtsMz3Kzv6/5BRvU9/jZYGFTCCQX9hyU0OBvaeTS648qnQXVDufNfUkTurespR4tT7Syu9Azw9d2hTTsbdThv1VqTJkv8BaGWBDTOBbSSn1/lxw+4x8Bg3ZaoPLZIEkHWiNgasmMH1QTOfhm2em7ekOltBc26pZbgbh0iy1C0Fq39R7SuYCZCUf8Frqe5QKioXol/E1sCHZQYD/xYoC4ZZMcVVx17ZL0F3DFHiXDDjh2330ZcjnIZIElij+ebecPKIetl4UzPtZCS6a8QJL+h0X/wn5nisI0m9kZioyxJcphE3S41z+36Yg9Fdi0XxSbRG/pvTmQ13m5LexguRfOmN+pvHEVZnXaEDDxMM5KwP6L9tsAGNRFZ7kKv2CFeAK7t1DfEUPScN2PeglBqg07oL7ib7h0w76Pautapz/ADwbEkaiYXhSIYLpN+5qzTYxIhe1jEYF3l+J1j0FfB6PXhwdA17j9l3pvyoiafCK4F9uNax21yCVTJCmHXIbckLSeiCfCsUVaQEpxzIJv0wlNnp//vJybMP//RcbaZ1k0Qray1Bdx8q5CKOsryfvAAPGPOd8TP0JbyH4TvxqnEVuQbzvi3mSECTl71miy9TDxCd6054+Bm9xt6vOYCz9VM28jlkD+LzUlerH6lfzp1E0Uq6d8KrwJqP4teBGVO5/34kxLYzgcL4OyGOdP2oJOlLCcumBrLXhMhuCWZR4SHFNo6H1C3ugoDlgXp2ZZdOitSBKM2W/stqnj4Lh+0jjUEDojyRMkpz05ipp4BgnWEN518x/FA5FJjb7Ueo/keYCG9Sxz2Vg4P0NdRsj4c6yVIb4Igt7TdXwHjs/MrxsX5yUjaWZpiAISh2NDClyvAQds8m5eIB31fjFtKSPcEo3MqAtXOx+IasqL/l+Ut0dlF89BGmj9F7ZN4t9ZCGcQj07eo6g/LO07yE7k6vd7H3vlDbGyEwqtYyZ5M8D6H8wdt87W1d3R/rTdvtMeSBzWHrCRjcewpTP9XkYGb3X9MKeLWS2DuytgL/JoWSzwc3lsacEPRKGlSUXwJxmEVnnAC2wgTrAlyU02PlWA03Lrc83Vax4jJunc7FxLJCf9vuEac5qATR5bPFRzWK1Ps8EEDpz7bJEIPilzv86QOX0upLiTEft9RYTaJwwiAPyBJdm8WCBOiqhKyoqkY4x2vw7ZOQFxLUxcjkmh8Jrgp6iu4b+jGDXu/QL5Lk7737bxeioW5WCuaUah4UtdHgY4U71r+jO6/ZHRtElsT6xR0e+uoukhzPQx2w5jNJ+6LJ79Nq73ch2Emn2ZD1iGq7bzGxB/bWCB+C8KzEqJ+EIRN26Sch6vMUZnGaslzaXbow4RKKTU64JJnF8bCA8BFah5OY29rVAtt/H3RMRDpodBR/M71a9UagQR5Jf/xdu6kzA7UP9QJhcANWP49BkvfaUDbsASfi89D8Ag751f+WNsNAiJdt2byn+7LB59Zr+N8DsLVLLbtmiACCf5XsxvrBRvB44RW0t/GXIU/K9EBiUJdOQnKjPkEhF08Volew4O7vQpZLXErj3tjcKjrjGCTglOShYxocdtDlqAjBoZTAltjZWFa+nOdZfjvuT0Tk6LW5VojW5AQFHSw8cLJCIXMVGuKi4dTGhRNgHnhcnWVR6WKuBFiXjsS2kHXKcLMeOG4nJSM/EjrmiAryKeWgPgpJj2L1FJ8cgLAR9C+WP0EcnV7rly/VfXi2wMbzn/P+6y/U5rkR6+9oV0izT8u7/mFlCWizaBsvjQvPVp8soYwODjEEgLDHTwsTAG1g9e541SGnoKzY/cgsPeKvredZepY2IONc72B5Y5cH1si0l9NvMGYxLabftDkWkEweqWSlik2VptNmCuLXR4pVq7PV2pZddhdZMB/ZWlFFAR2vzr3Utmxyjh+oZOTut7EBONr7glh/FJhBMuGIUlh7QuMv+Dii/TzklSmDW7Fxp5Va+31I/FGItjCuT4jHxvFuZMRtL7JGFuXsjAF/eJDAJMt4e/Dg7X6XQ3rKOcPyRu9GfLzLY5l0eDCA9d0+t02di6mPSeFGI74sAPsODdP1bSTwzK56VlsPjvwbEHNSwjNQ6MHX0KRlrlhZqxCG8fGLGPE76pJm2KRKY62Uc0ivwxnu6X1J28JWtE9uFRewtNcT1Rd8QzCmcfBUiy8OjJIeoqc972kBM7iIzO0Xm1TkYU1VXbltEkv9HcuLfgdv46ve21WLZvYagpp16f2a782k2dWQ2woYYb8EECtll3vRaWBMNX8r037WafmV97EXn2Ho7tMBX6Olme8uw/yIfvXhAp9Ouq9S1oaeY+r/mV4x0NDDZzdb1nyw70mKw9826vW0va2j3bVslnXHcnDNQNG8ymIU8Icsn3jnyKcpjiLKfKqLkvP0VYSFKvsP5NjfqngblRZTw89O9Dy5Wkb2u6p44oLLsfQ/XhJY/DcZrGfG0n1h2C/hPD6AV1TRC1RLgwvLeYajWQw98isWyBjwNoNrOOFYfPEVngId5Y8vTvIUqJmjbDFRUwyYA+vPbZzOwfbVWwpEWUZTYZ9wZ26VJUircwHbDUxzYLTEVSz0wx9Z8zOWKpFz+MSy2vP2g3PpHb5VsfSoTLbj8nCapx8ScJ1TVJRYqPe9FmWW8aQeoE/R2mADTgOPAEs0zhMVq/UTz/rrS/3GsdOgbKAnbvEMaGiF+djwGN560mcpzW+qKjCbhEPK3PAQTL9JStN0bqKYQlcS2Om/OrYaAZ6g/nVNSMHxve9VujIVIv+zxnw3uAbdSSbDfbDOxAdwGTPxjErrHQv94MxSKx93cGYOw/mX2iaKDfRZc7bElJaWsOujtSjXxctHzxfyX5rOdNYWR06RAsI5jGG+tlMgdGl5AKo9NKVkvUqnxk8FekHQhrg/SogdzWjGrEli86Npp1DDhgaq6j67kkN7NE4vy70SYO2t4lg1fdGYukugAo2UGPufUtVTGwsOtVyGBf+1lr+e5QaXH/bmeFjX6HwF3TgnqcAL0Icwv0UlMiVptWEISImziRJNknOcBt02+gMScCgrRB30j0w4VYNxYxGEW+aLtlccT+yXVhVJN1pf49EXOWBKN/wI5xBrKIEC/aZcEyHRwrAHlH/alCZijFAXNz9m6ytMbvHfwl+NlenYwbD6llEPDeJ1FssggWoJKVBNMNlTmDarbZ7rXzFrbXLin+ujEZ0K632wG7aWm5DqdxH9rEm1H4PkuFqovIEV9dbyDk2M0uxkH6cYe4pA+IhWSZDibEN1UsswJQBzg9WEPoD3/SQ7CctZFfOtZYmsmGI+MdJd79t4T9wqOP1NJpYhUnDNT22CnaRd8YcSUD4/OmcShtMdfuQvw+QP4cKkEf56MC6AOoXCz6gJlxFSasx6tzQUcVcpUyvA6eBXqdUe9WufMlDWjIO1X95oZGj0OfZyCt83o7Df0ZsyXQxVQrykZTO64UrOGZtzER1KFLS7srBCu4hDkx5vgANRtn8wjUAOtllv4aDjv9NbvJEjp/L2bvt8WN/5Pj8cEAkWVINr0xx08R2b7J5YMKG8OinzskhBft3qNZkud0wQCyIH53oVWADryVT2xVFmu5Ay/rOeWnoxBFFa0UtQylc/buhQPWlnIt1903JwpuSN3EugxpRgKFA15dezdYLdjGm9iQsWXMdXelt6JProSl3zqjcTBPEULz5Y7ILNohq3RnT4RM7W/Q83SCBOfxIAlGwqUDdoJk3mH1JHpQL9M0ZkZshW63Aivj1zVIX3lDTPsanDfl6A7Kli3RStHDWhLMI5/zUabHzq8pZTA/HHGtxZGzJiVw5c34wkCvlgKBW24Lz4evRN6oWS6uBayiWomCdiqkmQBwxnpQF7A5SA8+sFG3TYaMzL8U492tuOa98OBHw2YrXJ/sYIhtTHNpYEiv8wxoM8JO/2Y8/tK5/xc+6RQmeFPHRHxCyL0kEWC9QYOtxSd198U/HVc89QIwtyqf4oVOVt6fhhg3EjRoitJBimuCy2PVCBqO22EErZEvhRNpW0/cyqZEw0mqNFdtB/x2V8YVsojfIBWtFK5QLCZ1ENe/2PczdLtCUWhkOQ3VOeTX0TtQ8LLmAIShquB+rBlvIddXpFet8/CHL8xy+abXClf6XvpF3Lk5IFrjwwEghisxfr8usOWCCYU1Qbc0qI+iFiefydNhESv8xmY3NrFJKny1eu8ml8pxEFaaatE0h8Ek3+vCVVs8iLVKPpL12KQkP6zcfYI8Ta7VelAWbISHWIpIqIpbFBgozrN6/apPHXSvtiHl7pOBF+W8hd+pXqwsehEwVIsts47fykWXz8npw7NvY4rEGFXzlFmkd06enSyuQVScArptov+ePetSkr8mNgLwV8w0VF7o/QeOqb/I3uKvV2m7pbyJ2TiOY6zrVYaxcLP5NzpjRhwyqzcG1YU2X2esZsY50ICCNto9xvkUhDGTYuru1iK5u75ZCw9lsMDYmmhFUF/HmWQRJMDHPZPQY9sLhVkigsLuBU7NPtMCgHpP2yVMuj9q5ztw3LEvxRSQevm7T4F1l+7R0KlfxsUhGz9Bm8M+M7Rzuov5UYwJwvg3uN+KBs+sWh3q8yFU2i939NwUZADRrdfqECzGb6zl9fovvl+KDKFVPNqQ9hpFKjF+cEKbQBLNiA+R8zd+KwRuhyPIjUE9xWzBh6f3felbhb3s+22I4pRbBB6fHK57noxkpqYZbLEeSJ+s6fkPWHFv7e+uiEJ/R11oDUBmn+yt9XaBi7tYr1oqHgG8XTNmSX/LPaoJKNaheXBKYDkkI82/4zILGrNk4f6f22YOl4WUbZ3lTMOzuIN/QCcGVo3eBtLYX5cmD6NsutqQULJS4DwIZhoQx53Wna0cFabZqr9kP1s2o2uzib3G3dzXNBqg3HbXnoRrdeui/YO+TmAr8uHedkdq/M/PrC9CfD/01kOMxRboHWH2cKvVMo0jnQQrqW0QOGekGIYuwWdpf8rL+6QAYl6oNmCdtQEjfpXYVkF2iVmTBX4pw8fS9jFcIjhhMG5sG8tS5E2IWWcDj5xO8u26cHgyXrjq4xZbY+nf24ZZOYH8omEDZsY2yRlzE8ruedHPiGf7vCbTkQoczIiRBsfAg3kpY2ZapQ/FsfcMyUf+VIKAXHPqVfNpRdOBhyfLYg14QRjGo1+C+fFPUjGLNKKVZE4ymlEpriHypnpj9rM1drV/AyEarRuoNVWvfJR4crwkEGKt9XVtkMjOdA5yfllrzdDlXS+apJUDGo7qRIqARbM91+kNhVLNVgYScgtxr+Hr8Rwevf/f1QI9qdjbAsfQmfCYfSOLauxreeeZvQxxPTDPF2JxDvuGbotFPUJKfCiH9npw2cAI2J93aDTmhnO237pTDGErUXOhLMS4Gl1nMmUIq7J+G6uxtDSkQ1BiLvopLKEjJnzF5o766A3g8oU/Jtl5v/wCsZEUc49PBVx6eZxNnIE2/5mZD5H9d/f9yS5o11czHhy89iE3OvdIpSzBO7Q8Rrz//0qzw4ZzbpCmuBfWsN24xDwZLtFagmaXTEtfUtjxKfJmeSEc5Xmg6k2SA0u50kCpP2icQ+SKa2Q1HO7uUDFia0J2Q0LlgSxtzp0g3qYprEW70a5ZnB1UKckuD89hriUk5SyKGJBGEuLuVkZ0EKWg+eZqTmbY/3O5WyuB5oZWGi+i0Jr/wosllJw7c9RGqYyizvpsy/Gu+sIKGKdNlV4TwQzOkozf0IAlC2uTIbil20xv6RlLW1eOM31QWuVcpbgslbxC8iSrk76hJFYzlsy0oklS9VDViCNtK9fcDZJWxT/RRqPMhHUIcjCoYPsKkLCM4HzLt/drUVPGHcFJmUDVvpnBXKSj1YeVKqOZv3RenfaFRFomeVeJUk0LPMNbHnvWg6kpr6ozwJbUzjKsI47PGMmiE+ukILxMpkObbSc6CgfMT9VotnGs7hSqTGrxQbfxkNvbzRFpgeLBxYHcDn6CQ5AdfWq424Ttnw1CzjSopNGFePIhUNe2uhi307qjKlNHKqndeaLci3uileygftqaGeXHakngsR/k9DTpuM41zn2phzES1UO9m/1+IaTVOhFtjIxo5mnqUhuZLuIBOO9yTwjTxKQ90d7zX/ryGzL4L/fV397p5M/E0Os1DmkYAXB+ZmBr/OKg4T9Wu9b96UslttXSfcTtyGCWoEMip9ZgNytKMKexmsMurJEQiiwUb/bgvKF5l2ZtVjDapXxceJwKc3md+Zur3C5jUTRdV2nlLyEb+3cuEnNczKUb0ZYJbAW/zpOLHeoWMFGK0ia78XIYMhOatxZhPFlZhJTnYyMPbokkuubCYLGxRQjSqItzeZL7Up5PRZ4Vw+sYbQ52WFkxT66huTb68To8/5hJLb2yDXz5KP57hO/NnNijxEtqK5+UpfMNHAHDraDuCINEzq2LKb0ZUKvigQOFAePnt0QTwPGJcs654tvFAiXK6vlAes7cywkDv8yvB04Rii6ntu4B6xmcjRUeRkn6M7SDILZBtLVMHqUec3BT5O8Xqp4DKPGPf0Cg01dM25g7rf4ylQ8V7NJSgyuON47/bCycMBpTNFaYP+ClUFZntv1oFE41OF286HjOQtxxcHtm/a5lZOPDTwtRamW5HF8z5Cnh/99gfoqaafLvNWzkyVrkGwyFaxF5W86GX7SadNYv1gDO+iARc6VnlCH+WWEMtTU5/vj2yCiH+JYcrzQR1hYBK9JillRPSWoIyDlE81d/DiTE8LtUN3qlMylVHZJksvRMp9w+t5Xvd1DyTSECQKOApJEewqGKJvnLAElyf2E47Uf/UKOGah0XQ1PVRrxTQgQ7ArQ7cWylAV/f81dZvPzvzwZcr9FCfVez/5BzKyZZ6KiMjdFNfo4iOUPlKQiZ7VZSa99koWbIW9norh7BbMnZyWtaXo1TKZPhUY6jGNHADMA2n3wf2o0HMs1bvxza7ZYuWjBEFtprsCxPyVB70wVEV2PXZCnbR0fUGm7P8wxbCB36Qe3CCqG8NbLcRfiVKZtCXmjrgEhuSvOba64ib4M0Gqk42Hu7FFScN2cnBQmvGtdT+Zm/qcntffZqGGyCTbQY17vW0ckwLBMGxUMBVvNg6H6AQG+U6OBvQ4hOPPKdUsOGjhVVpYtBnnf5SkSul8TDQ2k+W4H/88mQauLfFgCH/qAZ6/PryYTVX6+DgUFTKGzgHhWnqcXOZlljyMkweF8/E3xhmKcGCdJfd/2/gUvjp4+zetnOsjazHRDFax4sPJ47URxZXDbTQia3oy23F6s3GwErNm+r/vddBEcfM+pbOrl9uL1o/yuyDluJ7d0hJnYL1SdbF6dZlCJu0aoKbwQvEb0P5uiEkxBGjygbcx3dtWYVwjfqAWuddhUqKfHcJhl7jUbfoNViqMNAXPvv7zI+WCA2fYOfcE61tbzH8eiQhoDmAZi86T6EjPQ/Q4NAmrxLaYVpYynQWk2fyZ7R/Ngmp2GEZs6trlcsNsYGtCAtP8ClWpfIb27ZJNDIVatSTmbfB3xYi/KzCDBtZ4IKD1lPmjMirmKqgLrntll5jmnY47P5tJcS60QRm7fN3FlMPOfDo+s2heaIEa4FjspZspg/2gYL9ZgUR9xacEjbw5yoGhMXflXMzs4GI5EW+bdA85xIGIaeFyqjLCF9Va0gAgC/wmitNUiUUJstmjVUOtdRHSc9LA3auPutIbJfAljpD3zXJIqis1VYVzOTJcKphZzwvoF6tOjGE5pxYRIIk7P/0Uhr8rgzlM0DvKdyK1dLIDYggzNBsR1kLp9X7hDOHnNB3Oj+4b7DNQfdSzulzwNGAGjvBb6+Opc00C/Z6OuDZBc7AvJvaU+2kKnyDGhXv4nx8PQDdv1LJyXOTUbVNjk4y/provgOzeQkuukBGxa/MCyTMuc4QmlbiN2dsw1rMMstzjFDDBhC2tGaHVuQK1DhPu8pHmy7VgyOQwBr0qm/nLLBCEvDcXa25O+1NJjM8oRa9AqixjDRT05jfC4qkwpl+opad7uvdVTPMluCaA1ENCA0RPIPf67JsyNPFs/2gWS4U2xaIRjLd2TrlOeV+PmR+X6iz5meDCbVxYhBMCYdFKDfjeHtd8yE7fbqEM/6uYWxIJyMuU2WnN4y597yVETXRfGDqiCeqlXF2cJEi0i1i8vVn2CG2cS0Rnkp1HzJgpgGLaR1lL56eAKNCXQr/IVHB3jXS4RkZYPGoT9YA8gc8OlGsoP06VJMG+ndn5qC6IBVf2IDrwDXjJtFJQzTpkYSmKlpOMrIQ8i4dDppjyjnEOvURGgvfUa2UQpV3C4TKNhjfYSLndwYxwd1FL3B9U7ii2WnwzqwpHskUKsfiQRfFJHBOcs1ihp36KDGSUXGDCt1vIleqgrA8+dWu87rPoolrc2Vc0KVIItGlZ8QMIapd7XUugnwUM2H4WD2n2J6ej9xDBV1zWigcieynDYOkN3245u/blNeYbU6U7vSHBdTPmDBKCQMbjRTrd6P2Hg/shueZYwY2OpbmL4R4I+EUq5Pb5zg95ghr3VFx4fxgtY1cmyz5vej5QDAMsJ9O9uWVO0d48yjyF5L4rcwA2txByw7JbcetvucHkMzhjNgyA8ibS2UzWGygWyFB4T/40pvDQiPqyzp4gyuDweP2mAGiyCc2SiFGeG6aN0a9ULeUSWMvr3SDFm7Va6hshyToTL462GBrMgmWJ1raV1lEXcBwvF/77KldmCqcqA0CcQDkRKXC707c8kHUo/BQdWU+DrcTLv3q66XD/cyQaImZfjSd1jgdF1jKpa2IBT8HYRDfjYkjzmjpakhb53trgpVAlqmGbpi3v5T+44qolTMEKt5I1MFbKngp11QEstZggFakl6RAMjM7CUGQZpVYVKnIHq08ntjMIKBqDbddYWBYfdFQ97Wqw4ZSfVQtBsOi1ViAQDHA13SK+8WMmKN2rBTGdhYxJA5I4vA+yyc9oqPu7nNwcLIFgwxcueThwyPH1L/TFjgi6LmDJDvL9Lx35re8Ehvqr3kzbKcsyyHksJhqihSRCHM17LXBxxIxKKsQHerq79v0KqQga43iuZ7aw+BmNCOYC3lOD3X/qdIWRnGyniLCozqpXFOsTHcg1cWkW2XuzKeCeFqe17oAwCBAH9GZS2KkurOvo9aNtN6ZbZdwTkKkHdIORWHO5rchErMLdSfycYpWCT0UPdVrQN4+PSKWbDFfXH++ykkj2mMEn8zOOBOk1v/HVUWEREtaI0BU1TxtW4Cja+glTbQwuLhJcKzv1moDVTmLiAzCyhX1mOESctuE2/jxW6FTxgyMHhpfaz9BqkO/70U1yHIa7ftHvh2GEn1IgcUVmy3d/mbPMOpzgrJjPqj8AjNaoFx3dFB/vvyxjRbyhKl9S941oA44/IUmnslYJWf3HrdsXhDq7e4dQS4yvwB81EykEP9jH3aqaQ3W36AcppjUMSD6XdglNcgVc11RP+mBG0pAx1IoA1tAsphrybWgjaY7NdCdLI72qBb/CoXvjixCv2W7JHX0z+zZFaxAxsc5pk766bfml1P9Y+0W/sdUdnYcV9uSEN3/KrDicEOr932Xeqokykxx21UZldialVBn8HgVFocXIPdMLzr6i9QAV0Fsyx5k20VTYspScrgmR4V9bIKZupyq/qzx4Z8ICGsZvsw9roQAsaUL0vKE5i7yHd/jPCYG0WREKUVJNxwa/h8BweQLF3SZgFFJf9kTVjHMZQtRoW1MbSUhiN9YGOCHMHOJ4KVQC3KC4kty69Z/FD71dQvL/3HNAihhvDUugm56zT7QKUXfkfzmhKqLjb+/puMJadbuT0Aq9nFOvQbbXgb0dp5NlXo1Gei85nLs9VXUf8Z98GPHasgK9gF6TSWS5+HAPLFWpuakDM6eCH7ZGNpTbJ+5ltiEmMEn2Y6AfFN6tFLJdE19ycy1ywosYhvP0wkzek8jgzTXjZBy+otsX0QXcoC6rxiJygoXKD7tdPQ1/Q6DYfxEwEWus3zt2/C6E0V26DO5llNm2sbFds6iplqY+lqjUMyF+tZ8Zh17rGBDC7wszra33Bk3xpcse0Llz5o2y7eDIj7bzIxpK3etlpPGMVujJCTjeDm3s4tEW5NJ7x4v1h8kGw5/3v27ti/y4dh5W1AdKhwhK8uMyPu9jFDsXm5FZpHUbF+G+XlWhGPnq5df8Ug2W/i5Ih8Qi4CaRP6RrI1BadcmYyH8xkRj5UBW6/B8zWqR3nnFyg7BqWZN3xP62DrXLqHxy+tnxsWypw6IlHW4VSiEhPpgxMq7ljru1dV1iEuo0ZaIyV4INzCo9s5wY0BScfwDhH1Ecwgcjji47WgMPkXooVAlood7JRLLIMp3xMQuDZOy9wTEJYsgfrKgBro351KSe0KwI+z+I9zGDQlzIjdQ7gN+hlkPZhhwM1aWkjFRealWBbDvOaCX2QYC3rP83dR2+i+eBUaXcMxR7aRNLqsOo+HU79OHnj0LcsfvfowvyX5e8O99a3JFLzE2tC+O8Ppli3vimw9IAE4zDRfPl3r1AEYWOSlKM9IgrjXihJX16b2Y/a/ELB+dbP0Mu3kBmnRSmTzatG3t4wMBFoc+kYoOFCXCH8fwIrM3uaJoiuV/qJ0SOb+jNGS5al7dEIL1jbtiwvhFXY0cjqOehZqR9/vvDKe0ZaEAmxyaT4x+4qzdLwU7Tn3hHJLv6cmJRBG9dfFHexJCGEpoI2S5RbSyJLorT1W9ZbvOyO+bp0BJDpc8djZKX/odTiUnvHz2wAM07tyEGHs0KsXAIRCztMRtpaJWLGt52BespL453sgGGZftTS/Qowrzp4q+YVlxhYmSG2pYN80AWx7ZV05MnKli3FBV5zsO9XrzZpqKLpj4mLtpvMwNRDux+R+4BeEI0fkK4U0UUVyEwUsxn/xa9fyusOe9KdwX9UZVTEHOY2u54f2KnmVySHt9w90YMvPZWnyysXoh7dFVjtXxT9gcfDs4rfcuia4ecWj6ngQtDOw67DVnh+tycIQE9kBNS9UdDdCRFbRt/QgsJGtknuWSXzkN2CCbRs+IH92mOgQ89OTM16BMhMoe/dHF+Q2ne+P2u5KP10AU+W727wYrso4y/wkHzzriOU9Au7HTPkRqsL1D5AGpZRPDzDrSQj2Xi46mPhvUvtci7jJlBBd/tV4/P/rsfZU8XJY8B7CQWvBNurW8TxA3omXXxmgIZhoCWlbHzXnVAMY+0UeN69jCc9IiQi0OWKkti3WQVboINBD10FbvvsJ0nuzuEwDC/0qlPuwOAiKmWR1Pouiw6TJE/hzR3ULyvjD1qXEAgGCinB1p1zS7B2bi5t8veqMCyplnQp8NqYfxVGOp0tK3Qo2ZJoGQtk4eDLAzUJlOSFg/LvwUSbrYVs5f+/eyvMa8qRS/s6Hfa2aUUL48o7EWJWKaObQxNoNm9Mb8yeMlCeD4ZRGltct21jHrxyLVimMktlHyJunW1Hky2YwInflF56OZLUuLFVo6wf3Bx0I7fzCxaBQ/JcXaN4AQaR0IM2g7Uf2ChkEn4hCcj4eurxFwW37JY1AOv13dqyC1dvuEIusVlgn0N1u+1vyz2MSAhwvr9owCtQx9mCSfr8UhDQ77HWwpig1BsE+3f49d3AVW/+qyw20WN0qqKEzje6V4lI0KIbCpLhBEJJfTHvZ8D7zq1WjEBtSzwGPmZBWZrLDMXZ0Wuz7j0zQnKIcRxOhOdxogasphMPYSihZUrYlO+vOVrYWBPI2it3w/GTd70eCalBAwihF4DBmIVRFEgqK/JfAvaWvoxgHMP6MUFdhZ5o+SjCgaQ+hZMlIFtOUK1fz1M8urnpcuydM09tw0bWS/lB0CG74D/Ta9bDeY/VCe9OB3bAPjZVUDV0JQ7exeH8hffy1ysK4/neyk6JdbVh9OVOHLCoiw/SvIlZev68Y468lJsvLfvIBwL/UuDIvlDl82Ka9e/UespUtXJlGGdWBctsYZAahp+MhDubbtPB6Du1rY27TCtQM7ttN6Fu/6beUKw6aLtWSN6XOK+H6MYdCFXrOr/8OrTGwQwmDqCeI+Giss2y13wpEp4sfgiCXrai60ETwHWInIwn9xNiSqZCDkwAYXDUx2x9c7FErLMl3UX/VpYI4y7iXiRf0SVEPVnzdFN6QzWLaylcb+HZBsTC+n6MZaWsAuJ6X23gAjnAU8NVIEINCy1WWeaJFaBozfHrmQhx9EguPf39P5Mw9P+hU5/8FmTlWdtA+fHpI5cX8PMaqjxIHxh0KKZxfYTpEsLascAyZqeiiaJMYSALjUpbQJF/y5TK+iYlYeuVZ0wXTQrz7kysWSJYw2l/fsSna4w9RW11S5mHYTZbQn88C/M61RmE2m9Og2vpNNJybsSm0YWt/mCgvQ6MM/UVYDZsmMB0FZWr5+4WKiMuIV72uhYLfw19AcY77iKTo4CziDTGXJafIMVkXTZPN25r6ZbSxcCRjYutfza5X+ULLzZASDeSQKLlXVfAUduFMq4//kPjgimFP8OGJfh5qIIwcWKj4hK0oGKF3MXkqtDsY6f1pcOeIk/HudM8+YDrXhKKfRBNYyB3bMt5qnTkD8HntEUWvk6BsueAvP/vdR7BWwPsbagaPNiUFRf7AxTV6KLU6aDBcp3tpFGd/LWSmFUFwuyNbcZklbXC/5kB+N2hPVhym3q6QORvBV/azjUsNA9NHYtAWq3q8N93+X/D4CU4aFj9vlMVIm5vE4Tc+3Kp9aLteLt4aDNDTf106tB4vdoqUQlxe8qkX4lWR+MQdfWcOBIXl+uQQ7Aam0Afyrc/GBiKtWgF8vrT1G07RjIhDTPgsblh6Z9m0oEsjLlxSHjgBudeTcbCTf9l2Ty6VAOGxFUkAr+ffQN83X//nQXoT5woEwM7A+qPgj7V7RbhsXoFhT7hxrhd+lL0TzfCPppzvnNsaIs81sQ1lpYhIIT7LapS30nlJ3ud/wjLz24u9uquCO1Xv98vtVR0PZxbA+XGAfB6MdgXwvcdVXivCPdJez7/BkXw6u306NvItSIFVMdFHiOtKanmiO2vk0BAWxxwsx9bvZAuq/vEVpcn9pAtR40MJS3cl6dL9cysotVJAJ1bbPA+TAbHCwC8zU+MkBEhJSB03cK56yaIpwFDpAF3IUovfKu1S+wjaegRI5UxczC2lPKkGLKRt1+76dwRZ3NYcGdhq8popO1LXDtRKJgVARzzHtYC7yD+oG7eh5eddcfDhUxAlZH9qQW4RwhU/d5MxnSbnAojXmFrS8YoCkSMOIP61ewynR+FyrUo+LJTz+EqfuR4oQDF/Fl6VKq/IriKmECRbjqxmFGs0S4EmlwXtRsSLw6t/9xNOM71gRsZXr5bvUnHIQTWroQ0sAid1b8GSLww409tFJ2Hr0RdS577e3fWYlrHlIgncW7btA0XYDnzqN68In75NT/z8YuThB3cZaYnrCDoavypsfTPvD8X9pe2hhPY8+tJsMisfUsSa2tcRZiX6OJ2MbpFlp0pD7wAVAPVYf6wJMlE+wUq/RN+uo3Y6Jba0yrYV9i00fOo+Lmm7zLH4HlzCAM5YMe6bJVagGpZOYk8QrtvQyYrMp9tFEZn8+oknDpzqHHaVgWQbMv3fI4M9Gdr1GlRgGX12hnicinhgon+JiPRjytrT9kcc3AyQzXiBYHoSTC19wpUNpf3G0CDN89V+V8Ayl0BUO4OWzGDH6C+6vYT+/dSu5H9jOoZlauk/alp3DaGQ2axjc/IPn8HIca+g+VbY5b49r8dsMg4KN2FD8X6t8RGez4aw6gm58najYVKLSMChTdRZ3ncEgYQP6JW7KimwyBlD3RZVDwRvrXpa+0dd/mFn/S274voYHQJz2AzA8/hWZewDJt5xpt8OwC8nYBPEZagi6zfObza9Tp6oP6lOGUSwUOgJsrsZgLeJqY6IbLgUZ9knTqziTCzXiE4VP5jMyRMaRxhGtv5nAdwbWJWng7y4Tdnd1GaCbR/QX2b2yu1WouMIR8f4buXrDl5ymGuhXDrVULISG5gv8ifYeZOY5CYKTVu8up5VMApxxh4t174+M7wzDPTQaq7e/dfv0fkeaJU6PFofV/g3PqAGNZY1t1nmJglhxgnQNc+Qz4w3smkMHybgt6XadtLctM6L9fbdXj/1VSTQBj35t/zP8WCgSHMWwt+0KH44XV1uJ1IhIeQwVYX+XvT4gRo+Oqnb3RVzJg/YvxC6Pe8bqKfCGwhoN9If6mZ2UHJf0YHX8mjvHjPXY7S0bK8K/SvOhRUIb7NeSISI4yqTHiDBVvwono49WdxFHWj16bKHqWP0sBw0NHTWWDFAX8qaMskNK/fnNDD4hPlBoAgzHsxA+FZuFttavddrIdcROR2LY4ypfXBhY6kt/zbZeRB5RVQbxeLkLDl2CjogBsIQxreTXFF0rrTs2tAYoAQTnSZsGE+OCBPqeY0jA4KhvUL6GJ+43koFLpLKuDm7OSz1Vss0qImDSPzngQK4LOZZUAk0UIbmmI9z23D6Mq+VfPkdU4RXzQx6/JFrX/waiZAqZT+To7wLR1Kic/nnMk4/srh5w4k3p7YoeAu0S2JyPPSSp53HEl8PnfoAG7SVa62/kQk26RNHwtUPf+QE/WLToUpm4YJdr1VKyl5+LUKQQvqwOq2rG+rqaJX0wXHC3c5cgQMt6jciwBRojFi/AKHTGIH2LKX5OLrKq/L07mstyAa1ygvjTSLdLJM3BW/kxrMdy37Mf3hRPnNLzkr/iI2BrNG17h/ThJieZ8em+3lXf1Ya3sxhlDc2iVC2y9rZulPQRcfRWhgKNETvMghvGXlHVyQhraOYi8xZ1yuAA2vewRSVOsIz6noe/NZ9bXKaJb2BgBOnZ/xDYVDCpEjqqwjhmX/zYKLgaBItdxGh0dL7is9+c9cyn3OaMBj6yHPiSTLllQDPqsT8I+cJpc4I1p+GELQv7Y8cPyrh6uOh6kxKYyg+gTAQUeoVfogPpt955aPLlcloFno05wvRs7u3n2uTAtcrKpXIVR39OHl0iNGFW0Krci1GHu/KjYDD48kAV5X6S76Gxpy+jIb0eOJ6VFeD8wP6+a1ZWVTTr6iLzm98WoelNg3ZGRt0JQBxapt8JgLqxaUAua8vn1Y21zF9EDLyd4XJLJyC/w6zvBjk7bVukZGSxqUzb70Z4j3uXnPhzmqYC5DssbXnkuw9Z0rXUpV0vD14Qo5+xSzEYQH8X1iRtJcG/301MNP9ij6WTMHFotJUaxqDUCIFRO2GbTM1GJMXdsSQlyZ0/vjHAu1qjvaU3/txsQRH5rCV/BPueDCc5i+ftTyBy7f+lWzNLnnsNtifqg7escidUmpbVpnOjYWFHf5w7IzWO21qyts3lLMgfCCvpFhpAojw4PKL+Gx0IlhnsGZx2lKCoocgH6v7I77ZbF797zgKTyDkJgZ7w+bRGQ3MyG9Xumib48untnwtvU5F5a+ztteNj09LnPeguBTLjdiZc1ZGW1SICgsdMz4igue5JRfhtM0kU7CpSPVU/YS4oZSFPubNR2Qp8BngsWW0PdPSikn+TrQaRkQNe6ozQmmNJOPqGER5jvUyHfGEK4Z76ZlO+kwnsdKG0tsUl3bgikq/jgj20wEIM4MrA26dL1bJUteCiGxCw5y1/h/rkkbIp//H8iH6oZFenMHBowkWNEj4n8VLGkYwWdOGEPFs1XUGm1F/B+mw1VNkqUfET8qYzeRQa/okZbTrwZ67bEQjP8wxkLObRKY8ad5kZJegCHRywVVgdwvki1pGK3AeLR29sKbw8FPxUcXWeUAWWRZhevBjzyiGiktLS0y9zoYSg4cJXHa3O1bXGA5mm5ju0vA2+Jtg8xeiqu8Gp6AINtGCb4eiDWqlkkdmLWTpaV0yTkPMqmWfmNn7Y13ufZWnsVxpm4tZnuOWX7TXi7x41zpLGqJvDt29HctfTPJbD0pDkcCSNtC4eW6zzoE92mqZEVMuIwRD7ZRaLCBv9JjVHjNZWufLuKx26L5NunNjodT3IiiTtdatMvMDsxWx8r+e1mu8AdR2Ak5Wr2Ub8QlLJxK6qAOf+mEAg0N7snyxQRa7YOIxAZQN3/njSYo15mnwVNytwVcnZjQQaKFQOm2R6+mtlccI/yRtfK/R8Xxm/VGjtZp4+HYKwVsgwbSIIvWCfUWD5olDVImKGpAhgXw4RENCchySBHLJnk6bGQgjBmhkVW/sd7sKvHDyaBS/stx9dE742qx4zUlymFQa9EtZSgAHNEtz1ocXU9E4vUPNPmqdIIWiB0MTPW7aSUnpvaAeMxSEKjB4ghXSYSyisliRPAcYx0jbqAzUuR1oGUlQY42Wr6OXx6VcKJuwo5UCwZgxTem4ZJiUMBm5k05mIzNI8y1HmV9noIhD9zC4GJZsDsjQWlmK8ghY7K4LqbRv9RBeFsA/K85H2raPI7gZKGK/ThdKsSBi7Kt11plyse9gQFbvTWBkp3uPqGqVOdBHKCj5ihEBqwOB8VTYO4I9cFlSDbzMZa4R72LNxMw1bkzNfK0fQyQXeO6jexynHX71xNS5KNuv3jjdUbtlOFM61tlkEpjjYp2lnNHcDaWc2qLVpHV6OQeShB/iZLV84glP2jo9TOojScK7+LRrLBLnA/EV5Nr+w6jrF9YFxtDhUcv8+9wK8DQc9Fz6yn6s5Tv2U40f+2ltYtAcrTI7to21mSdidGb5arA79sJ1mO/RIaD420OfR4B2JKwQyH7ZJW/UqVQxYw07OVOlrOx/Tc7C2bAqJ9Q5gNCc4SVmm5TDpqFRg+MrUHuAi2rMnuCprJ8y6sLt2ioQHF3ous8dSYjXqPfSouJA6CGXVJUmjy9j37nOQNZdDvzmBLlwyxRg95kpF7st+Cgng7+clmCvAKnrcXd3/iQWi+7zQ2A3YAuNiSyjTNM3Z9ZYCvDhpP+e/pmRt8lpOIVeivNH2Ot4CcwsSIh5lgrKPk3ayEOrxEJOa6IjgC8Q65/7wpIIxZU7m9jObOp16JSKkO2TNMQTvy5XiKfZq/NzP/erQC6ZxKIBtouQl7+hifamjxXU3DGnoUV1SrD7XF2VlSK7tydTkyq0YwjXXeCRyz6LORkzNu0ciSLYCGODeNyUaFK1c1TiTFi+nPH15T1E/sR/nJ4GJR/wVRINGRZbGhKWIOvvl5LDhKGE7L8yYhVb+JHN/7aeXtRR2MG+bxF97U9TR9zadU0/n8JIBLY8jas+jkIBtRK/TX01aD0b7PwUTItIMy7PySgf/hbqKutih+Ox2bGT+ATmo0J5/2HMasUjsWXjrTGC7TWyRQST3x4NPl5vh0Iw5a8dSslf8q5zuxoGCcIL8lsWzgplVzCsZgxgiE7UES4rvTbLyOjOnCgZ73chbj/O+oKeX3Eoc1qofDSpEFpER1qT33JogXL2oPJnCuiE5hJIETWaI2BdOM10tLHddogD7sIQ9u1MBXFvZ9ItATVlN1DkeEzvHOj0dDwpJTqXjj7286A+WHfqabqmvwNBTZ040f3w2QEN2bUuEfvo9FIbOWTchI3eEwZ9a2PEFqx+o1RC69VweffMifSEL9c0AzU1jSld8y9/My795dvyQQSzIF8DC+Ut1KqrN7+Hb1Aof6RLPgfMFjkN0yNOfhVxTHGUU79+1dLCWxbEqVK3xKct2m8STu/RaJWHTaWXLde2IWOFrl83klAbiSrtKENBylg7E+MIv6bv/GAHE98tQtYDohoGKTcLCP2G2qG6oaVa3+rCjioo6EB9DarPJ3guaT+6DOgMYZOoFNlETphZwhLHYQUOWcZJul67+pntJSU4SaU+T9r2LDS6HNoCm1F0NWNmzOkw5CQ7LNVc/Tn97IlhOs3Tgw++MUvqCp1o59VMEvjfevKEEEibspUaTYgymyAVqNVBuedNNN26ueaEFtqee3msGgU47HQjrTYwYB5xpKdudQw6uQFN6SIcAFoQNlGxg+o1LuTxxDVrLRJncsnCbCZJLfJa8CvYtj76yAjSM5ED0YRM84kosxcMw0lLvCanMFCfbDDeZDC7wfS1mvUIXKZrLiJcPaZeCcDI4onm+Fy8uLqatWsRvPUHIrHhweke6DXTB5Gl9OOfAmvOuvD/ZDE6VoiH09MSlY2ULNOFk59Nnbhe9Na9985bz8VcU/FIgV0tB3mVVaaXB30WDCDA6EJBasV8MSvIHhCUFcGVaBvxBZ3TtdYoGUowQAtJWS8hly5UBAP7MCJMALJGZ8JNT50zToxgCM+IbVGnbuf5zN1HeZ1m/+d8M50uxZkof59NVdmumkgHWsf6vXYljP/CCWGoLfty5IkvyHRB0d7cMqOVJThpJrvh9su9E9pyhICuZsd8ar+6+ooBbRIVZG4Dc4imXNOoZaC0jL1YUXUyk7Zy7wfYcBN4rsE/TNteFcvHCPpvmclpjfQm2JNZpQWmQHMcCZcASeuwIqiX1JCd9VHWVhWBcojdnBy7pEa0RzAakhJLZ0/DRC63o1Xd91BvVxlmhkeLSM/4qh1TYNU9S6HjK9e3kNkInWUqzcvQZhff0BPPsZoHrQkLinnogH/2HyVy261o7JAHRNrUKtU+4EPCiaQUaKRWeBf9dXm2JO74S7Lv8end8tmxjTBB41dqamaoGXI1lFGkMp9DgUn9ylbSayyz2GyGL9uVJMzU7NFmhAMJREGi50pAiZL+NpGJvwb4P5918VFHKJbcRsltBMcL16diXI9t+kbCatSY5IrM0qF59G48ZczzDQMQ/9ERroMd/VLzzrYfLtoisXIXS4fgo7OmT6m4tgW1OGCo4jubwT/+KJpPDj5c0wBizlhYCftJeYgq2odPygN7xL8WcWL190QYJ0O6H+VbqMuBqbTDrfKGyRntGjmcQ+pH6ZI+kOaLy/oZFQdIHati9Ga5juje/obM4K9PdwGZQd+zbj8UkcxM5SR6QRPjB2ONWn1clXCHfm+CJHhlzq9941ioFJ58T0S48nI23WKhCCSZad1tQkCuvkeqblavuOnwovTOL/I+7Rob08dEYs4FSNup9sNym85tYVdylU9Uz070MH39n9ZZ2rVUmTRJCLoI93hWgeXmo9PDtTtcOmui58CDqFrSO9sH7jxskOLCEpT83dy3JPW4Msybkbgu8n7ztuWVMpgagBywUyXScV0V/pHK9yRvLgtbvAKdNMkBQT2xl0kusKuIDOZ9TDgua9/2goAJw9XoPMv7XRNn71hGgosk1A6IhUie7JfHgOi02hWtmCB62H50inOOX6mdwjsgcch/dSdbeQkUtjh1PvbiTLsrFf2R9o86iREgMe+BWscW/Ki044dKlu5OZOA6noYtttflNpB6a5vGgKvTHU3+dkOx8qfrE7WKNxRm4diR9DafHDhA+m0Ag6k4afn7sp/Pq9gdIjvIWHCNxg2iTkgS4AkplSv/MuaysfV6MAaEPNtFZRlO7yEeO6UKi5VTsohrGrxqHfGQ7yUImBiY1BMox2DGhpd3vHwtq9Hrt/dKuk+c9G5nSFfTmi2SVKNXqmoWuLbIuWPNacRhietrFLJYVjbyx1R+v+IvH+1saa7RY4B5G1Gt/b2B5Ujzhdtcg2EtxhGCN/47y54RCg5iGO5Uwkf0wFrbtGoxuz3Q54EYCAOecGxDGg/BwZ/yuLBlB8Vq8W2ZEUU3U2UfAzPXCXncvzu2RLn5b5Gw2fYKYQ3SiBHZTLT0CnYxV/NdHZeOessE0hWX7skeJWafWcZRcQfj89EHMlCeY0o0xBFfydz192MT+MnwKQFgFv3cGwnB2Qj9G8N43GZ00D/dtbC7uOHu3lpVycBPGkoOD6MFKgPJA9WmUVoj2+sUtIbPC+7qqeATcnDWsPmNhrOSnBplYCIb21EtzmnmKub1OOBi72RTEeTUQgz0ovT7sdpvhxELsJvjdjTqxs89L0YSlqEEPKpsO/1qOUo4H5t0d2R5raOTyU8zSFJI46Ne2twjKZNQ6+rUaWBReKJsmK6bsYq/DnzLf+DwOKU/Hks8z9mr40JGzuVlFe62+1fhMMxnyn/1s7Vz1apCWqKiqa1A4qwMxQEbSNatFY4KLiAr1gHcN9+sb+X6UzD8qs5gxylDe4oUuN3v8bJTDqAFGnYAsJ1B82fHYGRfSqlyVizTUfvinAXCuyeaUP+sOPGAx6uKkbXSqBg5SZmAkym5bSUXXs1OK7ejHaYXNAhHrhIB1aP8z/Hb0yF+NX/KLlTLNpLJaz0w9+hM/jYRClSWrjqrtiO/PtxxH5iGSBmhDdv7S1JPviPHsrMET9U9E+ZQcs7puUGRh9pJQGlPsGQqIvRif+pUZpAAp15Kfl4/gpkjmvqCGuAlss5hp//4rdb1V3Bhhzps7RS/BOG/fB+arEqQiCs+GFImESxLtOYUE/7NHviGVxI1FMGXOh5bwl3YpZjiPqGtfTTrgth+y5tqhT5K2AtmLXNZLf6WJL8UKTIJL5+kny8HVd6femHwYjUwzzfoQ4HK9yjCFVqtzDVPUKvmmx4Zis1QPu2xucxPolHZedD85perJID7hdIfG+bEWORHOsOvOjXIm716aFeJSBr6jQuOPNLTUAB5zI1x4hBuvPP8QaB4VlFFXKCjJNMp9nNhr7GUwk66cd4vIRziusV8fwnIbrGk1WW8sBwdtqvEIi/enAGgf2DtL0pDB3HeX71+KjKB4qhQMlC41B2bUONOT0+C1H6L7u5EVyKIOWOLZmEC7fZ7OYIFQv5pLVDMiYcfreP6dnU398ZtQ9D9SxW2AdkfqGv/D9GlrvdLWpJS5q1jWHyZtEfcsULfZ8dhWrUBMHPyfuWWB4/70RuQ5+8c835FJCDCWPG2mWuTN5UDhIdiZSpuNolQK+ow6BItyRAQp97sSF5Od/2NICha2zl0HCeaVK0e2iA0MSbiLgQFYvr0Ve0NAWFs0ll6xG1KcJRMpReS4vOAcaEd8UaeBPcwXkkX+v4XuDHuTQjFlxGwiY3dI8xtn0qhMypliZhzkwuboZvH1BqZFsWEZBTPvibl23ZWEjUMfWikPfwr99816fCExkWO340Ll2w4/EjsTHWFa5qr0SbMc4LVaSc89tlIBM2wywuTl30NMcdWR9VLur7P1Qi8GxHjxgTDWm8mt21Q5no6YhFn5ajyh958dnrTMKxA0dDzLeB7g4T/U/eilKp5ohCSB4JkE95RZW/ZcKFfIl2uwzWTJDyD6wx0eqROwnRfARrx9CmXveOBCnWEQJNupitkwlIUFuMoSj1QANaFhkfS0NNV1WssCvSnsRQqj0vmtajVDrrJrQa9t0UbUOdvgAzxsnjZu4CYl0FnWwrbQPXjhP9lNWr6QR+etqJFcJbc7FWSTKF0rgQ8gg5ftAukHkt1aTdp3cN3fb9L1PcqrofrBfh5soxiY/2qYUQJHeZG5rJVsks18F0Q5EZKYlQMJzcvpbk178FpUTWm5li7v626WUq3tcjRwq+OtXrAnEC3z3/Y4mpVRN8kmkYvXs3LyODYxPYh6ATIWIjbH7F17Dof6pPU3lkCbwDCFpWjL0uQO2Tni9dHudtt18fX5vO/zv3O4wCZ0MTjWHYm8wAY2s/eerFPZezwbu6Mf2eqAdDbSeRb2jNZrlfkrndGO0704SO4bF1MOktsiA2/CEwL1tHSKGFb3Z0EXOLC4RoCKt7ZYNpvcXIWP0DlEaXfYSPWk4UfxVx8DldJB6BOFO20Pvu2EEJKKPApLHcuF1BnZMaQBYdqK3NF7vWw7h6NjbuoERVplrgAEsUHdzaocbDKc/2JjSDeKmJVy6zwesRKzxtMlMSzJkWpars/f2XiK9OzZfFr3wO1hXIIbmawsXXzppjgIiYsaGGBB5kAhGE/+MO8md0cj44blXLRGvpcD13UKFFyWp3xyTQiE7Fs01wdKtLwliTmHpXD9gP+TGo+A3JSgcJuB3e/5a23o1g3nky9T3APReCvrAhIBHr+p5Bnjrvbh4U1bNadqn2BceoVZ/e2X8sAq3iMtuxUTkB8z9UB76cdBe+GVDg+hCsfa/VwJMC6dc/CIsjT4MQxQJh895A4lk/QueW4cFVq4OGQz4YoF52sH0GWAg0+cO7pq5hGBwlEXeqSekPIEN3LnCx0d+pOdLkGaH2OhrN9I26H7s1C1nGhm5I+B41GNA8sXhAytrfKbLAm+0jB3vba2LSDnvGakaYc51JLJvZQJttaXcsjLtogRslyvYSNlCIYoqW7LTYmy8rTOIfJPzeUfcXgSUirtWWlYHyiktgWO9ouli/Vohu2gLOOSm0hq9IIiQxWK5r5sx67OU8ip6ACwEqdPdYu8J3gvo9SeIfuGfmHGEwIQ1YKkoa3jMgXP7TzEk5ojIlh12DCMtMbXIojto5pLQQvM9krv3Q+caHA96M2Ezu+in9dc7oq3B43L35EWQDoCBwgf7JAXRYDh/E0reOEMleLS0Ex3ieAyZpz94fWBkjMcYxS9sBK9u51GKE8FBKDR4WqVH6MDVzco3PVc6VsCHCC/PvQ0CBX3YyLalS3gQOS8Ep5PeHQ0ffe1l/NDDNpWiP7Ah3m9aQT/JyvYA8QZloovSa155UB0jwMJGZ1EXwstmTBkorn2kHg8NPbWh5PpbB53d8AVdp3jxpIX4oD5FrhpPggqTPg9c0GNIfqyfGugdRAlFE1LfeKgffsBA0UYoEkLLp+qbvA1fmpcdNi7uSnhp1faQpaJp+qSTzfuVRD7Sc9oaR6RuaAS4x/xYFDlA0B7zhYyHn7v6CFouRe0npEfWTLQaitM8XDwZfGNczObq4hcrHJnMXQHyTf6j7FZojnFn5kFBcaOsyHeaqolGXt48SRbr+QcwKe+6KcGR+l8iHIxfMAns0DL1lJJqzWgsO6AuZhznoAr3RwdeTO+h2K2qPCVFI96UcxpkFSb1DLLcN/aLNgxYThdwvIGrAf197Ek4XbwdtcEzoA3uydYnXe7wrBvQuMUoLpETwSMOt6RM41uyyeleGZ6IuqDBnhPW1Pz4pl5YPPOZqHi4KOEiKG5Dv61eiGnjybcRaTWkwDPbpjHBeXJj+ZRU6ZihJheIGB6V2rKmteaz7++Kx3goJm8LV0TRRsdcp/fkBuAUIY72lld1Tt+Jx0yHetm4br8bfKyeSCdvScwjUPzoFie1YVSA8vcIPCaXYSajMv98WQJCcq32OPDM3m5KYsGV4focq20N3lRU8A3M7j8Fg5WmCoctn7AdhZF0gdCvOPAnpLXaS+wq1thDOxQPgNLePBilURt30IUYeRO9I4F0goVO/6zYGqtDoLqP4CJKMjJiOBbRONL7dfTs/FtJV60xnaVa6lZH2ZL3NH2Mrj3Adps0hovD3Cx9X7K+MWgWSIATaqPMUWaWzM5kubRHz+5BiLHOqYVqq7jtdMWgTNbPB9QB18AcMP9l9jNXqvaiBO1l1S2pKpN9tTQKbV6uFMXSENuSEcRkgE+JZFD8ybuukkMoU9WpI/OunM0+Yu8x9XP+GvegOei24OXq5pfJSKtMK19zS1dtSahT4bFvuPQK2LjgJt1CaGxLDT276NWEXLrKhnaS+hxmLKB+UAC9IIOurOROzAY0UiOVwLDEkiFHsLcSGEA30otyPQvbOQyGINp9vJ/j7NUk6nbOx59qiCNprR0CX7cxpaOf1VusfFbCo+6+CbHEUZRi6tgHBjI/gPEwgxF7NrNx2HOP9D6tXUxgbWZbETu0850/XlKiMqfQuqZZuGKLloKlSyY9hzYK4Q8cU4WLDeZUpgcPfUzFSG6hWJD2BDsF3/8DNKE3SHFkUNbUjp+XxV402E9LbG+kvnnBSpNWPgJv0FARhnORJ6I4JcyppQyUfl6wOVkWceP/B4Co1ejyWcQeVKsdkmEPEmVZhv5GT0aaHblCOIQhgqGQ0XKV+rd0YHXxZ28epFi+ruFtxPn4Bkbw40xZy019VIcKFtOJyqxCM77MeyHd7wZhICxQi/ixHVdW7SlvVUOHy0sZCU1YsB3o5dJncuBiWBhNxjWP2nPFJlllDoPbTjr5EPQGjQ98smdQxc9ayM6zlaoJ/rVet+rq01NkbjO6WA098osy52MLXdDgpKS0DqKdCL9Obd9wUAS9LkHzOVQsqxRZFYNIMgx1Sj7gnoRClf/9aFm6f+zy3HQ2XKDb4GmUmbh7cdpZWO/g29YJIZ7Net1lgcc6alcMSn4gMtOsHsQJepGSkd9TQPYhoXNJ6mMcIXMt135d4DPjohRVjX9VtuBIauqQXW3p14kE0dO5yrDFQZFtUznSgi978ACvkTRpo6eSKF5weofgWp5n3aHxXpVCIVGlEs4DEvwlhMkHZcTT9rW56tvQNV+Ta2IoVFCwOBK8W/kzvvD75QfpZ8XicqYpwwsl5KwYbynoVoxS09qaMSKvqRWpBpqsNpNmROqLlwKmlGqBkUm6COOv5GEkheLNlDI5CeHvinOiS/7dxEsJbmXPUDq6Mb+M3OMfwADZh10sOrdb77HIQV/vbvVWV3MhSc3/Iz8xsPzdpdQT70Rpsjpv2Co1ldGhSdPYKFxmsqVL54xv1zpyXTekA4hjRKyYYh137+BNJ+4nFDDgA4TkN3/Z9REdPy0jm6eXChhNqHOkymoFY+TUqnCQvJWO/dq1AfVoWttmhiXLTuLGEzTo5DVDd3qFbq1VV5UXmncLw1gtf2++fqA59+VpSNxgPHFkoCZnFulxKIRYkZUz/YnwW0gKTkgSjtCYkzdra5n4LuHg980bJlSQjFwNwaDl1gOYVo8q63e6E9/BWfSCX4W0QicRofku6xhjnd/k6GPdti1n+wYrCsO2Rp+CzbAALj5l9dxjHTSafT6W2O7tbh16rkt/YctNCR7QuGxlZTX98P27Zq56RCSBWV75n3i8P0FZUtPMm7S7V1OPWrlbI7sONVfkByMyP31oOudA2sxHnnuIGMLVAWLYa7YS8FtxnXeE1zY1qhvlFCae0x0ec7U/Aw0o4KS+YqZxfOcizUtdJDDx3ZM3JRvtXr9f8Qxprg8ds4qb2orxPRskA62hbmC+yDK/Gw9nkBMetWDfwe8DJjAeddI71A4xJgxYrLy2ggkUwpCZUcm7aWlmBe9fps/APntByPhp4N7sDcn8c0Y0COx6Jdi7Kh4fM9JQYHDbcd9tPCVfZH+4NidkKwO1xj4F6xTyIp4IG6kWXylPTBCEhqFKD9Wewznvjt8EWcfB9qeokncZnKIP4pli2eY3IiEvotblQeSrjeDbfOYjY1kYJ2W+dbzeDu163MdopE5jubcohf6em4XbnMLzeD6MasC/rMiD2zFF0wRmsnpFRH7Xec9GVwPqi6NwTmOy3g9Cr27fvPp2R0tWb/rxG6Pg78kT+6mSZOZ8+yx1Q6zngVGxlDfeCZYkroQ1a+uAUvgSN40FuLx7Xmflt/pva3nCPGSJWvkeARQd0ZmOaIHBaEyXjL1co4U4+VD0FKDnB5jV2J3aWPwgEI9Q3hsB9HvlfXNON4mzocwYtEgAF5Q4WFQvhDCaSEPlfrWYeMzgpYqjIDdujDMtPLHTM9cR7ap1ITwErkHpDpfA6fhTMd8+8l8/OfaJKerxcChPOx85y9JQZyIjIi0zDxY2e2wsEnBNExXEskYOCiAJpKubvRwc4/5nZRyjQAD3dE+oky1A+Vy9A7LInkkH8OhXqtpHDxZkS3cpsiccKBXGys8QUj7zCj6JH1zOd2EjI+K95oChx1bKkNxoua5farrFGH3DONuoONq31q1madDBgGsnJG+1tF75iv8cQM6Ljjs6Ja8Onk9whkNTjh2SgFyby75int7v7uE6GdYeJZ8V7xQMjfMqKcQs3LcQnuXRp3blTu5i7zEc5PuoobQyynMWwKum2BMYNepQlyNxQJlQnk++ZzzE1YUJG4yoJxPd1DnCSeMumQK5lT+e9u9I2gEhMxWvJ6Vegvr2fhvQhvJS0YTXyWHABD0xnOHX8rFz48iKY+ZBjpcS5PHhXWGqjZdApxZLiF7bzlAYnclnztHx4vig/nhFaZsvD6SHGeubpMJj/WYiNEesimpUxxiNPGaC0EKaXmHo56DKnvyVpvDkzvz8Z60FB8PsyTGX2oNZr7iC4VgROU+en/KWZLLjj04NRNQf9SRFBF2mRvi32InDHW2IKOcLKR1/s+rWSxTLJnpt2R3CLgNGAJK80VkaewnMeMG53KsAAYr1RFBADnGmY4HUsRtwZVpsLHItvoMeUIfG9qCjwVvgz4I96TfG4ptQu/740Sb5/57S+KIJeEwLuF5V0m2S+UCAsiBiyyQlNke+xhi21dXoF1zIerjWSnTrKXe+9jiqsoQkkAS7PYxSPPecV5PpF6vDwrtGpEPMmRrSBmr775AGOS0a0AUewTdRC7TWFpobtfglq3F84RMq7h35DVScdq/Xidc04Tjb2heGYpI2RKXhEd/AtvUrOdwQEw6tmGhVJU/epQlS29vD2iJc9j47H3nQV3qOQnduGeR5I0zekzTM5NsMUsNOa7ztveSFhen39KSkDeyIOA4z51kms+LdjWV/D83re8wHCeXDuSDLLge5MhbiSTiCELq9AxcTuQVIcUQCDje8mtEw+ihkn3howj6gySw/W5bpH3VUBSd8b1VSFr/9ZnXgzzRmAwY/NXIqT2rHMBnpDc7nmwSP/6wJTxnq0VS7pHaoxPQ1gpDTdJFx9JQX8ITwt5y1FkiIEmcMXwOfr1QC/hZ1qN+fNhZE2DGJbRYjkjQIIseeB1IKLlQA5WIeHxWR1INjWNkCmZRIKOOmTMRo3jEYbBt1J6i8qLcduWi3kHitGCQcm7rXiZ83Wb4chnnbFl1gu9TE+BHMzyCGPILVvxblqA3wc59bzfZpj524hZM6BcLe9s0qz5qGQ81rLO0dzct0Mm91+TtJbYpDdEUZA+DI1NKBgacx6wh2uyRGpRYi9qS4ZWjoFrWMBJw26xzMFC68RgK/AUyF/cbvCxeOEiBbxl5seEw25WTcWrOZp0j5FIvSzrizFzKkXgX0gZLUbUZtfkNZ3EihqcSX9GS/Mq9wKhepGDcAy4bDQHnd/9BAxzcd0HTZdfNwInXMnq4snk0nCycrUIgOi31dHWKqDD3T0geFPp6D597AwAphf0BIG4n/PYiR3Xxlrak7YCSXsnv7iRofldihDwRfy9F2tGCsM1dMnyeEBgSqNGr3m6y9eXq6tOiIso4XMYz9uUJM0cDkGPfGZJ4xGV4q6YDR78XR/cVeG7pUiyv6RrbcPcMgO0FTBp85sAjFKDPtJln7mGJGmvJqMuRZHftFJepvVDqDH+4d95+55aEFwJq91yzg8bGtbthM/ogF3Ax7uIwMqwiPUYaAHkqEyXlhtoYj61t6e1acdHa2A+6jmplheCkvD0h/wtmK720pa4RwR4LCHWafMKfnHQ39MzrIKQBosS6oTxLPzvM5oBrrioX8R9pAA3fjUKCFh/MOunqQcFHMr5zp0kh0OECeZ4u4CP3DiJWbHZIwokybu21vnVl0jV68gDyl3D/2z3O1QfTl5rk6hIHVuIPtvAs66Y1+H7Z0b+NCKNIbgWJi3UUirD9PtqYHF83cnPIMQOVdg9VQmYAo4gjwWlfLhpIGBdiH4YU0Wd/BmiO9g//ccOscFgybugfb4BEUZ0MYMOJynyEgBhq/56PFofbhiXE5WBgZuQyYC/eZ9kuTxkcnyGMUqIYMxLxCSqU+LFAoKSHnCruy5b57GdTY2s4MWUr4+Hk4BGk/gN7/QoUMSeOgEhJBIin68y5SXfRgvT4iNofs6s45hEL9/TDFrXZBTpD+MOvfLxT06/12ulgScilw40hmf2471lMTgZvXmrSjjgEGYuHBuSmwPT6l3i3a69qT2XTcrtiGpjWVBkt44EJKGgsI3O2f6bhwCtQakQ6JZ4LrslDEoAsKfxXgDfDeFQOw2uniTxR9E7c5aF+trYqRJyX9FZRunMGFOe8T4OxxPU0wJoSx8NlpdxiHZtegfQd2IOnW6tF2pPi4lS3P4PJKkf5fA5ljzlZQq06NVx8FV0MaSqF3drcTSwQ6haQlAfe3gMKNdKV2K4lA4psRQamV3AglSR9nMCmPBFiEsPcbee9mHlR3s5ZgNK5dmJ7HZ0SSiJSfAE3N7Sce6gG4HhmmdJAv4E2emwFQoB0WpSFsX4jxsBjyg4F9cfhZ+pfkQbo8G8UZJF6mFm7PhFR8XPEvKWB+xLrSyQOg233mZCZjUC8XoPDIhjKN12s+YN9wsWtRVogpITdF6j2LEX9tMMktSxPpsNM7aEmU6GUWxYW8D+XPELii1eCVnwsRvUWkN6IkcFReeMldAaH52g1MW9ldD5Dgbov+orsKTvK57EH2sSOImvQffqzrTn625o51a5Ii9t1f8OYRP1iJuszSTl0ueAVSPsOBeU+MGYTHVT23xsfSLMTd62Gfckus42TN7oVSo64SIXK4sX1Ya01s6J3buV1h6Rtbe9M5mlhfcAUUwk/oFs5TviiMtKpKhaNQdQ8niweLGYMAYZzMGj3GmZwr8X2yPb57uT7AyqvwcdzBMuWwhBI0bHoehQZ1163Yccd57KHp7V3asc6df6BuLSZsEURdAuqRpt1Eka906tTI4DZeDryYqnnDMe9Z7upVaHhs5UiKbkH8fsMhoKWgT13h97JNCJ0EMOAVdJJ7awHy5MXLH6dtnN8i0Ye9yir8KOMV4+2woDqx+oQWLivn2WEuk1AsTFzd/mNWcCAhtCVeNXbyRotQSCT4TxzEqOs6P0M21syEiYe/V0GbnD1ITogIH9r3e8KkBTdJUGhCCGd/29UQka76R+al1B8kw6fRPFAOGdoLJh3NW5LbPzKIUP7HQsPG7Rxg3CdSeoWZIiNfmCwHmqdnV3O4EK1IeMR9lW4n5DYro1uY71244QrNVcnYGqT/bHkDmpk1K6gHr4G3Td/Rknsilz24X92arvP0PgQ/51COxoiG1N30Sr4YoBRvy1x11mQ9sGxE1evqSt30k2MDQLmn/rjp9Hl71IXL3CqQIW+y0G0ZtB1z/HlzDrZFPS00W0ff4DT9Lywt+hBpOX5sXhCP+dq0TvtlVDliKrt5QzqeKQksCTyKN7RGj538JDOryYZwP0U0KabbD1ZDIwpeLvBsUUx/yk8h89MC0KJpNm+//VeC9k/EF4EAVAQydv9n5kSTaGmKm7NDxuz3kloUFl/Z+Z3wuE+hDp/h7FWV5RJMl0lB9Q2rKW6h0xle2t53JUkT3MLjY8HR0hxrpAchnYuZ64icJGYS7UcCBeHZNeFyMW5J+RuxetcdCV42maMmRU218F9qX4Y2vGfnfMICX+zG81xN1oyUDUw/U6NQJ2uCcO5hN3v/DMrkzanYcLDJ2kOr4wibIWgRouVfvpyWp2UyAOoWnZUNlPXGHHYTafrHvltWdg8/cAyPk26qEnbt4PGQRGZXaARtCuubjIcUV8QJS5ZvUhbO9yM/qc7wxEXWZfiXNQyjI27iHWUPUcFWx+lBJ1o+5U3c3n5ihvmCL9I5ZpsOw9oT/YX4bMrD1NBIGIVH3lxjyYcZuoKBQZ87UlRgOMpkhK/DGsLuJmKnsObUFOT1w6hf8TTd9AKTshZtTM0M33xvKao2tdz0fcMgxGVc3ctDc9aIphYWU5DvG/qOPebkBp9DnbYfh+lYrciivDvIX+gJa8/mVkth2jqTbAubHAKUYGLZZRflKMhHSZAkIZ7/mEj0mKtw0oCSryAkdWsWIM69RP4CKk0f8X3z1Au5rhTUtJ9UY0ju+3K2RFcCjwwfM9pbpguzlJW8XrGpkjZhNm/h2GDjw0BTPLaFb44rtwmf+GW1Oaj7yG0JlQFyiGRCsLJC0VfuyTACSUVoch5Qbei6clFDxsIQ4Z8O7hFLkN/nVp/e5H7myelTeZzzgvtg0+lgLdLyjM3JtD/FHq/FHlPEm+3JlXWQankebDp+Ah9RqIrC2AkfWC7Zj0Aw5ez9XB861aghggwc1QsSNt4SGXTNt9nIerh7sCxzg2JafET/c4h0lXPms9VCGA0mhE+4cwQfnu3lOBfDGhNJR8cgCYwFur5mVubVpAYclk64v9qIcFaMbFYVpLP2U2rBBsoyljlgtQY27sN1X5A8OUTqt/OP2PkREAW0vkUHuAc/PGycI7j43UBG1husLaEvfLD3d3xxVfVXFuAM943JQUYxcgLM+t7O1+EF8oVLIxiPlpPcc42+gTaPguSqswIeac1SN6NOz41LbxM46s/GtVWZv7VZ8MVM/hCmkRWC5a5PWJSznyp7SxUyukpxqzDfQyA9yEQ1uJhoFON4bqC60Q6abVhFZeDUFN2Q86x80j8D+XuR3nHrSm8yZojW49Xo1SPThd1Q+cERqwIFkL1UdcbB4oKhW5hpryuFra1YJjW7EQhME/XMN+h0SBm+kT/8MujsvntIv0CIFrkHXE9Aiv/pNzyxWXkbuQob3lrm5kubMo+4cmRVPWdug5zOoOS47B++ArhGu7CgxJfOIlvV/JUrqe0ZS5ReS0bs6DuVRp+lGShZOLT+tp2gni9AUObacfxHyXSdVOHu/E6X4ufS2lc/OYD3z+W2O+8rmROrfgG0NLAN2rVZTPp3C8WvdXLGXePzRCHAV4IxQRAQSlz8qWNasu4hWSawDuYGtR72EVJJQMoKUJb+xtvTS4viUjeY7fncM1+Uyrg+e3F1BQrdFVtHsmxEqkQmIDhgIkTu74aJCtwOqUEzpLJUVqZHyIff0yMEdLbbvbLo65u/0aFElZMy4F9ZCiEoVoXNmbwvAJ0uVDPUntSaqNL+/JzHrsY7O8RdjdtWKzHvI04xIx+SRGAVLZt4gqyrb0dbAbxHyHMMrFeXup1PyiGd2bXLdEPg/vl5fj1lPYU8HrEcJAUjnXC2Bq//05DFvVuMWW3jhbIVb03zV0jQd2X+QZd/I3zt+NO8SAeUQF4H3w1+JBj1/6p3QiVEOyFvlXWNmB7mr19x3ELBrrx7S2h+XdCeTBhsOcdkCt3rhbUdINB2tA2XcqKqRBCB18zd1E26SYlbgu93J0hg+CHvU3vLCv8MEGnyuEH0By97BwP1RTayLFEXCoTrMWg1nmh4Bcu9qLKgWWkf8TRLr285t17hteCyFB/0B6MjF7fILxwnPxbI2uRNmJ/C4S+QCcFgcRaiShUqh41T2j5/VQ4RhK1YyxmayYLRJTsksxrx3p6C9Q0maWcwti7dtAMvxA5GdvTQQyjKL8BZeLhDYjsZTvrST53KngQ3ixpF+mK42hJHlp0EUkKH0y+ydrInaXgMjUHRMGfj52Rbmmaj3D356Q1F2k8rwbPHO/vG8uDgamW2wF5WqDva5yK0LZyS51TczE3yhhJfG224MRNmrQmR2gQOywmIN6vDmmfKjXKs5aPiSWIT99yp1Zussl41lOWjy4LALFUSHpYeGfmNk3kuoYSbbHim50jGwFDrkVETHri2naAFxeyKiUyTKbE2vwub9blExn4Z0FI8c99YjukcQVTTwVXzSS2rFE1ocozBc6HXXt4aD8yCDDDO6jg5KEV0rAW/tyYMOvlDkZ0QHP0p2BIHwTXpQqZlZcVwznzbGmnr3tOMW/bO7SZ4vY6yS5O1UfltGTKMMjlq7Yh+8f9xFgbNkDps70Vr88QZOBy7MLI9l9UmzAox/BDSIHME9q4RQGo9/2ZDzTwtyPtFM+FWYEH0JAhqoc0AD42ST2PlCm9FIkGmBrva8zC7plKugycgCUpPpMyFMwEqXCCPONfUvMuCcQSYNPqGycn/jC/RcdXc66Pkmg6MBJsU/LZO1HJS04TBOPcxPeVUrhALIGrJhICkNlmwK6twqmFckG/sMf0WvhLCwcUof4WLaeUsct89u5kMg22yW+yfuTTT6Szjtj6RiGiv7rVLIc5dP1keHw87SKO6z08JsNpX6lcln1tUH0lk1MAWg6WB5uzXYVkfpeDAXvVl2XtbpXS8Jr9QHTavKlIO0fOX/6/UDWefl13vlMpOGpTYTh5TKsDAL88JTe4SG7aLbwdcBxMPI6qVErC7ychvmPVa/BP/fEvisQojPb8KjzoVYLSFIPMknUMHcI9BdsPwqdtBTKuLEpBbl7QOoF+tSvroaSjOs/+Yd8oBKLKYvuclf/A7KGSFonBgVSCB6L2bsfQn2xyySBgQQ5TKkJl+OH/hK68DFcmFliPRjX19hGmoQ9VOliQztn42nMjfvh11fkSNb2aJKbpcJdHZJFT5u039sxsRKir7Psw6JGZaqeAbA+xVImLAaQD2S3ZQW0wxcIq2U/2MGAsPk5EA4I+jK2jj+8mxTwzdTgdSh0zfmDzWpaGX3hAQTsnw7L4sz5W2GrU5rLzGp2+xGtdIgRmyitByipdif/su0XZm8BQL+tGW9i1AjX+4smwK0bEfTU68Na/QGTisf3akgaY5wedoNPHCFsfTjnPSmr0X86YOKJ2UmMK+ZAMN29x5NfTZighixpESGbmiqvwgDOT4413gc7oQ7xhnKIW9VszNRM8Q7lmdC004D9o/czbqB6BPRn6LZe8FbhGjLDsJh75E4SD5GcHxFTt7p0OjY12cmVwyjCLX7Ah0pI/Vfvoa3hEkZdUYgE6O1vRi2ydGRnlDy3Ve6vuv4Ml1eJB3T3+Be7LrSET/52h46GuVX2Yz+N7Wvs9r8k4FQZWRY3L6qnjjJaLLNHnyUg6z7gksDbXnOzpbvCRE1Di7j9EX2xKc2vx4Wh1aOfuwbRc5kDYiFIETjXPDlAaLZ1wSXeWBcAuXC9cSDFUJjELcPve0uTyzNc+BHY7hOgzKneoBeUBrY/M3IodV9koz8LTasdC9CJJud3wIM+qFzB05H8bL2ecZ30Xwob6mJXJvWuxu1CevDP2XH91PGGfJbRLMXYutAicsLyD6SBZUNWm77Xe0NDPTpyzhxPCt1l94P5irzluI03gcLswpinByo7ecXpsQXJuCx1xUfcr455gWuqLHoEfjBskbUb2fXZ0Qayf7BLIryYgJNrEvem5jEXr8VxJmTeRBMj6m2hcCRCjii5bec0pC8cWQYLtZ+mL/xaTd9fD+iFTsv9EJAvw6t/7UJts2KYIKd/96gEKAZArtt7y0p71WXr6KAXYuGvAzrnV4+wbo2RPG04oPoh+RsIzBns38SOkTMObr+tyla+MZroTu7uE0hcfZ8jyR3HdqfuM1Bys9M9Dqp1avF+FPPiBU5Fiy0sVx38ufNYsFDEEUrYqbdDqSnI40Nb0VWTGGOLMUK7S8MoAWo6ofOC7P1esoZJ6eLonr464vrbR5Zd1tCa3DZVkc6fSWP+OpL/C4WXgE2rABMG8SjpLJqigp1ovi68avutdzH9df1gY2TIbBH4YrsTRGBywifqZ14/oATl+vZEW/1t9uT+fxWbU7FYRIS2Yjaz3WcwjnyvPK3yXvUct7krxSZO3gPMhaBcx8GHzJKUQ+JOSIQ0aUY/wLUKUvSoHRCg1JWe1YMXugvowP2zMCD4ER94N/Ydx7D4RWJhdyLdJWZVZ7+8kR+eey631F9DI26X94uM/+bqDhuw5BAIwBzAu/prMgegRf8CiR4S8SBuuwjCtdD0EBtOgVAqb30a+89JW2a54BXY9itDfBafzNY9kTww4c7LTqqr4Qbf3aZXDfPaCPhgACfMGmt3Sp9j0A8byst4PPNGVrhvpM5CRYq5rKIQ7rppgVEPXxY5A5EThe8Q97oPb4NqPbtHwttp8szvbJn6qU4oT/qAQh8rAKbyD8CxhyqHZu6hdDTq+MBMuC88OV2azwpQZxiZOVSzAhulTQxDXEeyRVqxD/EZDh5a7Q9dobEI4tZKkZ2/k/tEriEfzJNEmZMjV8DdGjbw/sXFflC4slA5vbAtmZ5nooLyupDKJ3PG8FRgwAJNfkedj3+OUahp7XXrLI/gIsxfD/AAuOvGGe7isudcMe7beDReMJ+iKOfDvYOJNvwnnn/ihk4JE+DxejjUt2DAuslyLYKaX0ShnnqGm08NpGDq9ahflnnlS40CAV8FAb9h2c4gopYhnY8QnME/Is7snTzbsGiACgL/0XOigO0xi7h4urJ97EcldpnhQSyV1jRLe1AShdCFqlCBWlbPpXKwGsP42s0iUz7Iy4T4dWj23XppRDN5WQxlMuwKVYog5lZuI50MSHK1Ok1Kl3R3vcwrriGgY+bYPXybydrgibFDrW93mJ2ywvwCJwMHbqRcx/DFVeJsApCtkZbnmK4SF5gxLfJMFevwzYNheuCHla3LbciZhb3TWWYtDMTmwk94MJouqrQ7P0Nl6BPGGi4jljpwFPp+Jj1avjUq6KZNV6pnvqmqTP6J2GefiIOr1Jab+l9NgXSqcdX081G66M//EYVDsSbHPgqQ41fFnd64gdU9LAAnH1pQ65G7asXBFPKYdn8Jojvj0NMtW2KnXmYYk+WR1B8ucWHoDqF9bRNKeicN/XBm0mSfNPN+RfiFX40rfNGObzVwoB6fZsJC1DRhwpGBQHqww02r5YFtL25GefUnmX2dEuf1HqWwT3/5Z2YISbNsdY+8D9EInCT9J/TLezQpS306B/waONMhliju//BOpgBHLrXY3zOw28cffrLIuP7BZhmJR3V2GruXhVzlYWMCnOem9v52doPRvY18Y54ZHc95lr2wt0Cmpz4PrhkrbbQduIAW8PoV19FicBFRLKje4D5Q3lmjVnr+Z1JVwUexeTrlxlXB7XJcQd0k38T0l2cYqVbF6JI+lTbujD4lrUBgvmUaEvjMqb24kd2Vpjv0q4K8HbLIXZ4SbOIZ0Cb14eA8OGphq4hgT6y3gjS+G00yailytMAHu4K3nX6SG4LRU9hLUt+jABwqXhYbkZWu1EpI/BSeKZhc9xZ9zU4zChcKSMGbb6ze096s9cdSu6Qekq9jbq4CrIttRYbojA78DTitegvBcLAPZGWppdKOhsnFzjr2JR+EewbVX8+Kt0yXv+pt5mvMYOw/hg9NqyAuwfQQE2NXr14eFNq9sBZw8DRT8q1XwFU9rpYDWwYsoebFPKBgsJLhnsO/x+8bzAiwWmcBRdFrOlsE8Ox5nqHFBGg3VfiICHkgkEoRSqJ1QQuOVLYIbq/ke4eKDKYMoqVUcP2I/4bXMa922cMrGkH9j53ge9J75Ys3rQ3hlMIXTxHQyizCqsBg5tY16oNY42IgQP/u64gCuxoE/jtQ5CHzLnqgtbBxJ3Ysci2O6QWtynQ4ZPdv7akG53RoLmpn+KD4b1InsT3Vc5jW4NWcvZO8H962RHlnRqTon1ZrY9L/fIMcsQrCHgAw/GxH1+f98WQd/Ckx1fZpt+lN2+PpkcaIeJfPvrSCta0Wpv1ABrIWX8AKPMwkl5M74g507/oVp1NN7cxrMpQ5gsPCgIWZFT0B8UHob+nBCYEFaWJA0BnN0vgnOX3FgAcrGqQFz1/2tFpmM4lVUnAJ9WTxoVQ4DJrXyQZETXL5wQ2GCZ2jP+CcdCCnBCJZQV8uYDrYqWcPeSYzeBqXd0bNDYL7hfWZ8nLLw+GZZlSIuvnYrT248yLmqVkbWSr/j6lRO//Cqy29UYklTGITnxcw9rynX/RWtQBbszsYiMZjuM8Cg8f1rHFrScC2ugmH4sgd8vq4finh7k2ifntMkwvAMT7l/aowEIn5iOUhotE7b5/vlYNUsMUqxQ9NNmgqL3Q4TvSPE7M7Tr4ijxfy5MTE1vX7I7NxWOhEvP4/6E2yQaO5tvBP+UU1aMeJNDTOMLtmUWYO6NPC5rkK/sLRcNoSucUJ0snQo7rNpr8on41QvmfNjm/YbNq8hI02TVdgbrQ2JCMQ4GKejkm0J2Qcqz7OpcAlb2gGxO636A0+cIz7R7Vhf2pHYqa/yUuqDEv88MifsOX4VsNNVu6wsIGYkuG5yEbUV0Zd2zKd2YUV2MqCv0PsYGIQjqVNxwTR18pKjswrO5qMqOcUJGt8gds8jL/1LDSWWC8T+trG94yM2hQ06sAVwdTTQnoLtCrRUY1LX83y0Lhm41Ew+J0/Q53am90J9svvjWA1NgJMV0cAo1hAC/7HL0cqkyPBarbuErs1bsvjhzHFyEIPqDs/JFZ1ZmuIy9185mD5DHZd9xNSjWTBCqwBWTVqsWLMkSe6BdgJCGG/LVnGSRX1yGuBhOT1Uikz0ZxOu9vTCh/o9yb/9BcKg8jVfcYbrSwuhZmcuGbLewVabzMjZ46wGm4IR5R+YCyzzk+46QmpCmVi1doDzFEwULP4aW2/MvrUsNz+OCobxUenpHec8H/N+ap7ooOs5mmLhXthS27mvOyw995mTXR8eT7/HMBlDA36iiicIOUhwtClh8LHcMpnEcVhPMprGZNJ/TnLDESmf6dKGzTduSaximUPD0hi2AK05Tz2VKWekuJkhQuCs//3l3NOEX2uV1rNbjoEZsYZpexUYN4hJAk/dVcQ2DG3eD5XxVXDtI2wwE7G5BiBlxOJxotGNpLXq+bsSsO5z5Qi9r+9dF/x8MV8XZElzvnv1LfJ5cs9qrX3TegGAveKLh7vybuKl9GcBMPpatyNdW0dB6nAQtCnX8FIl83xlPl8TDvKIvW+cuDXIxrW9KmOch2hSsh01ijeO1Zi7xMrgB/2zsaxf4F6NCdFnhG6ud/aQR4D+/UWC+EPvubP961QyGQNbbwxjDMfs6sV2DjgljZhWL9n3UxGzU9lovU/7XwngNw69FzYmFnYDKlDCPMc20tX5C5oAf5lTOLW4Qsadi56Wuqs3tJ5urXJ1M+32xzeGZFa5NtYAM0BRmTkbXSMOvEayJkWlz2GYotC+fsSoiteQ2UfEeeuDxFjvfhUqhpV8+aTVepdzicz46TczVD0Gy+lJmq11RQ9I1mgxYgHRvb2XF3NM3ap9/0UfBS4MZ3XBbS0PawTWOi4ahVkkiJgz4DYil4Dl3vH7nQq/qUopk5rInIgs1Va19B7bKY9VcwJriwj0grmtVTB75wTdxhFC4xLqwi1O6mZCjBX9w0stzffRvnXIzdKVmItps7oYyjTIYP4/bLan8huf2Nqda9l3RL1KSmUXVHwGfdXRrJe9lfeifmm94RJ7qdo07fw4BNE1bJQqkBANgYcbX0SOYyXY+OT6QOnYM6K90lMnV+/XTGzSylIkNzc3rsYUgBEZP++g/nszfQVP3AGUNpRjRFxM7LV67WWqoTwP1bf5buqkV83D8Wd1y5PTBt+sNNUeaRijBMZdBlfdc3cRbnc8ATWX9gH8Gx5iqXHb/3bMHnnxOOsjSDZGkaGuS4Iw2gdzSj2BdeBF2rM5MR6ebB2s8LCl/Vz73NdvP5K1BtnMZ4qbBw2TLOV1LL4+9gP90wFMVMwX3ksokX7CFCpeN1rgS+kwb7kZGuGwtkHFRqXJEinjlabflpkf3cH2Hr4jywpC2wCq30fXFgAyLTDdjAXDGkylQTnqPj757tiUZuwFFSIlxPEEAc9QnQj7Bavbuh2lvEGuJJf9l+mxIm2GwpUXV6y3Jgq0s9rRaUCItyWPwPwEO6G0NWaInqilcnQZYNiJ26KmFaNkvjoO+jhI76DEHQmTDFnORNxU6kvE6HSrHrC8iZLy/uZecFQE1NwYJXQsR0lnofPh8WETmyyVAXzsBteu0m7Pb6hSkCrYz5mrEIXLO6/A8UX0IfwJNdwVy4P941OSdmzxAZTFqBZHTRvf4z4YOzH9BYfe9FwJeVookMUowZQB+Zpz37vGM9aOf0+3qyt+RWd8ts/tCLn7s+QTx6orLTaBVtLGDwUkggQQ6TloRf2fHXt9q/Mn/IjrjD5jaucGNrB2sYIhPRy8ljyx2RdtpSQtP5i+ZfBJDopu4zOgtF0ImiF0WOdW6MlkOBgJjqA1O8WpJgTmoSkyPh0qVOk1PvZbhqRd2RbS6A6w2yCnp7G5U9/FLL8Vbf/3DbWA/yyyFpf/4CsR1Lm1Iu5XqhvHQwYc61Ti1gMFJf2QGCAwpYYtu5O+Um2TEY2RE3Z0B6sR5hI00bkO13Q9ZKkHdkRCamVapbH/DVKjqVkVqn58ndQdu9Sh3zl1LkC03yzSqSUg4qay0zpE5Nr8iwAtZ7ivuB8VDcIkxZBw7g0EWkJnVw6joMPnfF/9CN50yNQeOkECtx/pLxk+PgUiWHtU7gLSnMEoxOWEcJqtCZQDYq/3JKSCoRIZEWjNEr8T8ZnymsgCxMssf6ZpgZZGq/SJaSTryuNgl2Ts/ff9e7HYUWjd9kP2jlt53IQQIR4uaAdhQilYosSwMj86Cef+mCMPusj0wTldTlVD5UkDmIrTGnfQwL3zlW5lgQY8/mryM0WcmzRu+DZQ+hsC8vIDb15J5L0QO9gGct5AeIBYVYbGB46rbXl0RFT9ACP3JsKjBlgW3s8hPDTLTtVPsBX15bRI6qkQuK1m/O1bA3+lbo/PLs95NWYxVEQz07EfIuLhietpTBHh6uC5LL8YulhJLH3lJMLdBrKUCo5MO1lUg0kpPcQHibV42uSwIBrNism1A4xCXNbxuOrNFkzZDe9zkWdLDgOqC2Qxzek249Y8V0hBkRnDHKdm3+94OchCfHrTyknjWfz+mM6bm87xXn3l1h6ntb4xIWxRmSIITBgeHc9+7JhCosjWuVmbpEwIP3ivYjGnewFRMcvkjQP0Zi6WXa5XpWsRZxya9loGeBiUlZjxOFd2ssHKx4YTgQoa6ZEZUFphYeTXSGxZbVPXU4TPImY6EaJttLT810TJzK71WSizzEWpxIaHXtUQE3U/Oy/wClOaARwIxwqhUbWKl5oshnubjV6g0Uhohq54pdDIATXrssW6gW4ZsEkBL6fAVAbggvkmPT88AxLUYZ14F6aXi1sRlszf74kUn4bk92JWoHBZ5JfsGdAvr+PXVv375vcJi6sqFIxgI950nURUEpV7sJ5vfAFNJ24h7mx4N/c3CHHoouXR27AzGfmaea8MNUvwElgTF7Y5aHYhl2nPsDHWYauCX8P4TQZwpnryYBf0K2baB7w7owZ6P0MPYX7OBYawXj9EKLZSCVWD7+bW4p84Qi6pT4oWRhLrYUez3L9znco6OExlIKArPDh/NaK+CHn2XlO2Zro+9XiCV7NjJQvW/bOYI/Oa8Mi2rwLhFuP5gZyT5tWeqqKG1bgnUzdPleVNBAv534IwzX+8z5pt1RGD7CGf+/BpuqgVbCS3Pyz0Cjg5SKjRvT1bN6562jBGaJwjt+hc1aVLxKv/z8W/2ziq5Ti+cBeLD3GhUb351H3dwQ7Y58Lio7b5i8TUlCORSZAwPb9nq0Ua8LkRLwjTvaHMaJ7kJI9kKLdsIUbBe0QWYUBGPXltEDq85GOMfjdWwXfR80lVjfgNfQ4EuJ49z6SRbKZSptG2GkEAseXCIB+lKUVoOKCpgVxyKab13xGbyZx9Fe7GrB+Ey+JnoI8rN/dDUj1xloqWLe80uqtIjiDotHrzYTZzm9KlM7JRFASNT0WRedytQEHzVwBQo4Htt8Yh7WdaBge1IENxkWqVLDAESgmvtoBAFdfPmiNHRtB6VRU3nEwZEwKtyYBabQRPPTl5WAQjS7gH+h2iACUEb7u5jc9RKgD2IAp6hRkwy2iCo1MxYivt2NXeBjPaIp9PERvNrm4tiea2lU4k6HkvDNxAyjru6thIaLPcJCGvQvut/A41Od/b4MDtjnjTk2oi9xRA/hITetdPGhxUOdxXWjxBjIJpBeUo0EEnA/UiniibWFCi0nQ80+mkx4qGka1iZkn2v94lV16ZGtuR1QTQixMu6Yq48I1vWNsXb7Lyk2b/1iBffDCBATDldB814RicgHj1+lOA/EY9tiaLOJVJXd7Z6XOzOQ/RgjCwJXF6e6prjqDu7SB5sj3e/cZzDjWlpPUr7WvXIBRsiD4mHHXFVgmv3N93YYqi4EIPRZUyp9Gi7CTddrfjtdlj1zapJX10+xdZEPEEufeePDL7hdBjvsUQvP0QPy//OCV1bJPG76ms3cNBBwat5tdyMlkrYsuenTYWBbwsmLKnKIzsLJ4GED2jupGBqDsdaI499tnk336C4YmTRDN1S4t8Bd/7rRVpMIIDnsnKrO551xllwZ334MXwG7XcZLfmTPWiqzmGAbZEFV/m2MBTlcKqcPa31malEe9W/hIIkGP6JMIKQtzVSJxiecC3g6F0Efh8aWtYaL4T2UgiFpuUfSGxsXYUOHEt2FOXeSeKQcPtPauFIiTlYS4FFqN5X2Opr1gktsYMztTCUPyBregPHmtg80SAW1SQiyMB3ZtWmxAx5l+SPKsoKgw8C/RKIpgtZuXG33a8EXqRh0/ILGn1gL8NvXiljzumBkk4MkZbWzPsrAbmasH8HHcy7jB7q44Jg3heuhtTwkYv6ywULdg1XUr9572kr+v4AkbabdcFplQwQrzir7zXaiXTOed7GibdvRUVoOgLfgXQ+6MECes1RUeFmcOqKY5f2+NFLWeqmi/SwQGYBIDonf2M0I5SbMgcyZrWynJVkBRr0Oiuf9kjyQXNdxiuISc0VicSAo3vHPDrkzKpzeHahJwbtHAAP64/GqXaTYh4K5P7nIXcxfc1GtbeHxV+HK0wOwjDqs9OfEoqcjVfUnfznGuGOK2SxPz9xheDgs5QUNpi6TOed97KpH2lVGolxA2jQHcHR3FzYBymKP6baz+oPHP93ZlaZWz/lYJF84nXvRnlrMfIH9CLlu7p62orozGxUXuj5ltw3XlMf1cA8bkfSUSAv44ZFQYXHJP/QzFbYQvalGh0JU9F3eKWuBWlhblOerqHPJnz0MjZPfxIokeYPLKJOulpXM25dTXWnDLy/99cB11bUnVl/8e37ZqBAYxdaDCgNGF04V2Gx0uzwW6elYfUuAEW6CwD/fGq2ljOAuQzEgfSwCiW3z8cHp7VqW9ZX2HAOrS2g19JiVyBvS/5/p7WnNTNiRHcXrsAfc/8OXh1AfRPr50grAHBB7SndZr/PMo/99shXX/Tuxa4jyzpNZwblVmnkEX3Ch0dJT2Xk7FbeCWbQ/KHek9jq+vW3QciTYzdFn/UwviPNYEOR2Bvt1WhM70/MVhkJ/QidoJ41NFhbLy0/9+sNby27Ww7YncppB2zLRHXTr9QLan3y3xhjsjFIymzJDizlZnZs2WqkuOvpASEmIBNvtttBbzKnsRuGkwQG7PIz+sGt3jgFa+ABdxWeuBw7McYP3vLqsPixTE3OzvM3fc2bN0bMneNezvUFOIJAah6sB7P8bADpYCrWzmelps5iHRe/as3Ppvc/P9ItGuPRlpJkQpEZEO/ZZ4h3R0RSwOGp6Duu77eM4ZOZL6Z0Z5wLfDN9Dx6xVCfuurwfhFlWwZgv7N6q7j4fuzXVY0pzwJfGba6cC8R0Aa3VqMw/6I8kRaHxJ8YmfcggI62DqCJWYn1vXbeVWMS1JHzqIYaPoWqkXQrK3zqlGZQv63FFOpGMIpNAYUWKFc516lbGzJbbEHvXJDl2OP2k5Y24BiFiZCuC17qqV60ua5MJNUSfGRObvKIjCU9IPAHdQb9afi9tVfuvXdcMHWt1MxCDM3JsQXIUcqb6UuwHqna097iXLXWDMAMW0xGmUTPeNb7fxVjxgrL9hFwXjLoMHMqSiPx18XMKy+BOjjpstHyOUpRlc6h56dhizpSXgETHWscaz6ioWHf5sevQK3jC4rdzlN69KS9t9hIGQRxiacLBrsIUI8kp2LXNLgEqtkoU3G8657HfzDnK51buyOxbTuIX/aBZXOpeGXGRkh+1II3nPsKyFJdKTA5Ae4rQjas9BJqX7HZBIUl94MsKJHYXeDV0wzCjeSS53HdFP7hdoJBgV/w98u2qeDQhuRCQzUQoy6EWrq/lzMm6k4FN8UNZ9AeUdevxgF3FBKudsB3n1sbmzK0sP+awKvU83k/lK8EYCvnX5eBvtbdM5VlUH6U9k7CykO0WnZX3PUImb6YnTgNoA8lOv9YLjQecLRPmMs6WahnSGTMADuRd4pxi4wYasFnqZ8zllFsSiWc8qWRkYew/sQa0iTjbpYsfiin8e2mn8AJy9yfLKGvyMhwvEUJwem5eBT9QI/eXoaC/rPbLdOb9ans3q1ihHjqVa0Y81vXXF062LB81UCtTeumqSHVqbWo0wpiLUG0hTuLCQ0Pudg+uswAc9bh3AJp1UVxxf57ykk/sp9eDKgQ4b+po/m7ql61H5vijoheJfMDYfvTJVI+6XBU4p0v5qdBDXS376zn0RvSyJ4rCicCXZAeBBvWqjLrbP3/q15ddmJSGJqNX19jyrpIv4QyFRqNOt3CAsl0n7nLjCa5nf0syv3v6WLwsCkfq0zlkuQkhfuER8aU1X+t3heZXWfxL4pC6fWXGm/TSwIGKyFbqATcrkUK/klEfJTdOxu39AABGHpBGG1Nbh2Z2HmSJwtJLZnaPMuTtSAscgLEI3e9e1j6drELhGzyprED55PIwnkyqjB8rl5G6svYBPpw4bKTlurtAsb18obpF6KUauBM4UTZPDaRTksup3PyEAkh88upLoam4Bb6XGV54VqbDrHM+12fACSs0kn++AaC6ZBRi9xUkrWSz5hQrIhoUimYnAJ32UJV/1kGhSvLrSX+rylltBHmAK65/OjfDqG052erZ0gggByY5QaCObx4ry+l1KwTqoPY+87uy/iHm6PHLjRne1PU3l+ouqb8J2IgX+L6BSE3nfSHO2rMt1TSMSItlWQCsZV+XSA+g7j0IjeCJjmjgsDxAnodG/DK+R4C1iT56M4HmtHSuwG1OYruF9E1OR8hfPqMO7gkehftCj8lgAx2XsOgIbN2tediPzq9UAKGE7L1D/WmF+PuNIuz7G8tExaa1D825cnHBlvB/996Q92Z9TyssWDja60kceqj5u7E6g+laaGNIpTfmkEQWjjCHfQfGlbFt2y0uXBOKo7srsLjkQcicxgEDj68yBcGTjK2N1M+7SCMKHbjqm1WkivxOpFdmW1OAebUE4jXBVHEOC7acDMMh4tjActUr/f+sodw93de3l2kLt0m/+VWYQmba9M/qgYmWSY2mf7xKDebzvPgQMLH4q3eClJePxoehLeVBi5vMJWxzqQWbAdyTcYgJPxHoeoyU9o9QYglwcEvGSMDJKzJEd+ycGJpg5mHcaYBwh5o9TlYA+6DpLJGPCp/Y8yw1qADAL5m0eL9COcP5NMu1AvxZhNSKTfFqR5g4nIIsvxZhTg40EaZnD+ss4rakgjNYxhcuFYaTttuymNAe8cLpxaz80ey9BSt6AGKoaHcb5HWtNridumFZBgMeDXtT1P8ORNLX25lOxnZ1dREK5tTmCVxly5aXjjklS5C+/pzb2rl2teSRDOZpM0r7Vo79UGLjbOotekU21GJwfYGlBSxTt1mEaxGyD9bQrbBxQ2EVUXWNUih3BPRlQq5ceUX3e1nUeyviCVeP6ycK7ODmH7KGtCtd/YO/5ocHgDR5rLzxp9OH0wZlN8wK0q+2rY/Mi20v96uslDIRZVJPe/HV3LWbPXCr4fU0z7vW2jo6iulJe59iCqOpzV8pSTMe/HZpW8FV3xMkVZ7Qi/ujjrVZhaKj+wn76zTNs0j2IWYN4/NpvVlB5fPFNxrq0ccIi8xbLqdgHHSgpZP273hqu6nq5avQk8g02Ja6bNv4OVohj365rHf3HDTmw68XG+sKnvE0v3hENVQk744OL/3l0rnxTiD2X8Sp4Utmbn9G3gMDwu6IDgU9/Xz2o8yXjp4/sNOqfn35RkfqeKK/S2sfzLSQZwWAvnQ/DdkTGvLGspROF4BDWSEMnq54I7RTmAjMbli/m+ggUL3bqEfGvKD0rssYc/f+5BOQvJAga+QAs4dBnoQPgyYwFGAVv8BRIRwU9H+HCfyoTaZG18f/vPmLeGheNR+FUOCg3n01NCi4XRpQrHpXeJkSAMazu9QOchDH1Wr8gnLi/fuYQu5go0+edFJl1/mPUoCBlMIdzZwWTZmZgESF5dMhdxWiini73Ux5py8JMKKVm1BB9NWVXt+pHgDHz6EEJ7cbJVD3G54Buk1sZYfvDUj8QQi4NfTe2ZxzPugaCRiJTjk3UzlLE1Pza6CR3Hlxt+DQyt6ndnFpASp/Yld5uaIUFj13GUxxW5lX/na8NR5c9MT+3lYsalFA9jLAkPo7Gu3gM/Pwt1pVR6wWCi6bycnnJaP5F4L8rTcqnxG44qOm/85oTeUJKxLuYFMZrBbjfDZPI6ERMKrM1ngjQY8oUAGR7tlLctYhlHAzH66EbeGj7wv2t+xyZQ/Tng0aVCQFG3MGwU0Mlys2oKcH20WKg80hqm2UBIIbYlFMBtLJXaoQy0XE76c9dbiVwMV43UvHY2PvRZgXB35M4yykYdbhry8MJp/LSunt5hsvW/PLQ1nzFTWJeIDFPOn7aCCjpkInV9+yBgva4btp6XcgPV5sJIGi6wFs/HicYg/vb8hoAubk24TsenDVdaTFgu48rThJu8mgBCD+IwMhAktQxF+c8hrUi04OYsy0DQieMbszR5regjklYdvw4x5iylV1W2td2Oo+t1yKOvkgYTNQGDI0lL06AIPQTnN1/abB3wi6Lj15ea+kqf8BzoND6SgPcXnslLfRgbseL1WeQGbg6zH3841JTsUcEHewb9sY9uBRt/5FiBPQcgJx/r+G1KX/8d+jr9v47qrcIOXFbcinjUprPfpz+Z1CiKsBFcJdLaR6Z6qrnk9qFCnJHtwv7XbjCh1Uf1aJMOYc33WLJAU61CG7Z9t191vyHIoZ1fESjc1gTxPVNPQYL3W2be0yfUzmRosd6+Rr0yznHzLeVId3aQKb/hFNRBJD+t4Bq4dYL1Z+Rp52Nd6qSmTdSBRztsIPVnqGzHrSMbnbpzFLpov4PogKofFxR0Py2FB2ZCpq/KsuzdHzS09VImVx7m9lxScNwMb2F0o7QobEmN93y902926bRvL7LmfpRn58XpvteQDfvRfxNhuA9CW84yXupOqbT7NgQ+yqM4DpfoJD6Wywcsrn6vcyN9menJGZwrYd3j/OVGBupugixdSHuJHJdAd7Ibypeip57nxg03ua+pK0y/msG2B8qh64GzdcOgV2xaHuq6mywQ19cvILE2r6XZB3a/xcBn3yjK9w3zAOCyurIaN7PlwHdomaN2fynN1lSunDWx/Z6GAWKnV0OnavjwXs3EC1TSmt7dfVKA8oJ0McV57eKZxaNMDWyoEvulLklIjfMofOsKCQHJcb0XPtQdNfreYa3wZ7UM8Q46JD2aEVPYkFXxMmTfuL8WeNB8yrJ3YnFuHKO8IOPwhvLQGAOJSHjlxnq1+cmUiTV7dP+mrcqOPiZE+KcPx8/MlIDq4wBuh10GBK7Xc1bZdUQqRvbtP4N59X0EQN/KzqgqEIcl9ltaDgUi/a3KBUpIUl5mQ+vHjOoOC8Sn1EN6gY/Cm4VK6wxdLhN328C637JFYNSZXmKU2TtfmtDCaGSnp+bz9vwtG+Ksrg9Ep/gSFfc9Y7tBeuVw8ul8Wzw3XZEGi1w5+hjIcpX7AsU3e+z/2xgRbIM0kJGIN4D1HMTX0m4FAqYS2tna5/Vnp37HR0YRvSkUeaBKiL+tNcSrNF3noue8Z0aOQLPaRLl+RGbgfoqflObk5QJgaCEN+noeHYbq/RKqvsMhW4Ppo4sfGsaLLno54izk05qC6vC4c0OBqkHaciJoPaL9R9E4S+M8MFHJCiSBIugKFI/HfymoaOGL9uggmTlR+/L6mq5wcDnPz3G+7sT1SS11L1nWiAp6z5liLhODyM74LA5MUZZpJCRzuvAtqVOdTNTV278YMTrP/pXqKJcn2xbURqleBBB0whcLYZcjQO2tyqxDikbL7PaG8JwOUFMoECZrjouGrE7QyghSWr7b6kpGv3yMB5GuShU1BQGlEwKi8K+MTuBPsb2qWo4Q5FQMtCQDcW9jx5cnT9ney9C8QdaGFfbTcTzLLOzuUVCikmidp3/K+rmOuYuH1FwDeRvIx9Ai7dpjj3FLvgM6jX8LPi2e3Q0kr+QolM9uaVk+E0HPJmNDbIdn7tzW5zvBys80zZDlhHoQBA3imENv4MGzCVVAhddoXkkuvnEgPVZGm6W2Y48UgZVm5ZQntRVs7nYk4VSeKnfx5+Bmx6hlkMeQsD8jUaBE/Rn3R5hSW3EjUmRemXSMx5lLwcev1L6kuU/CsiT+sqFiKSb3t+JX3okKh2+fdjewGZK44mbJonEMJRNFJMkWY5zMiwXKIhb3ET9YcL4rYQ8j0StRhIzr3kpU0RWNKbOybahc7wfB3RZLDmzRHZ4F8Ui1M0Zv/lYVgxZn9PHaNgygWJ1KqGhRKXAKUE+A0OE6xMcWHl2RVotPe18m5bEw9EzeT95mPjkbVE+cjRwS2caId/OWGM1WJvEsCJAt5kuDIylsS2ZqF9NPchmHdzD5/zVdVBcZOCr6ArtPh4JyWgWPVBMKc9FfbPfC4Hj/e4AeZTgy9BFE646nVyNji//PNHpdCh5fgrAFrj3bijtTwjXcGac1FWqNwCWee8tvgam+XgmrojDUkfdpeotWc0Y7XMmB6AFa2+0Li+NdnrLQR21cjfq7LODPKaTwtYReuymuearu/i42XDyxZ9oNfh72NIocsR5IbPnIoLnXoAVW1bcO/w4FWcKgLTGZtqG6ezm/oocINrz5lnH2cQCoufdiVYsyn/i1rTl1jgcespzP20wTdLTLIK+rsouhQmncrYyQDryEkDhv0qexYcNdZa5y/6L3/D3MNQEwN+9mmlHegBaHRGhN0CoabARXRFmcLR38GxJGmlprXVKSsIp4l81+YmILWdVlqQH45X8gwoT+n3RLIpimqxAM9XYKZ6LbU5ikHRNSsXx2eoyXgWye7LDoTLan31J5zQMIqmp5vM6tVpROSlJkLNLF3bjXhSuW3CHIuhFNbvfr63ufNJtg9DuL+O0cRaTytle+18KGL+F49/Zirz/P7FItZncP+0CzNICyf8flur3HF66mQUBJcB4329JtGIJM8o7BSaPhpzWZfOI1NrDt/gRVF2jHXbkvPYfIomdphXaZVuMrRsDI+/e4xMoBGaeia9K+0PGiAnBhzBG/A8cJoqGQEeEJEr5Ibh2cgtFnsyrX6HZPke+17t3jdlInJAPMDnO6OwKg4FhxiR3OaEIMpFgngkSCHlXSyVPYjnRFY9VU++dnPXhVj5K8U1SBZTP1XK03BbX3EHr8rG8QClTrT2Ck1xIYjbuIHhU5nP97NEB36wzQiYzrcYNB5pw9h1gKXAcjDHARTB+wXB4Ewjjqnl/3N3VeFQXO9/Lc1C0IwCh2u+Cq8I+azUnfAKRt5pS7xi6K1dDES4Tl/BI9oyqgLbZN6hLXzi1/R3o+mWYKYsXex13DQ8mInffM0Rme58999rUJpC1Unq8nm0EuJ54odkmz/QDjJdLCG+WcEX3iW+OyCcplDE8eBf8HIiMXIF6R3LvBJAc49bgfNiq/X9ylHW6VQ2HbTqNjLrL0NzQvf2fuKUJh9HSBxaHwAW8/goynImyeDBV46Ep4whkCWum1ge1wpUuHjvIpF1yeGFTnw+1pTERl75wRXfs5SzOq4xrEpxcEra/6fhRL5ubzncbBneB8YxmhwCPPbK+S3GKRGOqaAzatDZV4G00SFTsc0Y/4TLCgcfkJjhqKBsSs8VtEalSOGtyXosU2K5u4KQfOA6kFOiRf/nTrgP/PcOG0zdjzVRcQogyxpLCP4O57U7T+V3rZKYz3vUFFuRcrNh57PX7t3XeWyFP1/zZnjeTvr2RIQF4doxwAhGXewD9q9sHzn/HhKWQrsl0QMzbWOaP+OGKPxGIh0iAv1n8cobnOssNq/qAwh+GcDru16faEVazhvoHTD1+NCfSyASUmYij14L1wCkNizSy4jQMzb20+An2qrcHAg7vjsQv0qduVcCsEVbj7vcesP/vuzzUmMl8X4BdEBt5knOsYWuTtWbP/GaTRIhEVpPjxXZokdeZYSyZZIfwRm16YnVX4in/zoNMpofHCYZHeiFhsknFtTHuX8qjA9PKdWo2qA6u5NS8Y9LDRzf3KMuFf5lu3dUzSb6JlQC+hWFcFTJ1lwqGGXUH2qlfRcbKIfuLYH1JdXrlgLeyzaT7k/M5hNhsG528PCKua8EF8Mq0EIpHqWUxAu1jQZvH+hfO/wqnaJ9QClItvsDljE/NKWuZ+c6FerpztRwETO3JZWV1CkN6j6IAWG3p0c3cjmBwVOl8K/MQ9rsPWf0dBEIDl2wkXrCT3FY4b1wSJEb5vkqySRyiyl1rIvVWiTbyszSG+Mxtzqd2HLLmSvhB+X74vqf9oEjs2it+K/ZvP/HwTNyYd3PjGkFEnjG2+32AFMY1rIVDTMaTfmjIL98gUlmaDR+LFv7SwTUqI8hBJZUPSKeqWvuyZ82CM27/GWSrfbOofwE2hUPsM/rCGrOr63XCctCmfG/bAl+c4OY8dka/9NAo2Oawg4UMFa7+yni61EmxxUkmvCdSYzZ+MX5Zb8tUNGCnZeKdD/soLSlsR2or2Zc96tqAJ5deUKJUOALpeB6iZPPqcHn4ZhkY5ux2yqeDF/ahubLxBzLGORo5JTdg+wXt5jovJ+NnDaEO6+pD60Mj3ZtGyqi8a8wPRGCnWP//XH3rNKFwNndoVpFXMP3hYcBQy9WsI/pMSsk6BmeTdu6HJSc5Hk9exwWLnHBrS6UKEgiZst+U/s8HqDmEKeeC7Zl4TQsyshrl2tBdwTjcDVSlMEyT7ZrMhLhz89r8vjvcEf7ztzOo0ostw/5u7brVzevaVgaBOpHoPJ7D/poCfoC0jRP4NcwLP+xwgkahjgQRYWT2XgvBlyhG0crgz7OG2N5yFnLBLUNwT6iFJ6xhz8mWLJkXOYh58GyrvdXB++2HyKYPkte3kS4fHuEo5b4QPR+keAWfgCTsBG42HIyX9I2UaVe36iEIJFdMejPpRttK8NXsZh2yP6AFptpiZba7p6aBpj/zkjazR0fjDT0JuQ7FMIjSaNhahqC8WYERJLZRQLv7+vrXrc5kLn8VqdgsmDpP6PCuAsy++eOsNfW56P9/7hs8KUijqg0lDU6im0HX9K7X71SxB9WxZCVfSajMGpBEnpYdJXSeWv5l9EQ0bx1wvEICjHuYbjmBu2imMYsjFImKJEGjSbI5VVQVbCHSaq8guQRxyVPTUvrJ+0x1JgP85oMuVje1OqYEb+50u0qcbT97X0FezAPFDWXEsEnxl/c458Q1TPIFMkG4m7z2Eas/wc+GV/vJdHeaaKjPUHpmxzHBUbVLqXTEfL6V3hG+6LOcIfaoPHCf422drOp5OXprG0Venrq0LGcSWU8EQFvQnU5dfSNMJlU+LSp2M3iQIckwXgp2aYYSOx7um6WkLgJFcECtg0yx4dlZgkckOx6PCwM7DQz/sB52RW63JJwtgrGMLW/i8qMDTsuh+Vr4qJwlHLSvaLab3RAJyYbs56mUbb/WtzBIkXehq5n5rFuJtFJr3EJcADOwXGAcYf444ORSJarCW3Nea2PF2FOeVHDf3hxzoKRLYa9U3WmEYH/9J1qxNNWOqoXYxl/k4XIBCFsGDW4FotU90vgcLxfs11k/+X9K1MUCRCVC7x3Rs3LJk3H8as2AvO1BY+HTkyd7c12uFKS+gycWqZDYC4bJeuWIrFJUQvaP8P7t1KCRM7bGmNXceiUTOC3QQcAU5kyfw5jMqHMI5S4DhNosXRKK48z1LhdnP+r2nTjp4Sbe53otklU+422fZNygRwGNwKgS1wUH6eFIyzpKkzYsGtZs/fnx6gSyGUIFCUOhh3XAJ3GAcPne8mNo1fUW/3UaQUnpYilXllJRAB5oYQjcUUeoEnPJ/q9Bo55ecFUu+o6IfOnh15Y7Mq7UWgOAm1Unhc4/DmD5WSj/Z/VxTSzmTRdRRCyeow06z2Gyu/oTLyXe2y7ZvoLyurrYE/QeG8FPZCSPlK8TPKeeI4sPKfxeiBhBDbxe3XrcjJ+H9Z/t+KQZOjAelO01uYll1at1n6P2PeeIXE0pdN6UMfTbziUySAr4p+B1nnKhA4btmIj41KY1sgZ/2tJoBsRURTV4baSPb5HgsG8ZPtjIYEANWD14nJgX4Q2aA0VO07/JpesrTTNLbZaVc2ygfwy+dn/AHHKY4IcIPc/uShvwDetlk/j9yXOotLWKEjdlADVZF244JKMeITqiQhrJ7zdflM5dUqWkEyhVQIYY4a6aesz8CRDhjyemkDySJXD0SsRF1Q11cxNCANAS8c8Q+wMq4f/GLtjQZ0E9s0yDR9fNFqugexaSTvB/AGzTVQjJ8R+30BOnEK7OZDA44Q6L4iPGBW4lACmO+6/g7OoCIPzfj1CssCvgRTgOXvRjyO4fvx6VzZS956qqe5XvT56h3RBK3oum4zctuZr+ssHSocBw3dyvi+VzLsQiVMfOR5DFp18ZIDetj6zwCyXPiQjGpUwNGxWsXkfi8eZhzb4QQbCpCzo4xsqTp9HdU5IuNvQiNtqWCDYFNholyZ110IHQhqMFcz6uje0NKr/KQhQHa/S9jpXzYMvgyllJQLgQVaI08C5a+S2xwVHJMRtXL/rGnaaDbKl3rtB6MnaFCsLFxnl7RlcgB12P9UWdqiOeIkjIR1ajaB43bC6EQ/R3Xnxbkfp4Ijj8fkeV7bkmozb4oNbEHqdF+O+fVq4j9Nt+5aCQimXhOljBVz4TKVuOSjb9g7dTyLNpu6GCWAxExsH2gmyUlMpSUrP5I3XzSXvxFXEjGcXCZg5cgYbXilFXpTrW7OHrO0xkHfP1UIixIe5jdoA0X8Dyz4Ty+e78S9V+k9d58OmEdCThGsK26f3M/P2dfmrPOk2Khx0lGs+J5Tiwudf7+ZiTEFpGX2FVKYhFoiHDRP0+29VxhhBOPSkL6EYxtvSatueOLWaIKsbz++r4gXKSTX+31nbJiX0+VuC0TOCNO3AC7FsXoBPHbhRBlHj/qDe7EbyEuzdJILI4c4w6kj0IRWa94aggvJq98/ood7hD8d3PQMLJPo8PmY7WCoR1q0Ew9F72B/IMPwOIlkW1g4X57KboeICXzOTfPL9zuDJdBJx9uLX9GQ86xYZm7HYbh2dvoJp+4LNL7MwMvIY6PQ7CB1vZFJcCGgjjMDopYBpnN/1T5D9xsDkNijwVAAyr4xShxS+9uh3DcrUlVi+LGsfwkxevOYEhy7kowCFIbj8Auj7i9zUB3MJ5yfbeUiBE1X920Arwh9JDTJcLCZn3lqPB85NdAV3/iRJslXh/Zg9NbcCnRipOQ6ilut0cw/gQVzSgcnidxOYM+v5CFXoLmZYTlYXPZO2w31AtLoK6OJfcZZWGIG+yfkK3JTyqnI9159f/vRI3X/VLnUpLPIaRpAXiaJM2u6Y7ZaH0q7g9IfCfBszF622eh6JJb/s8vOvGuGJEXZp7gKTF1FJcilCHcN5YeR1UMdJ5vCxTWZYDcLNoSuM+qm7ksLZ0wbRujh1r+zVzam/lshkK4ArCVxSkAor0DdipdlaROQI4b1XbBLjGtYrG3T1Amep6wQDAfEJmt3uEN3Pzr5YWlXZYserMGyBjKSb2KU4UcqyllRoSsRuPP2CAQrR8eNBKR5JlYnlgTqSn848/GFNDMv8SukcdzU7RQuSPho9VTl6c8cG3qOdRGmtRZ7i2JSBU2hAViA0fBGO6UMPiXKzUSaj3ujKjS8130NRi0GIFfOXRvUWZUvGVBBvsO6mZ9GQ+4a0kj1rwiqlJjPSOwtFymbj8TVSVlK0mwQyihx2AQ+XJszLAcbM7wVm4KdUwbxls4Lu5NCDwQ1349gMChV83q9Sh9B/UTtem31OK4E3+EfsnoSzGb1bqx/u6EVsDJKUiaxjM6OziUBkC0YKxFjlgP3dNRa1diK0vM6h06BkaGCsnIBu4HJi7yWNsAcyuK7DFBH6Bn/8hfymnTciLFm5tc04Mh+MkE2Md/Dpis9yUr8eKEfXFsJS0Fo6M30PsHtNPlw9yAOJrXdh3cHfc+8nnMRt5P5PxhxbBZXT9x/KVy+gCkTdYRbpZVS8ArbhxM05vMHIANP8n6r2eIPytIQTh5uV6fjmWBpEymWZQtkWVcvmmodpyri9YJ2BOW/g/8oGXeDc6sd2O3R4NMsN3tiub5zkZzePlVpEvXaEKVYpfQ+d4vEHAROQaAPs3VOdskWCAO0fmmBThOUqTwf1b6MgDLcNK+TLjE5OuIKaCYi1z6/GADzNfX3CGIQeqcRdlo63xiptUu4Eqy4oGiCGcX2AXqab5OKEQJlptmf3hTcXVWZarw6xICa0U7Ko0L4obaJltE7lS377eFYwgLEbbi7vM9QeAzSXW7mlNf/JvkLUAqSCTsxO8pTFF9SHqUNcXKJhByK05qkqnkjzxvnTQ047hsGAik0xDQ06aTNkWYY6uzRAf2e+bBvZckTcmyAyagT8S7gh8LCarm9StvjWtVPxZFYolCWUlMDMThEOUTdrq6c0RnG8pDMplEwESb7+CHwhOcMwsjEr6+bDPTiSGMfJOspL0xDToFtEn9OfVCjrwrD4D1IxQlslwQp0NELDCKqZGQO/0Oi35ew2CK4tHAbCvTSXFViOR4vZ1EGAia7pgk5lbzqgcsFudFSBTKChLroxl11e4VcBOQnvlBS0HDIIj/m+OUvqlVaYRgEOiIX66mJq3Jwm9R0yOKItwOJSR+7luytUXBfSshQ/di2MIRaVyvbeen7JUBXJzuwsYngMEKzBV5kO3KfkxVzE4bLkUx8LnTzj1wvPTm3vjUoTGOmnU3S8Hszxkl0Pnt4Pa0HFsqxx09BEgQbwPJqNw3vOnGdArxAB+YmxfkwK/FXbkiPVWR5Pvw8wLgGR0Sd8F7+LrHGgzaZUHkPhn1nkePm6k9HrBEsURqN+Ze5ZenyjuANrjhI+5yfujm2iyjZFEMfWzBSgE9+I+81am4ngsSjI/l4djPdLmM21H1kib/NDf86Ix6ivpoibwX6u/ccIw9yTiQ4C25YHiaw9NY6xRrWZCfccztxRwYAtHFVNVwVGtTSvLpogLMCfaYZOEUg2Jp77UKDj2kpGcB1naPJbMRCbBZql6JsCb4WXDVdoBKINWuUGmGd+W2NIPe3n2hyhGijCoJOdSSSWi5u8flIDKO2STb7oL2CFGcGjs2IoHjlYden+FnbaWuQak+CLkOkDNU9Jz2keue0ETHjYLq49HkyY81SFmGmfjmtsZ0eImxVJ9TL4993SR+z7v+1EwkeJv+cUza5GWXn6ueR97Rwh3SUFpHG2Ak1AaPaBCqdsL6tlAIwSLrYpQfZc5a4wXO+73LcBRvPZpXuB7tSDqG/EFNCjPIpDOMZdkKdsBK3Tc/Vyo5x9o5Km5enbkSAVFUCErkwVBp+zKmg1ATAl4Ros0U3cODe6D4YB5tJOfOicmF5TVTAo/gPrsM5crhlIPqocIj+gb3gLE+tTWHZTjprR3Ry40hVY3/GQRo0MRSd6vz6BxlY91c/IXNh9PktDbhVEt1TPeg0ywWEo/R+eVyzuO8nuI/iIn+Wc0n7wtC8/f3XNZsTwQzyyxUEbGHkKMF0VoE4xctAo5RDbudlqOf59LfBbu8bRMDTb0p0PKaxglHU1pwGwpMBioby/MNR+sS3fJKpaWfCjrOTmU2sILVjNGMeKxrOtWmemnXihmR9qfRIFWcSe4cdMZJSCpt4C/NxOeTg3oKvWwHi4QenlAD7XogqTgsIBywTPJaqZTyGGuH7FwvRLcIPfAgCSBfmHz5pWOJ3ThscM2EVWWPow0eHNwNFNTVmt3RhovvMLRBEpY6f5TiObqijFqp1ItwFfN6MlRDxxSzNLNors4nSJdYcjqpxvv/PCQM4JjnnZYUkIUvKjQG97Pn9CtPpO8sDXem+V6DgaxtuAnfs01Jf72MCJ33eEvg55xiOV//X9S4F7/95ZWhPnIFBKk2P8lBlI3DMUw02Ui9l9ncxKy8WV9sK2ikTugxsQ+e3E7x0BhPZk9MUcU7ieDJr7X3zOICn/E85NevgBD4kCO4zz2q4TqjbJOMXrCykKdxE8qtM3yM5hHsGzpOwRaclkE6YRFyxSrPpokN9c26dP5zrn9Rci9prQBp1gRVohfHyozvn2NGzxymPnkNu6UcG7vUsjWElt+GBVpZpOAbnj7KxvHzcih9aLVx3ytWy13zI36kfVX3pTmYwudJYQxfbOjDBu6Sflm/6h6KZ5GPc2Tb3mv+F85SIJdJxCM6FDR5f4lv69vWu64lzxz5PRaZR631gIsQgHxAZHhWpf7AveGFzknLUr+jfmYIanY6DwghaqqiSz5MYh722ohDDSNts7i7StSmquDcgIg1uakxurzGmhTC/pg2pyohkc2uZKqA9jMMIYyR40Bjp6/amd9pbL0ySGan3OkFzj8gcyHRYO7rH1BsaNL0xreInXyoV4sZ8mTMzNShieBMcbT2McHrwwAJpD0cHAiyQNu20hF6OXwhYeYp78lTYXcYNy33OFwXZF2itS0LKibdmjDaxPxx9T9To7qJwTiLxttX2HOkNexw8XEEIfvSDkxaS0ZJhtio8/mN70kjEtrim2rKeaGYOexXbvc4IGHysnjnVbql1TibL/QBeSUX1PiL65jpaFeSNHXmjsqjvFmW46U62DjsdZpo9tG9OBnoGqc0mA9ewPK7Qux6o76zX52t/1fyOZcsiLtyUHsIXXkV4ndYj6V8DNX1CAZRj665KAqmRwf/czodKCQ4W8YcKxbQHH/P4j1BJAEFYDapm4f7dCU8aeT3U54e2pOJ3SuCfC6sD9A1dJ+RPGlWQoc607u36begIdVQGCJIWEg42qxkodjjvObtnina2CLjoqF6gpNH4lgYnG6B4rNLYgp2OhLLrfsFN2YE5lJseTzg38c2G3x9O0RTQfHCENWz8aapP4jMG0dUHQpim1f9GTBaG0VP576dtNUN4734PDSyjy3cXI7Iu4UOdi9NJjCde6ld/tCcZ4UhIaa2lvbrZMdKYDXltCVMvk5llf/+6/jVtP+8BGeS05eI2oW5La8jt4ic/bZCR9+5PnoRBc51BpV8DFezyfsknx5OQwcxypRqRYkLzuAmShFaF5XSaMB+vz+qB28AzbFWAgTwWIlOvwOEG65ptC/VZoo0QoV2IOMBvsPzk3dboRhVq+jUoulnskiVlGI3Z+d8u4FSe6K6ix2FEHjH1I3AKh7vUjQYCssUiJ9MccXBZYvtuTst5o9Eb1lTvkQ9I+HYaOnM0WnJWnHMOtZjFd6leTBarxduBfzas9Jv/SRaEoxX+2dXKhm/8Inaxp7NJd1rLyOnIb72BmGNZ75AanuFMvzQ70+RlD2gyiSLb1I+Hno1PCO0u0UNZ/EGmvcyVuT/cXXNWsxhH5OM7k8kHzDrCAO4KXiZes5LrBc72tFapf/lvvPu7IiNKtLg6cgwekWo0+f7T2JLupMBS/KTQZrD6J1L8Uk0GRiygzpjtY0kUfsZxiaDK+PVDFwHcpv099t34WWL0boDw+NSZSXzW9VtytK0q0NNSFaKs0L8q/LljnRX004TG46WWo1ydVhCrbAow9WIQi6ckJPGhRnhvR6Lo/ccTlOhxJiwoRbnE4iB8qj59kGOjNltZhtmqNkV0uKTyjUgyuS/FI/gJm6Wd1xwm/xSXrPOmF7XBM/mVkMqGM1F3nSkw7MmNgtMItHaaw37oys+LrMKDOZHw6XKfe3ZGpf2QFu1TmB9PR/MLeXkWNwUlbC7k0UqmxtA/EFxLQDE460udF2WYhmNLfl4/153mYHw1IUhunSYmZDV3QE0S0Uxz5FmcmKntcQ724QYMdPSn7DTfxdbEUE+6qkLdTQGVizb+2Lhd4uoMAR8wM/tnOk9qghIen70LwkQ+SzZu5sOeBHr5gmMWRXTiXgispn30yts0ihrMCWd1ezM6hW+31iqoffIfCb7upDp4CoFsjViR7ES7PRC89Vfj+1I6Emt/i6AYXYdknblNeuXKpsl5jwD4+qkOzN28WQnup4uL5zHQJ08qR1Kg+JTCZdmU0srB3Qd12XyR0PRwcYjnVBRLpF+2Xs05ffqKYZVtr8cF1bTM78z8hiSPLhTTMycwYWzcsRWuHEionTWvIwElAmxMdlwmf+Eh+mDk7Qho9smrP5xj3gxWyTT/DzpcQyuusWdIyb07MfC74pq/CFGqljq+I7Ba6A0QnOVoK8z9RkzSI2itALcj/2od+PVZ/1iedWDx7UZvberyPlhMXbOub4f2dIBfXLom018wrCWUIp/1S3hTIgR0iS4S7ikVd8nqcLEXRBuUcXEuY/dh5uhcyTD0BnrutS9Wrz53FNiy+zbcf9lJs8gpLRsYLVcnwerFRBajx2WfGgMpH95ruL70HAX83ppTblBjQsJzYIy9V3RXmWwkY/rYmdnB4NT/8KHdJwffyxzZtt61t/MiGuIuN2cVp8Uaox53k56PSWw3eRQO34Iz47tTXctHK8KJTnGhWIxZ3ZU1yltqLxq44GjzkD0TnH9DHSN/L6LM4KRc5Cdl1e3WVELXvp75JkBuS5zFuweRkHAoq3OJh/OeS4cpsKDgodpChu+R48oeF425ltWIRr/4FjOhdyrGOyQXFV+xo2SNFDVIAByOjWw7qSqKGa2SKPySDETLxwaPYd+31VLzPGBRF8yFT5y1ufT2H568ZRovnPBQev7ExZW/RYRqe+2TubqKSV/S4d3m6xST0z/b+1+Z5ADtI5N/wVM1pJKPVVNhk64+Vd2yD6piDMbVfzRWeL1vvVlWi9wI/5iMm0vtdi5VC7OQsDTjXnAn1j2yAAar21wRJhKdmMhF6kXy2Q74lgNzezHijT5asaKSEe9m1Bh035H05uGR3AScl5qFvh/4UiLXodm7StS41n4zuXbEn2zDhVPRgYlyYLVPbJzjx//ZywcYbOPEIRrkVIBgb7lD15Iq2pEZkg3BXYuODf7t5GZyIcSki/XCr9v/KGVKv0quQ5sh1olqqH4eZRmTZYkO10Og1c3YQ0EBt0t+4n0EPxhUyE++hLOtMD+O5lI9b3/0vjUdVAB9B/V9mSjt9hFiLt2GcqnRhgrcKtYjJ6y61gI/2iPYw9FUh/ElbxfkTBZaN8vcKLIvMxXxQWfjG+gDlAOuIPxLiTvRAJolgRpolKhiosGcVxGy9G4SucF4RboNDFr39HH976PyS95cMeZXzA7xP43R1WfNBfn7h6jld/fP2iHyswJyDJC0sSmSxbuBG0VHeoR6xoXSxEYg5Vt4khJ1ReNdnDx/djkPCiQ6tfZ9lVBXM1OosDlK/zDRQs+B9HUNdGQ+D+6owJA1eWX5uncVBWscE+Gj2yg7DRVBIT4loSfMfBpOT444mk+IjbPjabjs054SVN3oGggYBIHRkaL2ujVU8RJQZ+/sNEzTdq2TrJ44PvHpQike5f7Voxk+wpLtDGbKjyJlfxLLwaDKy/bnbr1f8dwvh0PBQj2G5NwVPILbuxsdzvxcKsBBrAMzzaItGQatK1tSqURg+icaTnsz1folT1T64nYnkkdcT4MGvqzCc9zmTu86Bf0MX3MYj/OCZdVY+RJkMsaYvT8wMnCpYIw4L/nEPr2K2ANxOc18ucPRwiG0cPn1dq/Y0B46+R7vXdeOOFhoUAICstflfnoO/B8pGlkQlSFxpAqdIMTkltZi9opMoG5O4hKE8aZh5+g+dBIMzi9Q3CwcUUxpl1sZTthchpmCqK1y2U2M3pjj5gtBNLgQMNIlHhv+smchBbXeFz6jjrjq6YuylLGgd3opf208Iw63kkqk79SBQpi2ou1KYr39o15DAC6zFFn39H3h1+tLUqE3M3M0KQkPZleznE81qjYJ3oyem8VIvd33A1dLSCYMDvBOCbJLMAW/oSwdCMZsPVhqQ0M6DHVepHGLPud6c8EFlw9ImvgJxlca035IYbodZyHjWHSKsTqhd/m+owH8fBbgjxfK8xfUwfDukbZH9S6HD9eYxm7/XcOPhbeVuPilDeFB4ozV0rSew4hvQh4yK8EyKNDcIhR0yIN+aC3pa3Kl4RM66Zl0uzRrZ+5wPkX1UDvrDxI2CSniroFtFXWOYwbm8FwZcS/DdozE3sTo3lqk5fVNdKTbToQ4hS7IEBeJzX7S9HLvCxABJWRVammZ7D4c6ynMrFyYXUr07wYO9QOyojHWXu4d8y14W2+vlBkgWLcrGt+p/4Ue56K1Ik2a0DjbAY/y+rGJz14tQIUc2h9b+wnh0uRukwGFaUCEzd97DWqEIijnSq9GCx91Wbr38T7WBBo55zw7bfP7p1n2Nidy71or2E6YGMzH6KwdZGUZ3BflHQRWu4ALPYrHzLrpinR3nOG5EPmMWK1W8Bxmw0fZBSj3zmbMU1ljwn0eG5hE6gTxZKfYksIIVnU82XvKpGwlAyNPLl2oWddQdItfO0Hpts2uP8SRvq9QRbVgRHCjmVPgVJ7NPSIvpWeJTpOeNhpHlwJ++hQgersupvJyQnZcP4nrMZoOtMVu9hX0IKYLsEslBn6ptLKbzmQjuQbURcJ6Ve9B/v17q+Xn7GoAxeuFAMoKZrhaHVJDq92hnqZ+AtkSaRyFxUE0FUs2as+6jxqHaF8X/hnD17PvLQh2JsH2zziufUI0VypjuR2SGHPjeNXTNiZaXXrK8CBQLa8iAZTV6K4Vf/TmMKt3GBQ4DcrJNr08g2uGupt/tO3yQKd4qeQ6yPlQQDx2iIHd895AwcPvvn91AUEwYowjLN4DUsnXFWgl4MZWlPYx62wZYIY6BwaULapsPh3LFPSTUFqKdsnyW7oYZ0G9cc9XRWFP8iSYClnneqbTpayiVr3irFk3AzzwuezGBMBE8Tng3eB+NljvXl/yUDeT/EPfQ1p0z7FyNKlFOyUdPfBdY2flhA6TvpZvKMDJFxrnA+oJpIejpCQz+dH4uCHIS4mqQGxDURyj40EuLmxWJmCCH4FrOlnn5Xv7A0a5VzuejjgnvfktBKIDZoLArP3QFAuf4+dcqfbFvjmXdEXs1Au9vCRpFFecuumwrkDRSPJM4cgveghLo9dbWPm1YQHIpJn3qnyzQ/lbRQCWbMJMqsFNcOR8+/fPNZ63s4URLpYRFPv6gYRDw8JxVA7+m2hVQc7EJq0sePtJLvwN4J3HhnNYh8NMYMI4PMpzPN9q7JhbjKC5UTSPuMU4vIrC708F3EoUDPC3fdckIgFxCUcxNzqH1LwLhEUMGnU5KG+r15LZq0XtGgICnl6gnYpbktkyLJ+XKaPoTUwTvcfQmrEAL8b/V2ukU4p1X6qhWFvfgzwaa1NcK5jZBYaYiMmYaHLa6RttkVjJXTY8sLE/XrfMHfGY9S/64/Nt7Tp1e7mcRR+uPpAi9Ltq6MrFav9EAevqV/285T196yGXXEimaT7OE9gCuNu0nP+xejvBkdlUx/KCyJws2dP3J0vApaDyH1ARFUBijOCQ9O4bHUKmDN5YBMGUEIcc1PAivmo45LOegM6K/lQBgILBmeCHB0YPf3Bm6d4PNrCjFIkEcNgCYfGDERhSFUA4hADNbVKDMHgM0/825aJxaztSAqcmkJh1g0FeNW8ioHPkFig8SiYOTGFBKfFJ6v0C8N2lV5VFvo/fI8bgFg2W+83HBxzg/ujk1SQ0zZztqN4Kbck8uiWM3WBNXOwgd+XpFZNcSPYWn4YpyvCPhma5BUY2gt3wJIR1O1PA7ApxPbBz5Be3OvakwK6CCt8zbb+Yl+wtj3Wm/m6yVzp0lmpE7gVpvnQDLPCh3/sOrYsH9wzhzGfTmI2v96ecMbOo99KAdFOgqNAAM4+7IhnhbP4iVYvvlVT5H5lVeyOvKIkLCgIddjHdbnNOTAsP8UyrMAXr2raDfDeuBMw+mcRyB/d73yrMIz9v78MFue1VmJKBfcsEQwYb6rC1EeEa5g1ElhjdOjgP3tgGIf9lFzj33B3mCyCepSc35RDFeS58vWjqkPIAWhC2Asbvu6IWDaM1+DcMKmWyBhzyka4HwUejIsTvlSiixWSrrmzILQH1pE0rNjA4fVVGc9si+jX95XLWH7/+rQiMwvgkvt/oQkcZPWpQw3IfqgNhnRHi6WQ/l4ESLtMRbo+jQgRVA7D8ldiuDJKyPVHZpoxLN/NL7kgWugVCTwf0tHMNeKJw38tF8JL4qDbaiSpsIQynCnhgq7NNubZOaMphZLwgqbfWaG9LuMwshRuCJ18vIOcO0s/Qbyww7kwLgPU5WtQ91H46ZOxdrUrMnebZ05lloFzm1wlSRYftLfcqfglPhKTtoIbfl2/MUCMdyCZEJC/dAGjIQ3IVxh6zxrq5Sl2bnYC1eMuMlsve7TJbmvs+Ow8XvlOiIkl6Egaapv2ndyG6StFtOooy9cKpUiUzSpFssjrHuZd3FgKWkn/NS745BD3HYIzRv6En9HKte/0liO1+v4hTtDwHMX6srqol12L39uHLwTj9/BFTHKCzuA3WE9WHIREjVXT4H3+3TeI1VSATyq9MzhxqGtmY0IONRvK5hWKFpEp2i2RWNZEhNw5BrLk3UtE5Wu6QOhzSRlpOIM0JaKTV4l1OIpZznSIe6GCLiZrjB97q8Gi9iLfdsTLjZYTFpoeAvpu0nQX8W0vZM2CcsS1qlS6za4EOnd2ukfB6DDbn9S3sCjUFhseSD/7t1uP2/8WMnNXP6XCUyQOlMxBi8w8w7wZByBvt6g44gad1cFCChVK+ljlfox+L0wJNKZ4X1XxEEANJ4K1gCktXAQq7n9GaDcVAGvdwYKDJ0ZuAGf+XFOOu5h2jmtitgbpWyBjVorsmzNEV062C++NeGy4VOT+5uzVINsa30Y5llD08YGF7e9nA+yRb92yni2J36V3C28O7Vly9o+Fb79eYA/ZFr/eMCpmL1MFgnPN7lRKHv2DiV8LhUc8pdOsIn8KyLYywMAWdatS/IWrzolBJGKacp/+FQc3s5QrHNNoBxLn34DShsJtkB2kjlTBxHk0aWP949K0LAkR2UQ9YeouujtzB1a8Y5smXoeB0um78ZTge0Fms3zM5/zisw4AI18ncgun0Mc+0GeJk76HIEhQEC/yaLTj+/K9o8wm7gERQuPQWLLV15NoPXsP7ffE3RbpxHAV2jnWrn5/ingeXbRVnI091SGxGZ4jNq64iP4yZfMZ7mGoScPJ79NYQ/+3lbfWl+yZLtmhW3WME8hQS5WdUVnPdFH3SGmYsNB7X9QcwQwQ0x7AdX7EiOcw5Zy34oBA+S+DgzjsQ6xFlDiXODLIYRxbfFJ8l674O37jYkqEQDa1RMzkZ1mQL+ZScQ/wR6iNfGO0F+drnB656zRr4ePuQWUK5bu85kVQVk+hdiG9c+mEijip7K7EGrsxGCgiMQZP7DQmwXBO+GahKQfszq+kYh+hTeISxPzmGLSrlz3ZTvbqzGa7E551/vhjlwSQ/7op/nWJ06KxvV2ZV7FLkVhA8VEdtSL1sF0vb7SC+5Hx0hMUbScBlJoCgAbBYeaYQGwwYiqU8D7/LIdg9uEBN/BWqnThuXtxf0ntLbteYQyjpYr1AiZskyomJnZMRm2tWQbmMhUuOKXNFylpXzJVWXiVnqqLnUNsUAC35guOdo/qI4PYuDi74aUhu2+66l0IdVTCKbuBn5Fwqud7TURcyjxMrJzWzICcO9H1NN0wST19Zm3v0YN1yHsmgDFxjZNrdEkU+5KBNlj1GH9aIAlFAHON26cymm7MHqxStTOx+lO9Ewm50x9MNR0JbtFcy+j3Tk1b2L28pYsgEpuiyumyfmrleKTQ2UrkjBGERVxb8JgLY7eSTPZmkkUGaQvj1jletS427qQX6zQmFogJ9jXoBs3alnwK/DkjHy56wT5l/QTGoL6EDgc+voLCIICZyUeegownLCj0BsFWAyoRQzYoioIxgZMTh2CxM/HXzLmjLZS+QsWYaoFvakHekpoEXpKszwCG4aXkcUKF/FQVe693dbRQPwVxxNTkWJgj/JqFDnmGrTxXy1W84G57Xx+DeaQwMMGU6CFUGeVql0nA8TpNOfYZCYstyIHjhCZlJLcyI+Hg6/sM+z4Bm8A/OPQREvaS1Fvv4g6/M8m0D+mQlJNvIUpUAZ+NPftt/JLvuDDsda2tMaW2oPP9Ggf/uur7GXPOr493gKCCyCaaMDIHMPvRapVfqweU7rflTqHEvUWzSpbMOgxWR9hTSvikOZWo6UzoZbdKqJkJeTYSPcVa9qB1Z7TV26pGov2gIxbpmqJnmaw3KiY34VwLgxejn5S826cP6M1gtpeal+egV7kIt1PMJ9h89LMDEu20iGmsBEio0Xk6YO1j/WlxQlLWXL9D+3q69b6/1WZ2/sKKipWhkXxSQ7xRvrkvNrWe7yDcQTb5HoNXk/yRinhTL1ieXxAAxQJNVUu2T9zZUL2RXlCqkgs4P7EUEMx5GiRRvQn9PiHwQf08hxL+D75iM5WbE5ei52s2UI++o0KsT6yUVvoqh0LSHJsCcCsP3YYqfD3SrbBMztXXzfVeqJ3HtXqIFiLnh50NPgh6Dgowc4ACgD7Lmrp0K1TdBf85TGjA+Z6QOIz1N7ToRR+3MCNiNCF5IHVcI7vgG2p108jlgj7REPsk8BJnilzldsI3z/cOEOezhP9xIsjES9PA0lSGQqS1nws9Y5rvBqiEbdLip7hToElDDPyJXeJ+JRCFvA7qzOpsV/ICLMPQFHOMlmqip+oXMQj2sXy5fdahghA+0VzOiU8JxWCY2N7zRWXMTL5oWlTdU+t1KkyLo2c4hz3aMrM0X0aKHjgainxKpBsJ7Wdj4tDjYPONxAIya8pyO8HnXnpDQfyXppcxHOLg9+c++5q20i17laK1TXipKkA1IPP20mIM8ESTERP2QtVYb1ELnHvdlO59PhetIi4RdAhVBSzR9Nfx1Z1+D5WzN5yGdSr6BBWceZ/cLc8KbjnXUJ6tgtwk67geCG1uA6Vo+DHou3NrdMWLbRQc/o2wjkm+jq/HtCp3CEr7NiNJkoUx028FrpwtzLOJYURytPK16Usr1hNXogWnmcGWhN5gK6y3qxUtaKoYdgx7eW5CdB3s3OkcBBNWmLJiIBMylHeydGvhGfmszcQbuDPIPoljZNRMJNK3pasCVtStGE6tvzj7646zt4ahnA1DgOy/NZagBhW6ATa3PeuVZE4ntzN2KON0U8W0X+WioFNJzYjFRRwYFGFBLH4TexDekajZ+osSSzO1Io6NkwXFLGkESXg/r4FK3HTZST7ZyedzUQ0ywNBCyRs6raOoQRWoksYNIFaeARTku4omH2X2EMpts75qHd0GMD7Gj6aIDUbJPoZG/wjvg9E1veo7+nR+5eOiKslqTCWeIFDCReyS0Kt/GUoF+2nL8CUyRbnVut0N0Aoq9baL60LVrtevbcy1s8r67ouQclGEdLJOXlBi70Emo8bg4Oi97vgC2kTmq+rtsABqVG9P+J56sVxoRuBfUpJQnMO0xUR7FUDS/Hs9+szH0SQFQhnLvLbc6dtuKrVyG/hJKxxinbQn/5W5WLOWaVT+zrG+/kxKM0XL9zDLZHbWqycs38ip4gH08a3YAl0xaOatSLzVfv760IDbi1p+btPIlpoGpkJh8ZprGzziBXAO90Jlj3yxWbJtOyFGSTE5eg0HsSZXO3DgpDwtGGspN4V3RyUqd25E4ALCyqmdQjv9js5aNMTrMidWGKNheCORSPa0xqhwYFNh3VEQubTi/EUvQmWwfdAldy5VNwEOWxl/OTT/5hwjbykpJUEkKhXA5o8VPaGw0ICMrN1GYI43Ewbx49GCaJQ++nGMz9lYSr4ovMkJ8yvsD78RVBUA47SlwrA2tTbk4ZxcKxPDFQ1RPHAj1PWvt8bg4HoxHrpemWjfcNhrAcseoaZDaH007j44UuTOC/3ojdKPOJAl8lOvr5RQZjNsmhdVVS33XKLJxixzcj9IRi++pSydasg7ku7mCDk1xetoJB+lZiLWLVjhtiZj5DAtJ92fM+J/sihw5X/hZDf5T3mLUhRPq1OXhIaZM98VlIKTlAqvCKwUJs1l/SG2ZFG0Gjlphomlq1qP97PohoUABjA4YjLQIViNN9Eiz+/MSEv7N+HU/l3vAR7dhK5n/nZkPitvIVx9ItmqZyaF4G9YZQdZCcp739Hp4Xfm7fTXxo1PBtrCgj7ZuDJDDnVGGPl4ySPnR/0+7WF+E503umDhArp01iKA8P1bsmRHX6zXSuRYPDqJxS6sQogKd6jn28X9k2bGFKwur6erwCT5xhVn+Vl3l/gvRWdjAlcmxXfjNduJv+dLH2tSF0QaKkooW9M0BWGOM0gJ3Di64yQIuv5VR+m7TXNhhBmaHhdgF6Ohsz3Tbpub2wQf2kTG3JZ4PvuZ22fc7UupIEhFkKL6lp4ZWnrRzYoflPj1eIAQfshermuqTPzLfRZWAMKYdL0JdA3M2fzq2HzHNtWcQ9UU0zGIioTtar7B+D8/iLimxHnF6kANyyifzb6PbE14XGl7Mv3fM6IxVylPRPi1K38HsrF3wFly2IdUHpFtEV7pXe2pwXqlBkn3zO/64XEj/4SK5FiRp2DFYZtR8wEsQqS452f90vNBYAgrOP56v1zsx1yEQLGOv47mrk2L9L67GLnDJ5rCyE4FjY6zjUcQ+8TqvhL4JFctwIO9RrCMh4jg7+GBD+w2fFnFovzY4gJA80SQEw25roxJPFxFEloLpJRlFu8csn+NSB4bu5jpl1m/TGbQ8Y8k6y7AGsB7cI54N8LaADLq4w8wt6vPRsxF4dfhFxW2+iHdlzU/BPuy5UIXKLTF7gQgR4JT7PVWT/I86iHAew/1WDWcbrUIXDj4hIyf2NwK8id1i/eTP+ZMIwYMtShXaOOi7X+AFXaraJ3cegde+oBnFA7OmOdawjysHpTBZ6Er7/Yg8JhuD11gAtJoK3HpEqdfMgVUKRz6armf+U2XtRDVAH3RGSPIJ8JrCL5oW1tyGjs17rqFrK56jEDcblnRT9bj98TteyAkGVc+u/5yI28sm8iC6Ykt72qlpl/9iwdUuhQvlD3SPdx97SQLW5Rs8NFv8mSCiAwxo9kEuhs1KKz+U+wLjaXwokwBaqAHGmcuorT9rsb9wXNEl1BFJUl1gJsS/dJW6XNr/xmqw4P1rSvIDVYNmTdN9n7gIiWi7Un+6883EnZmNLwaIflH3zgwHFNpdAXIu1Cl5JLDlY8Xik5Jv/qm/am1sO0Jd1KmFOP/JGIxkYQDnkaxEpA3gn0tuLwcDiGHISgDCU0WB8ZI/7qwO9WVjDevL/llWuY/33+Zn0e587+VG1LOA61DfFqKC0Sdd2nbqzhsYxjjzPdm77est0qYhra5GNDusoyWCCcPlBtcqRVoh0pc5uTjCy0Ho+q48h+FCqJpgMGnEt8Lfr2h3tqsUiF5OQ3viaZNxcpTAs0BvvEHxTyCObscRtAfvh189IqbUOF/bEP+u+wcjfWg/JHaX+mC3Q5J/r9NrzwEbyRhBLh+xA0JsuPklTg6FrtgTYyTuR7TyqWGXLkZqBaNJwpLl8MknxhasVCvWySziP94wYtCooszhoKvjXp5B9aPDXWvHf9CJj4x2GpTHVT3jP1ZAhVyPHLYvlnanZ6yT0lj5va0oaNXyhMjnlFF/DmzKqVcVIFn/dpiIt1AaenxXmpwC1TAdxDTN/rdSqel+YD2VU1dItQnFovqauRwOIyYW8GLv7tepX3W9fx05onGWERRX2g3fSwrrQyv7qk5i28dyj08+ZsyJR0tpkhcpe8WAApclyr2pRj/ndYUngb1IvIPwXHY9jS8a1iwQvEt4cYSKvrlqij6kK17+0gQzR9aYLetruzJiXZGCfOd/FelIBAgcnvD+aG3jf9EWbWKtX5GrCNlmUG5N7Zty3O9P9O5KuPF7WA50HhYu4GVzej1LT7d2hkDgup0zqSczMJ/ntLYAQ/PbOW3NVh4n6qN0qSxtoxprl1Sbw0GDY3kv4KKpwumVZxaGMQxNUoj85b+fuyz72pYG8SzeQt5v7awSEG7qw03zc61tsKZeRj5tCnYW9zF4J2VWjjnKsdXksLspQxx7u5b3A7PtISA/UpGLZwV733QaJWtobKCx16uT/k+9j5MbTv2xhqHlg3O3qEWOs3oUnqqxzUBzegBqe0CnE3F0Nw2kiAjjiesHq5GuLOLQ/u57vFJbpNjgevaWno1ebjwpmAPH3ptF9H7hbipMISzEs+SuxL0CKwGAm2wiqMycweMeNCSKDrspuvpWbdaev+7mEoYVpTLK16qMQoksDShXGpT/JOIKCD8qJDwU8wDblcP4Y6iMiSyoo8pr7dKp6ySfNJTM9ko3c7AJQ7EXkS8KvVV3I7Mv1H/ufsraAbIDxZbmjqSoWq+suVMHZ+GY0B2kcsqPzXgcSPUPr4t/3MECYIE1kTIdfx5CxGqzqb70yYjyJEDCDbmhhdFv5U4du0D2s0C6rU2nUpBye0FmKYl1jFlHa107Uiq/chygwJEH7ePYpPHVvxvfjR2Z7G+RSqny+PE2OgWUm1OatG+pgKpbIw5P+BVxXVIWsL1QQkaaeE2C1OAaHWWxPQFnZHEXDZ1PbzOpHaSLtCO5c6qsqgEBfjz0jx6Jb1f0Aqs7ZpmvPwtH9E60P83HQxwa9bQ6WAt0ntv8o0zsR8GHtnrHR4yyyaAWJFP3jZbowtugNBvytyrF8pIKJ8ffguJItChMML8de5FeQJLimjqmbVrp+WIdXV6cd+z+dqwzJxfb7hTGFRRMntcbKpyuYi4+H6eyRSx3N3XokYffLo8fF7gKB9eeOSmc9cSRYKl+Nri6Alt3+h4BmDJbGV6DvrKUzB1bEyXK8v2WekU7qi852NRe+7HMiMNk286XTtLegw2LhBM5h2/lfoQMT+9oTfCA7hkUKSa0T8JjB6oDLbb6oymfyEcoHn0TLl+44si1j4l5bURPZdLRDsJ+rlSibMDQTvra/CHa25Ch523jTSMZ1fy1UQwdoB5a4tPVbadTZZfEVIEfJeele58j9uS22Q+ygci7mGY+uRh7zd6cSio/JLw5/tryDPZy9OmkGCqYPhvbo42GdRfF5XSv4j9SaV3mNpbc2Tuozca9M=</div><script src="/yelee/lib/crypto-js.js"></script><script src="/yelee/lib/blog-encrypt.js"></script><link href="/yelee/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      <categories>
          
          <category> 前端面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端面试 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ES6中简约强大数组操作组合</title>
      <link href="/yelee/2018/09/07/ES6%E4%B8%AD%E7%AE%80%E7%BA%A6%E5%BC%BA%E5%A4%A7%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%BB%84%E5%90%88/"/>
      <url>/yelee/2018/09/07/ES6%E4%B8%AD%E7%AE%80%E7%BA%A6%E5%BC%BA%E5%A4%A7%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%BB%84%E5%90%88/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ES6-数组新增方法"><a href="#ES6-数组新增方法" class="headerlink" title="ES6 数组新增方法"></a>ES6 数组新增方法</h2><h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h3><p><code>array.reduce(callback[, initialValue])</code></p><a id="more"></a><p>数组求和</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br><span class="line">numbers.reduce(<span class="function">(<span class="params">prev, cur, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'prev: '</span> + prev + <span class="string">'; '</span> + <span class="string">'cur: '</span> + cur + <span class="string">';'</span>)</span><br><span class="line">  <span class="keyword">return</span> prev + cur</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">prev: <span class="number">10</span></span><br><span class="line">cur: <span class="number">20</span></span><br><span class="line">prev: <span class="number">30</span></span><br><span class="line">cur: <span class="number">30</span></span><br><span class="line">prev: <span class="number">60</span></span><br><span class="line">cur: <span class="number">40</span></span><br></pre></td></tr></table></figure><p>这第二个参数就是设置 prev 的初始类型和初始值，比如为 0，就表示 prev 的初始值为 number 类型，值为 0，因此，reduce 的最终结果也会是 number 类型。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br><span class="line">numbers.reduce(<span class="function">(<span class="params">prev, cur, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'prev: '</span> + prev + <span class="string">'; '</span> + <span class="string">'cur: '</span> + cur + <span class="string">';'</span>)</span><br><span class="line">  <span class="keyword">return</span> prev + cur</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">prev: <span class="number">0</span></span><br><span class="line">cur: <span class="number">10</span></span><br><span class="line">prev: <span class="number">10</span></span><br><span class="line">cur: <span class="number">20</span></span><br><span class="line">prev: <span class="number">30</span></span><br><span class="line">cur: <span class="number">30</span></span><br><span class="line">prev: <span class="number">60</span></span><br><span class="line">cur: <span class="number">40</span></span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.zhangxinxu.com/wordpress/2013/04/es5%E6%96%B0%E5%A2%9E%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/" target="_blank" rel="noopener">https://www.zhangxinxu.com/wordpress/2013/04/es5%E6%96%B0%E5%A2%9E%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/</a></p><p><a href="https://segmentfault.com/a/1190000005921341" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005921341</a></p><p><a href="https://segmentfault.com/a/1190000013972464" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013972464</a></p><p><a href="https://segmentfault.com/a/1190000013121115" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013121115</a></p>]]></content>
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>干掉状态从session到token</title>
      <link href="/yelee/2018/09/07/%E5%B9%B2%E6%8E%89%E7%8A%B6%E6%80%81%E4%BB%8Esession%E5%88%B0token/"/>
      <url>/yelee/2018/09/07/%E5%B9%B2%E6%8E%89%E7%8A%B6%E6%80%81%E4%BB%8Esession%E5%88%B0token/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="美好的旧时光"><a href="#美好的旧时光" class="headerlink" title="美好的旧时光"></a>美好的旧时光</h2><p>我经常怀念三十年前那美好的旧时光， 工作很轻松， 生活很悠闲。</p><p>上班的时候偶尔有些 HTTP 的请求发到我这里， 我简单的看一下， 取出相对应的 html 文档，图片，发回去就可以了， 然后就可以继续喝茶聊天。</p><a id="more"></a><p>我的创造者们对我很好， 他们制定的一个简单 HTTP 协议， 就是请求加响应， 尤其是我不用记住是谁刚刚发了 HTTP 请求， 每个请求对我来说都是全新的！</p><p>邮件服务器很羡慕我， 他说：老弟，你的生活太惬意了， 哪像我， 每次有人从客户端访问邮箱， 我都得专门给他建立一个会话， 来处理他发的消息， 你倒好， 完全不用管理会话。</p><p>这是由应用的特性决定的， 如果邮件服务器不管理会话， 那多个人之间的邮件消息就会完全混到一起了， 乱作一团了。</p><p>而 30 年前的 Web 基本上就是文档的浏览而已， 既然是浏览，我作为一个服务器， 为什么要记住谁在一段时间里都浏览了什么文档呢？</p><p>2</p><h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><p>但是好日子没持续多久， 很快大家就不满足于静态的 Html 文档了， 交互式的 Web 应用开始兴起， 尤其是论坛， 在线购物等网站。</p><p>我马上就遇到了和邮件服务器一样的问题， 那就是必须管理会话，必须记住哪些人登录系统， 哪些人往自己的购物车中放了商品， 也就是说我必须把每个人区分开。</p><p>这对我来说是个不小的挑战， 由于 HTTP 协议的无状态特性， 我必须加点小手段，才能完成会话管理。</p><p>我想出的办法就是给大家发一个会话标识(session id), 说白了就是一个随机的字符串，每个人收到的都不一样， 每次大家向我发起 HTTP 请求的时候，把这个字符串给一并捎过来， 这样我就能区分开谁是谁了。</p><p>3</p><h2 id="沉重的负担"><a href="#沉重的负担" class="headerlink" title="沉重的负担"></a>沉重的负担</h2><p>大家都很高兴， 可是我就不爽了。</p><p>每个人只需要保存自己的 session id，而我需要保存所有人的 session id ！ 如果访问我的人多了， 就得由成千上万，甚至几十万个。</p><p>这对我来说是一个巨大的开销 ， 严重的限制了我的扩展能力， 比如说我用两个机器组成了一个集群， 小 F 通过机器 A 登录了系统， 那 session id 会保存在机器 A 上， 假设小 F 的下一次请求被转发到机器 B 怎么办？ 机器 B 可没有小 F 的 session id 啊。</p><p>有时候我会采用一点小伎俩： <strong>session sticky</strong> ， 就是让小 F 的请求一直粘连在机器 A 上， 但是这也不管用， 要是机器 A 挂掉了， 还得转到机器 B 去。</p><p>那我只好做 session 的复制了， 把 session id 在两个机器之间搬来搬去， 快累死了。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vNJe66yhKRkVOxqS9gxftlwCuh8yicUcPPFaMMLv0oia9Xzf5IutmIPwQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><blockquote><ul><li>后来有个叫 <strong>Memcached</strong> 的给我支了招： 把 session id 集中存储到一个地方， 所有的机器都来访问这个地方的数据， 这样一来，就不用复制了， 但是增加了单点失败的可能性， 要是那个负责 session 的机器挂了， 所有人都得重新登录一遍， 估计得被人骂死。</li></ul></blockquote><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vwDyicwnvVayaKBpxXY4W5mUgQDwHD7Iwu3yY2OhV4qXG49oMbIgQP0A/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>我也尝试把这个单点的机器也搞出集群，增加可靠性， 但不管如何， 这小小的 session 对我来说是一个沉重的负担。</p><p>4</p><h3 id="时间换空间"><a href="#时间换空间" class="headerlink" title="时间换空间"></a>时间换空间</h3><p>这几天的晚上我一直在思考， 我为什么要保存这可恶的 session 呢， 只让每个客户端去保存该多好？</p><p>可是如果我不保存这些 session id , 我怎么验证客户端发给我的 session id 的确是我生成的呢？ 如果我不去验证，我都不知道他们是不是合法登录的用户， 那些不怀好意的家伙们就可以伪造 session id , 为所欲为了。</p><p>嗯，对了，关键点就是验证 ！</p><blockquote><ul><li>比如说， 小 F 已经登录了系统， 我给他发一个 <strong>令牌(token)</strong>， 里边包含了小 F 的 user id， 下一次小 F 再次通过 Http 请求访问我的时候， 把这个 token 通过 Http header 带过来不就可以了。</li></ul></blockquote><p>不过这和 session id 没有本质区别啊， 任何人都可以可以伪造， 所以我得想点儿办法， 让别人伪造不了。</p><blockquote><ul><li><strong>那就对数据做一个签名吧， 比如说我用 HMAC-SHA256 算法，加上一个只有我才知道的密钥， 对数据做一个签名， 把这个签名和数据一起作为 token ， 由于密钥别人不知道， 就无法伪造 token 了。</strong></li></ul></blockquote><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vicfOmZHQhQ7e6Wjk7licKBMh38rPZfnEQxAibWXjY84P0icEVoFU51ibwiaQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>这个 token 我不保存， 当小 F 把这个 token 给我发过来的时候，我再用同样的 HMAC-SHA256 算法和同样的密钥，对数据再计算一次签名， 和 token 中的签名做个比较， 如果相同， 我就知道小 F 已经登录过了，并且可以直接取到小 F 的 user id , 如果不相同， 数据部分肯定被人篡改过， 我就告诉发送者： 对不起，没有认证。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vNJe66yhKRkVOxqS9gxftlwCuh8yicUcPPFaMMLv0oia9Xzf5IutmIPwQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>Token 中的数据是明文保存的（虽然我会用 Base64 做下编码， 但那不是加密）， 还是可以被别人看到的， 所以我不能在其中保存像密码这样的敏感信息。</p><p>当然， 如果一个人的 token 被别人偷走了， 那我也没办法， 我也会认为小偷就是合法用户， 这其实和一个人的 session id 被别人偷走是一样的。</p><blockquote><ul><li>这样一来， 我就不保存 session id 了， <strong>我只是生成 token , 然后验证 token ， 我用我的 CPU 计算时间获取了我的 session 存储空间 ！</strong></li></ul></blockquote><p>解除了 session id 这个负担， 可以说是无事一身轻， 我的机器集群现在可以轻松地做水平扩展， 用户访问量增大， 直接加机器就行。 这种无状态的感觉实在是太好了！</p><p>（完）</p>]]></content>
      
      <categories>
          
          <category> 状态保持 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>element-ui更换主题和按需引入组件</title>
      <link href="/yelee/2018/09/04/element-ui%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5%E7%BB%84%E4%BB%B6/"/>
      <url>/yelee/2018/09/04/element-ui%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5%E7%BB%84%E4%BB%B6/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="element-ui-使用初体验"><a href="#element-ui-使用初体验" class="headerlink" title="element-ui 使用初体验"></a>element-ui 使用初体验</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>手上有些项目用的<code>element-ui</code>，刚好有空琢磨一下怎么减小打包文件大小和打包速度方面，为了演示实验，用 vue-cli 生成初始项目，在这仅对 element-ui 主题和组件方面来优化。</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack vuecli</span><br></pre></td></tr></table></figure><h3 id="完整引入"><a href="#完整引入" class="headerlink" title="完整引入"></a>完整引入</h3><p>完整地将 ui 和样式引入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span></span><br></pre></td></tr></table></figure><p>在页面简单使用三个组件，看看效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"block"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"demonstration"</span>&gt;</span>区分颜色<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-rate</span> <span class="attr">v-model</span>=<span class="string">"value1"</span> <span class="attr">:colors</span>=<span class="string">"['#99A9BF', '#F7BA2A', '#FF9900']"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-rate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">icon</span>=<span class="string">"el-icon-search"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"success"</span> <span class="attr">icon</span>=<span class="string">"el-icon-check"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"info"</span> <span class="attr">icon</span>=<span class="string">"el-icon-message"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"warning"</span> <span class="attr">icon</span>=<span class="string">"el-icon-star-off"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"danger"</span> <span class="attr">icon</span>=<span class="string">"el-icon-delete"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/gb/element-ui更换主题和按需引入组件/0.bmp" alt=""></p><p>再看一下打包后的资源大小情况<code>npm run build --report</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: fa47514a97341329a7c0</span><br><span class="line">Version: webpack 3.11.0</span><br><span class="line">Time: 20363ms</span><br><span class="line">                                                  Asset       Size  Chunks                    Chunk Names</span><br><span class="line">                 static/fonts/element-icons.6f0a763.ttf      11 kB          [emitted]</span><br><span class="line">               static/js/vendor.5efcf828140d5dbedda9.js     714 kB       0  [emitted]  [big]  vendor</span><br><span class="line">                  static/js/app.a4a31db472f653b911e7.js      12 kB       1  [emitted]         app</span><br><span class="line">             static/js/manifest.2ae2e69a05c33dfc65f8.js  857 bytes       2  [emitted]         manifest</span><br><span class="line">    static/css/app.f24bb0ae3686720fe2e00c5a2024b8f1.css     185 kB       1  [emitted]         app</span><br><span class="line">static/css/app.f24bb0ae3686720fe2e00c5a2024b8f1.css.map     267 kB          [emitted]</span><br><span class="line">           static/js/vendor.5efcf828140d5dbedda9.js.map    2.73 MB       0  [emitted]         vendor</span><br><span class="line">              static/js/app.a4a31db472f653b911e7.js.map    22.8 kB       1  [emitted]         app</span><br><span class="line">         static/js/manifest.2ae2e69a05c33dfc65f8.js.map    4.97 kB       2  [emitted]         manifest</span><br><span class="line">                                             index.html  508 bytes          [emitted]</span><br></pre></td></tr></table></figure><p>发现打包后提取公共模块<code>static/js/vendor.js</code>有 714kb</p><p>再看一下各个模块占用情况：</p><p><img src="/gb/element-ui更换主题和按需引入组件/1.bmp" alt=""></p><p>发现<code>elment-ui.common.js</code>占用最大。所有模块资源总共有 708kb。怎么才能减小打包后的大小呢？很容易就会想到 ui 的引入和样式的引入中，实际我们只使用了三个组件，却整体都被打包了，在这里引入这三个组件即可。</p><h3 id="按需引入组件样式"><a href="#按需引入组件样式" class="headerlink" title="按需引入组件样式"></a>按需引入组件样式</h3><p>新建一个<code>element-variables.scss</code>文件（为什么是 SCSS 文件，后面自定义主题会用到）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/*icon字体路径变量*/</span><br><span class="line">$--font-path: &quot;~element-ui/lib/theme-chalk/fonts&quot;;</span><br><span class="line"></span><br><span class="line">/*按需引入用到的组件的scss文件和基础scss文件*/</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/base.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/rate.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/button.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/row.scss&quot;;</span><br></pre></td></tr></table></figure><h3 id="按需引入组件"><a href="#按需引入组件" class="headerlink" title="按需引入组件"></a>按需引入组件</h3><p>新建一个<code>elementConfig.js</code>文件，将项目用到的 element 组件引入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Rate, Row, Button &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  install(V) &#123;</span><br><span class="line">    V.use(Rate)</span><br><span class="line">    V.use(Button)</span><br><span class="line">    V.use(Row)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第一次优化后打包分析"><a href="#第一次优化后打包分析" class="headerlink" title="第一次优化后打包分析"></a>第一次优化后打包分析</h3><p>将以上<code>element-variables.scss</code>和<code>elementConfig.js</code>引入到<code>main.js</code>中。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'@/assets/js/elementConfig'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'@/assets/css/element-variables.scss'</span></span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI)</span><br></pre></td></tr></table></figure><p>貌似上面一切都很顺理成章，打包后大小会减小。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: <span class="number">3</span>ba9b74482f121efd3aa</span><br><span class="line">Version: webpack <span class="number">3.11</span><span class="number">.0</span></span><br><span class="line">Time: <span class="number">18854</span>ms</span><br><span class="line">                                                  Asset       Size  Chunks                    Chunk Names</span><br><span class="line">                 <span class="keyword">static</span>/fonts/element-icons<span class="number">.6</span>f0a763.ttf      <span class="number">11</span> kB          [emitted]</span><br><span class="line">               <span class="keyword">static</span>/js/vendor<span class="number">.11</span>c71f168a2d61b547a0.js     <span class="number">714</span> kB       <span class="number">0</span>  [emitted]  [big]  vendor</span><br><span class="line">                  <span class="keyword">static</span>/js/app.dbb5b49dad2d42b3598c.js    <span class="number">11.2</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line">             <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js  <span class="number">857</span> bytes       <span class="number">2</span>  [emitted]         manifest</span><br><span class="line">    <span class="keyword">static</span>/css/app.bf52525d6279e7fb87b4db770d119a8d.css    <span class="number">25.7</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line"><span class="keyword">static</span>/css/app.bf52525d6279e7fb87b4db770d119a8d.css.map      <span class="number">63</span> kB          [emitted]</span><br><span class="line">           <span class="keyword">static</span>/js/vendor<span class="number">.11</span>c71f168a2d61b547a0.js.map    <span class="number">2.73</span> MB       <span class="number">0</span>  [emitted]         vendor</span><br><span class="line">              <span class="keyword">static</span>/js/app.dbb5b49dad2d42b3598c.js.map      <span class="number">21</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line">         <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js.map    <span class="number">4.97</span> kB       <span class="number">2</span>  [emitted]         manifest</span><br><span class="line">                                             index.html  <span class="number">508</span> bytes          [emitted]</span><br></pre></td></tr></table></figure><p>结果可知，<code>static/js/vendor.js</code>还是 714kb！</p><p>再看各个模块占用情况：</p><p><img src="/gb/element-ui更换主题和按需引入组件/2.bmp" alt=""></p><p>WHAT?竟然模块都没什么变化，岂不是竹篮打水，事与愿违。</p><h3 id="再次打包优化尝试"><a href="#再次打包优化尝试" class="headerlink" title="再次打包优化尝试"></a>再次打包优化尝试</h3><p>后来查到有人同样遇到这个问题，提出一个<a href="https://github.com/ElemeFE/element/issues/6362#issuecomment-323517538" target="_blank" rel="noopener">issues#6362</a>，原来只引入需要的<code>element-ui</code>组件，<code>webpack</code>还是把整体的 ui 库和样式都打包了，需要一个<code>webpack</code>的<code>babel</code>插件<code>babel-plugin-component</code>，这样才能真正按需引入打包。这块其实被写到官方文档更换 <a href="http://element-cn.eleme.io/#/zh-CN/component/custom-theme" target="_blank" rel="noopener">自定义主题</a> 的配置了。</p><p>于是<code>npm i babel-pugin-componet -D</code>安装后，在增加<code>.babelrc</code>文件插件配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"presets"</span>: [</span><br><span class="line">    [<span class="string">"env"</span>, &#123;</span><br><span class="line">      <span class="string">"modules"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"targets"</span>: &#123;</span><br><span class="line">        <span class="string">"browsers"</span>: [<span class="string">"&gt; 1%"</span>, <span class="string">"last 2 versions"</span>, <span class="string">"not ie &lt;= 8"</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="string">"stage-2"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"plugins"</span>: [<span class="string">"transform-vue-jsx"</span>, <span class="string">"transform-runtime"</span>, [<span class="string">"component"</span>, &#123;</span><br><span class="line">    <span class="string">"libraryName"</span>: <span class="string">"element-ui"</span>,</span><br><span class="line">    <span class="string">"styleLibraryName"</span>: <span class="string">"theme-chalk"</span></span><br><span class="line">  &#125;]]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>页面运行正常，再次打包。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: <span class="number">9</span>cc71dead6d7646c9ed4</span><br><span class="line">Version: webpack <span class="number">3.11</span><span class="number">.0</span></span><br><span class="line">Time: <span class="number">9963</span>ms</span><br><span class="line">                                                  Asset       Size  Chunks             Chunk Names</span><br><span class="line">                 <span class="keyword">static</span>/fonts/element-icons<span class="number">.6</span>f0a763.ttf      <span class="number">11</span> kB          [emitted]</span><br><span class="line">                  <span class="keyword">static</span>/js/app<span class="number">.77</span>c0883f4f0fc0bf5cbc.js    <span class="number">11.4</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line">               <span class="keyword">static</span>/js/vendor<span class="number">.942130</span>fd13274b901889.js     <span class="number">126</span> kB       <span class="number">1</span>  [emitted]  vendor</span><br><span class="line">             <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js  <span class="number">857</span> bytes       <span class="number">2</span>  [emitted]  manifest</span><br><span class="line">    <span class="keyword">static</span>/css/app.b140020e5dbee406ae70780b43ba7ddc.css    <span class="number">27.8</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line"><span class="keyword">static</span>/css/app.b140020e5dbee406ae70780b43ba7ddc.css.map    <span class="number">91.4</span> kB          [emitted]</span><br><span class="line">              <span class="keyword">static</span>/js/app<span class="number">.77</span>c0883f4f0fc0bf5cbc.js.map    <span class="number">21.1</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line">           <span class="keyword">static</span>/js/vendor<span class="number">.942130</span>fd13274b901889.js.map     <span class="number">613</span> kB       <span class="number">1</span>  [emitted]  vendor</span><br><span class="line">         <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js.map    <span class="number">4.97</span> kB       <span class="number">2</span>  [emitted]  manifest</span><br><span class="line">                                             index.html  <span class="number">508</span> bytes          [emitted]</span><br></pre></td></tr></table></figure><p><code>static/js/vendor.js</code>确实变小了，126kB。再来看各个模块分析图。</p><p><img src="/gb/element-ui更换主题和按需引入组件/3.bmp" alt=""></p><p>模块总共 135.03KB，少了 5 倍！</p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p><code>element-ui</code>的<code>theme-chalk</code>使用<code>SCSS</code>编写，如果在自己的项目中也是用<code>SCSS</code>，那么可以直接在项目中改变样式变量，因此可以在前面新建的<code>element-variables.scss</code>文件用新的主题颜色变量覆盖即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/*主题颜色变量*/</span><br><span class="line">$--color-primary: #f0f;</span><br><span class="line"></span><br><span class="line">/*icon字体路径变量*/</span><br><span class="line">$--font-path: &quot;~element-ui/lib/theme-chalk/fonts&quot;;</span><br></pre></td></tr></table></figure><p>可能你已经注意到了，这里没有分别引入用到的组件样式了，是因为<code>babel-plugin-component</code>帮我们按需引入了对应的样式。</p><p>现在我们的主题就变成了</p><p><img src="/gb/element-ui更换主题和按需引入组件/4.bmp" alt=""></p><p>如果你没有用到<code>SCSS</code>，可以用<code>element-theme</code>主题编译插件，生成自定义主题文件引入。</p><p>完~ps：个人见解有限，欢迎指正。</p>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> element-ui </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端必备vscode插件</title>
      <link href="/yelee/2018/09/03/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87vscode%E6%8F%92%E4%BB%B6/"/>
      <url>/yelee/2018/09/03/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87vscode%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这篇文章只要让你做一些基础的配置，把 vscode 变得更加顺手；<br>插件的需求不是一成不变，有些插件我已经移除了。。在最新的 VSCODE 1.9.1 中，<br>部分以前用插件实现的功能已经集成了，那就没有必要存在了。这里就不做推荐了复制代码</p><a id="more"></a><h1 id="必备插件"><a href="#必备插件" class="headerlink" title="必备插件"></a>必备插件</h1><hr><h2 id="功能性"><a href="#功能性" class="headerlink" title="功能性"></a>功能性</h2><ol><li>Auto Close Tag : 匹配标签，关闭对应的标签。很实用【HTML/XML】 Auto</li><li>Rename Tag : sublime 和 webstorm 也有这个内置功能，改变标签的时候同时改动开闭合标签；【HTML/XML】</li><li>beautify : 良好的拓展性，可以格式化 JSON|JS|HTML|CSS|SCSS,比内置格式化好用</li><li>Code Runner : 代码编译运行看结果，支持众多语言</li><li>colorize : 会给颜色代码增加一个当前匹配代码颜色的背景，非常好</li><li>Document This : JSDOC 注解调用，值得易用</li><li>Git History : 不得不赞的插件，谁用谁知道，功能很赞</li><li>HTML CSS Support : 这个也是必备插件之一</li><li>Path Autocomplete : 路径智能补全</li><li>Path Intellisense ： 路径智能提示</li><li>SCSS IntelliSense Preview : SCSS 智能提醒，配置强大</li><li>Syncing: 这个同步插件要比官方市场那个最高下载量的要好，支持删除同步！！！</li><li>Version Lens : 可以及时看到 package.json 内部版本的变动，很实用</li><li>Output Colorizer : 可以终端日志输出着色，实用</li></ol><h2 id="代码片段插件"><a href="#代码片段插件" class="headerlink" title="代码片段插件"></a>代码片段插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JavaScript (ES6) code snippets  : ES6的代码片段，实用</span><br><span class="line">JavaScript Snippet Pack   : ES5及以下的代码片段，实用</span><br></pre></td></tr></table></figure><h2 id="语法校验"><a href="#语法校验" class="headerlink" title="语法校验"></a>语法校验</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stylelint : 比内置的要全，更智能</span><br></pre></td></tr></table></figure><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><ol><li>Panda:用了相当久的一套颜色高亮，个人感觉很耐看</li><li>Enki Theme (Material Design Inspired) : 当前用的代码高亮，个人感觉很赞</li><li>Material Icon Theme : 一套扁平化的文件图标，内置的 seti 也很优秀，还有 simple icon 和 vscode-icons</li></ol><p>作者：爱吃 kiwi<br>链接：<a href="https://leekiwi.github.io/">https://leekiwi.github.io/</a><br>来源：github<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      <categories>
          
          <category> 实用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nodejs学习笔记</title>
      <link href="/yelee/2018/08/28/node-js-study-note/"/>
      <url>/yelee/2018/08/28/node-js-study-note/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Nodejs-学习笔记"><a href="#Nodejs-学习笔记" class="headerlink" title="Nodejs 学习笔记"></a>Nodejs 学习笔记</h2><p><strong>node 内部对模块输出 module.exports 的实现</strong></p><p>变量 module 是 Node 在加载 js 文件前准备的一个变量，并将其传入加载函数</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 准备module对象</span><br><span class="line">var module = &#123;</span><br><span class="line">    id: &apos;hello&apos;,</span><br><span class="line">    exports: &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var load = function(module) &#123;</span><br><span class="line">    // 读取的hello.js代码</span><br><span class="line">    function greet(name) &#123;</span><br><span class="line">        console.log(&apos;Hello, &apos; + name + &apos;!&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    module.exports = greet;</span><br><span class="line"></span><br><span class="line">    // hello.js代码结束</span><br><span class="line">    return module.exports;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var exported = load(module);</span><br><span class="line"></span><br><span class="line">// 保存module</span><br><span class="line">save(module, exported);</span><br></pre></td></tr></table></figure><p>默认情况下，Node 准备的 exports 变量和 module.exports 变量实际上是同一个变量，所以一下两种写法都支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// method 1</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    foo: foo,</span><br><span class="line">    bar: bar</span><br><span class="line">&#125;;</span><br><span class="line">or</span><br><span class="line">module.exports.foo = foo;</span><br><span class="line">module.exports.bar = bar;</span><br><span class="line"></span><br><span class="line">// method 2</span><br><span class="line">exports.foo = foo;</span><br><span class="line">exports.bar = bar;</span><br></pre></td></tr></table></figure><p><strong>process</strong></p><p>下一轮事件循环 回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">process.nextTick(function() &#123;</span><br><span class="line">    console.log(&apos;nextTick callback&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>程序即将退出 回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">process.on(&apos;exit&apos;, function(code) &#123;</span><br><span class="line">    console.log(&apos;about to exit with code&apos; + code);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">console.log(&apos;nextTick set&apos;);</span><br></pre></td></tr></table></figure><p><strong>readFile/readFileSync writeFile/writeFileSync stat</strong></p><p>异步读取一个文本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&apos;./hello.js&apos;, &apos;utf-8&apos;, function(err, data) &#123;</span><br><span class="line">    console.log(&apos;read file start...&apos;);</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>异步读取一个二进制文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&apos;1.jpg&apos;, function(err, data) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // 返回一个buffer对象</span><br><span class="line">        console.log(data);</span><br><span class="line">        // Buffer对象转化成字符串</span><br><span class="line">        console.log(data.toString(&apos;utf-8&apos;));</span><br><span class="line">        // 文件大小</span><br><span class="line">        console.log(data.length + &apos; bytes&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同步读取一个文件直接返回，读取错误用 try…catch 捕获</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">    var data = fs.readFileSync(&apos;./1.jpg&apos;);</span><br><span class="line">    console.log(data);</span><br><span class="line">&#125;</span><br><span class="line">catch(err) &#123;</span><br><span class="line">    console.log(err);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(&apos;readFileSync ended&apos;);</span><br></pre></td></tr></table></figure><p>异步写入一个文件，默认是以 UTF-8 编码写入文本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var data = &apos;Hello,Node.js&apos;;</span><br><span class="line">// var data = fs.readFileSync(&apos;./1.jpg&apos;);</span><br><span class="line">fs.writeFile(&apos;output.txt&apos;, data, function(err) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        console.log(&apos;write file finished&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同步写入文本到一个文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var data = &apos;Hello,Node.js,I am sync data&apos;;</span><br><span class="line">fs.writeFileSync(&apos;output.txt&apos;, data);</span><br><span class="line">console.log(&apos;writeFileSync ended&apos;);</span><br></pre></td></tr></table></figure><p>获取文件信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">fs.stat(&apos;./1.jpg&apos;, function(err, stat) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // 是否是文件</span><br><span class="line">        console.log(&apos;isFile:&apos; + stat.isFile());</span><br><span class="line">        // 是否是目录</span><br><span class="line">        console.log(&apos;isDirectory:&apos; + stat.isDirectory());</span><br><span class="line"></span><br><span class="line">        if(stat.isFile()) &#123;</span><br><span class="line">            // 文件大小</span><br><span class="line">            console.log(&apos;size:&apos; + stat.size);</span><br><span class="line">            // 创建时间，Date对象</span><br><span class="line">            console.log(&apos;birth time:&apos; + stat.birthtime);</span><br><span class="line">            // 修改时间，Date对象</span><br><span class="line">            console.log(&apos;modified time:&apos; + stat.mtime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>PS:绝大部分需要在服务器运行期反复执行业务逻辑，必须使用异步代码服务器启动时如果需要读取配置文件，或者结束时需要写入到状态文件时，可以使用同步代码</p><p><strong>createReadStream createWriteStream pipe</strong></p><p>在 node.js 中，流也是一个对象，我们只需要响应流的事件就可以了。<br>data 事件表示流的数据已经可以读取了，end 事件表示这个流已经到末尾了，没有数据可以读取了，error 事件表示出错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var rs = fs.createReadStream(&apos;./data.txt&apos;, &apos;utf-8&apos;);</span><br><span class="line"></span><br><span class="line">// data事件可能有多次，每次传递的chunk是流的一部分数据</span><br><span class="line">rs.on(&apos;data&apos;, function(chunk) &#123;</span><br><span class="line">    console.log(&apos;data event:&apos;, chunk);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(&apos;end&apos;, function (chunk) &#123;</span><br><span class="line">    console.log(&apos;end event:&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(&apos;error&apos;, function (chunk) &#123;</span><br><span class="line">    console.log(&apos;error event:&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>以流的形式写入文件，只需要不断调用 write()方法，最后以 end()结束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var ws = fs.createWriteStream(&apos;./data.txt&apos;);</span><br><span class="line">ws.write(&apos;user stream write data\n&apos;);</span><br><span class="line">ws.write(&apos;loading...\n&apos;);</span><br><span class="line">ws.write(&apos;END&apos;);</span><br><span class="line">ws.end();</span><br></pre></td></tr></table></figure><p>pipe()把一个文件流和另一个文件流串起来，这样源文件的所有数据就自动写入到目标文件里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var rs = fs.createReadStream(&apos;./data.txt&apos;);</span><br><span class="line">var ors = fs.createReadStream(&apos;./output.txt&apos;);</span><br><span class="line">var ws = fs.createWriteStream(&apos;./output.txt&apos;);</span><br><span class="line">rs.pipe(ws);</span><br></pre></td></tr></table></figure><p>创建一个服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var server = http.createServer(function(request, response) &#123;</span><br><span class="line">    // http请求头的method和url</span><br><span class="line">    console.log(&apos;header meathod:&apos;, request.method);</span><br><span class="line">    console.log(&apos;header url:&apos;, request.url);</span><br><span class="line"></span><br><span class="line">    // 将http响应200写入response，同时设置content-type</span><br><span class="line">    response.writeHead(200, &#123;&apos;Content-Type&apos;: &apos;text/html&apos;&#125;);</span><br><span class="line"></span><br><span class="line">    // 将http响应的html内容写入response</span><br><span class="line">    response.end(&apos;&lt;h1&gt;Hello world!&lt;/h1&gt;&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">console.log(&apos;Server is running at http://localhost:8080&apos;);</span><br></pre></td></tr></table></figure><p>实现一个文件服务器，拼接访问路径读取本地文件，从命令参数获取 root 目录，默认是当前目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">var root = path.resolve(&apos;.&apos;);</span><br><span class="line">console.log(&apos;Static root dir:&apos; + root);</span><br><span class="line"></span><br><span class="line">// 创建服务器</span><br><span class="line"> var server = http.createServer(function (request, response) &#123;</span><br><span class="line">    // node提供url模块解析url字符串 获取url的path</span><br><span class="line"></span><br><span class="line">    var pathname = url.parse(request.url).pathname;</span><br><span class="line"></span><br><span class="line">    if (pathname === &apos;/favicon.ico&apos;) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    console.log(&apos;url:&apos;, url.parse(request.url));</span><br><span class="line"></span><br><span class="line">    // 获取对应本地文件路径</span><br><span class="line">    var filepath = path.join(root, pathname);</span><br><span class="line">    // 读取文件状态</span><br><span class="line">    fs.stat(filepath, function (err, stats) &#123;</span><br><span class="line">        // 文件出错</span><br><span class="line">        if (err) &#123;</span><br><span class="line">            console.log(&apos;file error!&apos;);</span><br><span class="line">            response.end(&apos;&lt;h1&gt;file error!&lt;/h1&gt;&apos;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 是文件</span><br><span class="line">        if (stats.isFile()) &#123;</span><br><span class="line">            console.log(&apos;200 &apos; + request.url);</span><br><span class="line">            response.writeHead(200);</span><br><span class="line">            // 将文件流导入response</span><br><span class="line">            fs.createReadStream(filepath).pipe(response);</span><br><span class="line">        &#125;</span><br><span class="line">        // 文件不存在</span><br><span class="line">        else &#123;</span><br><span class="line">            console.log(&apos;404 &apos; + request.url);</span><br><span class="line">            response.writeHead(404);</span><br><span class="line">            // 将文件流导入response</span><br><span class="line">            response.end(&apos;&lt;h1&gt;404 not found!&lt;/h1&gt;&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">console.info(&apos;Server is runing at http://localhost:8080/&apos;);</span><br></pre></td></tr></table></figure><p>express 是第一代流行的 web 框架，它对 Node.js 的 HTTP 进行封装，语法基于 ES5，要实现异步代码，只有一个方法：回调。</p><p>koa2 完全基于 ES7 开发，使用 Promise 配合 async 实现异步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">// 创建一个Koa对象</span><br><span class="line">const app = new Koa();</span><br><span class="line"></span><br><span class="line">// 对于任何请求，app将调用该异步函数处理请求</span><br><span class="line">// ctx是koa封装request和response变量</span><br><span class="line">// next是koa传入的将要处理下一个异步函数</span><br><span class="line">// 每个async函数称为middleware</span><br><span class="line">// app.use()顺序决定了middleware的顺序</span><br><span class="line"></span><br><span class="line">app.use(async(ctx, next) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">    fs.readFile(&apos;./data.txt&apos;, &apos;utf-8&apos;, function(err, data) &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 调用下一个middleware，如果没有调用，则下一个middleware不会执行</span><br><span class="line">    await next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.use(async(ctx, next) =&gt; &#123;</span><br><span class="line">    ctx.response.type = &apos;text/html&apos;;</span><br><span class="line">    ctx.response.body = &apos;&lt;h1&gt;Hello, koa!&lt;/h1&gt;&apos;;</span><br><span class="line">    console.log(&apos;response end&apos;);</span><br><span class="line">    // 调用下一个middleware</span><br><span class="line">    await next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(3000);</span><br><span class="line">console.log(&apos;app started at http://localhost:3000/&apos;);</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>对MVC、MVP和MVVM的简单认识</title>
      <link href="/yelee/2018/08/27/%E5%AF%B9MVC%E3%80%81MVP%E5%92%8CMVVM%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/"/>
      <url>/yelee/2018/08/27/%E5%AF%B9MVC%E3%80%81MVP%E5%92%8CMVVM%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="MVVM-的前世与今生"><a href="#MVVM-的前世与今生" class="headerlink" title="MVVM 的前世与今生"></a>MVVM 的前世与今生</h2><h3 id="1-先聊一下-MVC"><a href="#1-先聊一下-MVC" class="headerlink" title="1. 先聊一下 MVC"></a>1. 先聊一下 MVC</h3><p>MVC：Model（模型） View（视图） Controller（控制器），主要是基于分层的目的，让彼此的职责分开。</p><p>View 通过 Controller 和 Model 联系，Controller 是 View 和 Model 的协调者，view 和 Model 不直接联系，基本联系都是单向的。</p><a id="more"></a><h3 id="2-顺带提下-MVP"><a href="#2-顺带提下-MVP" class="headerlink" title="2. 顺带提下 MVP"></a>2. 顺带提下 MVP</h3><p>MVP：是从 MVC 模式演变而来的，都是通过 Controller/Presenter 负责逻辑的处理+Model 提供数据+View 负责显示。</p><p>在 MVP 中，Presenter 完全把 View 和 Model 进行分离，主要的程序逻辑在 Presenter 里实现。并且，Presenter 和 View 是没有直接关联的，是通过定义好的接口进行交互，从而使得在变更 View 的时候可以保持 Presenter 不变。</p><h3 id="3-再聊聊-MVVN"><a href="#3-再聊聊-MVVN" class="headerlink" title="3. 再聊聊 MVVN"></a>3. 再聊聊 MVVN</h3><p>MVVM：Model + View + ViewModel，把 MVC 中的 Controller 和 MVP 中的 Presenter 改成 ViewModel</p><p>view 的变化会自动更新到 ViewModel，ViewModel 的变化也会自动同步到 View 上显示。这种自动同步是因为 ViewModel 中的属性实现了 Observer，当属性变更时都能触发对应操作。</p><ul><li>View 是 HTML 文本的 js 模板；</li><li>ViewModel 是业务逻辑层（一切 js 可视业务逻辑，比如表单按钮提交，自定义事件的注册和处理逻辑都在 viewmodel 里面负责监控俩边的数据）；</li><li>Model 数据层，对数据的处理（与后台数据交互的增删改查）</li></ul><p>提一下我熟悉的 MVVM 框架：vue.js，Vue.js 是一个构建数据驱动的 web 界面的渐进式框架。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。核心是一个响应的数据绑定系统。</p><h3 id="4-一句话总结下不同之处"><a href="#4-一句话总结下不同之处" class="headerlink" title="4. 一句话总结下不同之处"></a>4. 一句话总结下不同之处</h3><p>MVC 中联系是单向的，MVP 中 P 和 V 通过接口交互，MVVP 的联系是双向的</p>]]></content>
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CDN原理介绍</title>
      <link href="/yelee/2018/08/27/CDN%E5%8E%9F%E7%90%86%E7%90%86%E8%A7%A3/"/>
      <url>/yelee/2018/08/27/CDN%E5%8E%9F%E7%90%86%E7%90%86%E8%A7%A3/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CDN-原理剖析"><a href="#CDN-原理剖析" class="headerlink" title="CDN 原理剖析"></a>CDN 原理剖析</h2><blockquote><blockquote><p>内容分发网络（Content delivery network 或 Content distribution network，缩写：CDN）是指一种通过互联网互相连接的电脑网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、视频、应用程序及其他文件发送给用户，来提供高性能、可扩展性及低成本的网络内容传递给用户。</p></blockquote></blockquote><a id="more"></a><blockquote><h3 id="为什么需要-CDN"><a href="#为什么需要-CDN" class="headerlink" title="为什么需要 CDN"></a>为什么需要 CDN</h3><p>根本上的原因是，访问速度对互联网应用的用户体验、口碑、甚至说直接的营收都有巨大的影响，任何的企业都渴望自己站点有更快的访问速度。而 HTTP 传输时延对 web 的访问速度的影响很大，在绝大多数情况下是起决定性作用的，这是由 TCP/IP 协议的一些特点决定的。物理层上的原因是光速有限、信道有限，协议上的原因有丢包、慢启动、拥塞控制等。</p><p>要提高访问速度，最简单的做法当然就是多设置几个服务器，让终端用户离服务器“更近”。典型的例子是各类下载网站在不同地域不同运营商设置镜像站，或者是像 Google 那样设置多个数据中心。但是多设几个服务器的问题也不少，一是多地部署时的困难，二是一致性没法保障，三则是管理困难、成本很高。实际上，在排除多地容灾等特殊需求的情况下，对大多数公司这种做法是不太可取的。当然，这种方案真正做好了，甚至是比后续所说的使用 CDN 要好的。</p><p>CDN 是一种公共服务，他本身有很多台位于不同地域、接入不同运营商的服务器，而所谓的使用 CDN 实质上就是让 CDN 作为网站的门面，用户访问到的是 CDN 服务器，而不是直接访问到网站。由于 CDN 内部对 TCP 的优化、对静态资源的缓存、预取，加上用户访问 CDN 时，会被智能地分配到最近的节点，降低大量延迟，让访问速度可以得到很大提升。</p><h3 id="CDN-的原理"><a href="#CDN-的原理" class="headerlink" title="CDN 的原理"></a>CDN 的原理</h3><blockquote><p>CDN 做了两件事，一是让用户访问最近的节点，二是从缓存或者源站获取资源</p></blockquote><p>CDN 有个源站的概念，源站就是提供内容的站点(网站的真实服务器), 从源站取内容的过程叫做回源。</p><p>每次访问的具体流程如图（以最普通的 CDN 为例）</p><p><img src="https://cloud.githubusercontent.com/assets/5894477/22008791/4edc00b0-dcb9-11e6-9663-ed19a3fa3182.png" alt="流程图"></p><p>具体举个例子：</p><p>用户在首次访问 <a href="https://assets-cdn.github.com/pinned-octocat.svg" target="_blank" rel="noopener">https://assets-cdn.github.com/pinned-octocat.svg</a> , 假设不委托 local DNS 服务器递归查询，会经历以下几个过程</p><ol><li>浏览器检查本地有没有这个东东的有效缓存，有则使用缓存，没有有效缓存则进行对<code>assets-cdn.github.com</code>的 DNS 查询，获得一个 CNAME 记录, <code>igithub.map.fastly.net</code>,值得注意的是，多个加速域名可以解析到同一个 CNAME，CDN 回源和缓存的时候考虑到了 hostname，+1；</li><li>进行对<code>github.map.fastly.net</code>的 DNS 查询，获得一个 A/AAAA 记录，给出地址<code>103.245.222.133</code>（视网站不同返回的不一样，可以有多个）, 这一步对 CDN 来说时十分重要的，它给出了离用户最近的边缘节点；</li><li>浏览器选一个返回的地址，然后进行真正的 http 请求，开始向<code>103.245.222.133</code>握手，握手完了把 http 请求头也发给了该边缘服务器;</li><li>边缘服务器检查自己的 cache 里面有没有<code>https://assets-cdn.github.com/pinned-octocat.svg</code>这个资源，有则返回给用户，如果没有，向 CDN 中心服务器发起请求;</li><li>CDN 中心服务器检查自己的 cache 里面有没有这个资源，有则返回给边缘服务器，没有则回源;</li><li>中心服务器发现客户配置了<code>github.map.fastly.net</code>的回源地址(这个只有 cdn 会知道，假设是<code>xxx.xxx.xxx.xxx</code>)，就把 http 请求发到源站地址上，源站返回后返回给请求方;</li></ol><p>可以看出 CDN 加速的原理很大部分是跟 DNS 挂钩在一起的，CDN 供应商几乎一定需要一个智能 DNS 服务器。CDN 可以拿到所有的明文数据，所以对数据安全性、保密性要求比较高的企业会选择自建 CDN 或者设置 NS 记录，指向自建的智能 DNS 服务器。</p><p>上述步骤每一步都可以缓存，注意是每一步！ 所以 CDN 要清除缓存很难，因为有很多服务器上的缓存要清除。无论是用户对边缘服务器的请求，还是 CDN 服务器的回源都可以使用 https。</p><p>注意，实际环境中图中每个服务器都可以是集群，甚至 CDN 分区域中心和总中心。</p></blockquote>]]></content>
      
      <categories>
          
          <category> 用户体验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端性能优化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vscode 实现设备上设置统一</title>
      <link href="/yelee/2018/08/24/vscode%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5/"/>
      <url>/yelee/2018/08/24/vscode%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一键同步-vscode-上的插件"><a href="#一键同步-vscode-上的插件" class="headerlink" title="一键同步 vscode 上的插件"></a>一键同步 vscode 上的插件</h2><p>准备工作：电脑上需安装 VSCode，拥有一个 github 账户。实现同步的功能主要依赖于 VSCode 插件 “Settings Sync”</p><h1 id="Setting-Sync-可同步包含的所有扩展和完整的用户文件夹"><a href="#Setting-Sync-可同步包含的所有扩展和完整的用户文件夹" class="headerlink" title="Setting Sync 可同步包含的所有扩展和完整的用户文件夹"></a>Setting Sync 可同步包含的所有扩展和完整的用户文件夹</h1><a id="more"></a><ol><li>设置文件</li><li>快捷键设置文件</li><li>Launch File</li><li>Snippets Folder</li><li>VSCode 扩展设置</li><li>工作空间</li></ol><h1 id="Setting-Sync-快捷键"><a href="#Setting-Sync-快捷键" class="headerlink" title="Setting Sync 快捷键"></a>Setting Sync 快捷键</h1><ol><li>上传： <code>Shift + Alt + U</code> (Sync: Update / Upload Settings)</li><li>下载： <code>Shift + Alt + D</code> (Sync: Download Settings)</li></ol><p>如果快捷键有冲突，可<code>Ctrl + K + S</code>快捷键设置配置其它快捷键 或 <code>Ctrl + P / F1</code> 在命令窗口输入 &gt;sync 即会出现相应命令供选择<br><img src="https://upload-images.jianshu.io/upload_images/7323128-6b887c855f200189.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170824104107261-1046727224.png"></p><h1 id="Step1-安装-同步插件”Settings-Sync”"><a href="#Step1-安装-同步插件”Settings-Sync”" class="headerlink" title="Step1. 安装 同步插件”Settings Sync”"></a>Step1. 安装 同步插件”Settings Sync”</h1><p><img src="https://upload-images.jianshu.io/upload_images/7323128-78990ea142e0f083.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823100639527-466207576.png"></p><h1 id="Step2-进入-github-gt-Settings-在左侧-Developer-settings-gt-Personal-access-tokens"><a href="#Step2-进入-github-gt-Settings-在左侧-Developer-settings-gt-Personal-access-tokens" class="headerlink" title="Step2. 进入 github -&gt; Settings 在左侧 Developer settings -&gt; Personal access tokens"></a>Step2. 进入 github -&gt; Settings 在左侧 Developer settings -&gt; Personal access tokens</h1><p><img src="https://upload-images.jianshu.io/upload_images/7323128-72b710b21917ce93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101018886-1450593067.png"></p><h1 id="Step3-点击按钮-Generate-new-token-新增一个-token"><a href="#Step3-点击按钮-Generate-new-token-新增一个-token" class="headerlink" title="Step3. 点击按钮 Generate new token 新增一个 token"></a>Step3. 点击按钮 Generate new token 新增一个 token</h1><p>图 1:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-a9e06366f6acbf24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101243980-1384930832.png"><br>图 2:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-2f69bf05699ce6a7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101418527-2001799760.png"><br>图 3:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-8d5ebc31a1a3cd97.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101508918-1034003796.png"><br>记住你自己生成的 token 值，在 VSCode 配置上回用得到，最好找个笔记保存下来。</p><h1 id="Step4-回到-VSCode-配置将-token-配置到本地"><a href="#Step4-回到-VSCode-配置将-token-配置到本地" class="headerlink" title="Step4. 回到 VSCode 配置将 token 配置到本地"></a>Step4. 回到 VSCode 配置将 token 配置到本地</h1><p>(Sync: Update / Uplaod Settings) <code>Shift + Alt + U</code> 在弹窗里输入你的 token， 回车后会生成 syncSummary.txt 文件</p><p><img src="https://upload-images.jianshu.io/upload_images/7323128-4561bc7955172c6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170824103332230-1621543570.png"></p><p>syncSummary.txt 文件会存储 VSCode 的设置及所安装的插件列表<br>有点类似 package.json 这样形式的文件<br>可以将自己的 token 分享到自己的团队里面去，这样团队可以共用一套设置。</p><h1 id="Step5-设置上同步下载设置"><a href="#Step5-设置上同步下载设置" class="headerlink" title="Step5. 设置上同步下载设置"></a>Step5. 设置上同步下载设置</h1><p>(Sync: Download Settings) <code>Shift + Alt + D</code> 在弹窗里输入你的 gist 值，稍后片刻便可同步成功</p><h1 id="Step6-如果要重置同步设置，变更其它-token"><a href="#Step6-如果要重置同步设置，变更其它-token" class="headerlink" title="Step6. 如果要重置同步设置，变更其它 token"></a>Step6. 如果要重置同步设置，变更其它 token</h1><p><code>Ctrl+P / F1</code> 弹出输入&gt;sync,即可重新配置你的其它 token 来同步</p>]]></content>
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> setting </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>正则表达式</title>
      <link href="/yelee/2018/08/22/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/yelee/2018/08/22/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="正则规则汇总"><a href="#正则规则汇总" class="headerlink" title="正则规则汇总"></a>正则规则汇总</h2><p>对字符串的处理，一般分为字符串操作和正则操作。</p><h5 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h5><ul><li>str.search(regStr) 返回 regStr 在 str 中第一个出现的位置</li><li>str.replace(regStr,newStr) 返回替换在 str 中 regStr 后字符串</li></ul><a id="more"></a><ul><li>str.substring(n1,n2) 返回 str 从 n1 位置到 n2 位置前一个字符串</li><li>str.chartAt(n) 返回 n 位置字符</li><li>str.split(regStr) 返回以 regStr 隔开的数组</li><li>str.match(reg) 返回在 str 中符合正则 reg 的字符串数组</li></ul><h5 id="正则操作"><a href="#正则操作" class="headerlink" title="正则操作"></a>正则操作</h5><p>var reg=new RegExp(regStr,’i’); //创建正则对象</p><p>var reg=/regStr/i; //隐式创建正则对象</p><ul><li>reg.test(str) str 是否包含 reg 返回 true/false</li><li>reg.exec(str) 返回匹配到的字符串和最后一次的匹配字符串最后位置的下一个索引</li></ul><h4 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h4><ol><li>/a|b/ a 或 b</li><li>/[abc]/ a 或 b 或 c</li><li>/[a-zA-Z0-9]/ 所有数字和字母</li><li>/[^a-za-z0-9]/ 除了数字和字母</li><li>/.+/ 任意字符</li><li>/\d/ 等价于/[0-9]/ 数字</li><li>/\w/ 等价于/[a-z0-9_]/ 数字、字母和下划线</li><li>/\s/ 等价于/“ “/ 空格</li><li>/\D/ 等价于/[^0-9]/ 非数字</li><li>/\W/ 等价于/[^a-z0-9_]/ 除了数字、字母和划线</li><li>/\S/ 等价于/[^” “]/ 除了空格</li><li>/\d{n,m}/ 数字最少出现 n 次，最多出现 m 次</li><li>/\d{1,}/ 等价于/\d+/ 数字最少出现 1 次</li><li>/\d{0,}/ 等价于/\d*/ 数字最少出现 0 次</li><li>/\d{0,1}/ 等价于/\d?/ 数字最多出现 1 次</li><li>/^\d$/ 以数字开头且以数字结尾</li><li>/[\u4e00-\u9fa5]/ 汉字匹配范围</li><li>\b 单词边界</li><li>\B 非单词边界</li><li>?=n 匹配任何其后紧接指定字符串 n 的字符串</li><li>?!n 匹配任何其后没有紧接指定字符串 n 的字符串</li></ol><h4 id="疑难点"><a href="#疑难点" class="headerlink" title="疑难点"></a>疑难点</h4><p>在个人接触正则过程中遇到的一些不易理解的地方</p><blockquote><p>用圆括号将所有选择项括起来，相邻的选择项之间用|分隔。但用圆括号会有一个副作用，是相关的匹配会被缓存，此时可用?:放在第一个选项前来消除这种副作用。其中?:是非捕获元之一，还有两个非捕获元是?=和?!，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。</p></blockquote><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>(?:pattern)</td><td>匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 “或” 字符 (\</td><td>) 来组合一个模式的各个部分是很有用。例如， ‘industr(?:y\</td><td>ies) 就是一个比 ‘industry\</td><td>industries’ 更简略的表达式。</td></tr><tr><td>(?=pattern</td><td>正向预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，’Windows (?=95\</td><td>98\</td><td>NT\</td><td>2000)’ 能匹配 “Windows 2000” 中的 “Windows” ，但不能匹配 “Windows 3.1” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td>(?!pattern)</td><td>负向预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如’Windows (?!95\</td><td>98\</td><td>NT\</td><td>2000)’ 能匹配 “Windows 3.1” 中的 “Windows”，但不能匹配 “Windows 2000” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr></tbody></table><p>一直对正则中的 match 和 exec 不易分清，下面来做一下比较。</p><h5 id="1-match"><a href="#1-match" class="headerlink" title="1. match"></a>1. match</h5><p>match 方法属于 String 正则表达方法</p><p>语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.match(regexp)</span><br></pre></td></tr></table></figure><p>str：要进行匹配的字符串</p><p>regexp：一个正则表达式(或者由 RegExp()构造成的正则表达式)</p><p>match 的用法主要区分就是正则表达式是否有全局标示 g</p><ol><li><p>如果有 g 全局标志，那么返回的数组保存的是，所有匹配的内容。</p></li><li><p>如果没有 g 全局标志，那么返回的数组 arr.arr[0]保存的是完整的匹配.arr[1]保存的是第一个括号里捕获的字串，依此类推 arr[n]保存的是第 n 个括号捕获的内容。</p></li></ol><h5 id="2-exec"><a href="#2-exec" class="headerlink" title="2. exec"></a>2. exec</h5><p>与 match 方法不同 exec 属于正则表达式的方法</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var result1 = regexp.exec(str);</span><br></pre></td></tr></table></figure><p>regexp：正则表达式</p><p>str：要匹配的字串</p><p>exec 与 match 的关联就是 exec（g 有没有都无影响）就等价于不含有 g 全局标志的 match，即返回数组 arr[0]为匹配的完整串，其余的为括号里捕获的字符串。</p><p>但如果有 g 对 exec 本身的影响是，当一个具有 g 的正则表达式调用 exec()时，他将该对象的 lastIndex 设置到紧接这匹配子串的字符位置。当第二次调用 exec 时将从<br>lastIndex 所指示的字符位置开始检索，利用这个特点可以反复调用 exec 遍历所有匹配，等价于 match 具有 g 标志。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arrmatch = str.match(reg);</span><br><span class="line">for(var i =0; i &lt; arrmatch.length; i++)&#123;</span><br><span class="line">    document.write(arrmatch[i] +&quot;----&gt;&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可见上面的 exec 和 match 是等价的.</p><p>reg.exec(str) 返回匹配到的字符串和最后一次的匹配字符串最后位置的下一个索引如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var str = &quot;abc123bef345olj89,ed&quot;;</span><br><span class="line">var reg = /\d+/g;</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li><p>主要区分 match 具有 g 和没有 g 的区别，没有 g 的时候与 exec 是等价的。</p></li><li><p>而 exec 返回的串类型不受 g 影响，但具有 g 时候会驱动 lastIndex 可以模拟遍历所有匹配，可以与 match 具有 g 的时候等价。</p></li></ul><h4 id="顺便加强理解"><a href="#顺便加强理解" class="headerlink" title="顺便加强理解"></a>顺便加强理解</h4><ol><li>ip 正则表达式<br>格式由”.”分割成四段，每一段范围是 0-255，拿出其中一段进行分析</li></ol><table><thead><tr><th>范围</th><th>表达式</th></tr></thead><tbody><tr><td>0-9</td><td>\d</td></tr><tr><td>10-99</td><td>[1-9]\d</td></tr><tr><td>100-199</td><td>1\d{2}</td></tr><tr><td>200-249</td><td>2[0-4]\d</td></tr><tr><td>250-255</td><td>25[0-5]</td></tr></tbody></table><p>所以，其中一段构成的正则表达式是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5]</span><br></pre></td></tr></table></figure><p>，<br>整个 ip 正则为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])$/</span><br></pre></td></tr></table></figure><ol start="2"><li>同理端口号范围是 0-65535</li></ol><table><thead><tr><th>范围</th><th>表达式</th></tr></thead><tbody><tr><td>0-9</td><td>\d</td></tr><tr><td>10-99</td><td>[1-9]\d</td></tr><tr><td>100-999</td><td>[1-9]\d{2}</td></tr><tr><td>1000-9999</td><td>[1-9]\d{3}</td></tr><tr><td>10000-59999</td><td>[1-5]\d{4}</td></tr><tr><td>60000-64999</td><td>6[0-4]\d{3}</td></tr><tr><td>65000-65499</td><td>65[0-4]\d{2}</td></tr><tr><td>65500-65529</td><td>655[0-2]\d</td></tr><tr><td>65530-65535</td><td>65553[0-5]</td></tr></tbody></table><p>所以，整个端口号正则为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/\d|[1-9]\d&#123;1,3&#125;|[1-5]d&#123;4&#125;|6[0-4]\d&#123;3&#125;|65[0-4]\d&#123;2&#125;|655[0-2]\d|65553[0-5]/</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript 正则 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>理解同步、异步和事件循环</title>
      <link href="/yelee/2018/08/20/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
      <url>/yelee/2018/08/20/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="JavaScript-运行机制"><a href="#JavaScript-运行机制" class="headerlink" title="JavaScript 运行机制"></a>JavaScript 运行机制</h2><ol><li>所有同步任务都在主线程上执行，形成一个执行栈；</li></ol><a id="more"></a><ol start="2"><li><p>主线程发起异步请求，相应的工作线程就会去执行异步任务，主线程可以继续执行后面的代码；</p></li><li><p>主线程之外，还存在一个”任务队列”（task queue）。只要异步任务有了运行结果，就在”任务队列”之中放置一个事件，也就是一个消息；</p></li><li><p>一旦”执行栈”中的所有同步任务执行完毕，系统就会读取”任务队列”，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行；</p></li><li><p>主线程把当前的事件执行完成之后，再去读取任务队列，如此反复重复执行，这样就行程了事件循环。</p></li></ol><h4 id="1、单线程"><a href="#1、单线程" class="headerlink" title="1、单线程"></a>1、单线程</h4><p>JS 引擎在解释和执行 JavaScript 代码线程只有一个，叫做<strong>主线程</strong>。<br>但实际还存在其他线程，如：处理 Ajax 请求线程，处理 DOM 事件线程，定时器线程，和文件读写线程等，叫做<strong>工作线程</strong>。</p><h4 id="2、同步和异步"><a href="#2、同步和异步" class="headerlink" title="2、同步和异步"></a>2、同步和异步</h4><p>同步：如果函数返回的时候，调用者就能够得到预期结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.sqrt(2);</span><br></pre></td></tr></table></figure><p>异步：函数返回的时候，调用者还不能够得到预期结果，而是需要通过一定手段得到。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&quot;foo.txt&quot;, &quot;utf8&quot;, function(err, data)&#123;</span><br><span class="line">    console.log(data)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上面代码中，我们希望 fs.readFile 函数读取文件，并打印出来，但是在 fs.readFile 函数返回时，我们期望的结果并不会发生，而是要等文件全部读取完成之后。</p><h5 id="异步-AJAX："><a href="#异步-AJAX：" class="headerlink" title="异步 AJAX："></a>异步 AJAX：</h5><blockquote><p>主线程：“你好，AJAX 线程。请你帮我发个 HTTP 请求吧，我把请求地址和参数都给你了。”</p></blockquote><blockquote><p>AJAX 线程：“好的，主线程。我马上去发，但可能要花点儿时间呢，你可以先去忙别的。”</p></blockquote><blockquote><p>主线程：：“谢谢，你拿到响应后告诉我一声啊。”</p></blockquote><blockquote><p>(接着，主线程做其他事情去了。一顿饭的时间后，它收到了响应到达的通知。)</p></blockquote><h5 id="同步-AJAX："><a href="#同步-AJAX：" class="headerlink" title="同步 AJAX："></a>同步 AJAX：</h5><blockquote><p>主线程：“你好，AJAX 线程。请你帮我发个 HTTP 请求吧，我把请求地址和参数都给你了。”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>主线程：：“喂，AJAX 线程，你怎么不说话？”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>主线程：：“喂！喂喂喂！”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>(一炷香的时间后)</p></blockquote><blockquote><p>主线程：：“喂！求你说句话吧！”</p></blockquote><blockquote><p>AJAX 线程：“主线程，不好意思，我在工作的时候不能说话。你的请求已经发完了，拿到响应数据了，给你。”</p></blockquote><p>正因为 JavaScript 时单线程，同步容易造成阻塞，所以，对于耗时和操作事件不确定操作，使用异步就成了必然选择。</p><h4 id="3、异步过程"><a href="#3、异步过程" class="headerlink" title="3、异步过程"></a>3、异步过程</h4><p>一个异步过程通常时这样的：</p><blockquote><p>主线程发起一个异步请求，相应的工作线程接收线程请求并告知主线程已收到；主线程可以继续执行后面的代码，同时工作线程执行异步任务；工作线程完成工作后，通知主线程；主线程收到通知后，执行一定动作（调用回调函数）。</p></blockquote><p>异步函数通常具有一下形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A(arg..., callbackFn)</span><br></pre></td></tr></table></figure><p>他可以叫做异步过程的<strong>发起函数</strong>，或者叫做异步任务<strong>注册函数</strong>。</p><p>从主线程的角度看，一个一度过程包括两个要素：</p><ul><li>发起函数（注册函数）</li><li>回到函数</li></ul><h4 id="4、消息队列和事件循环"><a href="#4、消息队列和事件循环" class="headerlink" title="4、消息队列和事件循环"></a>4、消息队列和事件循环</h4><p>异步过程中，工作线程在异步操作完成后需要通知主线程。那么这个通知机制时怎样实现的呢？答案是利用消息队列和事件循环。</p><p>一句话概括：</p><blockquote><p>工作线程将消息放到消息队列，主线程通过事件循环过程去取消息。</p></blockquote><p>消息队列：消息队列是一个先进先出的队列，放着各种消息。</p><p>事件循环：事件循环是指主线程从消息队列中取消息，执行的过程。</p><p>实际上，主线程只会做一件事，就是从消息队列里面取消息、执行消息，再去消息，再执行。当消息队列为空时，就会等待知道消息队列变成非空。而且主线程只有在将当前的消息执行完成后，才会去取下一个消息。这种机制就叫做事件循环机制，取一个消息并执行的过程叫做一次循环。</p><p>消息队列中放的消息是什么东西？消息的具体结构当然跟具体的实现有关，可以认为：</p><blockquote><p>消息就是注册异步任务时添加的回调函数。</p></blockquote><p>以异步 Ajax 为例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&apos;http://segmentfault.com&apos;, function(resp) &#123;</span><br><span class="line">    console.log(&apos;我是响应：&apos;, resp);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>主线程发起 Ajax 请求后，会继续执行其他代码。Ajax 线程负责请求 segmentfault.com，拿到响应后，它会把响应封装成一个 JavaScript 对象，然后构成一条消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var message = function() &#123;</span><br><span class="line">    callbackFn();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 callbackFn 就是前面代码中成功响应时的回调函数。</p><p>主线程在执行完当前循环中所有代码后，就会到消息队列取出这条消息（也就是 message 函数），并执行它，到此为止，就完成了工作线程对主线程的通知，回调函数也就得到了执行。如果一开始主线程就没有提供回调函数，Ajax 线程在收到 HTTP 响应后，也就没有必要通知主线程，从而没必要往消息队列放消息。</p><blockquote><p>异步过程的回调函数，一定不在当前这一轮事件循环中执行。</p></blockquote><h4 id="5、异步与事件"><a href="#5、异步与事件" class="headerlink" title="5、异步与事件"></a>5、异步与事件</h4><blockquote><p>消息队列中的每条消息实际上都对应着一个事件</p></blockquote><p>有一类很重要的异步过程：DOM 事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var button = document.getElement(&apos;#btn&apos;);</span><br><span class="line">button.addEventListener(&apos;click&apos;, function(e) &#123;</span><br><span class="line">    console.log();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>从事件的角度来看，上述代码表示：在按钮上添加了一个鼠标单击事件的事件监听器；当用户点击按钮时，鼠标单击事件触发，事件监听器函数被调用。</p><p>从异步过程的角度看，addEventListener 函数就是异步过程的发起函数，事件监听器函数就是异步过程的回调函数。事件触发时，表示异步任务完成，会将事件监听器函数封装成一条消息放到消息队列中，等待主线程执行。</p><p>事件的概念实际上并不是必须的，事件机制实际上就是异步过程的通知机制。我觉得它的存在是为了编程接口对开发者更友好。</p><p>另一方面，所有的异步过程也都可以用事件来描述。例如：setTimeout 可以看成对应一个时间到了！的事件。前文的 setTimeout(fn, 1000);可以看成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timer.addEventListener(&apos;timeout&apos;, 1000, fn);</span><br></pre></td></tr></table></figure><blockquote><p>工作线程是生产者，主线程是消费者(只有一个消费者)。工作线程执行异步任务，执行完成后把对应的回调函数封装成一条消息放到消息队列中；主线程不断地从消息队列中取消息并执行，当消息队列空时主线程阻塞，直到消息队列再次非空。</p></blockquote><h4 id="6、macrotasks-与-microtasks-的区别"><a href="#6、macrotasks-与-microtasks-的区别" class="headerlink" title="6、macrotasks 与 microtasks 的区别"></a>6、macrotasks 与 microtasks 的区别</h4><blockquote><p>macrotasks: setTimeout setInterval setImmediate I/O UI 渲染</p></blockquote><blockquote><p>microtasks: Promise process.nextTick Object.observe MutationObserver</p></blockquote><p>microtask 会在当前循环中执行完成,而 macrotask 会在下一个循环中执行</p>]]></content>
      
      <categories>
          
          <category> js高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git简记</title>
      <link href="/yelee/2018/07/27/Git%E7%AE%80%E8%AE%B0/"/>
      <url>/yelee/2018/07/27/Git%E7%AE%80%E8%AE%B0/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Git-食用手册"><a href="#Git-食用手册" class="headerlink" title="Git 食用手册"></a>Git 食用手册</h2><h3 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h3><p>最近有个项目比较赶，于是决定 8 个人一个并行完成，单独把项目拿出来用 gitea 管理，没人分一个模块开发，对应也给分支，效果不过，从中也帮助自己重新温习了一下 git 的使用，小记一下。</p><a id="more"></a><h3 id="1-安装和使用"><a href="#1-安装和使用" class="headerlink" title="1. 安装和使用"></a>1. 安装和使用</h3><ul><li><p>在 MAC 上，安装 homebrew，然后通过<a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">homebrew</a> 安装 Git。</p><blockquote><p>在 MAC 上另一种安装方法，从 AppStore 安装 Xcode，Xcode 集成了 Git，不过默认没有安装，你需要运行 Xcode，选择菜单“Xcode”-&gt;“Preferences”，在弹出窗口中找到“Downloads”，选择“Command Line Tools”，点“Install”就可以完成安装了。</p></blockquote></li><li><p>在 Windows 上，下载<a href="http://rj.baidu.com/soft/detail/40642.html" target="_blank" rel="noopener">安装包</a>，默认下一步，安装完成即可。</p></li><li><p>安装完后自报家门</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;wuwhs&quot;</span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>创建版本库<br>初始化一个 Git 仓库，使用<code>git init</code>命令。添加文件到 Git 仓库，分两步：</p><ol><li>第一步，使用命令<code>git add &lt;file&gt;</code>，注意，可反复多次使用，添加多个文件；</li><li>第二步，使用命令<code>git commit</code>，完成。</li></ol></li></ul><h3 id="2-时光穿梭"><a href="#2-时光穿梭" class="headerlink" title="2. 时光穿梭"></a>2. 时光穿梭</h3><p><img src="https://note.youdao.com/yws/public/resource/813e8f68e489060d70ccfdff42b3aecc/xmlnote/8849F03FF3934C8087DA9645B9BD9C5F/14633" alt=""></p><ul><li><p>如果<code>git status</code>告诉你有文件被修改过，用<code>git diff</code>可以查看修改内容。</p></li><li><p>HEAD 指向的版本就是当前版本，因此，Git 允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</p></li><li><p>穿梭前，用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本。</p></li><li><p>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本，<code>git log --pretty=oneline --abbrev-commit</code>在一行显示缩写提交号。</p></li><li><p>场景 1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p></li><li><p>当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD file</code>，就回到了场景 1，第二步按场景 1 操作。</p></li><li><p>命令<code>git rm</code>用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。</p></li></ul><h3 id="3-远程仓库"><a href="#3-远程仓库" class="headerlink" title="3. 远程仓库"></a>3. 远程仓库</h3><ul><li><p>创建 SSH Key。<code>$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code>。</p></li><li><p>登陆 GitHub，打开“Account settings”，“SSH Keys”页面。<br>然后，点“Add SSH Key”，填上任意 Title，在 Key 文本框里粘贴 id_rsa.pub 文件的内容。</p></li><li><p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>。</p></li><li><p>关联后，使用命令<code>git push -u origin master</code>第一次推送 master 分支的所有内容。</p></li><li><p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改。</p></li><li><p>要克隆一个仓库，首先必须知道仓库的地址，然后使用<code>git clone</code>命令克隆。</p></li></ul><h3 id="4-分支管理"><a href="#4-分支管理" class="headerlink" title="4. 分支管理"></a>4. 分支管理</h3><ul><li><p>Git 鼓励大量使用分支。</p></li><li><p>查看分支：<code>git branch</code>。</p></li><li><p>创建分支：<code>git branch &lt;name&gt;</code>。</p></li><li><p>切换分支：<code>git checkout &lt;name&gt;</code>。</p></li><li><p>创建+切换到当前分支：<code>git checkout -b &lt;name&gt;</code>。</p></li><li><p>合并某分支到当前分支：<code>git merge &lt;name&gt;</code>。</p></li><li><p>删除分支：<code>git branch -d &lt;name&gt;</code>。</p></li><li><p>当 Git 无法自动合并分支时，就必须首先剞劂冲突，解决冲突后，再提交，合并完成用<code>git log --graph</code>命令可以看到分支合并图。</p></li><li><p>合并分支时，加上<code>--no-ff</code>参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而<code>fash-forward</code>合并就看不出来曾经做过合并。</p></li><li><p>当手头工作没有完成时，先把工作现场<code>git stash</code>一下，然后去修复 bug，修复后，再<code>git stash list</code>查看历史 stash，一是用<code>git stash apply</code>恢复，但恢复后，stash 内容并不删除，你需要用<code>git stash drop</code>来删除；另一种方式是用<code>git stash pop</code>，恢复的同时把 stash 内容也删了。</p></li><li><p>查看远程库信息，使用<code>git remote -v</code>。</p></li><li><p>从本地推送分支，使用<code>git push origin branch-name</code>，如果失败，先用<code>git pull</code>抓取远程的新提交。</p></li><li><p>再本地创建和远程分支对应的分支，使用<code>git checkout -b branch-name origin/branch-name</code>，本地和远程分支的名称最好一致。</p></li><li><p>从远程抓取分支，使用<code>git pull</code>，如果有冲突，要先处理冲突。</p></li></ul><h3 id="5-标签"><a href="#5-标签" class="headerlink" title="5. 标签"></a>5. 标签</h3><ul><li><p>命令<code>git tag &lt;name&gt;</code>用于新建一个标签，默认为<code>HEAD</code>,也可以指定一个 commit id。</p></li><li><p><code>git tag -a &lt;tagname&gt; -m &quot;balabala...&quot;</code>可以指定标签信息。</p></li><li><p><code>git tag -s &lt;tagname&gt; -m &quot;balabala...&quot;</code>可以用 PGP 签名标签。</p></li><li><p>命令<code>git tag</code>可以查看所有标签。</p></li><li><p>命令<code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签。</p></li><li><p>命令<code>git push origin --tags</code>可以推送全部未推送过的本地标签。</p></li><li><p>命令<code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签。</p></li><li><p>命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>可以删除一个远程标签。</p></li></ul><h3 id="6-举个应用栗子"><a href="#6-举个应用栗子" class="headerlink" title="6. 举个应用栗子"></a>6. 举个应用栗子</h3><ol><li>最初在远程创建项目仓库有<code>master</code>和<code>develp</code>分支，参与开发人员先在自己一个文件夹下，调出<code>git Bash</code>，然后输入命令<code>git init</code>，再把仓库<code>git clone</code>下来</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www</span><br><span class="line">$ git init</span><br><span class="line">Initialized empty Git repository in D:/appSoft/wampserver/wamp64/www/.git/</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www (master)</span><br><span class="line">$ git clone git@github.com:wuwhs/demo.git</span><br><span class="line">Cloning into &apos;demo&apos;...</span><br><span class="line">Warning: Permanently added the RSA host key for IP address &apos;13.229.188.59&apos; to the list of known hosts.</span><br><span class="line">warning: You appear to have cloned an empty repository.</span><br><span class="line">Checking connectivity... done.</span><br></pre></td></tr></table></figure><ol start="2"><li><code>cd demo</code>进入<code>clone</code>下载的目录里，用<code>git branch develop</code>在本地创建一个对应的<code>develop</code>分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www (master)</span><br><span class="line">$ cd demo</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch</span><br><span class="line">* master</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch develop</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch</span><br><span class="line">  develop</span><br><span class="line">* master</span><br></pre></td></tr></table></figure><p>再次用<code>git branch</code>查看已经新建了一个<code>develop</code>分支</p><ol start="3"><li><code>git checkout develop</code>切换到当前<code>develop</code>分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git checkout develop</span><br><span class="line">Switched to branch &apos;develop&apos;</span><br></pre></td></tr></table></figure><ol start="4"><li>用<code>git pull origin develop:develop</code>，即：<code>git pull origin &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code>，当本地和远程分支名相同时，可以简写成一个，也就是<code>git pull origin develop</code>，拉取远程<code>develop</code>分支完成，然后开发人员就可以在这个分支上工作了</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull origin develop:develop</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   7ff2cb0..7ab2842  develop    -&gt; develop</span><br><span class="line">   7ff2cb0..7ab2842  develop    -&gt; origin/develop</span><br><span class="line">warning: fetch updated the current branch head.</span><br><span class="line">fast-forwarding your working tree from</span><br><span class="line">commit 7ff2cb0627be357fa15db4e38e1bfe8fc820b8ec.</span><br><span class="line">Already up-to-date.</span><br></pre></td></tr></table></figure><ol start="5"><li>当一天了工作完成，要提交到远程分支，首先要拉取一下别人提交的代码，防止版本冲突</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Compressing objects: 100% (2/2), done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   f848dc7..d696375  develop    -&gt; origin/develop</span><br><span class="line">Updating f848dc7..d696375</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><p>PS：直接偷懒<code>pull</code>可能会出现没有找到<code>tracking</code>的分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">There is no tracking information for the current branch.</span><br><span class="line">Please specify which branch you want to merge with.</span><br><span class="line">See git-pull(1) for details.</span><br><span class="line"></span><br><span class="line">git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class="line"></span><br><span class="line">If you wish to set tracking information for this branch you can do so with:</span><br><span class="line"></span><br><span class="line">git branch --set-upstream-to=origin/&lt;branch&gt; develop</span><br></pre></td></tr></table></figure><p>这时候要手动添加一下对应分支依赖<code>git branch --set-upstream-to=origin/&lt;branch&gt; develop</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git branch --set-upstream-to=origin/develop develop</span><br><span class="line">Branch develop set up to track remote branch develop from origin.</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Compressing objects: 100% (2/2), done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   f848dc7..d696375  develop    -&gt; origin/develop</span><br><span class="line">Updating f848dc7..d696375</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><ol start="6"><li>将本地分支提交到对应远程分支上，<code>git push origin develop:develop</code>，即：<code>git push origin &lt;远程主机&gt;&lt;本地分支名&gt;:&lt;远程分支名&gt;</code>，如果名称一样可以简写，也就是<code>git push origin develop</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git push origin develop:develop</span><br><span class="line">Counting objects: 9, done.</span><br><span class="line">Delta compression using up to 4 threads.</span><br><span class="line">Compressing objects: 100% (5/5), done.</span><br><span class="line">Writing objects: 100% (9/9), 759 bytes | 0 bytes/s, done.</span><br><span class="line">Total 9 (delta 1), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (1/1), done.</span><br><span class="line">To git@github.com:wuwhs/demo.git</span><br><span class="line">   d696375..3c00c0c  develop -&gt; develop</span><br></pre></td></tr></table></figure><ol start="7"><li>项目测试 OK 了，本地分支合并到<code>master</code>分支上，要用到<code>git merge &lt;branch&gt;</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git checkout master</span><br><span class="line">Switched to branch &apos;master&apos;</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git merge develop</span><br><span class="line">Updating c4d0377..3c00c0c</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 9 +++++++++</span><br><span class="line"> 1 file changed, 9 insertions(+)</span><br></pre></td></tr></table></figure><p>常用的操作就以上七步了，当然会有不同情形的应用。</p><h3 id="7-附录：git-cheat-sheet"><a href="#7-附录：git-cheat-sheet" class="headerlink" title="7. 附录：git-cheat-sheet"></a>7. 附录：git-cheat-sheet</h3><p>一般而言，常用的就是以上那些命令，有人专门的整理了一份比较全一点的文档 git-cheat-sheet，方便查阅。</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>列出当前配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --list</span><br></pre></td></tr></table></figure><p>列出 repository 配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --local --list</span><br></pre></td></tr></table></figure><p>列出全局配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global --list</span><br></pre></td></tr></table></figure><p>列出系统配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --system --list</span><br></pre></td></tr></table></figure><p>设置用户名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;[firstname lastname]&quot;</span><br></pre></td></tr></table></figure><p>设置用户邮箱：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email &quot;[valid-email]&quot;</span><br></pre></td></tr></table></figure><p>设置 git 命令输出为彩色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global color.ui auto</span><br></pre></td></tr></table></figure><p>设置 git 使用的文本编辑器设：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global core.editor vi</span><br></pre></td></tr></table></figure><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>Repository 配置对应的配置文件路径[–local]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;repo&gt;/.git/config</span><br></pre></td></tr></table></figure><p>用户全局配置对应的配置文件路径[–global]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.gitconfig</span><br></pre></td></tr></table></figure><p>系统配置对应的配置文件路径[–local]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/gitconfig</span><br></pre></td></tr></table></figure><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p>复制一个已创建的仓库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 通过 SSH</span><br><span class="line">$ git clone ssh://user@domain.com/repo.git</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#通过 HTTP</span><br><span class="line">$ git clone http://domain.com/user/repo.git</span><br></pre></td></tr></table></figure><p>创建一个新的本地仓库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><h4 id="本地修改"><a href="#本地修改" class="headerlink" title="本地修改"></a>本地修改</h4><p>显示工作路径下已修改的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure><p>显示与上次提交版本文件的不同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff</span><br></pre></td></tr></table></figure><p>把当前所有修改添加到下次提交中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure><p>把对某个文件的修改添加到下次提交中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add -p &lt;file&gt;</span><br></pre></td></tr></table></figure><p>提交本地的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -a</span><br></pre></td></tr></table></figure><p>提交之前已标记的变化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit</span><br></pre></td></tr></table></figure><p>附加消息提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &apos;message here&apos;</span><br></pre></td></tr></table></figure><p>提交，并将提交时间设置为之前的某个日期:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --date=&quot;`date --date=&apos;n day ago&apos;`&quot; -am &quot;Commit Message&quot;</span><br></pre></td></tr></table></figure><p>修改上次提交<br>（请勿修改已发布的提交记录!）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit --amend</span><br></pre></td></tr></table></figure><p>修改上次提交的 committer date：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIT_COMMITTER_DATE=&quot;date&quot; git commit --amend</span><br></pre></td></tr></table></figure><p>修改上次提交的 author date：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend --date=&quot;date&quot;</span><br></pre></td></tr></table></figure><p>把当前分支中未提交的修改移动到其他分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git checkout branch2</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><p>将 stashed changes 应用到当前分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash apply</span><br></pre></td></tr></table></figure><p>删除最新一次的 stashed changes：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash drop</span><br></pre></td></tr></table></figure><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>从当前目录的所有文件中查找文本内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git grep &quot;Hello&quot;</span><br></pre></td></tr></table></figure><p>在某一版本中搜索文本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git grep &quot;Hello&quot; v2.5</span><br></pre></td></tr></table></figure><h4 id="提交历史"><a href="#提交历史" class="headerlink" title="提交历史"></a>提交历史</h4><p>从最新提交开始，显示所有的提交记录（显示 hash， 作者信息，提交的标题和时间）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log</span><br></pre></td></tr></table></figure><p>显示所有提交（仅显示提交的 hash 和 message）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline</span><br></pre></td></tr></table></figure><p>显示某个用户的所有提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --author=&quot;username&quot;</span><br></pre></td></tr></table></figure><p>显示某个文件的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log -p &lt;file&gt;</span><br></pre></td></tr></table></figure><p>仅显示远端分支与远端分支提交记录的差集：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline &lt;origin/master&gt;..&lt;remote/master&gt; --left-right</span><br></pre></td></tr></table></figure><p>谁，在什么时间，修改了文件的什么内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git blame &lt;file&gt;</span><br></pre></td></tr></table></figure><p>显示 reflog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog show</span><br></pre></td></tr></table></figure><p>删除 reflog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog delete</span><br></pre></td></tr></table></figure><h4 id="分支与标签"><a href="#分支与标签" class="headerlink" title="分支与标签"></a>分支与标签</h4><p>列出所有的分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br></pre></td></tr></table></figure><p>列出所有的远端分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -r</span><br></pre></td></tr></table></figure><p>切换分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>创建并切换到新分支:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>基于当前分支创建新分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch &lt;new-branch&gt;</span><br></pre></td></tr></table></figure><p>基于远程分支创建新的可追溯的分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch --track &lt;new-branch&gt; &lt;remote-branch&gt;</span><br></pre></td></tr></table></figure><p>删除本地分支:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -d &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>强制删除一个本地分支：<br>将会丢失未合并的修改！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -D &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>给当前版本打标签：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><p>给当前版本打标签并附加消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><h4 id="更新与发布"><a href="#更新与发布" class="headerlink" title="更新与发布"></a>更新与发布</h4><p>列出当前配置的远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br></pre></td></tr></table></figure><p>显示远程端的信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote show &lt;remote&gt;</span><br></pre></td></tr></table></figure><p>添加新的远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add &lt;remote&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>下载远程端版本，但不合并到 HEAD 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch &lt;remote&gt;</span><br></pre></td></tr></table></figure><p>下载远程端版本，并自动与 HEAD 版本合并：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote pull &lt;remote&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>将远程端版本合并到本地版本中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin master</span><br></pre></td></tr></table></figure><p>以 rebase 方式将远端分支与本地合并：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>将本地版本发布到远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push remote &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>删除远程端分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git push &lt;remote&gt; :&lt;branch&gt; (since Git v1.5.0)</span><br><span class="line"># or</span><br><span class="line">git push &lt;remote&gt; --delete &lt;branch&gt; (since Git v1.7.0)</span><br></pre></td></tr></table></figure><p>发布标签:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push --tags</span><br></pre></td></tr></table></figure><p>合并与重置(Rebase)<br>将分支合并到当前 HEAD 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>将当前 HEAD 版本重置到分支中:<br>请勿重置已发布的提交!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>退出重置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase --abort</span><br></pre></td></tr></table></figure><p>解决冲突后继续重置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase --continue</span><br></pre></td></tr></table></figure><p>使用配置好的 merge tool 解决冲突：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git mergetool</span><br></pre></td></tr></table></figure><p>在编辑器中手动解决冲突后，标记文件为已解决冲突：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git add &lt;resolved-file&gt;</span><br><span class="line">$ git rm &lt;resolved-file&gt;</span><br></pre></td></tr></table></figure><p>合并提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase -i &lt;commit-just-before-first&gt;</span><br></pre></td></tr></table></figure><p>把上面的内容替换为下面的内容：</p><p>原内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pick &lt;commit_id&gt;</span><br><span class="line">pick &lt;commit_id2&gt;</span><br><span class="line">pick &lt;commit_id3&gt;</span><br></pre></td></tr></table></figure><p>替换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pick &lt;commit_id&gt;</span><br><span class="line">squash &lt;commit_id2&gt;</span><br><span class="line">squash &lt;commit_id3&gt;</span><br></pre></td></tr></table></figure><h4 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h4><p>放弃工作目录下的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard HEAD</span><br></pre></td></tr></table></figure><p>移除缓存区的所有文件（i.e. 撤销上次 git add）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset HEAD</span><br></pre></td></tr></table></figure><p>放弃某个文件的所有本地修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout HEAD &lt;file&gt;</span><br></pre></td></tr></table></figure><p>重置一个提交（通过创建一个截然不同的新提交）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git revert &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到指定的版本，并抛弃该版本之后的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>用远端分支强制覆盖本地分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard &lt;remote/branch&gt; e.g., upstream/master, origin/my-feature</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到上一次提交的版本，并将之后的修改标记为未添加到缓存区的修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到上一次提交的版本，并保留未提交的本地修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --keep &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>删除添加.gitignore 文件前错误提交的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git rm -r --cached .</span><br><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;remove xyz file&quot;</span><br></pre></td></tr></table></figure><p>完~</p><p>可参考文章：</p><ol><li><a href="http://rogerdudler.github.io/git-guide/" target="_blank" rel="noopener">git-guide</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰 git 教程</a></li><li><a href="https://www.git-scm.com/" target="_blank" rel="noopener">git-scm</a></li><li><a href="https://blog.csdn.net/github_37515447/article/details/56840610" target="_blank" rel="noopener">Git Cheat Sheet 中文版</a></li></ol>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>搞定css三列布局</title>
      <link href="/yelee/2018/07/22/%E6%90%9E%E5%AE%9Acss%E4%B8%89%E5%88%97%E5%B8%83%E5%B1%80/"/>
      <url>/yelee/2018/07/22/%E6%90%9E%E5%AE%9Acss%E4%B8%89%E5%88%97%E5%B8%83%E5%B1%80/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="三列布局"><a href="#三列布局" class="headerlink" title="三列布局"></a>三列布局</h2><blockquote><p>谈到布局，首先就要想到定位，当别人问我，css 的 position 定位有哪些取值，分别表示什么意思？呃…..</p></blockquote><h3 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h3><p>position 有六个属性值：static、relative、absolute、fixed、sticky 和 inherit。</p><a id="more"></a><ul><li>static（默认）：元素框正常生成。块级元素生成一个矩形框，作为文档流的一部分；行内元素则会创建一个或多个行框，置于父级元素中。</li><li>relative：元素框相对于之前正常文档流中的位置发生偏移，并且原先的位置仍然被占据。发生偏移的时候，可能会覆盖其他元素。</li><li>absolute：元素框不再占有文档位置，并且相对于包含块进行偏移（所谓包含块就是最近一级外层元素 position 不为 static 的元素）。</li><li>fixed：元素框不再占有文档流位置，并且相对于视窗进行定位。</li><li>sticky：css3 新增属性值，粘性定位，相当于 relative 和 fixed 的混合。最初会被当作是 relative，相对原来位置进行偏移；一旦超过一定的阈值，会被当成 fixed 定位，相对于视口定位。</li></ul><h3 id="三列布局-1"><a href="#三列布局-1" class="headerlink" title="三列布局"></a>三列布局</h3><p>三列布局，其中一列宽度自适应，在 PC 端最常用之一，搞定了三列布局，其他一样的套路。</p><h5 id="方式一：浮动布局"><a href="#方式一：浮动布局" class="headerlink" title="方式一：浮动布局"></a>方式一：浮动布局</h5><p>缺点：html 结构不正确,当包含区域宽度小于左右框之和，右边框会被挤下来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.float .center &#123;</span><br><span class="line">        /* left: 300px;</span><br><span class="line">        right: 300px; */</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式二：定位布局"><a href="#方式二：定位布局" class="headerlink" title="方式二：定位布局"></a>方式二：定位布局</h4><p>缺点：要求父级要有非 static 定位，如果没有，左右框容易偏移出去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.position &#123;</span><br><span class="line">        position: relative;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .left &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .right &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        right: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .center &#123;</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout position&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式三：表格布局"><a href="#方式三：表格布局" class="headerlink" title="方式三：表格布局"></a>方式三：表格布局</h4><p>缺点：没什么缺点，恐惧 table</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.table &#123;</span><br><span class="line">        display: table;</span><br><span class="line">        width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table &gt; article &#123;</span><br><span class="line">        display: table-cell;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .center &#123;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .right &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout table&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式四：flex-弹性布局"><a href="#方式四：flex-弹性布局" class="headerlink" title="方式四：flex 弹性布局"></a>方式四：flex 弹性布局</h4><p>缺点：兼容性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.flex &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        flex-shrink: 0; /* 不缩小 */</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .center &#123;</span><br><span class="line">        flex-grow: 1; /* 增大 */</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .right &#123;</span><br><span class="line">        flex-shrink: 0; /* 不缩小 */</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout flex&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式五：grid-栅格布局"><a href="#方式五：grid-栅格布局" class="headerlink" title="方式五：grid 栅格布局"></a>方式五：grid 栅格布局</h4><p>缺点：兼容性 Firefox 52, Safari 10.1, Chrome 57, Opera 44</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.grid &#123;</span><br><span class="line">        display: grid;</span><br><span class="line">        grid-template-columns: 300px 1fr 300px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .left &#123;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .center &#123;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .right &#123;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout grid&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式六：圣杯布局"><a href="#方式六：圣杯布局" class="headerlink" title="方式六：圣杯布局"></a>方式六：圣杯布局</h4><p>缺点：需要多加一层标签，html 顺序不对，占用了布局框的 margin 属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.cup:after &#123;</span><br><span class="line">        clear: both;</span><br><span class="line">        content: &quot;&quot;;</span><br><span class="line">        display: table;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .center &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line">        float: left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .center &gt; div &#123;</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        overflow: auto;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -100%;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .right &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout cup&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;h1&gt;我是圣杯布局中间框&lt;/h1&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是圣杯布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是圣杯布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> 布局 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>水平且垂直居中方法（9种）</title>
      <link href="/yelee/2018/06/01/%E6%B0%B4%E5%B9%B3%E4%B8%94%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%EF%BC%889%E7%A7%8D%EF%BC%89/"/>
      <url>/yelee/2018/06/01/%E6%B0%B4%E5%B9%B3%E4%B8%94%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%EF%BC%889%E7%A7%8D%EF%BC%89/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="水平且垂直居中方法有哪些？"><a href="#水平且垂直居中方法有哪些？" class="headerlink" title="水平且垂直居中方法有哪些？"></a>水平且垂直居中方法有哪些？</h2><p>这在实际工作中经常用到，小记一下。</p><h4 id="演示-HTML-结构"><a href="#演示-HTML-结构" class="headerlink" title="演示 HTML 结构"></a>演示 HTML 结构</h4><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span> <span class="attr">class</span>=<span class="string">"div"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>i<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/gb/水平且垂直居中方法（9种）/0.bmp" alt=""></p><p>一般的，水平居中相对垂直居中简单很多，对于内联元素，父级元素设置<code>text-align: center;</code>；对于块级元素，子级元素设置<code>margin: 0 auto;</code>。以下结合水平居中强调实现垂直居中。</p><h4 id="1、已知父级元素宽高，父级元素定位非-static，子级元素定位设为position-absolute-fixed，再利用margin、left和top属性居中。"><a href="#1、已知父级元素宽高，父级元素定位非-static，子级元素定位设为position-absolute-fixed，再利用margin、left和top属性居中。" class="headerlink" title="1、已知父级元素宽高，父级元素定位非 static，子级元素定位设为position: absolute/fixed，再利用margin、left和top属性居中。"></a>1、已知父级元素宽高，父级元素定位非 static，子级元素定位设为<code>position: absolute/fixed</code>，再利用<code>margin</code>、<code>left</code>和<code>top</code>属性居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：需要已知父级元素固定宽高，才能确定<code>margin-left</code>和<code>margin-right</code>。</p><h4 id="2、子级元素是内联元素，父级元素设置line-height属性垂直居中。"><a href="#2、子级元素是内联元素，父级元素设置line-height属性垂直居中。" class="headerlink" title="2、子级元素是内联元素，父级元素设置line-height属性垂直居中。"></a>2、子级元素是内联元素，父级元素设置<code>line-height</code>属性垂直居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">120px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: normal;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：需要已知父级元素的固定高度，才可以确定<code>line-height</code>。</p><h4 id="3、子级元素是内联元素，父级元素用display-table-cell-和vertical-align-middle-属性实现垂直居中。"><a href="#3、子级元素是内联元素，父级元素用display-table-cell-和vertical-align-middle-属性实现垂直居中。" class="headerlink" title="3、子级元素是内联元素，父级元素用display: table-cell;和vertical-align: middle;属性实现垂直居中。"></a>3、子级元素是内联元素，父级元素用<code>display: table-cell;</code>和<code>vertical-align: middle;</code>属性实现垂直居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>inline-block</code>、<code>table-cell</code>不兼容 ie67</p><h4 id="4、对于子级是块级元素，父级元素同样用display-table-cell-和vertical-align-middle-属性实现垂直居中，水平方向居中用margin-0-auto-。"><a href="#4、对于子级是块级元素，父级元素同样用display-table-cell-和vertical-align-middle-属性实现垂直居中，水平方向居中用margin-0-auto-。" class="headerlink" title="4、对于子级是块级元素，父级元素同样用display: table-cell;和vertical-align: middle;属性实现垂直居中，水平方向居中用margin: 0 auto;。"></a>4、对于子级是块级元素，父级元素同样用<code>display: table-cell;</code>和<code>vertical-align: middle;</code>属性实现垂直居中，水平方向居中用<code>margin: 0 auto;</code>。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>table-cell</code>不兼容 ie67</p><h4 id="5、利用-css3-translate特性：位移是基于元素宽高的。"><a href="#5、利用-css3-translate特性：位移是基于元素宽高的。" class="headerlink" title="5、利用 css3 translate特性：位移是基于元素宽高的。"></a>5、利用 css3 <code>translate</code>特性：位移是基于元素宽高的。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-ms-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>translate</code>属性兼容 IE9+</p><h4 id="6、当父级是浮动的，用display-table-cell-会失效，这时需要包三层，第一层display-table-，第二层display-table-cell-第三次居中层"><a href="#6、当父级是浮动的，用display-table-cell-会失效，这时需要包三层，第一层display-table-，第二层display-table-cell-第三次居中层" class="headerlink" title="6、当父级是浮动的，用display: table-cell;会失效，这时需要包三层，第一层display: table;，第二层display: table-cell; 第三次居中层"></a>6、当父级是浮动的，用<code>display: table-cell;</code>会失效，这时需要包三层，第一层<code>display: table;</code>，第二层<code>display: table-cell;</code> 第三次居中层</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="comment">/* text-align: center; */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div3</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="comment">/* display: inline-block; */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，但 HTML 标签层数较多。</p><h4 id="7、绝对定位加四边定位为-0。"><a href="#7、绝对定位加四边定位为-0。" class="headerlink" title="7、绝对定位加四边定位为 0。"></a>7、绝对定位加四边定位为 0。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，但把定位属性全用上了</p><h4 id="8、利用-flex-布局justify-content-center-和align-items-center-属性居中。"><a href="#8、利用-flex-布局justify-content-center-和align-items-center-属性居中。" class="headerlink" title="8、利用 flex 布局justify-content: center;和align-items: center;属性居中。"></a>8、利用 flex 布局<code>justify-content: center;</code>和<code>align-items: center;</code>属性居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，兼容 IE10+</p><h4 id="9、利用-grid-布局，划分成-3x3-栅格，第二行第二列格子垂直水平居中"><a href="#9、利用-grid-布局，划分成-3x3-栅格，第二行第二列格子垂直水平居中" class="headerlink" title="9、利用 grid 布局，划分成 3x3 栅格，第二行第二列格子垂直水平居中"></a>9、利用 grid 布局，划分成 3x3 栅格，第二行第二列格子垂直水平居中</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">  <span class="attribute">grid-row-start</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">grid-column-start</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，兼容性 Firefox 52, Safari 10.1, Chrome 57, Opera 44</p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>深入理解BFC</title>
      <link href="/yelee/2018/05/21/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3BFC/"/>
      <url>/yelee/2018/05/21/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3BFC/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="BFC-概念"><a href="#BFC-概念" class="headerlink" title="BFC 概念"></a>BFC 概念</h2><h2 id="1、相关定义"><a href="#1、相关定义" class="headerlink" title="1、相关定义"></a>1、相关定义</h2><h3 id="1-1-Formatting-context"><a href="#1-1-Formatting-context" class="headerlink" title="1.1 Formatting context"></a>1.1 Formatting context</h3><p>Formatting context 是 W3C CSS2.1 规定中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素如何定位，以及和其他元素的关系和相互作用。最常见的 Formatting context 有 Block formatting context（简称 BFC）和 Inline formatting context（简称 IFC）。<br>css2.1 中只有 BFC 和 IFC，css3 中还增加了 GFC 和 FFC。</p><a id="more"></a><h3 id="1-2-BFC-定义"><a href="#1-2-BFC-定义" class="headerlink" title="1.2 BFC 定义"></a>1.2 BFC 定义</h3><p>BFC(Block formatting context)直译为“块级格式化上下文”。它是独立的渲染区域，只有 Block-level box 参与，它规定了内部的 Block-level Box 如何布局，并且与这个区域外部毫不相干。</p><h3 id="1-3-BFC-布局规则："><a href="#1-3-BFC-布局规则：" class="headerlink" title="1.3 BFC 布局规则："></a>1.3 BFC 布局规则：</h3><ul><li>内部的 Box 会在垂直方向，一个接一个地放置；</li><li>Box 垂直方向地距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠</li><li>每个元素的 margin box 的左边，与包含块 border box 的左边相接触（对于从左往右的格式化，否则相反）。即便存在浮动也是如此。</li><li>BFC 的区域不会与 float box 重叠。</li><li>BFC 就是页面的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</li><li>计算 BFC 的高度时，浮动元素页参与计算。<br>-</li></ul><h2 id="2、作用"><a href="#2、作用" class="headerlink" title="2、作用"></a>2、作用</h2><h3 id="2-1-可生成-BFC-的元素"><a href="#2-1-可生成-BFC-的元素" class="headerlink" title="2.1 可生成 BFC 的元素"></a>2.1 可生成 BFC 的元素</h3><ul><li>根元素 html；</li><li>float 属性不为 none；</li><li>position 为 absolute 或 fixed；</li><li>display 为 inline-block， table-cell，table-caption，flex， inline-flex；</li><li>overflow 不为 visible；</li></ul><h3 id="2-2-场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。"><a href="#2-2-场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。" class="headerlink" title="2.2 场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。"></a>2.2 场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .left-center-right.float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: rgba(0, 0, 0, 0.7);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .left-center-right.float .center &#123;</span><br><span class="line">        background-color: rgb(13, 218, 233);</span><br><span class="line">        height: 200px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .left-center-right.float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;left-center-right float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;我是左边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;我是右边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;我是中间区域块&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p>中间自适应栏边界会延展左右浮动区域<br><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/67CD3941EFC8420AAB3D54CB766DE219/7159" alt="image"></p><p>此时需要把中间栏变成 BFC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.left-center-right.float .center &#123;</span><br><span class="line">    background-color: rgb(13, 218, 233);</span><br><span class="line">    height: 200px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/97EE88BCB7AC428E95F9F9A5580639A7/7175" alt="image"></p><h3 id="2-3-场景二：子级元素有浮动，父级元素塌陷问题"><a href="#2-3-场景二：子级元素有浮动，父级元素塌陷问题" class="headerlink" title="2.3 场景二：子级元素有浮动，父级元素塌陷问题"></a>2.3 场景二：子级元素有浮动，父级元素塌陷问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .all-children-float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: rgba(0, 0, 0, 0.7);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .all-children-float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;all-children-float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;我是左边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;我是右边区域块&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/1B737A83C8D04BF9B0ABDE2EF28DF0E6/7190" alt="image"></p><p>此时需要将父级元素变成 BFC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.all-children-float &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/D00321F3DC9C4D578E6C89DD23DB0AB2/7200" alt="image"></p><h3 id="2-3-场景三：垂直方向-margin-出现重合"><a href="#2-3-场景三：垂直方向-margin-出现重合" class="headerlink" title="2.3 场景三：垂直方向 margin 出现重合"></a>2.3 场景三：垂直方向 margin 出现重合</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .verticle-block .block1 &#123;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(13, 218, 233);</span><br><span class="line">        margin: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .verticle-block .block2 &#123;</span><br><span class="line">        width: 150px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">        margin: 30px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;verticle-block&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;block1&quot;&gt;我是区域块1&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;block2&quot;&gt;我是区域块2&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><blockquote><p>Box 垂直方向的距离 margin 决定，属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠。</p></blockquote><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/4C9FBEC4951F4006939CD8AAEC698B21/7214" alt="image"></p><p>我们的做法是包一层标签，并转化成 BFC。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.wrapper1 &#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;section class=&quot;verticle-block&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;wrapper1&quot;&gt;</span><br><span class="line">        &lt;article class=&quot;block1&quot;&gt;我是区域块1&lt;/article&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;article class=&quot;block2&quot;&gt;我是区域块2&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/56A0200CB1424C20AB9930AA4CAC44E2/7217" alt="image"></p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css BFC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>css中的一些坑</title>
      <link href="/yelee/2018/05/06/css%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
      <url>/yelee/2018/05/06/css%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CSS-踩坑记"><a href="#CSS-踩坑记" class="headerlink" title="CSS 踩坑记"></a>CSS 踩坑记</h2><h4 id="1、如果子元素全部设置为浮动，则父元素是塌陷的"><a href="#1、如果子元素全部设置为浮动，则父元素是塌陷的" class="headerlink" title="1、如果子元素全部设置为浮动，则父元素是塌陷的"></a>1、如果子元素全部设置为浮动，则父元素是塌陷的</h4><ol><li>在元素末尾加块级空元素设置 clear:both；<a id="more"></a></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.last</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- more --><ol start="2"><li>在父级容器设置 before/after 模拟一个块级空元素</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>父级容器直接设置 overflow: auto/hidden;</li></ol><h4 id="2、普通文档流中块级垂直外边距合并"><a href="#2、普通文档流中块级垂直外边距合并" class="headerlink" title="2、普通文档流中块级垂直外边距合并"></a>2、普通文档流中块级垂直外边距合并</h4><p>解决办法：用 padding 代替，或改成 inline-block，或改成 float，或绝对定位</p><h4 id="3、使用-transition-闪屏"><a href="#3、使用-transition-闪屏" class="headerlink" title="3、使用 transition 闪屏"></a>3、使用 transition 闪屏</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">  <span class="attribute">-webkit-backface-visibility</span>: hidden;</span><br><span class="line">  <span class="attribute">-webkit-perspective</span>: <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过渡动画在没有启动硬件加速的情况下，会出现抖动现象，解决方案：用 translated3d、translateZ、transform 自动启动硬件加速，即改为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translated3d</span>(0, 0, 0);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translated3d</span>(0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ps:硬件加速导致 cpu 性能占用增加，电池电量消耗加大</p><h4 id="4、超出内容用”…”表示"><a href="#4、超出内容用”…”表示" class="headerlink" title="4、超出内容用”…”表示"></a>4、超出内容用”…”表示</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line-clamp"</span>&gt;</span></span><br><span class="line">来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line-clamp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">  <span class="attribute">-webkit-line-clamp</span>: <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>-webkit-line-clamp 用来限制在一个块元素显示的文本的行数</li><li>display: -webkit-box; 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示</li><li>-webkit-box-orient 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式</li></ol><p>缺点：<br>只有移动端和 webkit 浏览器支持</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/7959E51B5140437DA4C084E6B8E7472E/12000" alt=""></p><p>还不够，最后末尾最好有点渐变到”…”</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/D7C74A4FC9624AC7A638FC223AFF6926/12008" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line-clamp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.line-clamp</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">'...'</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(to right, transparent, #fff 55%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>将 height 设置为 line-height 整数倍，防止超出文字露出</li><li>ie10+才支持 linear-gradient 属性</li></ol><p>缺点：</p><p>当文字少于区域大小时，也会出现省略号</p><h4 id="输入框-placeholder-文字带颜色"><a href="#输入框-placeholder-文字带颜色" class="headerlink" title="输入框 placeholder 文字带颜色"></a>输入框 placeholder 文字带颜色</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* WebKit browsers */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-moz-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Mozilla Firefox 19+ */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:-ms-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Internet Explorer 10+ */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>移动端适配-rem</title>
      <link href="/yelee/2018/04/27/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D-rem/"/>
      <url>/yelee/2018/04/27/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D-rem/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="通过封装-rem-js-动态获取屏幕宽度"><a href="#通过封装-rem-js-动态获取屏幕宽度" class="headerlink" title="通过封装 rem.js,动态获取屏幕宽度"></a>通过封装 rem.js,动态获取屏幕宽度</h2><blockquote><p>通过 js 去动态计算根元素的 font-size，这样所有设备分辨率都能兼容适应</p></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">//designWidth:设计稿的实际宽度值，需要根据实际设置</span><br><span class="line">//maxWidth:制作稿的最大宽度值，需要根据实际设置</span><br><span class="line">//这段js的最后面有两个参数记得要设置，一个为设计稿实际宽度，一个为制作稿最大宽度，例如设计稿为750，最大宽度为750，则为(750,750)</span><br><span class="line">;</span><br><span class="line">(function(designWidth, maxWidth) &#123;</span><br><span class="line">    var doc = document,</span><br><span class="line">        win = window,</span><br><span class="line">        docEl = doc.documentElement,</span><br><span class="line">        remStyle = document.createElement(&quot;style&quot;),</span><br><span class="line">        tid;</span><br><span class="line"></span><br><span class="line">    function refreshRem() &#123;</span><br><span class="line">        var width = docEl.getBoundingClientRect().width;</span><br><span class="line">        maxWidth = maxWidth || 540;</span><br><span class="line">        width &gt; maxWidth &amp;&amp; (width = maxWidth);</span><br><span class="line">        var rem = width * 100 / designWidth;</span><br><span class="line">        remStyle.innerHTML = &apos;html&#123;font-size:&apos; + rem + &apos;px;&#125;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (docEl.firstElementChild) &#123;</span><br><span class="line">        docEl.firstElementChild.appendChild(remStyle);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        var wrap = doc.createElement(&quot;div&quot;);</span><br><span class="line">        wrap.appendChild(remStyle);</span><br><span class="line">        doc.write(wrap.innerHTML);</span><br><span class="line">        wrap = null;</span><br><span class="line">    &#125;</span><br><span class="line">    //要等 wiewport 设置好后才能执行 refreshRem，不然 refreshRem 会执行2次；</span><br><span class="line">    refreshRem();</span><br><span class="line"></span><br><span class="line">    win.addEventListener(&quot;resize&quot;, function() &#123;</span><br><span class="line">        clearTimeout(tid); //防止执行两次</span><br><span class="line">        tid = setTimeout(refreshRem, 300);</span><br><span class="line">    &#125;, false);</span><br><span class="line"></span><br><span class="line">    win.addEventListener(&quot;pageshow&quot;, function(e) &#123;</span><br><span class="line">        if (e.persisted) &#123; // 浏览器后退的时候重新计算</span><br><span class="line">            clearTimeout(tid);</span><br><span class="line">            tid = setTimeout(refreshRem, 300);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, false);</span><br><span class="line"></span><br><span class="line">    if (doc.readyState === &quot;complete&quot;) &#123;</span><br><span class="line">        doc.body.style.fontSize = &quot;16px&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        doc.addEventListener(&quot;DOMContentLoaded&quot;, function(e) &#123;</span><br><span class="line">            doc.body.style.fontSize = &quot;16px&quot;;</span><br><span class="line">        &#125;, false);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(640, 750);</span><br></pre></td></tr></table></figure><blockquote><p>当然也可以用 media query 设置适配集中主流的屏幕尺寸</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">html &#123;</span><br><span class="line">    font-size : 20px;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 401px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 25px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 428px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 26.75px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 481px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 30px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 569px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 35px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 641px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 40px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>提供一个移动端 base.css</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">body,</span><br><span class="line">dl,</span><br><span class="line">dd,</span><br><span class="line">ul,</span><br><span class="line">ol,</span><br><span class="line">h1,</span><br><span class="line">h2,</span><br><span class="line">h3,</span><br><span class="line">h4,</span><br><span class="line">h5,</span><br><span class="line">h6,</span><br><span class="line">pre,</span><br><span class="line">form,</span><br><span class="line">input,</span><br><span class="line">textarea,</span><br><span class="line">p,</span><br><span class="line">hr,</span><br><span class="line">thead,</span><br><span class="line">tbody,</span><br><span class="line">tfoot,</span><br><span class="line">th,</span><br><span class="line">td &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ul,</span><br><span class="line">ol &#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a &#123;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html &#123;</span><br><span class="line">    -ms-text-size-adjust: none;</span><br><span class="line">    -webkit-text-size-adjust: none;</span><br><span class="line">    text-size-adjust: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    line-height: 1.5;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body,</span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">select,</span><br><span class="line">textarea &#123;</span><br><span class="line">    font-family: &apos;helvetica neue&apos;, tahoma, &apos;hiragino sans gb&apos;, stheiti, &apos;wenquanyi micro hei&apos;, \5FAE\8F6F\96C5\9ED1, \5B8B\4F53, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b,</span><br><span class="line">strong &#123;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">i,</span><br><span class="line">em &#123;</span><br><span class="line">    font-style: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table &#123;</span><br><span class="line">    border-collapse: collapse;</span><br><span class="line">    border-spacing: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table th,</span><br><span class="line">table td &#123;</span><br><span class="line">    border: 1px solid #ddd;</span><br><span class="line">    padding: 5px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table th &#123;</span><br><span class="line">    font-weight: inherit;</span><br><span class="line">    border-bottom-width: 2px;</span><br><span class="line">    border-bottom-color: #ccc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">img &#123;</span><br><span class="line">    border: 0 none;</span><br><span class="line">    width: auto\9;</span><br><span class="line">    max-width: 100%;</span><br><span class="line">    vertical-align: top;</span><br><span class="line">    height: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">select,</span><br><span class="line">textarea &#123;</span><br><span class="line">    font-family: inherit;</span><br><span class="line">    font-size: 100%;</span><br><span class="line">    margin: 0;</span><br><span class="line">    vertical-align: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">html input[type=&quot;button&quot;],</span><br><span class="line">input[type=&quot;reset&quot;],</span><br><span class="line">input[type=&quot;submit&quot;] &#123;</span><br><span class="line">    -webkit-appearance: button;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button[disabled],</span><br><span class="line">input[disabled] &#123;</span><br><span class="line">    cursor: default;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;checkbox&quot;],</span><br><span class="line">input[type=&quot;radio&quot;] &#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;search&quot;] &#123;</span><br><span class="line">    -webkit-appearance: textfield;</span><br><span class="line">    -moz-box-sizing: content-box;</span><br><span class="line">    -webkit-box-sizing: content-box;</span><br><span class="line">    box-sizing: content-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;search&quot;]::-webkit-search-decoration &#123;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input:focus &#123;</span><br><span class="line">    outline: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">select[size],</span><br><span class="line">select[multiple],</span><br><span class="line">select[size][multiple] &#123;</span><br><span class="line">    border: 1px solid #AAA;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">article,</span><br><span class="line">aside,</span><br><span class="line">details,</span><br><span class="line">figcaption,</span><br><span class="line">figure,</span><br><span class="line">footer,</span><br><span class="line">header,</span><br><span class="line">hgroup,</span><br><span class="line">main,</span><br><span class="line">nav,</span><br><span class="line">section,</span><br><span class="line">summary &#123;</span><br><span class="line">    display: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">audio,</span><br><span class="line">canvas,</span><br><span class="line">video,</span><br><span class="line">progress &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    background: #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input::-webkit-input-speech-button &#123;</span><br><span class="line">    display: none</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">textarea &#123;</span><br><span class="line">    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> mobile </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue的数据驱动原理及简单实现</title>
      <link href="/yelee/2017/09/10/vue%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E5%8E%9F%E7%90%86%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/"/>
      <url>/yelee/2017/09/10/vue%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E5%8E%9F%E7%90%86%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Vue双向数据绑定原理"><a href="#Vue双向数据绑定原理" class="headerlink" title="Vue双向数据绑定原理"></a>Vue双向数据绑定原理</h2><h3 id="1、目标实现"><a href="#1、目标实现" class="headerlink" title="1、目标实现"></a>1、目标实现</h3><ol><li>理解双向数据绑定原理；</li><li>实现 &#123;&#123; &#125;&#125;、v-model和基本事件指令v-bind（:）、v-on（@）；</li><li>新增属性的双向绑定处理；<a id="more"></a></li></ol><h3 id="2、双向数据绑定原理"><a href="#2、双向数据绑定原理" class="headerlink" title="2、双向数据绑定原理"></a>2、双向数据绑定原理</h3><p>vue实现对数据的双向绑定，通过对数据劫持结合发布者-订阅者模式实现的。</p><h4 id="2-1-Object-defineProperty"><a href="#2-1-Object-defineProperty" class="headerlink" title="2.1 Object.defineProperty"></a>2.1 Object.defineProperty</h4><p>vue通过Object.defineProperty来实现数据劫持，会对数据对象每个属性添加对应的get和set方法，对数据进行读取和赋值操作就分别调用get和set方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">    enumerable: <span class="literal">true</span>,</span><br><span class="line">    configurable: <span class="literal">true</span>,</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;,</span><br><span class="line">    set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>我们可以将一些方法放到里面，从而完成对数据的监听（劫持）和视图的同步更新。</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/F8D35A0DDA0C438990651233F3954DD3/6460" alt="image"></p><h4 id="2-2-过程说明"><a href="#2-2-过程说明" class="headerlink" title="2.2 过程说明"></a>2.2 过程说明</h4><p>实现双向数据绑定，首先要对数据进行数据监听，需要一个监听器Observer，监听所有属性。如果属性发生变化，会调用setter和getter，再去告诉订阅者Watcher是否需要更新。由于订阅者有很多个，我们需要一个消息订阅器Dep来专门收集这些订阅者，然后在监听器Observer和订阅者Watcher之间进行统一管理。还有，我们需要一个指令解析器Complie，对每个元素进行扫描和解析，将相关指令对应初始化成一个订阅者Watcher，并替换模板数据或绑定相应函数。当订阅者Watcher接收到相应属性的变化，就会执行对应的更新函数，从而更新视图。</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/A6333A71A8E243A38EAD196BB13F9EE7/6463" alt="image"></p><h3 id="3、实现Observer"><a href="#3、实现Observer" class="headerlink" title="3、实现Observer"></a>3、实现Observer</h3><p>Observer是一个数据监听器，核心方法是我们提到过的Object.defineProperty。如果要监听所有属性的话，则需要通过递归遍历，对每个子属性都defineProperty。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data || <span class="keyword">typeof</span> data !== <span class="string">"object"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = data;</span><br><span class="line">    <span class="keyword">this</span>.walk(data);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性遍历</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    walk: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="built_in">Object</span>.keys(data).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">            self.defineReactive(data, key, data[key]);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    defineReactive: <span class="function"><span class="keyword">function</span>(<span class="params">data, key, val</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        observe(val);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">            enumerable: <span class="literal">true</span>,</span><br><span class="line">            configurable: <span class="literal">true</span>,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> val;</span><br><span class="line">            &#125;,</span><br><span class="line">            set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (newVal === val) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                val = newVal;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"属性："</span> + key + <span class="string">"被监听了，现在值为："</span> + newVal);</span><br><span class="line"></span><br><span class="line">                updateView(newVal);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        updateView(val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Observer(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听数据</span></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新视图</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; val</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateView</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $name = <span class="built_in">document</span>.querySelector(<span class="string">"#name"</span>);</span><br><span class="line">    $name.innerHTML = val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myvm = <span class="keyword">new</span> MyVue(&#123;</span><br><span class="line">    el: <span class="string">"#demo"</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        name: <span class="string">"hello word"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/93FC8BA149764033996B07C9031FBE2D/6483" alt="image"></p><h3 id="4、实现Dep"><a href="#4、实现Dep" class="headerlink" title="4、实现Dep"></a>4、实现Dep</h3><p>在流程介绍中，我们需要创建一个可以订阅者的订阅器Dep，主要负责手机订阅者，属性变化的时候执行相应的订阅者，更新函数。下面稍加改造Observer，就可以插入我们的订阅器。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    defineReactive: <span class="function"><span class="keyword">function</span>(<span class="params">data, key, val</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dep = <span class="keyword">new</span> Dep();</span><br><span class="line"></span><br><span class="line">        observe(val);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">            enumerable: <span class="literal">true</span>,</span><br><span class="line">            configurable: <span class="literal">true</span>,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否需要添加订阅者 什么时候添加订阅者呢？ 与实际页面DOM有关联的data属性才添加相应的订阅者</span></span><br><span class="line">                <span class="keyword">if</span> (Dep.target) &#123;</span><br><span class="line">                    <span class="comment">// 添加一个订阅者</span></span><br><span class="line">                    dep.addSub(Dep.target);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> val;</span><br><span class="line">            &#125;,</span><br><span class="line">            set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (newVal === val) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                val = newVal;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"属性："</span> + key + <span class="string">"被监听了，现在值为："</span> + newVal);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 通知所有订阅者</span></span><br><span class="line">                dep.notify(newVal);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        updateView(val);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 订阅器标识本身实例</span></span><br><span class="line">        Dep.target = dep;</span><br><span class="line">        <span class="comment">// 强行执行getter，往订阅器中添加订阅者</span></span><br><span class="line">        <span class="keyword">var</span> v = data[key];</span><br><span class="line">        <span class="comment">// 释放自己</span></span><br><span class="line">        Dep.target = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Observer(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订阅器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Dep</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.subs = [];</span><br><span class="line">    <span class="keyword">this</span>.target = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dep.prototype = &#123;</span><br><span class="line">    addSub: <span class="function"><span class="keyword">function</span>(<span class="params">sub</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subs.push(sub);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"this.subs:"</span>, <span class="keyword">this</span>.subs);</span><br><span class="line">    &#125;,</span><br><span class="line">    notify: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subs.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">sub</span>) </span>&#123;</span><br><span class="line">            sub.update(data);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    update: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        updateView(val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>PS:将订阅器Dep添加到一个订阅者设计到getter里面，是为了让Watcher初始化进行触发。</p><h3 id="5、实现Watcher"><a href="#5、实现Watcher" class="headerlink" title="5、实现Watcher"></a>5、实现Watcher</h3><p>订阅者Watcher在初始化的时候需要将自己添加到订阅器Dep中，那该如何添加呢？我们已经知道监听器Observer是在get函数执行添加了订阅者Watcher的操作，所以我们只要在订阅者Watcher初始化的时候触发对应的get函数去执行添加订阅者操作。那么，怎样去触发get函数？很简单，只需获取对应的属性值就可以触发了，因为我们已经用Object.defineProperty监听了所有属性。vue在这里做了个技巧处理，就是咋我们添加订阅者的时候，做一个判断，判断是否是事先缓存好的Dep.target，在订阅者添加成功后，把target重置null即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订阅者</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; vm vue对象</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; exp 属性值</span></span><br><span class="line"><span class="comment"> * @param &#123;Function&#125; cb 回调函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Watcher</span>(<span class="params">vm, exp, cb</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.vm = vm;</span><br><span class="line">    <span class="keyword">this</span>.exp = exp;</span><br><span class="line">    <span class="keyword">this</span>.cb = cb;</span><br><span class="line">    <span class="comment">// 将自己添加到订阅器</span></span><br><span class="line">    <span class="keyword">this</span>.value = <span class="keyword">this</span>.get();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Watcher.prototype = &#123;</span><br><span class="line">    update: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.run();</span><br><span class="line">    &#125;,</span><br><span class="line">    run: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> value = <span class="keyword">this</span>.vm.data[<span class="keyword">this</span>.exp];</span><br><span class="line">        <span class="keyword">var</span> oldVal = <span class="keyword">this</span>.value;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (value !== oldVal) &#123;</span><br><span class="line">            <span class="keyword">this</span>.value = value;</span><br><span class="line">            <span class="keyword">this</span>.cb.call(<span class="keyword">this</span>.vm, value, oldVal);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 缓存自己 做个标记</span></span><br><span class="line">        Dep.target = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 强制执行监听器里的get函数</span></span><br><span class="line">        <span class="comment">// this.vm.data[this.exp] 调用getter，添加一个订阅者sub，存入到全局变量subs</span></span><br><span class="line">        <span class="keyword">var</span> value = <span class="keyword">this</span>.vm.data[<span class="keyword">this</span>.exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 释放自己</span></span><br><span class="line">        Dep.target = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> $name = <span class="built_in">document</span>.querySelector(<span class="string">"#name"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给name属性添加一个订阅者到订阅器中，当属性发生变化后，触发回调</span></span><br><span class="line">    <span class="keyword">var</span> w = <span class="keyword">new</span> Watcher(<span class="keyword">this</span>, <span class="string">"name"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        $name.innerHTML = val;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里，其实已经实现了我们的双向数据绑定：能够根据初始数据初始化页面特定元素，同时当数据改变也能更新视图。</p><h3 id="5、实现Compile"><a href="#5、实现Compile" class="headerlink" title="5、实现Compile"></a>5、实现Compile</h3><p>步骤4整个过程都能有去解析DOM节点，而是直接固定节点进行替换。接下来我们就来实现一个解析器，完成一些解析和绑定工作。</p><ol><li>获取页面的DOM节点，遍历存入到文档碎片对象中；</li><li>解析出文本节点，匹配&#123;&#123;&#125;&#125;（暂时只做”&#123;&#123;&#125;&#125;”的解析），用初始化数据替换，并添加相应订阅者；</li><li>分离出节点的指令v-on、v-bind和v-model，绑定相应的事件和函数；</li></ol><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/BD96748FED95467A8B44B1AFFB499D44/6764" alt="image"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编译器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; el 根元素</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; vm vue对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Compile</span>(<span class="params">el, vm</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.vm = vm;</span><br><span class="line">    <span class="keyword">this</span>.el = <span class="built_in">document</span>.querySelector(el);</span><br><span class="line">    <span class="keyword">this</span>.fragment = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>.init();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Compile.prototype = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.el) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"this.el:"</span>, <span class="keyword">this</span>.el);</span><br><span class="line">            <span class="comment">// 移除页面元素生成文档碎片</span></span><br><span class="line">            <span class="keyword">this</span>.fragment = <span class="keyword">this</span>.nodeToFragment(<span class="keyword">this</span>.el);</span><br><span class="line">            <span class="comment">// 编译文档碎片</span></span><br><span class="line">            <span class="keyword">this</span>.compileElement(<span class="keyword">this</span>.fragment);</span><br><span class="line">            <span class="keyword">this</span>.el.appendChild(<span class="keyword">this</span>.fragment);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"DOM Selector is not exist"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 页面DOM节点转化成文档碎片</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    nodeToFragment: <span class="function"><span class="keyword">function</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> fragment = <span class="built_in">document</span>.createDocumentFragment();</span><br><span class="line">        <span class="keyword">var</span> child = el.firstChild;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 此处添加打印，出来的不是页面中原始的DOM，而是编译后的？</span></span><br><span class="line">        <span class="comment">// NodeList是引用关系，在编译后相应的值被替换了，这里打印出来的NodeList是后来被引用更新了的</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"el:"</span>, el);</span><br><span class="line">        <span class="comment">// console.log("el.firstChild:", el.firstChild.nodeValue);</span></span><br><span class="line">        <span class="keyword">while</span> (child) &#123;</span><br><span class="line">            <span class="comment">// append后，原el上的子节点被删除了，挂载在文档碎片上</span></span><br><span class="line">            fragment.appendChild(child);</span><br><span class="line">            child = el.firstChild;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译文档碎片，遍历到当前是文本节点则去编译文本节点，如果当前是元素节点，并且存在子节点，则继续递归遍历</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileElement: <span class="function"><span class="keyword">function</span>(<span class="params">fragment</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> childNodes = fragment.childNodes;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        [].slice.call(childNodes).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// var reg = /\&#123;\&#123;\s*(.+)\s*\&#125;\&#125;/g;</span></span><br><span class="line">            <span class="keyword">var</span> reg = <span class="regexp">/\&#123;\&#123;\s*((?:.|\n)+?)\s*\&#125;\&#125;/g</span>;</span><br><span class="line">            <span class="keyword">var</span> text = node.textContent;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (self.isElementNode(node)) &#123;</span><br><span class="line">                self.compileAttr(node);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (self.isTextNode(node) &amp;&amp; reg.test(text)) &#123;</span><br><span class="line">                reg.lastIndex = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">/* var match;</span></span><br><span class="line"><span class="comment">                while(match = reg.exec(text)) &#123;</span></span><br><span class="line"><span class="comment">                    self.compileText(node, match[1]);</span></span><br><span class="line"><span class="comment">                &#125; */</span></span><br><span class="line"></span><br><span class="line">                self.compileText(node, reg.exec(text)[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (node.childNodes &amp;&amp; node.childNodes.length) &#123;</span><br><span class="line">                self.compileElement(node);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileAttr: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> nodeAttrs = node.attributes;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Array</span>.prototype.forEach.call(nodeAttrs, <span class="function"><span class="keyword">function</span>(<span class="params">attr</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> attrName = attr.name;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 只对vue本身指令进行操作</span></span><br><span class="line">            <span class="keyword">if</span> (self.isDirective(attrName)) &#123;</span><br><span class="line">                <span class="keyword">var</span> exp = attr.value;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// v-on指令</span></span><br><span class="line">                <span class="keyword">if</span> (self.isOnDirective(attrName)) &#123;</span><br><span class="line">                    self.compileOn(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// v-bind指令</span></span><br><span class="line">                <span class="keyword">if</span>(self.isBindDirective(attrName)) &#123;</span><br><span class="line">                    self.compileBind(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// v-model</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (self.isModelDirective(attrName)) &#123;</span><br><span class="line">                    self.compileModel(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                node.removeAttribute(attrName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译文档碎片节点文本，即对标记替换</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileText: <span class="function"><span class="keyword">function</span>(<span class="params">node, exp</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> exps = exp.split(<span class="string">"."</span>);</span><br><span class="line">        <span class="keyword">var</span> initText = <span class="keyword">this</span>.vm.data[exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化视图</span></span><br><span class="line">        <span class="keyword">this</span>.updateText(node, initText);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加一个订阅者到订阅器</span></span><br><span class="line">        <span class="keyword">var</span> w = <span class="keyword">new</span> Watcher(<span class="keyword">this</span>.vm, exp, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">            self.updateText(node, val);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-on指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileOn: <span class="function"><span class="keyword">function</span>(<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// @xxx v-on:xxx</span></span><br><span class="line">        <span class="keyword">var</span> onRE = <span class="regexp">/^@|^v-on:/</span>;</span><br><span class="line">        <span class="keyword">var</span> eventType = attrName.replace(onRE, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> cb = vm.methods[exp];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (eventType &amp;&amp; cb) &#123;</span><br><span class="line">            node.addEventListener(eventType, cb.bind(vm), <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-bind指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileBind: <span class="function"><span class="keyword">function</span> (<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// :xxx v-bind:xxx</span></span><br><span class="line">        <span class="keyword">var</span> bindRE = <span class="regexp">/^:|^v-bind:/</span>;</span><br><span class="line">        <span class="keyword">var</span> attr = attrName.replace(bindRE, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> val = vm.data[exp];</span><br><span class="line"></span><br><span class="line">        node.setAttribute(attr, val);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-model指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileModel: <span class="function"><span class="keyword">function</span>(<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> val = <span class="keyword">this</span>.vm.data[exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化视图</span></span><br><span class="line">        <span class="keyword">this</span>.modelUpdater(node, val);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加一个订阅者到订阅器</span></span><br><span class="line">        <span class="keyword">new</span> Watcher(<span class="keyword">this</span>.vm, exp, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            self.modelUpdater(node, value);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绑定input事件</span></span><br><span class="line">        node.addEventListener(<span class="string">"input"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> newVal = e.target.value;</span><br><span class="line">            <span class="keyword">if</span> (val === newVal) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            self.vm.data[exp] = newVal;</span><br><span class="line">            <span class="comment">// val = newVal;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新文档碎片相应的文本节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    updateText: <span class="function"><span class="keyword">function</span>(<span class="params">node, val</span>) </span>&#123;</span><br><span class="line">        node.textContent = <span class="keyword">typeof</span> val === <span class="string">"undefined"</span> ? <span class="string">""</span> : val;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * model更新节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    modelUpdater: <span class="function"><span class="keyword">function</span>(<span class="params">node, val, oldVal</span>) </span>&#123;</span><br><span class="line">        node.value = <span class="keyword">typeof</span> val == <span class="string">"undefined"</span> ? <span class="string">""</span> : val;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是vue指令，包括v-xxx:,:xxx,@xxx</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dirRE = <span class="regexp">/^v-|^@|^:/</span>;</span><br><span class="line">        <span class="keyword">return</span> dirRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-on指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isOnDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> onRE = <span class="regexp">/^v-on:|^@/</span>;</span><br><span class="line">        <span class="keyword">return</span> onRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-bind指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isBindDirective: <span class="function"><span class="keyword">function</span> (<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> bindRE = <span class="regexp">/^v-bind:|^:/</span>;</span><br><span class="line">        <span class="keyword">return</span> bindRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-model指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isModelDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> mdRE = <span class="regexp">/^v-model/</span>;</span><br><span class="line">        <span class="keyword">return</span> mdRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断元素节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isElementNode: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> node.nodeType == <span class="number">1</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文本节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isTextNode: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> node.nodeType == <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.methods = options.methods;</span><br><span class="line"></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Compile(options.el, <span class="keyword">this</span>.vm);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们就可以调用指令v-bind、v-on和v-model。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="undefined">            color: red;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-bind:class</span>=<span class="string">"myColor"</span>&gt;</span>&amp;#123;&amp;#123; name &amp;#125;&amp;#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">v-model</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"clickOk"</span>&gt;</span>Ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> myvm = <span class="keyword">new</span> MyVue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">"#demo"</span>,</span></span><br><span class="line"><span class="undefined">    data: &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">"hello word"</span>,</span></span><br><span class="line"><span class="javascript">        myColor: <span class="string">"red"</span></span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="javascript">        clickOk: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">"I am OK"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    myvm.data.name = <span class="string">"wawawa...vue was born"</span>;</span></span><br><span class="line"><span class="undefined">&#125;, 2000);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/0442953EE78A48C3B26FFE48B1731582/6629" alt="image"></p><h3 id="5、其他"><a href="#5、其他" class="headerlink" title="5、其他"></a>5、其他</h3><h4 id="5-1-proxy代理data"><a href="#5-1-proxy代理data" class="headerlink" title="5.1 proxy代理data"></a>5.1 proxy代理data</h4><p>可能注意到了，我们不管是在赋值还是取值，都是在myvm.data.someAttr上操作的，而在vue上我们习惯直接myvm.someAttr这种形式。怎样实现呢？同样，我们可以用Object.defineProperty对data所有属性做一个代理，即访问vue实例属性时，代理到data上。很简单，实现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 将数据拓展到vue的根，方便读取和设置</span><br><span class="line"> */</span><br><span class="line">MyVue.prototype.proxy = function(key) &#123;</span><br><span class="line">    var self = this;</span><br><span class="line"></span><br><span class="line">    Object.defineProperty(this, key, &#123;</span><br><span class="line">        enumerable: true,</span><br><span class="line">        configurable: true,</span><br><span class="line">        get: function proxyGetter() &#123;</span><br><span class="line">            return self.data[key];</span><br><span class="line">        &#125;,</span><br><span class="line">        set: function proxySetter(newVal) &#123;</span><br><span class="line">            self.data[key] = newVal;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/71B50262A5944F928CDA8CFD8944A538/6670" alt="image"></p><h4 id="5-2-parsePath"><a href="#5-2-parsePath" class="headerlink" title="5.2 parsePath"></a>5.2 parsePath</h4><p>上面对于data的操作只是到对于简单的基本类型属性，对于对象属性的改变该怎么更新到位呢？其实，只要深度遍历对象属性路径，就可以找到要访问属性值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据对象属性路径，最终获取值</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; obj 对象</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; path 路径</span></span><br><span class="line"><span class="comment"> * return 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parsePath</span>(<span class="params">obj, path</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bailRE = <span class="regexp">/[^\w.$]/</span>;</span><br><span class="line">    <span class="keyword">if</span> (bailRE.test(path)) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> segments = path.split(<span class="string">'.'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; segments.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!obj) &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        obj = obj[segments[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用这个方法替换我们的所有取值操作<br>vm[exp] =&gt; parsePath(vm, exp)</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/BB5F59CFD0244D4991E13B5D35F88AF3/6709" alt="image"></p><h3 id="6、新增属性的双向数据绑定"><a href="#6、新增属性的双向数据绑定" class="headerlink" title="6、新增属性的双向数据绑定"></a>6、新增属性的双向数据绑定</h3><h4 id="6-1-给对象添加属性"><a href="#6-1-给对象添加属性" class="headerlink" title="6.1 给对象添加属性"></a>6.1 给对象添加属性</h4><p>Vue 不允许在已经创建的实例上动态添加新的根级响应式属性 (root-level reactive property)。然而它可以使用 Vue.set(object, key, value) 方法将响应属性添加到嵌套的对象上。<br>也就是我们需要在Vue原型上添加一个set方法去设置新添加的属性，新属性同样要进行监听和添加订阅者。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue的set方法，用于外部新增属性 Vue.$set(target, key, val)</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; target 数据</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; key 属性</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; val 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params">target, key, val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(target)) &#123;</span><br><span class="line">        target.length = <span class="built_in">Math</span>.max(target.length, key);</span><br><span class="line">        target.splice(key, <span class="number">1</span>, val);</span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (target.hasOwnProperty(key)) &#123;</span><br><span class="line">        target[key] = val;</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> ob = (target).$Observer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!ob) &#123;</span><br><span class="line">        target[key] = val;</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对新增属性定义监听</span></span><br><span class="line">    ob.defineReactive(target, key, val);</span><br><span class="line"></span><br><span class="line">    ob.dep.notify();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyVue.prototype.$set = set;</span><br></pre></td></tr></table></figure><h4 id="6-1-给数组对象添加属性"><a href="#6-1-给数组对象添加属性" class="headerlink" title="6.1 给数组对象添加属性"></a>6.1 给数组对象添加属性</h4><p>把数组看成一个特殊的对象，就很容易理解了，对于unshift、push和splice变异方法是添加了对象的属性的，需要对新加的属性进行监听和添加订阅者。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arrKeys = [<span class="string">"push"</span>, <span class="string">"pop"</span>, <span class="string">"shift"</span>, <span class="string">"unshift"</span>, <span class="string">"splice"</span>, <span class="string">"sort"</span>, <span class="string">"reverse"</span>];</span><br><span class="line"><span class="keyword">var</span> extendArr = [];</span><br><span class="line"></span><br><span class="line">arrKeys.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">    def(extendArr, key, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result,</span><br><span class="line">            arrProto = <span class="built_in">Array</span>.prototype,</span><br><span class="line">            ob = <span class="keyword">this</span>.$Observer,</span><br><span class="line">            arr = arrProto.slice.call(<span class="built_in">arguments</span>),</span><br><span class="line">            inserted,</span><br><span class="line">            index;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"push"</span>:</span><br><span class="line">                inserted = arr;</span><br><span class="line">                index = <span class="keyword">this</span>.length;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"unshift"</span>:</span><br><span class="line">                inserted = arr;</span><br><span class="line">                index = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"splice"</span>:</span><br><span class="line">                inserted = arr.slice(<span class="number">2</span>);</span><br><span class="line">                index = arr[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        result = arrProto[key].apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听新增数组对象属性</span></span><br><span class="line">        <span class="keyword">if</span> (inserted) &#123;</span><br><span class="line">            ob.observeArray(inserted);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ob.dep.notify();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arrayKeys = <span class="built_in">Object</span>.getOwnPropertyNames(extendArr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.dep = <span class="keyword">new</span> Dep();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data || <span class="keyword">typeof</span> data !== <span class="string">"object"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在每个object上添加一个observer</span></span><br><span class="line">    def(data, <span class="string">"$Observer"</span>, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 继承变异方法</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(data)) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把数组变异方法的处理，添加到原型链上</span></span><br><span class="line">        data.__proto__ = extendArr;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听数组对象属性</span></span><br><span class="line">        <span class="keyword">this</span>.observeArray(data);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">        <span class="keyword">this</span>.walk(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    observeArray: <span class="function"><span class="keyword">function</span>(<span class="params">items</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"items:"</span>, items);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, l = items.length; i &lt; l; i++) &#123;</span><br><span class="line">            observe(items[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue-cli中遇到的坑</title>
      <link href="/yelee/2017/09/02/vue-cli%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
      <url>/yelee/2017/09/02/vue-cli%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Vue-cli-脚手架"><a href="#Vue-cli-脚手架" class="headerlink" title="Vue-cli 脚手架"></a>Vue-cli 脚手架</h2><p>项目构建自动化，错误查起来越来越不知所措，坑很多，踩过后要记录，防止踩第二遍</p><h4 id="vue-单文件-import-css-文件，不加-会报错"><a href="#vue-单文件-import-css-文件，不加-会报错" class="headerlink" title="vue 单文件@import css 文件，不加~会报错"></a>vue 单文件@import css 文件，不加<code>~</code>会报错</h4><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">@import &apos;assets/css/variable&apos;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[HMR] bundle has 1 errors</span><br><span class="line">172:176 ./~/css-loader?&#123;&quot;minimize&quot;:false,&quot;sourceMap&quot;:false&#125;!./~/vue-loader/lib/style-compiler?&#123;&quot;vue&quot;:true,&quot;id&quot;:&quot;data-v-be4708e4&quot;,&quot;scoped&quot;:true,&quot;hasInlineConfig&quot;:false&#125;!./~/stylus-loader?&#123;&quot;sourceMap&quot;:false&#125;!./~/vue-loader/lib/selector.js?type=styles&amp;index=0!./src/components/views/programs/Programs.vue</span><br><span class="line">Module build failed: Error: D:\appSoft\wampserver\wamp64\www\iHomed_vue\src\components\views\programs\Programs.vue:200:9</span><br><span class="line">   196| &#125;</span><br><span class="line">   197| &lt;/script&gt;</span><br><span class="line">   198|</span><br><span class="line">   199| &lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">   200| @import &apos;assets/css/variable&apos;</span><br><span class="line">----------------^</span><br><span class="line">   201|</span><br></pre></td></tr></table></figure><p>正确写法<code>@import &#39;~assets/css/variable&#39;</code></p><h4 id="vue-cli-中-config-index-js-配置说明"><a href="#vue-cli-中-config-index-js-配置说明" class="headerlink" title="vue-cli 中 config/index.js 配置说明"></a>vue-cli 中 config/index.js 配置说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  build: &#123;</span><br><span class="line">    env: require(&apos;./prod.env&apos;), // 使用 config/prod.env.js 中定义的编译环境</span><br><span class="line">    index: path.resolve(__dirname, &apos;../dist/index.html&apos;), // 编译输入的 index.html 文件</span><br><span class="line">    assetsRoot: path.resolve(__dirname, &apos;../dist&apos;), // 编译输出的静态资源路径</span><br><span class="line">    assetsSubDirectory: &apos;static&apos;, // 编译输出的二级目录</span><br><span class="line">    assetsPublicPath: &apos;/&apos;, // 编译发布的根目录，可配置为资源服务器域名或 CDN 域名</span><br><span class="line">    productionSourceMap: true, // 是否开启 cssSourceMap</span><br><span class="line">    // Gzip off by default as many popular static hosts such as</span><br><span class="line">    // Surge or Netlify already gzip all static assets for you.</span><br><span class="line">    // Before setting to `true`, make sure to:</span><br><span class="line">    // npm install --save-dev compression-webpack-plugin</span><br><span class="line">    productionGzip: false, // 是否开启 gzip</span><br><span class="line">    productionGzipExtensions: [&apos;js&apos;, &apos;css&apos;], // 需要使用 gzip 压缩的文件扩展名</span><br><span class="line">    // Run the build command with an extra argument to</span><br><span class="line">    // View the bundle analyzer report after build finishes:</span><br><span class="line">    // `npm run build --report`</span><br><span class="line">    // Set to `true` or `false` to always turn it on or off</span><br><span class="line">    bundleAnalyzerReport: process.env.npm_config_report</span><br><span class="line">  &#125;,</span><br><span class="line">  dev: &#123; // dev 环境</span><br><span class="line">    env: require(&apos;./dev.env&apos;), // 使用 config/dev.env.js 中定义的编译环境</span><br><span class="line">    port: 8084, // 运行测试页面的端口</span><br><span class="line">    autoOpenBrowser: true, // 自动在浏览器中打开</span><br><span class="line">    assetsSubDirectory: &apos;static&apos;, // 编译输出的二级目录</span><br><span class="line">    assetsPublicPath: &apos;/&apos;, // 编译发布的根目录，可配置为资源服务器域名或 CDN 域名</span><br><span class="line">    proxyTable: &#123;&#125;, // 需要 proxyTable 代理的接口（可跨域）</span><br><span class="line">    // CSS Sourcemaps off by default because relative paths are &quot;buggy&quot;</span><br><span class="line">    // with this option, according to the CSS-Loader README</span><br><span class="line">    // (https://github.com/webpack/css-loader#sourcemaps)</span><br><span class="line">    // In our experience, they generally work as expected,</span><br><span class="line">    // just be aware of this issue when enabling this option.</span><br><span class="line">    cssSourceMap: false  // 是否开启 cssSourceMap</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>曾经不易理解的两点<code>assetsSubDirectory</code>和<code>assetsPublicPath</code></p><ol><li><p>assetsSubDirectory<br>被 webpack 编译处理过的资源文件都会在这个 build.assetsRoot 目录下，如果 assetsRoot 值是<code>&quot;/web/app&quot;</code>，assetsSubDirectory 值为<code>&quot;static&quot;</code>，那么，webpack 将把所有资源编译到<code>web/app/static</code>目录下</p></li><li><p>assetsPublicPath<br>这个是通过 http 服务器运行的 url 路径，大多数情况下，这个是根目录（/）。如果你的后台框架对静态资源 url 前缀有要求，你仅需改变这个参数。比如不用本地的，而用线上的 CDN。</p></li></ol><h4 id="父子组件嵌套，各个钩子函数触发顺序"><a href="#父子组件嵌套，各个钩子函数触发顺序" class="headerlink" title="父子组件嵌套，各个钩子函数触发顺序"></a>父子组件嵌套，各个钩子函数触发顺序</h4><p>偶然看到这个问题：vue 中父子组件各个钩子函数触发顺序是怎样的？一时还真背问到了，在项目中添加打印才发现是这样子的</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/E40E6B0ED1F5479F909A69469C83D99A/12039" alt=""></p><p>顺序是：先依次触发父级组件<code>beforeCreate</code>、<code>create</code>和<code>beforeMounte</code>，再依次触发子级组件<code>beforeCreate</code>、<code>create</code>、<code>beforeMounte</code>和<code>mounted</code>，最后父级组件<code>mounted</code></p><h4 id="父子组件之间通信，兄弟组件之间通信"><a href="#父子组件之间通信，兄弟组件之间通信" class="headerlink" title="父子组件之间通信，兄弟组件之间通信"></a>父子组件之间通信，兄弟组件之间通信</h4><p>这个问题基本清晰，在这归纳一下</p><h5 id="1-父组件数据传给子组件"><a href="#1-父组件数据传给子组件" class="headerlink" title="1. 父组件数据传给子组件"></a>1. 父组件数据传给子组件</h5><p>通过<code>props</code>属性传递</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent-component</span> <span class="attr">:parent-data</span>=<span class="string">"pdata"</span>&gt;</span><span class="tag">&lt;/<span class="name">parent-component</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    parentData: &#123;</span><br><span class="line">      type: <span class="built_in">String</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="string">''</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-子组件传数据给父组件"><a href="#2-子组件传数据给父组件" class="headerlink" title="2. 子组件传数据给父组件"></a>2. 子组件传数据给父组件</h5><p>使用<code>$emit</code>派发</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent-component</span> <span class="attr">:parent-data:sync</span>=<span class="string">"pdata"</span> @<span class="attr">handle-callback</span>=<span class="string">"handlerCallback"</span>&gt;</span><span class="tag">&lt;/<span class="name">parent-component</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handlerCallback(params) &#123;</span><br><span class="line">      <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'handleCallback'</span>, params)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'update:parentData'</span>, someData)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-兄弟组件数据传递"><a href="#3-兄弟组件数据传递" class="headerlink" title="3. 兄弟组件数据传递"></a>3. 兄弟组件数据传递</h5><ol><li>对于大型项目，用 vue 官方推荐的 vuex</li><li><p>EventBus</p><ul><li><p>提取 bus.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">const</span> bus = <span class="keyword">new</span> Vue()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> bus</span><br></pre></td></tr></table></figure></li><li><p>兄弟组件 1 发送数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">'./bus'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'busEvent1'</span>, someData)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>兄弟组件 2 接收数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">'./bus'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$on(<span class="string">'busEvent1'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(data)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>子组件 A <code>$emit</code>派发某个事件，再由父组件<code>@handle-callback=&quot;handlerCallback&quot;</code>监听获取数据，然后，父组件<code>$refs</code>直接访问到子组件 B 的方法，从而间接实现从子组件 A 到子组件 B 的数据传递</p></li></ol><h4 id="props-在子组件中被重写报错"><a href="#props-在子组件中被重写报错" class="headerlink" title="props 在子组件中被重写报错"></a>props 在子组件中被重写报错</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue.esm.js?<span class="number">06e7</span>:<span class="number">591</span> [Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop<span class="string">'s value. Prop being mutated: "isShow"</span></span><br></pre></td></tr></table></figure><p><strong>解决方案</strong><br><code>props</code>传过来的参数通过<code>Vue.$emit</code>提交修改</p><h4 id="在props和data中使用this"><a href="#在props和data中使用this" class="headerlink" title="在props和data中使用this"></a>在<code>props</code>和<code>data</code>中使用<code>this</code></h4><p>在 Vue2.2.2 或更高版本才能这样使用，低于这个版本时，注入的值会在<code>props</code>和<code>data</code>初始化之后得到。</p><h4 id="对于高阶插件-组件库，解决组件与其子孙组件数据传输问题"><a href="#对于高阶插件-组件库，解决组件与其子孙组件数据传输问题" class="headerlink" title="对于高阶插件/组件库，解决组件与其子孙组件数据传输问题"></a>对于高阶插件/组件库，解决组件与其子孙组件数据传输问题</h4><ol><li><p>解决方案一：<code>$attrs</code>和<code>$listener</code></p><p>使用属性和方法不通过<code>props</code>传递，在子孙组件中直接用<code>$attrs</code>和<code>$listeners</code>接收。不过支持 v2.4.0+。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父级组件</span></span><br><span class="line">&lt;ul id=<span class="string">"app6"</span>&gt;</span><br><span class="line">&lt;item</span><br><span class="line"><span class="class"><span class="keyword">class</span></span>=<span class="string">"item"</span></span><br><span class="line">:model=<span class="string">"treeData"</span></span><br><span class="line">:count=<span class="string">"123"</span></span><br><span class="line">@abc=<span class="string">"function()&#123;&#125;"</span></span><br><span class="line">&gt;<span class="xml"><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 子孙组件</span></span><br><span class="line"><span class="regexp">inheritAttrs: false,</span></span><br><span class="line"><span class="regexp">created () &#123;</span></span><br><span class="line"><span class="regexp">    let attrs = this.$attrs;</span></span><br><span class="line"><span class="regexp">    console.log('mode:', attrs.mode);</span></span><br><span class="line"><span class="regexp">    console.log('count:', attrs.count);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    let listeners = this.$listeners;</span></span><br><span class="line"><span class="regexp">    console.log('bac:', listeners.abc);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>解决方案二：<code>provide/inject</code></p><p>父级组件传入<code>provide</code>数据选项，子孙组件注入<code>inject</code>数据。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line">provide: &#123;</span><br><span class="line">  foo: <span class="string">'bar'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子孙组件</span></span><br><span class="line">inject: [<span class="string">'foo'</span>] <span class="comment">// or inject: &#123; name: 'foo', defult: '' &#125;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue-cli </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
