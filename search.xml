<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>项目结构tree图</title>
      <link href="/yelee/2018/10/13/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%9B%BE/"/>
      <url>/yelee/2018/10/13/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%9B%BE/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="目录结构介绍"><a href="#目录结构介绍" class="headerlink" title="目录结构介绍"></a>目录结构介绍</h2><blockquote><p>vue-cli2.0</p></blockquote><a id="more"></a><pre><code>|-- build                            // webpack配置文件|-- config                           // 项目打包路径|-- src                              // 源码目录|   |-- components                   // 组件|       |-- common                   // 公共组件|           |-- bus.js                // Event Bus|           |-- Header.vue           // 公共头部|           |-- Home.vue                // 公共路由入口|           |-- Sidebar.vue          // 公共左边栏|           |-- Tags.vue                // 页面切换标签组件|       |-- page                        // 主要路由页面|           |-- 403.vue|           |-- 404.vue|           |-- BaseCharts.vue       // 基础图表|           |-- BaseForm.vue         // 基础表单|           |-- BaseTable.vue        // 基础表格|           |-- DashBoard.vue        // 系统首页|           |-- DragList.vue         // 拖拽列表组件|           |-- Icon.vue             // 自定义图标组件|           |-- Login.vue               // 登录|           |-- Markdown.vue         // markdown组件|           |-- Premission.vue       // 权限测试组件|           |-- Upload.vue           // 图片上传|           |-- VueEditor.vue        // 富文本编辑器|   |-- App.vue                      // 页面入口文件|   |-- main.js                      // 程序入口文件，加载各种公共组件|-- .babelrc                         // ES6语法编译配置|-- .editorconfig                    // 代码编写规格|-- .gitignore                       // 忽略的文件|-- index.html                       // 入口html文件|-- package.json                     // 项目及工具的依赖配置文件|-- README.md                        // 说明</code></pre>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实用 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>npm报错：error code EINTEGRITY</title>
      <link href="/yelee/2018/10/13/npm%E6%8A%A5%E9%94%99%EF%BC%9Aerror-code-EINTEGRITY/"/>
      <url>/yelee/2018/10/13/npm%E6%8A%A5%E9%94%99%EF%BC%9Aerror-code-EINTEGRITY/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天 npm install 时候遇到类似的错误</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法:"></a>解决办法:</h3><blockquote><p>一、升级 npm<br><code>npm i -g npm</code><br><a id="more"></a><br>二、删除 package-lock.json</p></blockquote><blockquote><p>三、删除缓存目录下的所有数据<br><code>npm cache clean –force</code></p></blockquote><blockquote><p>四、验证缓存数据的有效性和完整性，清理垃圾数据<br><code>npm cache verify</code></p></blockquote><blockquote><p>五、包问题<br>包是在 windows 下发布的，在 linux 安装错误。<br>排查方法：看日志，去除相关的包配置，再安装测试</p></blockquote><p>一般到第四步即可完美解决</p>]]></content>
      
      <categories>
          
          <category> 工作常见问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端</title>
      <link href="/yelee/2018/09/13/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"/>
      <url>/yelee/2018/09/13/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="security">  <div class="input-container">  <input type="password" class="form-control" id="pass" placeholder="请输入密码以访问" />    <label for="pass">请输入密码以访问</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/yelee/lib/crypto-js.js"></script><script src="/yelee/lib/blog-encrypt.js"></script><link href="/yelee/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      <categories>
          
          <category> 前端面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端面试 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ES6中简约强大数组操作组合</title>
      <link href="/yelee/2018/09/07/ES6%E4%B8%AD%E7%AE%80%E7%BA%A6%E5%BC%BA%E5%A4%A7%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%BB%84%E5%90%88/"/>
      <url>/yelee/2018/09/07/ES6%E4%B8%AD%E7%AE%80%E7%BA%A6%E5%BC%BA%E5%A4%A7%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%BB%84%E5%90%88/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ES6-数组新增方法"><a href="#ES6-数组新增方法" class="headerlink" title="ES6 数组新增方法"></a>ES6 数组新增方法</h2><h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h3><p><code>array.reduce(callback[, initialValue])</code></p><a id="more"></a><p>数组求和</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br><span class="line">numbers.reduce(<span class="function">(<span class="params">prev, cur, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'prev: '</span> + prev + <span class="string">'; '</span> + <span class="string">'cur: '</span> + cur + <span class="string">';'</span>)</span><br><span class="line">  <span class="keyword">return</span> prev + cur</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">prev: <span class="number">10</span></span><br><span class="line">cur: <span class="number">20</span></span><br><span class="line">prev: <span class="number">30</span></span><br><span class="line">cur: <span class="number">30</span></span><br><span class="line">prev: <span class="number">60</span></span><br><span class="line">cur: <span class="number">40</span></span><br></pre></td></tr></table></figure><p>这第二个参数就是设置 prev 的初始类型和初始值，比如为 0，就表示 prev 的初始值为 number 类型，值为 0，因此，reduce 的最终结果也会是 number 类型。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br><span class="line">numbers.reduce(<span class="function">(<span class="params">prev, cur, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'prev: '</span> + prev + <span class="string">'; '</span> + <span class="string">'cur: '</span> + cur + <span class="string">';'</span>)</span><br><span class="line">  <span class="keyword">return</span> prev + cur</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">prev: <span class="number">0</span></span><br><span class="line">cur: <span class="number">10</span></span><br><span class="line">prev: <span class="number">10</span></span><br><span class="line">cur: <span class="number">20</span></span><br><span class="line">prev: <span class="number">30</span></span><br><span class="line">cur: <span class="number">30</span></span><br><span class="line">prev: <span class="number">60</span></span><br><span class="line">cur: <span class="number">40</span></span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.zhangxinxu.com/wordpress/2013/04/es5%E6%96%B0%E5%A2%9E%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/" target="_blank" rel="noopener">https://www.zhangxinxu.com/wordpress/2013/04/es5%E6%96%B0%E5%A2%9E%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/</a></p><p><a href="https://segmentfault.com/a/1190000005921341" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005921341</a></p><p><a href="https://segmentfault.com/a/1190000013972464" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013972464</a></p><p><a href="https://segmentfault.com/a/1190000013121115" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013121115</a></p>]]></content>
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>干掉状态从session到token</title>
      <link href="/yelee/2018/09/07/%E5%B9%B2%E6%8E%89%E7%8A%B6%E6%80%81%E4%BB%8Esession%E5%88%B0token/"/>
      <url>/yelee/2018/09/07/%E5%B9%B2%E6%8E%89%E7%8A%B6%E6%80%81%E4%BB%8Esession%E5%88%B0token/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="美好的旧时光"><a href="#美好的旧时光" class="headerlink" title="美好的旧时光"></a>美好的旧时光</h2><p>我经常怀念三十年前那美好的旧时光， 工作很轻松， 生活很悠闲。</p><p>上班的时候偶尔有些 HTTP 的请求发到我这里， 我简单的看一下， 取出相对应的 html 文档，图片，发回去就可以了， 然后就可以继续喝茶聊天。</p><a id="more"></a><p>我的创造者们对我很好， 他们制定的一个简单 HTTP 协议， 就是请求加响应， 尤其是我不用记住是谁刚刚发了 HTTP 请求， 每个请求对我来说都是全新的！</p><p>邮件服务器很羡慕我， 他说：老弟，你的生活太惬意了， 哪像我， 每次有人从客户端访问邮箱， 我都得专门给他建立一个会话， 来处理他发的消息， 你倒好， 完全不用管理会话。</p><p>这是由应用的特性决定的， 如果邮件服务器不管理会话， 那多个人之间的邮件消息就会完全混到一起了， 乱作一团了。</p><p>而 30 年前的 Web 基本上就是文档的浏览而已， 既然是浏览，我作为一个服务器， 为什么要记住谁在一段时间里都浏览了什么文档呢？</p><p>2</p><h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><p>但是好日子没持续多久， 很快大家就不满足于静态的 Html 文档了， 交互式的 Web 应用开始兴起， 尤其是论坛， 在线购物等网站。</p><p>我马上就遇到了和邮件服务器一样的问题， 那就是必须管理会话，必须记住哪些人登录系统， 哪些人往自己的购物车中放了商品， 也就是说我必须把每个人区分开。</p><p>这对我来说是个不小的挑战， 由于 HTTP 协议的无状态特性， 我必须加点小手段，才能完成会话管理。</p><p>我想出的办法就是给大家发一个会话标识(session id), 说白了就是一个随机的字符串，每个人收到的都不一样， 每次大家向我发起 HTTP 请求的时候，把这个字符串给一并捎过来， 这样我就能区分开谁是谁了。</p><p>3</p><h2 id="沉重的负担"><a href="#沉重的负担" class="headerlink" title="沉重的负担"></a>沉重的负担</h2><p>大家都很高兴， 可是我就不爽了。</p><p>每个人只需要保存自己的 session id，而我需要保存所有人的 session id ！ 如果访问我的人多了， 就得由成千上万，甚至几十万个。</p><p>这对我来说是一个巨大的开销 ， 严重的限制了我的扩展能力， 比如说我用两个机器组成了一个集群， 小 F 通过机器 A 登录了系统， 那 session id 会保存在机器 A 上， 假设小 F 的下一次请求被转发到机器 B 怎么办？ 机器 B 可没有小 F 的 session id 啊。</p><p>有时候我会采用一点小伎俩： <strong>session sticky</strong> ， 就是让小 F 的请求一直粘连在机器 A 上， 但是这也不管用， 要是机器 A 挂掉了， 还得转到机器 B 去。</p><p>那我只好做 session 的复制了， 把 session id 在两个机器之间搬来搬去， 快累死了。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vNJe66yhKRkVOxqS9gxftlwCuh8yicUcPPFaMMLv0oia9Xzf5IutmIPwQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><blockquote><ul><li>后来有个叫 <strong>Memcached</strong> 的给我支了招： 把 session id 集中存储到一个地方， 所有的机器都来访问这个地方的数据， 这样一来，就不用复制了， 但是增加了单点失败的可能性， 要是那个负责 session 的机器挂了， 所有人都得重新登录一遍， 估计得被人骂死。</li></ul></blockquote><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vwDyicwnvVayaKBpxXY4W5mUgQDwHD7Iwu3yY2OhV4qXG49oMbIgQP0A/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>我也尝试把这个单点的机器也搞出集群，增加可靠性， 但不管如何， 这小小的 session 对我来说是一个沉重的负担。</p><p>4</p><h3 id="时间换空间"><a href="#时间换空间" class="headerlink" title="时间换空间"></a>时间换空间</h3><p>这几天的晚上我一直在思考， 我为什么要保存这可恶的 session 呢， 只让每个客户端去保存该多好？</p><p>可是如果我不保存这些 session id , 我怎么验证客户端发给我的 session id 的确是我生成的呢？ 如果我不去验证，我都不知道他们是不是合法登录的用户， 那些不怀好意的家伙们就可以伪造 session id , 为所欲为了。</p><p>嗯，对了，关键点就是验证 ！</p><blockquote><ul><li>比如说， 小 F 已经登录了系统， 我给他发一个 <strong>令牌(token)</strong>， 里边包含了小 F 的 user id， 下一次小 F 再次通过 Http 请求访问我的时候， 把这个 token 通过 Http header 带过来不就可以了。</li></ul></blockquote><p>不过这和 session id 没有本质区别啊， 任何人都可以可以伪造， 所以我得想点儿办法， 让别人伪造不了。</p><blockquote><ul><li><strong>那就对数据做一个签名吧， 比如说我用 HMAC-SHA256 算法，加上一个只有我才知道的密钥， 对数据做一个签名， 把这个签名和数据一起作为 token ， 由于密钥别人不知道， 就无法伪造 token 了。</strong></li></ul></blockquote><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vicfOmZHQhQ7e6Wjk7licKBMh38rPZfnEQxAibWXjY84P0icEVoFU51ibwiaQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>这个 token 我不保存， 当小 F 把这个 token 给我发过来的时候，我再用同样的 HMAC-SHA256 算法和同样的密钥，对数据再计算一次签名， 和 token 中的签名做个比较， 如果相同， 我就知道小 F 已经登录过了，并且可以直接取到小 F 的 user id , 如果不相同， 数据部分肯定被人篡改过， 我就告诉发送者： 对不起，没有认证。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vNJe66yhKRkVOxqS9gxftlwCuh8yicUcPPFaMMLv0oia9Xzf5IutmIPwQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>Token 中的数据是明文保存的（虽然我会用 Base64 做下编码， 但那不是加密）， 还是可以被别人看到的， 所以我不能在其中保存像密码这样的敏感信息。</p><p>当然， 如果一个人的 token 被别人偷走了， 那我也没办法， 我也会认为小偷就是合法用户， 这其实和一个人的 session id 被别人偷走是一样的。</p><blockquote><ul><li>这样一来， 我就不保存 session id 了， <strong>我只是生成 token , 然后验证 token ， 我用我的 CPU 计算时间获取了我的 session 存储空间 ！</strong></li></ul></blockquote><p>解除了 session id 这个负担， 可以说是无事一身轻， 我的机器集群现在可以轻松地做水平扩展， 用户访问量增大， 直接加机器就行。 这种无状态的感觉实在是太好了！</p><p>（完）</p>]]></content>
      
      <categories>
          
          <category> 状态保持 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>element-ui更换主题和按需引入组件</title>
      <link href="/yelee/2018/09/04/element-ui%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5%E7%BB%84%E4%BB%B6/"/>
      <url>/yelee/2018/09/04/element-ui%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5%E7%BB%84%E4%BB%B6/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="element-ui-使用初体验"><a href="#element-ui-使用初体验" class="headerlink" title="element-ui 使用初体验"></a>element-ui 使用初体验</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>手上有些项目用的<code>element-ui</code>，刚好有空琢磨一下怎么减小打包文件大小和打包速度方面，为了演示实验，用 vue-cli 生成初始项目，在这仅对 element-ui 主题和组件方面来优化。</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack vuecli</span><br></pre></td></tr></table></figure><h3 id="完整引入"><a href="#完整引入" class="headerlink" title="完整引入"></a>完整引入</h3><p>完整地将 ui 和样式引入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span></span><br></pre></td></tr></table></figure><p>在页面简单使用三个组件，看看效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"block"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"demonstration"</span>&gt;</span>区分颜色<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-rate</span> <span class="attr">v-model</span>=<span class="string">"value1"</span> <span class="attr">:colors</span>=<span class="string">"['#99A9BF', '#F7BA2A', '#FF9900']"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-rate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">icon</span>=<span class="string">"el-icon-search"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"success"</span> <span class="attr">icon</span>=<span class="string">"el-icon-check"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"info"</span> <span class="attr">icon</span>=<span class="string">"el-icon-message"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"warning"</span> <span class="attr">icon</span>=<span class="string">"el-icon-star-off"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"danger"</span> <span class="attr">icon</span>=<span class="string">"el-icon-delete"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/gb/element-ui更换主题和按需引入组件/0.bmp" alt=""></p><p>再看一下打包后的资源大小情况<code>npm run build --report</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: fa47514a97341329a7c0</span><br><span class="line">Version: webpack 3.11.0</span><br><span class="line">Time: 20363ms</span><br><span class="line">                                                  Asset       Size  Chunks                    Chunk Names</span><br><span class="line">                 static/fonts/element-icons.6f0a763.ttf      11 kB          [emitted]</span><br><span class="line">               static/js/vendor.5efcf828140d5dbedda9.js     714 kB       0  [emitted]  [big]  vendor</span><br><span class="line">                  static/js/app.a4a31db472f653b911e7.js      12 kB       1  [emitted]         app</span><br><span class="line">             static/js/manifest.2ae2e69a05c33dfc65f8.js  857 bytes       2  [emitted]         manifest</span><br><span class="line">    static/css/app.f24bb0ae3686720fe2e00c5a2024b8f1.css     185 kB       1  [emitted]         app</span><br><span class="line">static/css/app.f24bb0ae3686720fe2e00c5a2024b8f1.css.map     267 kB          [emitted]</span><br><span class="line">           static/js/vendor.5efcf828140d5dbedda9.js.map    2.73 MB       0  [emitted]         vendor</span><br><span class="line">              static/js/app.a4a31db472f653b911e7.js.map    22.8 kB       1  [emitted]         app</span><br><span class="line">         static/js/manifest.2ae2e69a05c33dfc65f8.js.map    4.97 kB       2  [emitted]         manifest</span><br><span class="line">                                             index.html  508 bytes          [emitted]</span><br></pre></td></tr></table></figure><p>发现打包后提取公共模块<code>static/js/vendor.js</code>有 714kb</p><p>再看一下各个模块占用情况：</p><p><img src="/gb/element-ui更换主题和按需引入组件/1.bmp" alt=""></p><p>发现<code>elment-ui.common.js</code>占用最大。所有模块资源总共有 708kb。怎么才能减小打包后的大小呢？很容易就会想到 ui 的引入和样式的引入中，实际我们只使用了三个组件，却整体都被打包了，在这里引入这三个组件即可。</p><h3 id="按需引入组件样式"><a href="#按需引入组件样式" class="headerlink" title="按需引入组件样式"></a>按需引入组件样式</h3><p>新建一个<code>element-variables.scss</code>文件（为什么是 SCSS 文件，后面自定义主题会用到）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/*icon字体路径变量*/</span><br><span class="line">$--font-path: &quot;~element-ui/lib/theme-chalk/fonts&quot;;</span><br><span class="line"></span><br><span class="line">/*按需引入用到的组件的scss文件和基础scss文件*/</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/base.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/rate.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/button.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/row.scss&quot;;</span><br></pre></td></tr></table></figure><h3 id="按需引入组件"><a href="#按需引入组件" class="headerlink" title="按需引入组件"></a>按需引入组件</h3><p>新建一个<code>elementConfig.js</code>文件，将项目用到的 element 组件引入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Rate, Row, Button &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  install(V) &#123;</span><br><span class="line">    V.use(Rate)</span><br><span class="line">    V.use(Button)</span><br><span class="line">    V.use(Row)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第一次优化后打包分析"><a href="#第一次优化后打包分析" class="headerlink" title="第一次优化后打包分析"></a>第一次优化后打包分析</h3><p>将以上<code>element-variables.scss</code>和<code>elementConfig.js</code>引入到<code>main.js</code>中。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'@/assets/js/elementConfig'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'@/assets/css/element-variables.scss'</span></span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI)</span><br></pre></td></tr></table></figure><p>貌似上面一切都很顺理成章，打包后大小会减小。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: <span class="number">3</span>ba9b74482f121efd3aa</span><br><span class="line">Version: webpack <span class="number">3.11</span><span class="number">.0</span></span><br><span class="line">Time: <span class="number">18854</span>ms</span><br><span class="line">                                                  Asset       Size  Chunks                    Chunk Names</span><br><span class="line">                 <span class="keyword">static</span>/fonts/element-icons<span class="number">.6</span>f0a763.ttf      <span class="number">11</span> kB          [emitted]</span><br><span class="line">               <span class="keyword">static</span>/js/vendor<span class="number">.11</span>c71f168a2d61b547a0.js     <span class="number">714</span> kB       <span class="number">0</span>  [emitted]  [big]  vendor</span><br><span class="line">                  <span class="keyword">static</span>/js/app.dbb5b49dad2d42b3598c.js    <span class="number">11.2</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line">             <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js  <span class="number">857</span> bytes       <span class="number">2</span>  [emitted]         manifest</span><br><span class="line">    <span class="keyword">static</span>/css/app.bf52525d6279e7fb87b4db770d119a8d.css    <span class="number">25.7</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line"><span class="keyword">static</span>/css/app.bf52525d6279e7fb87b4db770d119a8d.css.map      <span class="number">63</span> kB          [emitted]</span><br><span class="line">           <span class="keyword">static</span>/js/vendor<span class="number">.11</span>c71f168a2d61b547a0.js.map    <span class="number">2.73</span> MB       <span class="number">0</span>  [emitted]         vendor</span><br><span class="line">              <span class="keyword">static</span>/js/app.dbb5b49dad2d42b3598c.js.map      <span class="number">21</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line">         <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js.map    <span class="number">4.97</span> kB       <span class="number">2</span>  [emitted]         manifest</span><br><span class="line">                                             index.html  <span class="number">508</span> bytes          [emitted]</span><br></pre></td></tr></table></figure><p>结果可知，<code>static/js/vendor.js</code>还是 714kb！</p><p>再看各个模块占用情况：</p><p><img src="/gb/element-ui更换主题和按需引入组件/2.bmp" alt=""></p><p>WHAT?竟然模块都没什么变化，岂不是竹篮打水，事与愿违。</p><h3 id="再次打包优化尝试"><a href="#再次打包优化尝试" class="headerlink" title="再次打包优化尝试"></a>再次打包优化尝试</h3><p>后来查到有人同样遇到这个问题，提出一个<a href="https://github.com/ElemeFE/element/issues/6362#issuecomment-323517538" target="_blank" rel="noopener">issues#6362</a>，原来只引入需要的<code>element-ui</code>组件，<code>webpack</code>还是把整体的 ui 库和样式都打包了，需要一个<code>webpack</code>的<code>babel</code>插件<code>babel-plugin-component</code>，这样才能真正按需引入打包。这块其实被写到官方文档更换 <a href="http://element-cn.eleme.io/#/zh-CN/component/custom-theme" target="_blank" rel="noopener">自定义主题</a> 的配置了。</p><p>于是<code>npm i babel-pugin-componet -D</code>安装后，在增加<code>.babelrc</code>文件插件配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"presets"</span>: [</span><br><span class="line">    [<span class="string">"env"</span>, &#123;</span><br><span class="line">      <span class="string">"modules"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"targets"</span>: &#123;</span><br><span class="line">        <span class="string">"browsers"</span>: [<span class="string">"&gt; 1%"</span>, <span class="string">"last 2 versions"</span>, <span class="string">"not ie &lt;= 8"</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="string">"stage-2"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"plugins"</span>: [<span class="string">"transform-vue-jsx"</span>, <span class="string">"transform-runtime"</span>, [<span class="string">"component"</span>, &#123;</span><br><span class="line">    <span class="string">"libraryName"</span>: <span class="string">"element-ui"</span>,</span><br><span class="line">    <span class="string">"styleLibraryName"</span>: <span class="string">"theme-chalk"</span></span><br><span class="line">  &#125;]]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>页面运行正常，再次打包。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: <span class="number">9</span>cc71dead6d7646c9ed4</span><br><span class="line">Version: webpack <span class="number">3.11</span><span class="number">.0</span></span><br><span class="line">Time: <span class="number">9963</span>ms</span><br><span class="line">                                                  Asset       Size  Chunks             Chunk Names</span><br><span class="line">                 <span class="keyword">static</span>/fonts/element-icons<span class="number">.6</span>f0a763.ttf      <span class="number">11</span> kB          [emitted]</span><br><span class="line">                  <span class="keyword">static</span>/js/app<span class="number">.77</span>c0883f4f0fc0bf5cbc.js    <span class="number">11.4</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line">               <span class="keyword">static</span>/js/vendor<span class="number">.942130</span>fd13274b901889.js     <span class="number">126</span> kB       <span class="number">1</span>  [emitted]  vendor</span><br><span class="line">             <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js  <span class="number">857</span> bytes       <span class="number">2</span>  [emitted]  manifest</span><br><span class="line">    <span class="keyword">static</span>/css/app.b140020e5dbee406ae70780b43ba7ddc.css    <span class="number">27.8</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line"><span class="keyword">static</span>/css/app.b140020e5dbee406ae70780b43ba7ddc.css.map    <span class="number">91.4</span> kB          [emitted]</span><br><span class="line">              <span class="keyword">static</span>/js/app<span class="number">.77</span>c0883f4f0fc0bf5cbc.js.map    <span class="number">21.1</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line">           <span class="keyword">static</span>/js/vendor<span class="number">.942130</span>fd13274b901889.js.map     <span class="number">613</span> kB       <span class="number">1</span>  [emitted]  vendor</span><br><span class="line">         <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js.map    <span class="number">4.97</span> kB       <span class="number">2</span>  [emitted]  manifest</span><br><span class="line">                                             index.html  <span class="number">508</span> bytes          [emitted]</span><br></pre></td></tr></table></figure><p><code>static/js/vendor.js</code>确实变小了，126kB。再来看各个模块分析图。</p><p><img src="/gb/element-ui更换主题和按需引入组件/3.bmp" alt=""></p><p>模块总共 135.03KB，少了 5 倍！</p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p><code>element-ui</code>的<code>theme-chalk</code>使用<code>SCSS</code>编写，如果在自己的项目中也是用<code>SCSS</code>，那么可以直接在项目中改变样式变量，因此可以在前面新建的<code>element-variables.scss</code>文件用新的主题颜色变量覆盖即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/*主题颜色变量*/</span><br><span class="line">$--color-primary: #f0f;</span><br><span class="line"></span><br><span class="line">/*icon字体路径变量*/</span><br><span class="line">$--font-path: &quot;~element-ui/lib/theme-chalk/fonts&quot;;</span><br></pre></td></tr></table></figure><p>可能你已经注意到了，这里没有分别引入用到的组件样式了，是因为<code>babel-plugin-component</code>帮我们按需引入了对应的样式。</p><p>现在我们的主题就变成了</p><p><img src="/gb/element-ui更换主题和按需引入组件/4.bmp" alt=""></p><p>如果你没有用到<code>SCSS</code>，可以用<code>element-theme</code>主题编译插件，生成自定义主题文件引入。</p><p>完~ps：个人见解有限，欢迎指正。</p>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> element-ui </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端必备vscode插件</title>
      <link href="/yelee/2018/09/03/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87vscode%E6%8F%92%E4%BB%B6/"/>
      <url>/yelee/2018/09/03/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87vscode%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这篇文章只要让你做一些基础的配置，把 vscode 变得更加顺手；<br>插件的需求不是一成不变，有些插件我已经移除了。。在最新的 VSCODE 1.9.1 中，<br>部分以前用插件实现的功能已经集成了，那就没有必要存在了。这里就不做推荐了复制代码</p><a id="more"></a><h1 id="必备插件"><a href="#必备插件" class="headerlink" title="必备插件"></a>必备插件</h1><hr><h2 id="功能性"><a href="#功能性" class="headerlink" title="功能性"></a>功能性</h2><ol><li>Auto Close Tag : 匹配标签，关闭对应的标签。很实用【HTML/XML】 Auto</li><li>Rename Tag : sublime 和 webstorm 也有这个内置功能，改变标签的时候同时改动开闭合标签；【HTML/XML】</li><li>beautify : 良好的拓展性，可以格式化 JSON|JS|HTML|CSS|SCSS,比内置格式化好用</li><li>Code Runner : 代码编译运行看结果，支持众多语言</li><li>colorize : 会给颜色代码增加一个当前匹配代码颜色的背景，非常好</li><li>Document This : JSDOC 注解调用，值得易用</li><li>Git History : 不得不赞的插件，谁用谁知道，功能很赞</li><li>HTML CSS Support : 这个也是必备插件之一</li><li>Path Autocomplete : 路径智能补全</li><li>Path Intellisense ： 路径智能提示</li><li>SCSS IntelliSense Preview : SCSS 智能提醒，配置强大</li><li>Syncing: 这个同步插件要比官方市场那个最高下载量的要好，支持删除同步！！！</li><li>Version Lens : 可以及时看到 package.json 内部版本的变动，很实用</li><li>Output Colorizer : 可以终端日志输出着色，实用</li></ol><h2 id="代码片段插件"><a href="#代码片段插件" class="headerlink" title="代码片段插件"></a>代码片段插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JavaScript (ES6) code snippets  : ES6的代码片段，实用</span><br><span class="line">JavaScript Snippet Pack   : ES5及以下的代码片段，实用</span><br></pre></td></tr></table></figure><h2 id="语法校验"><a href="#语法校验" class="headerlink" title="语法校验"></a>语法校验</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stylelint : 比内置的要全，更智能</span><br></pre></td></tr></table></figure><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><ol><li>Panda:用了相当久的一套颜色高亮，个人感觉很耐看</li><li>Enki Theme (Material Design Inspired) : 当前用的代码高亮，个人感觉很赞</li><li>Material Icon Theme : 一套扁平化的文件图标，内置的 seti 也很优秀，还有 simple icon 和 vscode-icons</li></ol><p>作者：爱吃 kiwi<br>链接：<a href="https://leekiwi.github.io/">https://leekiwi.github.io/</a><br>来源：github<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      <categories>
          
          <category> 实用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nodejs学习笔记</title>
      <link href="/yelee/2018/08/28/node-js-study-note/"/>
      <url>/yelee/2018/08/28/node-js-study-note/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Nodejs-学习笔记"><a href="#Nodejs-学习笔记" class="headerlink" title="Nodejs 学习笔记"></a>Nodejs 学习笔记</h2><p><strong>node 内部对模块输出 module.exports 的实现</strong></p><p>变量 module 是 Node 在加载 js 文件前准备的一个变量，并将其传入加载函数</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 准备module对象</span><br><span class="line">var module = &#123;</span><br><span class="line">    id: &apos;hello&apos;,</span><br><span class="line">    exports: &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var load = function(module) &#123;</span><br><span class="line">    // 读取的hello.js代码</span><br><span class="line">    function greet(name) &#123;</span><br><span class="line">        console.log(&apos;Hello, &apos; + name + &apos;!&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    module.exports = greet;</span><br><span class="line"></span><br><span class="line">    // hello.js代码结束</span><br><span class="line">    return module.exports;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var exported = load(module);</span><br><span class="line"></span><br><span class="line">// 保存module</span><br><span class="line">save(module, exported);</span><br></pre></td></tr></table></figure><p>默认情况下，Node 准备的 exports 变量和 module.exports 变量实际上是同一个变量，所以一下两种写法都支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// method 1</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    foo: foo,</span><br><span class="line">    bar: bar</span><br><span class="line">&#125;;</span><br><span class="line">or</span><br><span class="line">module.exports.foo = foo;</span><br><span class="line">module.exports.bar = bar;</span><br><span class="line"></span><br><span class="line">// method 2</span><br><span class="line">exports.foo = foo;</span><br><span class="line">exports.bar = bar;</span><br></pre></td></tr></table></figure><p><strong>process</strong></p><p>下一轮事件循环 回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">process.nextTick(function() &#123;</span><br><span class="line">    console.log(&apos;nextTick callback&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>程序即将退出 回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">process.on(&apos;exit&apos;, function(code) &#123;</span><br><span class="line">    console.log(&apos;about to exit with code&apos; + code);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">console.log(&apos;nextTick set&apos;);</span><br></pre></td></tr></table></figure><p><strong>readFile/readFileSync writeFile/writeFileSync stat</strong></p><p>异步读取一个文本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&apos;./hello.js&apos;, &apos;utf-8&apos;, function(err, data) &#123;</span><br><span class="line">    console.log(&apos;read file start...&apos;);</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>异步读取一个二进制文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&apos;1.jpg&apos;, function(err, data) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // 返回一个buffer对象</span><br><span class="line">        console.log(data);</span><br><span class="line">        // Buffer对象转化成字符串</span><br><span class="line">        console.log(data.toString(&apos;utf-8&apos;));</span><br><span class="line">        // 文件大小</span><br><span class="line">        console.log(data.length + &apos; bytes&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同步读取一个文件直接返回，读取错误用 try…catch 捕获</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">    var data = fs.readFileSync(&apos;./1.jpg&apos;);</span><br><span class="line">    console.log(data);</span><br><span class="line">&#125;</span><br><span class="line">catch(err) &#123;</span><br><span class="line">    console.log(err);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(&apos;readFileSync ended&apos;);</span><br></pre></td></tr></table></figure><p>异步写入一个文件，默认是以 UTF-8 编码写入文本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var data = &apos;Hello,Node.js&apos;;</span><br><span class="line">// var data = fs.readFileSync(&apos;./1.jpg&apos;);</span><br><span class="line">fs.writeFile(&apos;output.txt&apos;, data, function(err) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        console.log(&apos;write file finished&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同步写入文本到一个文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var data = &apos;Hello,Node.js,I am sync data&apos;;</span><br><span class="line">fs.writeFileSync(&apos;output.txt&apos;, data);</span><br><span class="line">console.log(&apos;writeFileSync ended&apos;);</span><br></pre></td></tr></table></figure><p>获取文件信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">fs.stat(&apos;./1.jpg&apos;, function(err, stat) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // 是否是文件</span><br><span class="line">        console.log(&apos;isFile:&apos; + stat.isFile());</span><br><span class="line">        // 是否是目录</span><br><span class="line">        console.log(&apos;isDirectory:&apos; + stat.isDirectory());</span><br><span class="line"></span><br><span class="line">        if(stat.isFile()) &#123;</span><br><span class="line">            // 文件大小</span><br><span class="line">            console.log(&apos;size:&apos; + stat.size);</span><br><span class="line">            // 创建时间，Date对象</span><br><span class="line">            console.log(&apos;birth time:&apos; + stat.birthtime);</span><br><span class="line">            // 修改时间，Date对象</span><br><span class="line">            console.log(&apos;modified time:&apos; + stat.mtime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>PS:绝大部分需要在服务器运行期反复执行业务逻辑，必须使用异步代码服务器启动时如果需要读取配置文件，或者结束时需要写入到状态文件时，可以使用同步代码</p><p><strong>createReadStream createWriteStream pipe</strong></p><p>在 node.js 中，流也是一个对象，我们只需要响应流的事件就可以了。<br>data 事件表示流的数据已经可以读取了，end 事件表示这个流已经到末尾了，没有数据可以读取了，error 事件表示出错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var rs = fs.createReadStream(&apos;./data.txt&apos;, &apos;utf-8&apos;);</span><br><span class="line"></span><br><span class="line">// data事件可能有多次，每次传递的chunk是流的一部分数据</span><br><span class="line">rs.on(&apos;data&apos;, function(chunk) &#123;</span><br><span class="line">    console.log(&apos;data event:&apos;, chunk);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(&apos;end&apos;, function (chunk) &#123;</span><br><span class="line">    console.log(&apos;end event:&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(&apos;error&apos;, function (chunk) &#123;</span><br><span class="line">    console.log(&apos;error event:&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>以流的形式写入文件，只需要不断调用 write()方法，最后以 end()结束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var ws = fs.createWriteStream(&apos;./data.txt&apos;);</span><br><span class="line">ws.write(&apos;user stream write data\n&apos;);</span><br><span class="line">ws.write(&apos;loading...\n&apos;);</span><br><span class="line">ws.write(&apos;END&apos;);</span><br><span class="line">ws.end();</span><br></pre></td></tr></table></figure><p>pipe()把一个文件流和另一个文件流串起来，这样源文件的所有数据就自动写入到目标文件里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var rs = fs.createReadStream(&apos;./data.txt&apos;);</span><br><span class="line">var ors = fs.createReadStream(&apos;./output.txt&apos;);</span><br><span class="line">var ws = fs.createWriteStream(&apos;./output.txt&apos;);</span><br><span class="line">rs.pipe(ws);</span><br></pre></td></tr></table></figure><p>创建一个服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var server = http.createServer(function(request, response) &#123;</span><br><span class="line">    // http请求头的method和url</span><br><span class="line">    console.log(&apos;header meathod:&apos;, request.method);</span><br><span class="line">    console.log(&apos;header url:&apos;, request.url);</span><br><span class="line"></span><br><span class="line">    // 将http响应200写入response，同时设置content-type</span><br><span class="line">    response.writeHead(200, &#123;&apos;Content-Type&apos;: &apos;text/html&apos;&#125;);</span><br><span class="line"></span><br><span class="line">    // 将http响应的html内容写入response</span><br><span class="line">    response.end(&apos;&lt;h1&gt;Hello world!&lt;/h1&gt;&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">console.log(&apos;Server is running at http://localhost:8080&apos;);</span><br></pre></td></tr></table></figure><p>实现一个文件服务器，拼接访问路径读取本地文件，从命令参数获取 root 目录，默认是当前目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">var root = path.resolve(&apos;.&apos;);</span><br><span class="line">console.log(&apos;Static root dir:&apos; + root);</span><br><span class="line"></span><br><span class="line">// 创建服务器</span><br><span class="line"> var server = http.createServer(function (request, response) &#123;</span><br><span class="line">    // node提供url模块解析url字符串 获取url的path</span><br><span class="line"></span><br><span class="line">    var pathname = url.parse(request.url).pathname;</span><br><span class="line"></span><br><span class="line">    if (pathname === &apos;/favicon.ico&apos;) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    console.log(&apos;url:&apos;, url.parse(request.url));</span><br><span class="line"></span><br><span class="line">    // 获取对应本地文件路径</span><br><span class="line">    var filepath = path.join(root, pathname);</span><br><span class="line">    // 读取文件状态</span><br><span class="line">    fs.stat(filepath, function (err, stats) &#123;</span><br><span class="line">        // 文件出错</span><br><span class="line">        if (err) &#123;</span><br><span class="line">            console.log(&apos;file error!&apos;);</span><br><span class="line">            response.end(&apos;&lt;h1&gt;file error!&lt;/h1&gt;&apos;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 是文件</span><br><span class="line">        if (stats.isFile()) &#123;</span><br><span class="line">            console.log(&apos;200 &apos; + request.url);</span><br><span class="line">            response.writeHead(200);</span><br><span class="line">            // 将文件流导入response</span><br><span class="line">            fs.createReadStream(filepath).pipe(response);</span><br><span class="line">        &#125;</span><br><span class="line">        // 文件不存在</span><br><span class="line">        else &#123;</span><br><span class="line">            console.log(&apos;404 &apos; + request.url);</span><br><span class="line">            response.writeHead(404);</span><br><span class="line">            // 将文件流导入response</span><br><span class="line">            response.end(&apos;&lt;h1&gt;404 not found!&lt;/h1&gt;&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">console.info(&apos;Server is runing at http://localhost:8080/&apos;);</span><br></pre></td></tr></table></figure><p>express 是第一代流行的 web 框架，它对 Node.js 的 HTTP 进行封装，语法基于 ES5，要实现异步代码，只有一个方法：回调。</p><p>koa2 完全基于 ES7 开发，使用 Promise 配合 async 实现异步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">// 创建一个Koa对象</span><br><span class="line">const app = new Koa();</span><br><span class="line"></span><br><span class="line">// 对于任何请求，app将调用该异步函数处理请求</span><br><span class="line">// ctx是koa封装request和response变量</span><br><span class="line">// next是koa传入的将要处理下一个异步函数</span><br><span class="line">// 每个async函数称为middleware</span><br><span class="line">// app.use()顺序决定了middleware的顺序</span><br><span class="line"></span><br><span class="line">app.use(async(ctx, next) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">    fs.readFile(&apos;./data.txt&apos;, &apos;utf-8&apos;, function(err, data) &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 调用下一个middleware，如果没有调用，则下一个middleware不会执行</span><br><span class="line">    await next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.use(async(ctx, next) =&gt; &#123;</span><br><span class="line">    ctx.response.type = &apos;text/html&apos;;</span><br><span class="line">    ctx.response.body = &apos;&lt;h1&gt;Hello, koa!&lt;/h1&gt;&apos;;</span><br><span class="line">    console.log(&apos;response end&apos;);</span><br><span class="line">    // 调用下一个middleware</span><br><span class="line">    await next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(3000);</span><br><span class="line">console.log(&apos;app started at http://localhost:3000/&apos;);</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CDN原理介绍</title>
      <link href="/yelee/2018/08/27/CDN%E5%8E%9F%E7%90%86%E7%90%86%E8%A7%A3/"/>
      <url>/yelee/2018/08/27/CDN%E5%8E%9F%E7%90%86%E7%90%86%E8%A7%A3/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CDN-原理剖析"><a href="#CDN-原理剖析" class="headerlink" title="CDN 原理剖析"></a>CDN 原理剖析</h2><blockquote><blockquote><p>内容分发网络（Content delivery network 或 Content distribution network，缩写：CDN）是指一种通过互联网互相连接的电脑网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、视频、应用程序及其他文件发送给用户，来提供高性能、可扩展性及低成本的网络内容传递给用户。</p></blockquote></blockquote><a id="more"></a><blockquote><h3 id="为什么需要-CDN"><a href="#为什么需要-CDN" class="headerlink" title="为什么需要 CDN"></a>为什么需要 CDN</h3><p>根本上的原因是，访问速度对互联网应用的用户体验、口碑、甚至说直接的营收都有巨大的影响，任何的企业都渴望自己站点有更快的访问速度。而 HTTP 传输时延对 web 的访问速度的影响很大，在绝大多数情况下是起决定性作用的，这是由 TCP/IP 协议的一些特点决定的。物理层上的原因是光速有限、信道有限，协议上的原因有丢包、慢启动、拥塞控制等。</p><p>要提高访问速度，最简单的做法当然就是多设置几个服务器，让终端用户离服务器“更近”。典型的例子是各类下载网站在不同地域不同运营商设置镜像站，或者是像 Google 那样设置多个数据中心。但是多设几个服务器的问题也不少，一是多地部署时的困难，二是一致性没法保障，三则是管理困难、成本很高。实际上，在排除多地容灾等特殊需求的情况下，对大多数公司这种做法是不太可取的。当然，这种方案真正做好了，甚至是比后续所说的使用 CDN 要好的。</p><p>CDN 是一种公共服务，他本身有很多台位于不同地域、接入不同运营商的服务器，而所谓的使用 CDN 实质上就是让 CDN 作为网站的门面，用户访问到的是 CDN 服务器，而不是直接访问到网站。由于 CDN 内部对 TCP 的优化、对静态资源的缓存、预取，加上用户访问 CDN 时，会被智能地分配到最近的节点，降低大量延迟，让访问速度可以得到很大提升。</p><h3 id="CDN-的原理"><a href="#CDN-的原理" class="headerlink" title="CDN 的原理"></a>CDN 的原理</h3><blockquote><p>CDN 做了两件事，一是让用户访问最近的节点，二是从缓存或者源站获取资源</p></blockquote><p>CDN 有个源站的概念，源站就是提供内容的站点(网站的真实服务器), 从源站取内容的过程叫做回源。</p><p>每次访问的具体流程如图（以最普通的 CDN 为例）</p><p><img src="https://cloud.githubusercontent.com/assets/5894477/22008791/4edc00b0-dcb9-11e6-9663-ed19a3fa3182.png" alt="流程图"></p><p>具体举个例子：</p><p>用户在首次访问 <a href="https://assets-cdn.github.com/pinned-octocat.svg" target="_blank" rel="noopener">https://assets-cdn.github.com/pinned-octocat.svg</a> , 假设不委托 local DNS 服务器递归查询，会经历以下几个过程</p><ol><li>浏览器检查本地有没有这个东东的有效缓存，有则使用缓存，没有有效缓存则进行对<code>assets-cdn.github.com</code>的 DNS 查询，获得一个 CNAME 记录, <code>igithub.map.fastly.net</code>,值得注意的是，多个加速域名可以解析到同一个 CNAME，CDN 回源和缓存的时候考虑到了 hostname，+1；</li><li>进行对<code>github.map.fastly.net</code>的 DNS 查询，获得一个 A/AAAA 记录，给出地址<code>103.245.222.133</code>（视网站不同返回的不一样，可以有多个）, 这一步对 CDN 来说时十分重要的，它给出了离用户最近的边缘节点；</li><li>浏览器选一个返回的地址，然后进行真正的 http 请求，开始向<code>103.245.222.133</code>握手，握手完了把 http 请求头也发给了该边缘服务器;</li><li>边缘服务器检查自己的 cache 里面有没有<code>https://assets-cdn.github.com/pinned-octocat.svg</code>这个资源，有则返回给用户，如果没有，向 CDN 中心服务器发起请求;</li><li>CDN 中心服务器检查自己的 cache 里面有没有这个资源，有则返回给边缘服务器，没有则回源;</li><li>中心服务器发现客户配置了<code>github.map.fastly.net</code>的回源地址(这个只有 cdn 会知道，假设是<code>xxx.xxx.xxx.xxx</code>)，就把 http 请求发到源站地址上，源站返回后返回给请求方;</li></ol><p>可以看出 CDN 加速的原理很大部分是跟 DNS 挂钩在一起的，CDN 供应商几乎一定需要一个智能 DNS 服务器。CDN 可以拿到所有的明文数据，所以对数据安全性、保密性要求比较高的企业会选择自建 CDN 或者设置 NS 记录，指向自建的智能 DNS 服务器。</p><p>上述步骤每一步都可以缓存，注意是每一步！ 所以 CDN 要清除缓存很难，因为有很多服务器上的缓存要清除。无论是用户对边缘服务器的请求，还是 CDN 服务器的回源都可以使用 https。</p><p>注意，实际环境中图中每个服务器都可以是集群，甚至 CDN 分区域中心和总中心。</p></blockquote>]]></content>
      
      <categories>
          
          <category> 用户体验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端性能优化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>对MVC、MVP和MVVM的简单认识</title>
      <link href="/yelee/2018/08/27/%E5%AF%B9MVC%E3%80%81MVP%E5%92%8CMVVM%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/"/>
      <url>/yelee/2018/08/27/%E5%AF%B9MVC%E3%80%81MVP%E5%92%8CMVVM%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="MVVM-的前世与今生"><a href="#MVVM-的前世与今生" class="headerlink" title="MVVM 的前世与今生"></a>MVVM 的前世与今生</h2><h3 id="1-先聊一下-MVC"><a href="#1-先聊一下-MVC" class="headerlink" title="1. 先聊一下 MVC"></a>1. 先聊一下 MVC</h3><p>MVC：Model（模型） View（视图） Controller（控制器），主要是基于分层的目的，让彼此的职责分开。</p><p>View 通过 Controller 和 Model 联系，Controller 是 View 和 Model 的协调者，view 和 Model 不直接联系，基本联系都是单向的。</p><a id="more"></a><h3 id="2-顺带提下-MVP"><a href="#2-顺带提下-MVP" class="headerlink" title="2. 顺带提下 MVP"></a>2. 顺带提下 MVP</h3><p>MVP：是从 MVC 模式演变而来的，都是通过 Controller/Presenter 负责逻辑的处理+Model 提供数据+View 负责显示。</p><p>在 MVP 中，Presenter 完全把 View 和 Model 进行分离，主要的程序逻辑在 Presenter 里实现。并且，Presenter 和 View 是没有直接关联的，是通过定义好的接口进行交互，从而使得在变更 View 的时候可以保持 Presenter 不变。</p><h3 id="3-再聊聊-MVVN"><a href="#3-再聊聊-MVVN" class="headerlink" title="3. 再聊聊 MVVN"></a>3. 再聊聊 MVVN</h3><p>MVVM：Model + View + ViewModel，把 MVC 中的 Controller 和 MVP 中的 Presenter 改成 ViewModel</p><p>view 的变化会自动更新到 ViewModel，ViewModel 的变化也会自动同步到 View 上显示。这种自动同步是因为 ViewModel 中的属性实现了 Observer，当属性变更时都能触发对应操作。</p><ul><li>View 是 HTML 文本的 js 模板；</li><li>ViewModel 是业务逻辑层（一切 js 可视业务逻辑，比如表单按钮提交，自定义事件的注册和处理逻辑都在 viewmodel 里面负责监控俩边的数据）；</li><li>Model 数据层，对数据的处理（与后台数据交互的增删改查）</li></ul><p>提一下我熟悉的 MVVM 框架：vue.js，Vue.js 是一个构建数据驱动的 web 界面的渐进式框架。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。核心是一个响应的数据绑定系统。</p><h3 id="4-一句话总结下不同之处"><a href="#4-一句话总结下不同之处" class="headerlink" title="4. 一句话总结下不同之处"></a>4. 一句话总结下不同之处</h3><p>MVC 中联系是单向的，MVP 中 P 和 V 通过接口交互，MVVP 的联系是双向的</p>]]></content>
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vscode 实现设备上设置统一</title>
      <link href="/yelee/2018/08/24/vscode%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5/"/>
      <url>/yelee/2018/08/24/vscode%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一键同步-vscode-上的插件"><a href="#一键同步-vscode-上的插件" class="headerlink" title="一键同步 vscode 上的插件"></a>一键同步 vscode 上的插件</h2><p>准备工作：电脑上需安装 VSCode，拥有一个 github 账户。实现同步的功能主要依赖于 VSCode 插件 “Settings Sync”</p><h1 id="Setting-Sync-可同步包含的所有扩展和完整的用户文件夹"><a href="#Setting-Sync-可同步包含的所有扩展和完整的用户文件夹" class="headerlink" title="Setting Sync 可同步包含的所有扩展和完整的用户文件夹"></a>Setting Sync 可同步包含的所有扩展和完整的用户文件夹</h1><a id="more"></a><ol><li>设置文件</li><li>快捷键设置文件</li><li>Launch File</li><li>Snippets Folder</li><li>VSCode 扩展设置</li><li>工作空间</li></ol><h1 id="Setting-Sync-快捷键"><a href="#Setting-Sync-快捷键" class="headerlink" title="Setting Sync 快捷键"></a>Setting Sync 快捷键</h1><ol><li>上传： <code>Shift + Alt + U</code> (Sync: Update / Upload Settings)</li><li>下载： <code>Shift + Alt + D</code> (Sync: Download Settings)</li></ol><p>如果快捷键有冲突，可<code>Ctrl + K + S</code>快捷键设置配置其它快捷键 或 <code>Ctrl + P / F1</code> 在命令窗口输入 &gt;sync 即会出现相应命令供选择<br><img src="https://upload-images.jianshu.io/upload_images/7323128-6b887c855f200189.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170824104107261-1046727224.png"></p><h1 id="Step1-安装-同步插件”Settings-Sync”"><a href="#Step1-安装-同步插件”Settings-Sync”" class="headerlink" title="Step1. 安装 同步插件”Settings Sync”"></a>Step1. 安装 同步插件”Settings Sync”</h1><p><img src="https://upload-images.jianshu.io/upload_images/7323128-78990ea142e0f083.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823100639527-466207576.png"></p><h1 id="Step2-进入-github-gt-Settings-在左侧-Developer-settings-gt-Personal-access-tokens"><a href="#Step2-进入-github-gt-Settings-在左侧-Developer-settings-gt-Personal-access-tokens" class="headerlink" title="Step2. 进入 github -&gt; Settings 在左侧 Developer settings -&gt; Personal access tokens"></a>Step2. 进入 github -&gt; Settings 在左侧 Developer settings -&gt; Personal access tokens</h1><p><img src="https://upload-images.jianshu.io/upload_images/7323128-72b710b21917ce93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101018886-1450593067.png"></p><h1 id="Step3-点击按钮-Generate-new-token-新增一个-token"><a href="#Step3-点击按钮-Generate-new-token-新增一个-token" class="headerlink" title="Step3. 点击按钮 Generate new token 新增一个 token"></a>Step3. 点击按钮 Generate new token 新增一个 token</h1><p>图 1:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-a9e06366f6acbf24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101243980-1384930832.png"><br>图 2:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-2f69bf05699ce6a7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101418527-2001799760.png"><br>图 3:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-8d5ebc31a1a3cd97.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101508918-1034003796.png"><br>记住你自己生成的 token 值，在 VSCode 配置上回用得到，最好找个笔记保存下来。</p><h1 id="Step4-回到-VSCode-配置将-token-配置到本地"><a href="#Step4-回到-VSCode-配置将-token-配置到本地" class="headerlink" title="Step4. 回到 VSCode 配置将 token 配置到本地"></a>Step4. 回到 VSCode 配置将 token 配置到本地</h1><p>(Sync: Update / Uplaod Settings) <code>Shift + Alt + U</code> 在弹窗里输入你的 token， 回车后会生成 syncSummary.txt 文件</p><p><img src="https://upload-images.jianshu.io/upload_images/7323128-4561bc7955172c6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170824103332230-1621543570.png"></p><p>syncSummary.txt 文件会存储 VSCode 的设置及所安装的插件列表<br>有点类似 package.json 这样形式的文件<br>可以将自己的 token 分享到自己的团队里面去，这样团队可以共用一套设置。</p><h1 id="Step5-设置上同步下载设置"><a href="#Step5-设置上同步下载设置" class="headerlink" title="Step5. 设置上同步下载设置"></a>Step5. 设置上同步下载设置</h1><p>(Sync: Download Settings) <code>Shift + Alt + D</code> 在弹窗里输入你的 gist 值，稍后片刻便可同步成功</p><h1 id="Step6-如果要重置同步设置，变更其它-token"><a href="#Step6-如果要重置同步设置，变更其它-token" class="headerlink" title="Step6. 如果要重置同步设置，变更其它 token"></a>Step6. 如果要重置同步设置，变更其它 token</h1><p><code>Ctrl+P / F1</code> 弹出输入&gt;sync,即可重新配置你的其它 token 来同步</p>]]></content>
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> setting </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>正则表达式</title>
      <link href="/yelee/2018/08/22/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/yelee/2018/08/22/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="正则规则汇总"><a href="#正则规则汇总" class="headerlink" title="正则规则汇总"></a>正则规则汇总</h2><p>对字符串的处理，一般分为字符串操作和正则操作。</p><h5 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h5><ul><li>str.search(regStr) 返回 regStr 在 str 中第一个出现的位置</li><li>str.replace(regStr,newStr) 返回替换在 str 中 regStr 后字符串</li></ul><a id="more"></a><ul><li>str.substring(n1,n2) 返回 str 从 n1 位置到 n2 位置前一个字符串</li><li>str.chartAt(n) 返回 n 位置字符</li><li>str.split(regStr) 返回以 regStr 隔开的数组</li><li>str.match(reg) 返回在 str 中符合正则 reg 的字符串数组</li></ul><h5 id="正则操作"><a href="#正则操作" class="headerlink" title="正则操作"></a>正则操作</h5><p>var reg=new RegExp(regStr,’i’); //创建正则对象</p><p>var reg=/regStr/i; //隐式创建正则对象</p><ul><li>reg.test(str) str 是否包含 reg 返回 true/false</li><li>reg.exec(str) 返回匹配到的字符串和最后一次的匹配字符串最后位置的下一个索引</li></ul><h4 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h4><ol><li>/a|b/ a 或 b</li><li>/[abc]/ a 或 b 或 c</li><li>/[a-zA-Z0-9]/ 所有数字和字母</li><li>/[^a-za-z0-9]/ 除了数字和字母</li><li>/.+/ 任意字符</li><li>/\d/ 等价于/[0-9]/ 数字</li><li>/\w/ 等价于/[a-z0-9_]/ 数字、字母和下划线</li><li>/\s/ 等价于/“ “/ 空格</li><li>/\D/ 等价于/[^0-9]/ 非数字</li><li>/\W/ 等价于/[^a-z0-9_]/ 除了数字、字母和划线</li><li>/\S/ 等价于/[^” “]/ 除了空格</li><li>/\d{n,m}/ 数字最少出现 n 次，最多出现 m 次</li><li>/\d{1,}/ 等价于/\d+/ 数字最少出现 1 次</li><li>/\d{0,}/ 等价于/\d*/ 数字最少出现 0 次</li><li>/\d{0,1}/ 等价于/\d?/ 数字最多出现 1 次</li><li>/^\d$/ 以数字开头且以数字结尾</li><li>/[\u4e00-\u9fa5]/ 汉字匹配范围</li><li>\b 单词边界</li><li>\B 非单词边界</li><li>?=n 匹配任何其后紧接指定字符串 n 的字符串</li><li>?!n 匹配任何其后没有紧接指定字符串 n 的字符串</li></ol><h4 id="疑难点"><a href="#疑难点" class="headerlink" title="疑难点"></a>疑难点</h4><p>在个人接触正则过程中遇到的一些不易理解的地方</p><blockquote><p>用圆括号将所有选择项括起来，相邻的选择项之间用|分隔。但用圆括号会有一个副作用，是相关的匹配会被缓存，此时可用?:放在第一个选项前来消除这种副作用。其中?:是非捕获元之一，还有两个非捕获元是?=和?!，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。</p></blockquote><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>(?:pattern)</td><td>匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 “或” 字符 (\</td><td>) 来组合一个模式的各个部分是很有用。例如， ‘industr(?:y\</td><td>ies) 就是一个比 ‘industry\</td><td>industries’ 更简略的表达式。</td></tr><tr><td>(?=pattern</td><td>正向预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，’Windows (?=95\</td><td>98\</td><td>NT\</td><td>2000)’ 能匹配 “Windows 2000” 中的 “Windows” ，但不能匹配 “Windows 3.1” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td>(?!pattern)</td><td>负向预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如’Windows (?!95\</td><td>98\</td><td>NT\</td><td>2000)’ 能匹配 “Windows 3.1” 中的 “Windows”，但不能匹配 “Windows 2000” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr></tbody></table><p>一直对正则中的 match 和 exec 不易分清，下面来做一下比较。</p><h5 id="1-match"><a href="#1-match" class="headerlink" title="1. match"></a>1. match</h5><p>match 方法属于 String 正则表达方法</p><p>语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.match(regexp)</span><br></pre></td></tr></table></figure><p>str：要进行匹配的字符串</p><p>regexp：一个正则表达式(或者由 RegExp()构造成的正则表达式)</p><p>match 的用法主要区分就是正则表达式是否有全局标示 g</p><ol><li><p>如果有 g 全局标志，那么返回的数组保存的是，所有匹配的内容。</p></li><li><p>如果没有 g 全局标志，那么返回的数组 arr.arr[0]保存的是完整的匹配.arr[1]保存的是第一个括号里捕获的字串，依此类推 arr[n]保存的是第 n 个括号捕获的内容。</p></li></ol><h5 id="2-exec"><a href="#2-exec" class="headerlink" title="2. exec"></a>2. exec</h5><p>与 match 方法不同 exec 属于正则表达式的方法</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var result1 = regexp.exec(str);</span><br></pre></td></tr></table></figure><p>regexp：正则表达式</p><p>str：要匹配的字串</p><p>exec 与 match 的关联就是 exec（g 有没有都无影响）就等价于不含有 g 全局标志的 match，即返回数组 arr[0]为匹配的完整串，其余的为括号里捕获的字符串。</p><p>但如果有 g 对 exec 本身的影响是，当一个具有 g 的正则表达式调用 exec()时，他将该对象的 lastIndex 设置到紧接这匹配子串的字符位置。当第二次调用 exec 时将从<br>lastIndex 所指示的字符位置开始检索，利用这个特点可以反复调用 exec 遍历所有匹配，等价于 match 具有 g 标志。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arrmatch = str.match(reg);</span><br><span class="line">for(var i =0; i &lt; arrmatch.length; i++)&#123;</span><br><span class="line">    document.write(arrmatch[i] +&quot;----&gt;&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可见上面的 exec 和 match 是等价的.</p><p>reg.exec(str) 返回匹配到的字符串和最后一次的匹配字符串最后位置的下一个索引如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var str = &quot;abc123bef345olj89,ed&quot;;</span><br><span class="line">var reg = /\d+/g;</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li><p>主要区分 match 具有 g 和没有 g 的区别，没有 g 的时候与 exec 是等价的。</p></li><li><p>而 exec 返回的串类型不受 g 影响，但具有 g 时候会驱动 lastIndex 可以模拟遍历所有匹配，可以与 match 具有 g 的时候等价。</p></li></ul><h4 id="顺便加强理解"><a href="#顺便加强理解" class="headerlink" title="顺便加强理解"></a>顺便加强理解</h4><ol><li>ip 正则表达式<br>格式由”.”分割成四段，每一段范围是 0-255，拿出其中一段进行分析</li></ol><table><thead><tr><th>范围</th><th>表达式</th></tr></thead><tbody><tr><td>0-9</td><td>\d</td></tr><tr><td>10-99</td><td>[1-9]\d</td></tr><tr><td>100-199</td><td>1\d{2}</td></tr><tr><td>200-249</td><td>2[0-4]\d</td></tr><tr><td>250-255</td><td>25[0-5]</td></tr></tbody></table><p>所以，其中一段构成的正则表达式是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5]</span><br></pre></td></tr></table></figure><p>，<br>整个 ip 正则为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])$/</span><br></pre></td></tr></table></figure><ol start="2"><li>同理端口号范围是 0-65535</li></ol><table><thead><tr><th>范围</th><th>表达式</th></tr></thead><tbody><tr><td>0-9</td><td>\d</td></tr><tr><td>10-99</td><td>[1-9]\d</td></tr><tr><td>100-999</td><td>[1-9]\d{2}</td></tr><tr><td>1000-9999</td><td>[1-9]\d{3}</td></tr><tr><td>10000-59999</td><td>[1-5]\d{4}</td></tr><tr><td>60000-64999</td><td>6[0-4]\d{3}</td></tr><tr><td>65000-65499</td><td>65[0-4]\d{2}</td></tr><tr><td>65500-65529</td><td>655[0-2]\d</td></tr><tr><td>65530-65535</td><td>65553[0-5]</td></tr></tbody></table><p>所以，整个端口号正则为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/\d|[1-9]\d&#123;1,3&#125;|[1-5]d&#123;4&#125;|6[0-4]\d&#123;3&#125;|65[0-4]\d&#123;2&#125;|655[0-2]\d|65553[0-5]/</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript 正则 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>理解同步、异步和事件循环</title>
      <link href="/yelee/2018/08/20/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
      <url>/yelee/2018/08/20/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="JavaScript-运行机制"><a href="#JavaScript-运行机制" class="headerlink" title="JavaScript 运行机制"></a>JavaScript 运行机制</h2><ol><li>所有同步任务都在主线程上执行，形成一个执行栈；</li></ol><a id="more"></a><ol start="2"><li><p>主线程发起异步请求，相应的工作线程就会去执行异步任务，主线程可以继续执行后面的代码；</p></li><li><p>主线程之外，还存在一个”任务队列”（task queue）。只要异步任务有了运行结果，就在”任务队列”之中放置一个事件，也就是一个消息；</p></li><li><p>一旦”执行栈”中的所有同步任务执行完毕，系统就会读取”任务队列”，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行；</p></li><li><p>主线程把当前的事件执行完成之后，再去读取任务队列，如此反复重复执行，这样就行程了事件循环。</p></li></ol><h4 id="1、单线程"><a href="#1、单线程" class="headerlink" title="1、单线程"></a>1、单线程</h4><p>JS 引擎在解释和执行 JavaScript 代码线程只有一个，叫做<strong>主线程</strong>。<br>但实际还存在其他线程，如：处理 Ajax 请求线程，处理 DOM 事件线程，定时器线程，和文件读写线程等，叫做<strong>工作线程</strong>。</p><h4 id="2、同步和异步"><a href="#2、同步和异步" class="headerlink" title="2、同步和异步"></a>2、同步和异步</h4><p>同步：如果函数返回的时候，调用者就能够得到预期结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.sqrt(2);</span><br></pre></td></tr></table></figure><p>异步：函数返回的时候，调用者还不能够得到预期结果，而是需要通过一定手段得到。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&quot;foo.txt&quot;, &quot;utf8&quot;, function(err, data)&#123;</span><br><span class="line">    console.log(data)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上面代码中，我们希望 fs.readFile 函数读取文件，并打印出来，但是在 fs.readFile 函数返回时，我们期望的结果并不会发生，而是要等文件全部读取完成之后。</p><h5 id="异步-AJAX："><a href="#异步-AJAX：" class="headerlink" title="异步 AJAX："></a>异步 AJAX：</h5><blockquote><p>主线程：“你好，AJAX 线程。请你帮我发个 HTTP 请求吧，我把请求地址和参数都给你了。”</p></blockquote><blockquote><p>AJAX 线程：“好的，主线程。我马上去发，但可能要花点儿时间呢，你可以先去忙别的。”</p></blockquote><blockquote><p>主线程：：“谢谢，你拿到响应后告诉我一声啊。”</p></blockquote><blockquote><p>(接着，主线程做其他事情去了。一顿饭的时间后，它收到了响应到达的通知。)</p></blockquote><h5 id="同步-AJAX："><a href="#同步-AJAX：" class="headerlink" title="同步 AJAX："></a>同步 AJAX：</h5><blockquote><p>主线程：“你好，AJAX 线程。请你帮我发个 HTTP 请求吧，我把请求地址和参数都给你了。”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>主线程：：“喂，AJAX 线程，你怎么不说话？”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>主线程：：“喂！喂喂喂！”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>(一炷香的时间后)</p></blockquote><blockquote><p>主线程：：“喂！求你说句话吧！”</p></blockquote><blockquote><p>AJAX 线程：“主线程，不好意思，我在工作的时候不能说话。你的请求已经发完了，拿到响应数据了，给你。”</p></blockquote><p>正因为 JavaScript 时单线程，同步容易造成阻塞，所以，对于耗时和操作事件不确定操作，使用异步就成了必然选择。</p><h4 id="3、异步过程"><a href="#3、异步过程" class="headerlink" title="3、异步过程"></a>3、异步过程</h4><p>一个异步过程通常时这样的：</p><blockquote><p>主线程发起一个异步请求，相应的工作线程接收线程请求并告知主线程已收到；主线程可以继续执行后面的代码，同时工作线程执行异步任务；工作线程完成工作后，通知主线程；主线程收到通知后，执行一定动作（调用回调函数）。</p></blockquote><p>异步函数通常具有一下形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A(arg..., callbackFn)</span><br></pre></td></tr></table></figure><p>他可以叫做异步过程的<strong>发起函数</strong>，或者叫做异步任务<strong>注册函数</strong>。</p><p>从主线程的角度看，一个一度过程包括两个要素：</p><ul><li>发起函数（注册函数）</li><li>回到函数</li></ul><h4 id="4、消息队列和事件循环"><a href="#4、消息队列和事件循环" class="headerlink" title="4、消息队列和事件循环"></a>4、消息队列和事件循环</h4><p>异步过程中，工作线程在异步操作完成后需要通知主线程。那么这个通知机制时怎样实现的呢？答案是利用消息队列和事件循环。</p><p>一句话概括：</p><blockquote><p>工作线程将消息放到消息队列，主线程通过事件循环过程去取消息。</p></blockquote><p>消息队列：消息队列是一个先进先出的队列，放着各种消息。</p><p>事件循环：事件循环是指主线程从消息队列中取消息，执行的过程。</p><p>实际上，主线程只会做一件事，就是从消息队列里面取消息、执行消息，再去消息，再执行。当消息队列为空时，就会等待知道消息队列变成非空。而且主线程只有在将当前的消息执行完成后，才会去取下一个消息。这种机制就叫做事件循环机制，取一个消息并执行的过程叫做一次循环。</p><p>消息队列中放的消息是什么东西？消息的具体结构当然跟具体的实现有关，可以认为：</p><blockquote><p>消息就是注册异步任务时添加的回调函数。</p></blockquote><p>以异步 Ajax 为例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&apos;http://segmentfault.com&apos;, function(resp) &#123;</span><br><span class="line">    console.log(&apos;我是响应：&apos;, resp);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>主线程发起 Ajax 请求后，会继续执行其他代码。Ajax 线程负责请求 segmentfault.com，拿到响应后，它会把响应封装成一个 JavaScript 对象，然后构成一条消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var message = function() &#123;</span><br><span class="line">    callbackFn();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 callbackFn 就是前面代码中成功响应时的回调函数。</p><p>主线程在执行完当前循环中所有代码后，就会到消息队列取出这条消息（也就是 message 函数），并执行它，到此为止，就完成了工作线程对主线程的通知，回调函数也就得到了执行。如果一开始主线程就没有提供回调函数，Ajax 线程在收到 HTTP 响应后，也就没有必要通知主线程，从而没必要往消息队列放消息。</p><blockquote><p>异步过程的回调函数，一定不在当前这一轮事件循环中执行。</p></blockquote><h4 id="5、异步与事件"><a href="#5、异步与事件" class="headerlink" title="5、异步与事件"></a>5、异步与事件</h4><blockquote><p>消息队列中的每条消息实际上都对应着一个事件</p></blockquote><p>有一类很重要的异步过程：DOM 事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var button = document.getElement(&apos;#btn&apos;);</span><br><span class="line">button.addEventListener(&apos;click&apos;, function(e) &#123;</span><br><span class="line">    console.log();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>从事件的角度来看，上述代码表示：在按钮上添加了一个鼠标单击事件的事件监听器；当用户点击按钮时，鼠标单击事件触发，事件监听器函数被调用。</p><p>从异步过程的角度看，addEventListener 函数就是异步过程的发起函数，事件监听器函数就是异步过程的回调函数。事件触发时，表示异步任务完成，会将事件监听器函数封装成一条消息放到消息队列中，等待主线程执行。</p><p>事件的概念实际上并不是必须的，事件机制实际上就是异步过程的通知机制。我觉得它的存在是为了编程接口对开发者更友好。</p><p>另一方面，所有的异步过程也都可以用事件来描述。例如：setTimeout 可以看成对应一个时间到了！的事件。前文的 setTimeout(fn, 1000);可以看成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timer.addEventListener(&apos;timeout&apos;, 1000, fn);</span><br></pre></td></tr></table></figure><blockquote><p>工作线程是生产者，主线程是消费者(只有一个消费者)。工作线程执行异步任务，执行完成后把对应的回调函数封装成一条消息放到消息队列中；主线程不断地从消息队列中取消息并执行，当消息队列空时主线程阻塞，直到消息队列再次非空。</p></blockquote><h4 id="6、macrotasks-与-microtasks-的区别"><a href="#6、macrotasks-与-microtasks-的区别" class="headerlink" title="6、macrotasks 与 microtasks 的区别"></a>6、macrotasks 与 microtasks 的区别</h4><blockquote><p>macrotasks: setTimeout setInterval setImmediate I/O UI 渲染</p></blockquote><blockquote><p>microtasks: Promise process.nextTick Object.observe MutationObserver</p></blockquote><p>microtask 会在当前循环中执行完成,而 macrotask 会在下一个循环中执行</p>]]></content>
      
      <categories>
          
          <category> js高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git简记</title>
      <link href="/yelee/2018/07/27/Git%E7%AE%80%E8%AE%B0/"/>
      <url>/yelee/2018/07/27/Git%E7%AE%80%E8%AE%B0/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Git-食用手册"><a href="#Git-食用手册" class="headerlink" title="Git 食用手册"></a>Git 食用手册</h2><h3 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h3><p>最近有个项目比较赶，于是决定 8 个人一个并行完成，单独把项目拿出来用 gitea 管理，没人分一个模块开发，对应也给分支，效果不过，从中也帮助自己重新温习了一下 git 的使用，小记一下。</p><a id="more"></a><h3 id="1-安装和使用"><a href="#1-安装和使用" class="headerlink" title="1. 安装和使用"></a>1. 安装和使用</h3><ul><li><p>在 MAC 上，安装 homebrew，然后通过<a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">homebrew</a> 安装 Git。</p><blockquote><p>在 MAC 上另一种安装方法，从 AppStore 安装 Xcode，Xcode 集成了 Git，不过默认没有安装，你需要运行 Xcode，选择菜单“Xcode”-&gt;“Preferences”，在弹出窗口中找到“Downloads”，选择“Command Line Tools”，点“Install”就可以完成安装了。</p></blockquote></li><li><p>在 Windows 上，下载<a href="http://rj.baidu.com/soft/detail/40642.html" target="_blank" rel="noopener">安装包</a>，默认下一步，安装完成即可。</p></li><li><p>安装完后自报家门</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;wuwhs&quot;</span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>创建版本库<br>初始化一个 Git 仓库，使用<code>git init</code>命令。添加文件到 Git 仓库，分两步：</p><ol><li>第一步，使用命令<code>git add &lt;file&gt;</code>，注意，可反复多次使用，添加多个文件；</li><li>第二步，使用命令<code>git commit</code>，完成。</li></ol></li></ul><h3 id="2-时光穿梭"><a href="#2-时光穿梭" class="headerlink" title="2. 时光穿梭"></a>2. 时光穿梭</h3><p><img src="https://note.youdao.com/yws/public/resource/813e8f68e489060d70ccfdff42b3aecc/xmlnote/8849F03FF3934C8087DA9645B9BD9C5F/14633" alt=""></p><ul><li><p>如果<code>git status</code>告诉你有文件被修改过，用<code>git diff</code>可以查看修改内容。</p></li><li><p>HEAD 指向的版本就是当前版本，因此，Git 允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</p></li><li><p>穿梭前，用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本。</p></li><li><p>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本，<code>git log --pretty=oneline --abbrev-commit</code>在一行显示缩写提交号。</p></li><li><p>场景 1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p></li><li><p>当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD file</code>，就回到了场景 1，第二步按场景 1 操作。</p></li><li><p>命令<code>git rm</code>用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。</p></li></ul><h3 id="3-远程仓库"><a href="#3-远程仓库" class="headerlink" title="3. 远程仓库"></a>3. 远程仓库</h3><ul><li><p>创建 SSH Key。<code>$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code>。</p></li><li><p>登陆 GitHub，打开“Account settings”，“SSH Keys”页面。<br>然后，点“Add SSH Key”，填上任意 Title，在 Key 文本框里粘贴 id_rsa.pub 文件的内容。</p></li><li><p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>。</p></li><li><p>关联后，使用命令<code>git push -u origin master</code>第一次推送 master 分支的所有内容。</p></li><li><p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改。</p></li><li><p>要克隆一个仓库，首先必须知道仓库的地址，然后使用<code>git clone</code>命令克隆。</p></li></ul><h3 id="4-分支管理"><a href="#4-分支管理" class="headerlink" title="4. 分支管理"></a>4. 分支管理</h3><ul><li><p>Git 鼓励大量使用分支。</p></li><li><p>查看分支：<code>git branch</code>。</p></li><li><p>创建分支：<code>git branch &lt;name&gt;</code>。</p></li><li><p>切换分支：<code>git checkout &lt;name&gt;</code>。</p></li><li><p>创建+切换到当前分支：<code>git checkout -b &lt;name&gt;</code>。</p></li><li><p>合并某分支到当前分支：<code>git merge &lt;name&gt;</code>。</p></li><li><p>删除分支：<code>git branch -d &lt;name&gt;</code>。</p></li><li><p>当 Git 无法自动合并分支时，就必须首先剞劂冲突，解决冲突后，再提交，合并完成用<code>git log --graph</code>命令可以看到分支合并图。</p></li><li><p>合并分支时，加上<code>--no-ff</code>参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而<code>fash-forward</code>合并就看不出来曾经做过合并。</p></li><li><p>当手头工作没有完成时，先把工作现场<code>git stash</code>一下，然后去修复 bug，修复后，再<code>git stash list</code>查看历史 stash，一是用<code>git stash apply</code>恢复，但恢复后，stash 内容并不删除，你需要用<code>git stash drop</code>来删除；另一种方式是用<code>git stash pop</code>，恢复的同时把 stash 内容也删了。</p></li><li><p>查看远程库信息，使用<code>git remote -v</code>。</p></li><li><p>从本地推送分支，使用<code>git push origin branch-name</code>，如果失败，先用<code>git pull</code>抓取远程的新提交。</p></li><li><p>再本地创建和远程分支对应的分支，使用<code>git checkout -b branch-name origin/branch-name</code>，本地和远程分支的名称最好一致。</p></li><li><p>从远程抓取分支，使用<code>git pull</code>，如果有冲突，要先处理冲突。</p></li></ul><h3 id="5-标签"><a href="#5-标签" class="headerlink" title="5. 标签"></a>5. 标签</h3><ul><li><p>命令<code>git tag &lt;name&gt;</code>用于新建一个标签，默认为<code>HEAD</code>,也可以指定一个 commit id。</p></li><li><p><code>git tag -a &lt;tagname&gt; -m &quot;balabala...&quot;</code>可以指定标签信息。</p></li><li><p><code>git tag -s &lt;tagname&gt; -m &quot;balabala...&quot;</code>可以用 PGP 签名标签。</p></li><li><p>命令<code>git tag</code>可以查看所有标签。</p></li><li><p>命令<code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签。</p></li><li><p>命令<code>git push origin --tags</code>可以推送全部未推送过的本地标签。</p></li><li><p>命令<code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签。</p></li><li><p>命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>可以删除一个远程标签。</p></li></ul><h3 id="6-举个应用栗子"><a href="#6-举个应用栗子" class="headerlink" title="6. 举个应用栗子"></a>6. 举个应用栗子</h3><ol><li>最初在远程创建项目仓库有<code>master</code>和<code>develp</code>分支，参与开发人员先在自己一个文件夹下，调出<code>git Bash</code>，然后输入命令<code>git init</code>，再把仓库<code>git clone</code>下来</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www</span><br><span class="line">$ git init</span><br><span class="line">Initialized empty Git repository in D:/appSoft/wampserver/wamp64/www/.git/</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www (master)</span><br><span class="line">$ git clone git@github.com:wuwhs/demo.git</span><br><span class="line">Cloning into &apos;demo&apos;...</span><br><span class="line">Warning: Permanently added the RSA host key for IP address &apos;13.229.188.59&apos; to the list of known hosts.</span><br><span class="line">warning: You appear to have cloned an empty repository.</span><br><span class="line">Checking connectivity... done.</span><br></pre></td></tr></table></figure><ol start="2"><li><code>cd demo</code>进入<code>clone</code>下载的目录里，用<code>git branch develop</code>在本地创建一个对应的<code>develop</code>分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www (master)</span><br><span class="line">$ cd demo</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch</span><br><span class="line">* master</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch develop</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch</span><br><span class="line">  develop</span><br><span class="line">* master</span><br></pre></td></tr></table></figure><p>再次用<code>git branch</code>查看已经新建了一个<code>develop</code>分支</p><ol start="3"><li><code>git checkout develop</code>切换到当前<code>develop</code>分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git checkout develop</span><br><span class="line">Switched to branch &apos;develop&apos;</span><br></pre></td></tr></table></figure><ol start="4"><li>用<code>git pull origin develop:develop</code>，即：<code>git pull origin &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code>，当本地和远程分支名相同时，可以简写成一个，也就是<code>git pull origin develop</code>，拉取远程<code>develop</code>分支完成，然后开发人员就可以在这个分支上工作了</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull origin develop:develop</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   7ff2cb0..7ab2842  develop    -&gt; develop</span><br><span class="line">   7ff2cb0..7ab2842  develop    -&gt; origin/develop</span><br><span class="line">warning: fetch updated the current branch head.</span><br><span class="line">fast-forwarding your working tree from</span><br><span class="line">commit 7ff2cb0627be357fa15db4e38e1bfe8fc820b8ec.</span><br><span class="line">Already up-to-date.</span><br></pre></td></tr></table></figure><ol start="5"><li>当一天了工作完成，要提交到远程分支，首先要拉取一下别人提交的代码，防止版本冲突</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Compressing objects: 100% (2/2), done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   f848dc7..d696375  develop    -&gt; origin/develop</span><br><span class="line">Updating f848dc7..d696375</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><p>PS：直接偷懒<code>pull</code>可能会出现没有找到<code>tracking</code>的分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">There is no tracking information for the current branch.</span><br><span class="line">Please specify which branch you want to merge with.</span><br><span class="line">See git-pull(1) for details.</span><br><span class="line"></span><br><span class="line">git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class="line"></span><br><span class="line">If you wish to set tracking information for this branch you can do so with:</span><br><span class="line"></span><br><span class="line">git branch --set-upstream-to=origin/&lt;branch&gt; develop</span><br></pre></td></tr></table></figure><p>这时候要手动添加一下对应分支依赖<code>git branch --set-upstream-to=origin/&lt;branch&gt; develop</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git branch --set-upstream-to=origin/develop develop</span><br><span class="line">Branch develop set up to track remote branch develop from origin.</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Compressing objects: 100% (2/2), done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   f848dc7..d696375  develop    -&gt; origin/develop</span><br><span class="line">Updating f848dc7..d696375</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><ol start="6"><li>将本地分支提交到对应远程分支上，<code>git push origin develop:develop</code>，即：<code>git push origin &lt;远程主机&gt;&lt;本地分支名&gt;:&lt;远程分支名&gt;</code>，如果名称一样可以简写，也就是<code>git push origin develop</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git push origin develop:develop</span><br><span class="line">Counting objects: 9, done.</span><br><span class="line">Delta compression using up to 4 threads.</span><br><span class="line">Compressing objects: 100% (5/5), done.</span><br><span class="line">Writing objects: 100% (9/9), 759 bytes | 0 bytes/s, done.</span><br><span class="line">Total 9 (delta 1), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (1/1), done.</span><br><span class="line">To git@github.com:wuwhs/demo.git</span><br><span class="line">   d696375..3c00c0c  develop -&gt; develop</span><br></pre></td></tr></table></figure><ol start="7"><li>项目测试 OK 了，本地分支合并到<code>master</code>分支上，要用到<code>git merge &lt;branch&gt;</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git checkout master</span><br><span class="line">Switched to branch &apos;master&apos;</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git merge develop</span><br><span class="line">Updating c4d0377..3c00c0c</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 9 +++++++++</span><br><span class="line"> 1 file changed, 9 insertions(+)</span><br></pre></td></tr></table></figure><p>常用的操作就以上七步了，当然会有不同情形的应用。</p><h3 id="7-附录：git-cheat-sheet"><a href="#7-附录：git-cheat-sheet" class="headerlink" title="7. 附录：git-cheat-sheet"></a>7. 附录：git-cheat-sheet</h3><p>一般而言，常用的就是以上那些命令，有人专门的整理了一份比较全一点的文档 git-cheat-sheet，方便查阅。</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>列出当前配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --list</span><br></pre></td></tr></table></figure><p>列出 repository 配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --local --list</span><br></pre></td></tr></table></figure><p>列出全局配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global --list</span><br></pre></td></tr></table></figure><p>列出系统配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --system --list</span><br></pre></td></tr></table></figure><p>设置用户名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;[firstname lastname]&quot;</span><br></pre></td></tr></table></figure><p>设置用户邮箱：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email &quot;[valid-email]&quot;</span><br></pre></td></tr></table></figure><p>设置 git 命令输出为彩色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global color.ui auto</span><br></pre></td></tr></table></figure><p>设置 git 使用的文本编辑器设：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global core.editor vi</span><br></pre></td></tr></table></figure><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>Repository 配置对应的配置文件路径[–local]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;repo&gt;/.git/config</span><br></pre></td></tr></table></figure><p>用户全局配置对应的配置文件路径[–global]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.gitconfig</span><br></pre></td></tr></table></figure><p>系统配置对应的配置文件路径[–local]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/gitconfig</span><br></pre></td></tr></table></figure><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p>复制一个已创建的仓库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 通过 SSH</span><br><span class="line">$ git clone ssh://user@domain.com/repo.git</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#通过 HTTP</span><br><span class="line">$ git clone http://domain.com/user/repo.git</span><br></pre></td></tr></table></figure><p>创建一个新的本地仓库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><h4 id="本地修改"><a href="#本地修改" class="headerlink" title="本地修改"></a>本地修改</h4><p>显示工作路径下已修改的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure><p>显示与上次提交版本文件的不同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff</span><br></pre></td></tr></table></figure><p>把当前所有修改添加到下次提交中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure><p>把对某个文件的修改添加到下次提交中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add -p &lt;file&gt;</span><br></pre></td></tr></table></figure><p>提交本地的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -a</span><br></pre></td></tr></table></figure><p>提交之前已标记的变化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit</span><br></pre></td></tr></table></figure><p>附加消息提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &apos;message here&apos;</span><br></pre></td></tr></table></figure><p>提交，并将提交时间设置为之前的某个日期:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --date=&quot;`date --date=&apos;n day ago&apos;`&quot; -am &quot;Commit Message&quot;</span><br></pre></td></tr></table></figure><p>修改上次提交<br>（请勿修改已发布的提交记录!）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit --amend</span><br></pre></td></tr></table></figure><p>修改上次提交的 committer date：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIT_COMMITTER_DATE=&quot;date&quot; git commit --amend</span><br></pre></td></tr></table></figure><p>修改上次提交的 author date：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend --date=&quot;date&quot;</span><br></pre></td></tr></table></figure><p>把当前分支中未提交的修改移动到其他分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git checkout branch2</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><p>将 stashed changes 应用到当前分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash apply</span><br></pre></td></tr></table></figure><p>删除最新一次的 stashed changes：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash drop</span><br></pre></td></tr></table></figure><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>从当前目录的所有文件中查找文本内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git grep &quot;Hello&quot;</span><br></pre></td></tr></table></figure><p>在某一版本中搜索文本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git grep &quot;Hello&quot; v2.5</span><br></pre></td></tr></table></figure><h4 id="提交历史"><a href="#提交历史" class="headerlink" title="提交历史"></a>提交历史</h4><p>从最新提交开始，显示所有的提交记录（显示 hash， 作者信息，提交的标题和时间）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log</span><br></pre></td></tr></table></figure><p>显示所有提交（仅显示提交的 hash 和 message）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline</span><br></pre></td></tr></table></figure><p>显示某个用户的所有提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --author=&quot;username&quot;</span><br></pre></td></tr></table></figure><p>显示某个文件的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log -p &lt;file&gt;</span><br></pre></td></tr></table></figure><p>仅显示远端分支与远端分支提交记录的差集：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline &lt;origin/master&gt;..&lt;remote/master&gt; --left-right</span><br></pre></td></tr></table></figure><p>谁，在什么时间，修改了文件的什么内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git blame &lt;file&gt;</span><br></pre></td></tr></table></figure><p>显示 reflog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog show</span><br></pre></td></tr></table></figure><p>删除 reflog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog delete</span><br></pre></td></tr></table></figure><h4 id="分支与标签"><a href="#分支与标签" class="headerlink" title="分支与标签"></a>分支与标签</h4><p>列出所有的分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br></pre></td></tr></table></figure><p>列出所有的远端分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -r</span><br></pre></td></tr></table></figure><p>切换分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>创建并切换到新分支:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>基于当前分支创建新分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch &lt;new-branch&gt;</span><br></pre></td></tr></table></figure><p>基于远程分支创建新的可追溯的分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch --track &lt;new-branch&gt; &lt;remote-branch&gt;</span><br></pre></td></tr></table></figure><p>删除本地分支:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -d &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>强制删除一个本地分支：<br>将会丢失未合并的修改！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -D &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>给当前版本打标签：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><p>给当前版本打标签并附加消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><h4 id="更新与发布"><a href="#更新与发布" class="headerlink" title="更新与发布"></a>更新与发布</h4><p>列出当前配置的远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br></pre></td></tr></table></figure><p>显示远程端的信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote show &lt;remote&gt;</span><br></pre></td></tr></table></figure><p>添加新的远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add &lt;remote&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>下载远程端版本，但不合并到 HEAD 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch &lt;remote&gt;</span><br></pre></td></tr></table></figure><p>下载远程端版本，并自动与 HEAD 版本合并：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote pull &lt;remote&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>将远程端版本合并到本地版本中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin master</span><br></pre></td></tr></table></figure><p>以 rebase 方式将远端分支与本地合并：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>将本地版本发布到远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push remote &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>删除远程端分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git push &lt;remote&gt; :&lt;branch&gt; (since Git v1.5.0)</span><br><span class="line"># or</span><br><span class="line">git push &lt;remote&gt; --delete &lt;branch&gt; (since Git v1.7.0)</span><br></pre></td></tr></table></figure><p>发布标签:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push --tags</span><br></pre></td></tr></table></figure><p>合并与重置(Rebase)<br>将分支合并到当前 HEAD 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>将当前 HEAD 版本重置到分支中:<br>请勿重置已发布的提交!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>退出重置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase --abort</span><br></pre></td></tr></table></figure><p>解决冲突后继续重置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase --continue</span><br></pre></td></tr></table></figure><p>使用配置好的 merge tool 解决冲突：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git mergetool</span><br></pre></td></tr></table></figure><p>在编辑器中手动解决冲突后，标记文件为已解决冲突：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git add &lt;resolved-file&gt;</span><br><span class="line">$ git rm &lt;resolved-file&gt;</span><br></pre></td></tr></table></figure><p>合并提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase -i &lt;commit-just-before-first&gt;</span><br></pre></td></tr></table></figure><p>把上面的内容替换为下面的内容：</p><p>原内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pick &lt;commit_id&gt;</span><br><span class="line">pick &lt;commit_id2&gt;</span><br><span class="line">pick &lt;commit_id3&gt;</span><br></pre></td></tr></table></figure><p>替换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pick &lt;commit_id&gt;</span><br><span class="line">squash &lt;commit_id2&gt;</span><br><span class="line">squash &lt;commit_id3&gt;</span><br></pre></td></tr></table></figure><h4 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h4><p>放弃工作目录下的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard HEAD</span><br></pre></td></tr></table></figure><p>移除缓存区的所有文件（i.e. 撤销上次 git add）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset HEAD</span><br></pre></td></tr></table></figure><p>放弃某个文件的所有本地修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout HEAD &lt;file&gt;</span><br></pre></td></tr></table></figure><p>重置一个提交（通过创建一个截然不同的新提交）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git revert &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到指定的版本，并抛弃该版本之后的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>用远端分支强制覆盖本地分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard &lt;remote/branch&gt; e.g., upstream/master, origin/my-feature</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到上一次提交的版本，并将之后的修改标记为未添加到缓存区的修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到上一次提交的版本，并保留未提交的本地修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --keep &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>删除添加.gitignore 文件前错误提交的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git rm -r --cached .</span><br><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;remove xyz file&quot;</span><br></pre></td></tr></table></figure><p>完~</p><p>可参考文章：</p><ol><li><a href="http://rogerdudler.github.io/git-guide/" target="_blank" rel="noopener">git-guide</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰 git 教程</a></li><li><a href="https://www.git-scm.com/" target="_blank" rel="noopener">git-scm</a></li><li><a href="https://blog.csdn.net/github_37515447/article/details/56840610" target="_blank" rel="noopener">Git Cheat Sheet 中文版</a></li></ol>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>搞定css三列布局</title>
      <link href="/yelee/2018/07/22/%E6%90%9E%E5%AE%9Acss%E4%B8%89%E5%88%97%E5%B8%83%E5%B1%80/"/>
      <url>/yelee/2018/07/22/%E6%90%9E%E5%AE%9Acss%E4%B8%89%E5%88%97%E5%B8%83%E5%B1%80/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="三列布局"><a href="#三列布局" class="headerlink" title="三列布局"></a>三列布局</h2><blockquote><p>谈到布局，首先就要想到定位，当别人问我，css 的 position 定位有哪些取值，分别表示什么意思？呃…..</p></blockquote><h3 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h3><p>position 有六个属性值：static、relative、absolute、fixed、sticky 和 inherit。</p><a id="more"></a><ul><li>static（默认）：元素框正常生成。块级元素生成一个矩形框，作为文档流的一部分；行内元素则会创建一个或多个行框，置于父级元素中。</li><li>relative：元素框相对于之前正常文档流中的位置发生偏移，并且原先的位置仍然被占据。发生偏移的时候，可能会覆盖其他元素。</li><li>absolute：元素框不再占有文档位置，并且相对于包含块进行偏移（所谓包含块就是最近一级外层元素 position 不为 static 的元素）。</li><li>fixed：元素框不再占有文档流位置，并且相对于视窗进行定位。</li><li>sticky：css3 新增属性值，粘性定位，相当于 relative 和 fixed 的混合。最初会被当作是 relative，相对原来位置进行偏移；一旦超过一定的阈值，会被当成 fixed 定位，相对于视口定位。</li></ul><h3 id="三列布局-1"><a href="#三列布局-1" class="headerlink" title="三列布局"></a>三列布局</h3><p>三列布局，其中一列宽度自适应，在 PC 端最常用之一，搞定了三列布局，其他一样的套路。</p><h5 id="方式一：浮动布局"><a href="#方式一：浮动布局" class="headerlink" title="方式一：浮动布局"></a>方式一：浮动布局</h5><p>缺点：html 结构不正确,当包含区域宽度小于左右框之和，右边框会被挤下来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.float .center &#123;</span><br><span class="line">        /* left: 300px;</span><br><span class="line">        right: 300px; */</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式二：定位布局"><a href="#方式二：定位布局" class="headerlink" title="方式二：定位布局"></a>方式二：定位布局</h4><p>缺点：要求父级要有非 static 定位，如果没有，左右框容易偏移出去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.position &#123;</span><br><span class="line">        position: relative;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .left &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .right &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        right: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .center &#123;</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout position&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式三：表格布局"><a href="#方式三：表格布局" class="headerlink" title="方式三：表格布局"></a>方式三：表格布局</h4><p>缺点：没什么缺点，恐惧 table</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.table &#123;</span><br><span class="line">        display: table;</span><br><span class="line">        width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table &gt; article &#123;</span><br><span class="line">        display: table-cell;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .center &#123;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .right &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout table&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式四：flex-弹性布局"><a href="#方式四：flex-弹性布局" class="headerlink" title="方式四：flex 弹性布局"></a>方式四：flex 弹性布局</h4><p>缺点：兼容性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.flex &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        flex-shrink: 0; /* 不缩小 */</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .center &#123;</span><br><span class="line">        flex-grow: 1; /* 增大 */</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .right &#123;</span><br><span class="line">        flex-shrink: 0; /* 不缩小 */</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout flex&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式五：grid-栅格布局"><a href="#方式五：grid-栅格布局" class="headerlink" title="方式五：grid 栅格布局"></a>方式五：grid 栅格布局</h4><p>缺点：兼容性 Firefox 52, Safari 10.1, Chrome 57, Opera 44</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.grid &#123;</span><br><span class="line">        display: grid;</span><br><span class="line">        grid-template-columns: 300px 1fr 300px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .left &#123;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .center &#123;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .right &#123;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout grid&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式六：圣杯布局"><a href="#方式六：圣杯布局" class="headerlink" title="方式六：圣杯布局"></a>方式六：圣杯布局</h4><p>缺点：需要多加一层标签，html 顺序不对，占用了布局框的 margin 属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.cup:after &#123;</span><br><span class="line">        clear: both;</span><br><span class="line">        content: &quot;&quot;;</span><br><span class="line">        display: table;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .center &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line">        float: left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .center &gt; div &#123;</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        overflow: auto;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -100%;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .right &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout cup&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;h1&gt;我是圣杯布局中间框&lt;/h1&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是圣杯布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是圣杯布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> 布局 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>水平且垂直居中方法（9种）</title>
      <link href="/yelee/2018/06/01/%E6%B0%B4%E5%B9%B3%E4%B8%94%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%EF%BC%889%E7%A7%8D%EF%BC%89/"/>
      <url>/yelee/2018/06/01/%E6%B0%B4%E5%B9%B3%E4%B8%94%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%EF%BC%889%E7%A7%8D%EF%BC%89/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="水平且垂直居中方法有哪些？"><a href="#水平且垂直居中方法有哪些？" class="headerlink" title="水平且垂直居中方法有哪些？"></a>水平且垂直居中方法有哪些？</h2><p>这在实际工作中经常用到，小记一下。</p><h4 id="演示-HTML-结构"><a href="#演示-HTML-结构" class="headerlink" title="演示 HTML 结构"></a>演示 HTML 结构</h4><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span> <span class="attr">class</span>=<span class="string">"div"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>i<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/gb/水平且垂直居中方法（9种）/0.bmp" alt=""></p><p>一般的，水平居中相对垂直居中简单很多，对于内联元素，父级元素设置<code>text-align: center;</code>；对于块级元素，子级元素设置<code>margin: 0 auto;</code>。以下结合水平居中强调实现垂直居中。</p><h4 id="1、已知父级元素宽高，父级元素定位非-static，子级元素定位设为position-absolute-fixed，再利用margin、left和top属性居中。"><a href="#1、已知父级元素宽高，父级元素定位非-static，子级元素定位设为position-absolute-fixed，再利用margin、left和top属性居中。" class="headerlink" title="1、已知父级元素宽高，父级元素定位非 static，子级元素定位设为position: absolute/fixed，再利用margin、left和top属性居中。"></a>1、已知父级元素宽高，父级元素定位非 static，子级元素定位设为<code>position: absolute/fixed</code>，再利用<code>margin</code>、<code>left</code>和<code>top</code>属性居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：需要已知父级元素固定宽高，才能确定<code>margin-left</code>和<code>margin-right</code>。</p><h4 id="2、子级元素是内联元素，父级元素设置line-height属性垂直居中。"><a href="#2、子级元素是内联元素，父级元素设置line-height属性垂直居中。" class="headerlink" title="2、子级元素是内联元素，父级元素设置line-height属性垂直居中。"></a>2、子级元素是内联元素，父级元素设置<code>line-height</code>属性垂直居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">120px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: normal;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：需要已知父级元素的固定高度，才可以确定<code>line-height</code>。</p><h4 id="3、子级元素是内联元素，父级元素用display-table-cell-和vertical-align-middle-属性实现垂直居中。"><a href="#3、子级元素是内联元素，父级元素用display-table-cell-和vertical-align-middle-属性实现垂直居中。" class="headerlink" title="3、子级元素是内联元素，父级元素用display: table-cell;和vertical-align: middle;属性实现垂直居中。"></a>3、子级元素是内联元素，父级元素用<code>display: table-cell;</code>和<code>vertical-align: middle;</code>属性实现垂直居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>inline-block</code>、<code>table-cell</code>不兼容 ie67</p><h4 id="4、对于子级是块级元素，父级元素同样用display-table-cell-和vertical-align-middle-属性实现垂直居中，水平方向居中用margin-0-auto-。"><a href="#4、对于子级是块级元素，父级元素同样用display-table-cell-和vertical-align-middle-属性实现垂直居中，水平方向居中用margin-0-auto-。" class="headerlink" title="4、对于子级是块级元素，父级元素同样用display: table-cell;和vertical-align: middle;属性实现垂直居中，水平方向居中用margin: 0 auto;。"></a>4、对于子级是块级元素，父级元素同样用<code>display: table-cell;</code>和<code>vertical-align: middle;</code>属性实现垂直居中，水平方向居中用<code>margin: 0 auto;</code>。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>table-cell</code>不兼容 ie67</p><h4 id="5、利用-css3-translate特性：位移是基于元素宽高的。"><a href="#5、利用-css3-translate特性：位移是基于元素宽高的。" class="headerlink" title="5、利用 css3 translate特性：位移是基于元素宽高的。"></a>5、利用 css3 <code>translate</code>特性：位移是基于元素宽高的。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-ms-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>translate</code>属性兼容 IE9+</p><h4 id="6、当父级是浮动的，用display-table-cell-会失效，这时需要包三层，第一层display-table-，第二层display-table-cell-第三次居中层"><a href="#6、当父级是浮动的，用display-table-cell-会失效，这时需要包三层，第一层display-table-，第二层display-table-cell-第三次居中层" class="headerlink" title="6、当父级是浮动的，用display: table-cell;会失效，这时需要包三层，第一层display: table;，第二层display: table-cell; 第三次居中层"></a>6、当父级是浮动的，用<code>display: table-cell;</code>会失效，这时需要包三层，第一层<code>display: table;</code>，第二层<code>display: table-cell;</code> 第三次居中层</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="comment">/* text-align: center; */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div3</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="comment">/* display: inline-block; */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，但 HTML 标签层数较多。</p><h4 id="7、绝对定位加四边定位为-0。"><a href="#7、绝对定位加四边定位为-0。" class="headerlink" title="7、绝对定位加四边定位为 0。"></a>7、绝对定位加四边定位为 0。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，但把定位属性全用上了</p><h4 id="8、利用-flex-布局justify-content-center-和align-items-center-属性居中。"><a href="#8、利用-flex-布局justify-content-center-和align-items-center-属性居中。" class="headerlink" title="8、利用 flex 布局justify-content: center;和align-items: center;属性居中。"></a>8、利用 flex 布局<code>justify-content: center;</code>和<code>align-items: center;</code>属性居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，兼容 IE10+</p><h4 id="9、利用-grid-布局，划分成-3x3-栅格，第二行第二列格子垂直水平居中"><a href="#9、利用-grid-布局，划分成-3x3-栅格，第二行第二列格子垂直水平居中" class="headerlink" title="9、利用 grid 布局，划分成 3x3 栅格，第二行第二列格子垂直水平居中"></a>9、利用 grid 布局，划分成 3x3 栅格，第二行第二列格子垂直水平居中</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">  <span class="attribute">grid-row-start</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">grid-column-start</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，兼容性 Firefox 52, Safari 10.1, Chrome 57, Opera 44</p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>深入理解BFC</title>
      <link href="/yelee/2018/05/21/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3BFC/"/>
      <url>/yelee/2018/05/21/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3BFC/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="BFC-概念"><a href="#BFC-概念" class="headerlink" title="BFC 概念"></a>BFC 概念</h2><h2 id="1、相关定义"><a href="#1、相关定义" class="headerlink" title="1、相关定义"></a>1、相关定义</h2><h3 id="1-1-Formatting-context"><a href="#1-1-Formatting-context" class="headerlink" title="1.1 Formatting context"></a>1.1 Formatting context</h3><p>Formatting context 是 W3C CSS2.1 规定中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素如何定位，以及和其他元素的关系和相互作用。最常见的 Formatting context 有 Block formatting context（简称 BFC）和 Inline formatting context（简称 IFC）。<br>css2.1 中只有 BFC 和 IFC，css3 中还增加了 GFC 和 FFC。</p><a id="more"></a><h3 id="1-2-BFC-定义"><a href="#1-2-BFC-定义" class="headerlink" title="1.2 BFC 定义"></a>1.2 BFC 定义</h3><p>BFC(Block formatting context)直译为“块级格式化上下文”。它是独立的渲染区域，只有 Block-level box 参与，它规定了内部的 Block-level Box 如何布局，并且与这个区域外部毫不相干。</p><h3 id="1-3-BFC-布局规则："><a href="#1-3-BFC-布局规则：" class="headerlink" title="1.3 BFC 布局规则："></a>1.3 BFC 布局规则：</h3><ul><li>内部的 Box 会在垂直方向，一个接一个地放置；</li><li>Box 垂直方向地距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠</li><li>每个元素的 margin box 的左边，与包含块 border box 的左边相接触（对于从左往右的格式化，否则相反）。即便存在浮动也是如此。</li><li>BFC 的区域不会与 float box 重叠。</li><li>BFC 就是页面的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</li><li>计算 BFC 的高度时，浮动元素页参与计算。<br>-</li></ul><h2 id="2、作用"><a href="#2、作用" class="headerlink" title="2、作用"></a>2、作用</h2><h3 id="2-1-可生成-BFC-的元素"><a href="#2-1-可生成-BFC-的元素" class="headerlink" title="2.1 可生成 BFC 的元素"></a>2.1 可生成 BFC 的元素</h3><ul><li>根元素 html；</li><li>float 属性不为 none；</li><li>position 为 absolute 或 fixed；</li><li>display 为 inline-block， table-cell，table-caption，flex， inline-flex；</li><li>overflow 不为 visible；</li></ul><h3 id="2-2-场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。"><a href="#2-2-场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。" class="headerlink" title="2.2 场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。"></a>2.2 场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .left-center-right.float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: rgba(0, 0, 0, 0.7);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .left-center-right.float .center &#123;</span><br><span class="line">        background-color: rgb(13, 218, 233);</span><br><span class="line">        height: 200px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .left-center-right.float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;left-center-right float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;我是左边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;我是右边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;我是中间区域块&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p>中间自适应栏边界会延展左右浮动区域<br><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/67CD3941EFC8420AAB3D54CB766DE219/7159" alt="image"></p><p>此时需要把中间栏变成 BFC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.left-center-right.float .center &#123;</span><br><span class="line">    background-color: rgb(13, 218, 233);</span><br><span class="line">    height: 200px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/97EE88BCB7AC428E95F9F9A5580639A7/7175" alt="image"></p><h3 id="2-3-场景二：子级元素有浮动，父级元素塌陷问题"><a href="#2-3-场景二：子级元素有浮动，父级元素塌陷问题" class="headerlink" title="2.3 场景二：子级元素有浮动，父级元素塌陷问题"></a>2.3 场景二：子级元素有浮动，父级元素塌陷问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .all-children-float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: rgba(0, 0, 0, 0.7);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .all-children-float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;all-children-float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;我是左边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;我是右边区域块&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/1B737A83C8D04BF9B0ABDE2EF28DF0E6/7190" alt="image"></p><p>此时需要将父级元素变成 BFC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.all-children-float &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/D00321F3DC9C4D578E6C89DD23DB0AB2/7200" alt="image"></p><h3 id="2-3-场景三：垂直方向-margin-出现重合"><a href="#2-3-场景三：垂直方向-margin-出现重合" class="headerlink" title="2.3 场景三：垂直方向 margin 出现重合"></a>2.3 场景三：垂直方向 margin 出现重合</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .verticle-block .block1 &#123;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(13, 218, 233);</span><br><span class="line">        margin: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .verticle-block .block2 &#123;</span><br><span class="line">        width: 150px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">        margin: 30px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;verticle-block&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;block1&quot;&gt;我是区域块1&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;block2&quot;&gt;我是区域块2&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><blockquote><p>Box 垂直方向的距离 margin 决定，属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠。</p></blockquote><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/4C9FBEC4951F4006939CD8AAEC698B21/7214" alt="image"></p><p>我们的做法是包一层标签，并转化成 BFC。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.wrapper1 &#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;section class=&quot;verticle-block&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;wrapper1&quot;&gt;</span><br><span class="line">        &lt;article class=&quot;block1&quot;&gt;我是区域块1&lt;/article&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;article class=&quot;block2&quot;&gt;我是区域块2&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/56A0200CB1424C20AB9930AA4CAC44E2/7217" alt="image"></p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css BFC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>css中的一些坑</title>
      <link href="/yelee/2018/05/06/css%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
      <url>/yelee/2018/05/06/css%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CSS-踩坑记"><a href="#CSS-踩坑记" class="headerlink" title="CSS 踩坑记"></a>CSS 踩坑记</h2><h4 id="1、如果子元素全部设置为浮动，则父元素是塌陷的"><a href="#1、如果子元素全部设置为浮动，则父元素是塌陷的" class="headerlink" title="1、如果子元素全部设置为浮动，则父元素是塌陷的"></a>1、如果子元素全部设置为浮动，则父元素是塌陷的</h4><ol><li>在元素末尾加块级空元素设置 clear:both；<a id="more"></a></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.last</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- more --><ol start="2"><li>在父级容器设置 before/after 模拟一个块级空元素</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>父级容器直接设置 overflow: auto/hidden;</li></ol><h4 id="2、普通文档流中块级垂直外边距合并"><a href="#2、普通文档流中块级垂直外边距合并" class="headerlink" title="2、普通文档流中块级垂直外边距合并"></a>2、普通文档流中块级垂直外边距合并</h4><p>解决办法：用 padding 代替，或改成 inline-block，或改成 float，或绝对定位</p><h4 id="3、使用-transition-闪屏"><a href="#3、使用-transition-闪屏" class="headerlink" title="3、使用 transition 闪屏"></a>3、使用 transition 闪屏</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">  <span class="attribute">-webkit-backface-visibility</span>: hidden;</span><br><span class="line">  <span class="attribute">-webkit-perspective</span>: <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过渡动画在没有启动硬件加速的情况下，会出现抖动现象，解决方案：用 translated3d、translateZ、transform 自动启动硬件加速，即改为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translated3d</span>(0, 0, 0);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translated3d</span>(0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ps:硬件加速导致 cpu 性能占用增加，电池电量消耗加大</p><h4 id="4、超出内容用”…”表示"><a href="#4、超出内容用”…”表示" class="headerlink" title="4、超出内容用”…”表示"></a>4、超出内容用”…”表示</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line-clamp"</span>&gt;</span></span><br><span class="line">来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line-clamp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">  <span class="attribute">-webkit-line-clamp</span>: <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>-webkit-line-clamp 用来限制在一个块元素显示的文本的行数</li><li>display: -webkit-box; 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示</li><li>-webkit-box-orient 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式</li></ol><p>缺点：<br>只有移动端和 webkit 浏览器支持</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/7959E51B5140437DA4C084E6B8E7472E/12000" alt=""></p><p>还不够，最后末尾最好有点渐变到”…”</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/D7C74A4FC9624AC7A638FC223AFF6926/12008" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line-clamp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.line-clamp</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">'...'</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(to right, transparent, #fff 55%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>将 height 设置为 line-height 整数倍，防止超出文字露出</li><li>ie10+才支持 linear-gradient 属性</li></ol><p>缺点：</p><p>当文字少于区域大小时，也会出现省略号</p><h4 id="输入框-placeholder-文字带颜色"><a href="#输入框-placeholder-文字带颜色" class="headerlink" title="输入框 placeholder 文字带颜色"></a>输入框 placeholder 文字带颜色</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* WebKit browsers */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-moz-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Mozilla Firefox 19+ */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:-ms-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Internet Explorer 10+ */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>移动端适配-rem</title>
      <link href="/yelee/2018/04/27/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D-rem/"/>
      <url>/yelee/2018/04/27/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D-rem/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="通过封装-rem-js-动态获取屏幕宽度"><a href="#通过封装-rem-js-动态获取屏幕宽度" class="headerlink" title="通过封装 rem.js,动态获取屏幕宽度"></a>通过封装 rem.js,动态获取屏幕宽度</h2><blockquote><p>通过 js 去动态计算根元素的 font-size，这样所有设备分辨率都能兼容适应</p></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">//designWidth:设计稿的实际宽度值，需要根据实际设置</span><br><span class="line">//maxWidth:制作稿的最大宽度值，需要根据实际设置</span><br><span class="line">//这段js的最后面有两个参数记得要设置，一个为设计稿实际宽度，一个为制作稿最大宽度，例如设计稿为750，最大宽度为750，则为(750,750)</span><br><span class="line">;</span><br><span class="line">(function(designWidth, maxWidth) &#123;</span><br><span class="line">    var doc = document,</span><br><span class="line">        win = window,</span><br><span class="line">        docEl = doc.documentElement,</span><br><span class="line">        remStyle = document.createElement(&quot;style&quot;),</span><br><span class="line">        tid;</span><br><span class="line"></span><br><span class="line">    function refreshRem() &#123;</span><br><span class="line">        var width = docEl.getBoundingClientRect().width;</span><br><span class="line">        maxWidth = maxWidth || 540;</span><br><span class="line">        width &gt; maxWidth &amp;&amp; (width = maxWidth);</span><br><span class="line">        var rem = width * 100 / designWidth;</span><br><span class="line">        remStyle.innerHTML = &apos;html&#123;font-size:&apos; + rem + &apos;px;&#125;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (docEl.firstElementChild) &#123;</span><br><span class="line">        docEl.firstElementChild.appendChild(remStyle);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        var wrap = doc.createElement(&quot;div&quot;);</span><br><span class="line">        wrap.appendChild(remStyle);</span><br><span class="line">        doc.write(wrap.innerHTML);</span><br><span class="line">        wrap = null;</span><br><span class="line">    &#125;</span><br><span class="line">    //要等 wiewport 设置好后才能执行 refreshRem，不然 refreshRem 会执行2次；</span><br><span class="line">    refreshRem();</span><br><span class="line"></span><br><span class="line">    win.addEventListener(&quot;resize&quot;, function() &#123;</span><br><span class="line">        clearTimeout(tid); //防止执行两次</span><br><span class="line">        tid = setTimeout(refreshRem, 300);</span><br><span class="line">    &#125;, false);</span><br><span class="line"></span><br><span class="line">    win.addEventListener(&quot;pageshow&quot;, function(e) &#123;</span><br><span class="line">        if (e.persisted) &#123; // 浏览器后退的时候重新计算</span><br><span class="line">            clearTimeout(tid);</span><br><span class="line">            tid = setTimeout(refreshRem, 300);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, false);</span><br><span class="line"></span><br><span class="line">    if (doc.readyState === &quot;complete&quot;) &#123;</span><br><span class="line">        doc.body.style.fontSize = &quot;16px&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        doc.addEventListener(&quot;DOMContentLoaded&quot;, function(e) &#123;</span><br><span class="line">            doc.body.style.fontSize = &quot;16px&quot;;</span><br><span class="line">        &#125;, false);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(640, 750);</span><br></pre></td></tr></table></figure><blockquote><p>当然也可以用 media query 设置适配集中主流的屏幕尺寸</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">html &#123;</span><br><span class="line">    font-size : 20px;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 401px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 25px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 428px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 26.75px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 481px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 30px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 569px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 35px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 641px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 40px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>提供一个移动端 base.css</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">body,</span><br><span class="line">dl,</span><br><span class="line">dd,</span><br><span class="line">ul,</span><br><span class="line">ol,</span><br><span class="line">h1,</span><br><span class="line">h2,</span><br><span class="line">h3,</span><br><span class="line">h4,</span><br><span class="line">h5,</span><br><span class="line">h6,</span><br><span class="line">pre,</span><br><span class="line">form,</span><br><span class="line">input,</span><br><span class="line">textarea,</span><br><span class="line">p,</span><br><span class="line">hr,</span><br><span class="line">thead,</span><br><span class="line">tbody,</span><br><span class="line">tfoot,</span><br><span class="line">th,</span><br><span class="line">td &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ul,</span><br><span class="line">ol &#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a &#123;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html &#123;</span><br><span class="line">    -ms-text-size-adjust: none;</span><br><span class="line">    -webkit-text-size-adjust: none;</span><br><span class="line">    text-size-adjust: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    line-height: 1.5;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body,</span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">select,</span><br><span class="line">textarea &#123;</span><br><span class="line">    font-family: &apos;helvetica neue&apos;, tahoma, &apos;hiragino sans gb&apos;, stheiti, &apos;wenquanyi micro hei&apos;, \5FAE\8F6F\96C5\9ED1, \5B8B\4F53, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b,</span><br><span class="line">strong &#123;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">i,</span><br><span class="line">em &#123;</span><br><span class="line">    font-style: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table &#123;</span><br><span class="line">    border-collapse: collapse;</span><br><span class="line">    border-spacing: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table th,</span><br><span class="line">table td &#123;</span><br><span class="line">    border: 1px solid #ddd;</span><br><span class="line">    padding: 5px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table th &#123;</span><br><span class="line">    font-weight: inherit;</span><br><span class="line">    border-bottom-width: 2px;</span><br><span class="line">    border-bottom-color: #ccc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">img &#123;</span><br><span class="line">    border: 0 none;</span><br><span class="line">    width: auto\9;</span><br><span class="line">    max-width: 100%;</span><br><span class="line">    vertical-align: top;</span><br><span class="line">    height: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">select,</span><br><span class="line">textarea &#123;</span><br><span class="line">    font-family: inherit;</span><br><span class="line">    font-size: 100%;</span><br><span class="line">    margin: 0;</span><br><span class="line">    vertical-align: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">html input[type=&quot;button&quot;],</span><br><span class="line">input[type=&quot;reset&quot;],</span><br><span class="line">input[type=&quot;submit&quot;] &#123;</span><br><span class="line">    -webkit-appearance: button;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button[disabled],</span><br><span class="line">input[disabled] &#123;</span><br><span class="line">    cursor: default;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;checkbox&quot;],</span><br><span class="line">input[type=&quot;radio&quot;] &#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;search&quot;] &#123;</span><br><span class="line">    -webkit-appearance: textfield;</span><br><span class="line">    -moz-box-sizing: content-box;</span><br><span class="line">    -webkit-box-sizing: content-box;</span><br><span class="line">    box-sizing: content-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;search&quot;]::-webkit-search-decoration &#123;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input:focus &#123;</span><br><span class="line">    outline: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">select[size],</span><br><span class="line">select[multiple],</span><br><span class="line">select[size][multiple] &#123;</span><br><span class="line">    border: 1px solid #AAA;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">article,</span><br><span class="line">aside,</span><br><span class="line">details,</span><br><span class="line">figcaption,</span><br><span class="line">figure,</span><br><span class="line">footer,</span><br><span class="line">header,</span><br><span class="line">hgroup,</span><br><span class="line">main,</span><br><span class="line">nav,</span><br><span class="line">section,</span><br><span class="line">summary &#123;</span><br><span class="line">    display: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">audio,</span><br><span class="line">canvas,</span><br><span class="line">video,</span><br><span class="line">progress &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    background: #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input::-webkit-input-speech-button &#123;</span><br><span class="line">    display: none</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">textarea &#123;</span><br><span class="line">    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> mobile </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue的数据驱动原理及简单实现</title>
      <link href="/yelee/2017/09/10/vue%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E5%8E%9F%E7%90%86%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/"/>
      <url>/yelee/2017/09/10/vue%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E5%8E%9F%E7%90%86%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Vue双向数据绑定原理"><a href="#Vue双向数据绑定原理" class="headerlink" title="Vue双向数据绑定原理"></a>Vue双向数据绑定原理</h2><h3 id="1、目标实现"><a href="#1、目标实现" class="headerlink" title="1、目标实现"></a>1、目标实现</h3><ol><li>理解双向数据绑定原理；</li><li>实现 &#123;&#123; &#125;&#125;、v-model和基本事件指令v-bind（:）、v-on（@）；</li><li>新增属性的双向绑定处理；<a id="more"></a></li></ol><h3 id="2、双向数据绑定原理"><a href="#2、双向数据绑定原理" class="headerlink" title="2、双向数据绑定原理"></a>2、双向数据绑定原理</h3><p>vue实现对数据的双向绑定，通过对数据劫持结合发布者-订阅者模式实现的。</p><h4 id="2-1-Object-defineProperty"><a href="#2-1-Object-defineProperty" class="headerlink" title="2.1 Object.defineProperty"></a>2.1 Object.defineProperty</h4><p>vue通过Object.defineProperty来实现数据劫持，会对数据对象每个属性添加对应的get和set方法，对数据进行读取和赋值操作就分别调用get和set方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">    enumerable: <span class="literal">true</span>,</span><br><span class="line">    configurable: <span class="literal">true</span>,</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;,</span><br><span class="line">    set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>我们可以将一些方法放到里面，从而完成对数据的监听（劫持）和视图的同步更新。</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/F8D35A0DDA0C438990651233F3954DD3/6460" alt="image"></p><h4 id="2-2-过程说明"><a href="#2-2-过程说明" class="headerlink" title="2.2 过程说明"></a>2.2 过程说明</h4><p>实现双向数据绑定，首先要对数据进行数据监听，需要一个监听器Observer，监听所有属性。如果属性发生变化，会调用setter和getter，再去告诉订阅者Watcher是否需要更新。由于订阅者有很多个，我们需要一个消息订阅器Dep来专门收集这些订阅者，然后在监听器Observer和订阅者Watcher之间进行统一管理。还有，我们需要一个指令解析器Complie，对每个元素进行扫描和解析，将相关指令对应初始化成一个订阅者Watcher，并替换模板数据或绑定相应函数。当订阅者Watcher接收到相应属性的变化，就会执行对应的更新函数，从而更新视图。</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/A6333A71A8E243A38EAD196BB13F9EE7/6463" alt="image"></p><h3 id="3、实现Observer"><a href="#3、实现Observer" class="headerlink" title="3、实现Observer"></a>3、实现Observer</h3><p>Observer是一个数据监听器，核心方法是我们提到过的Object.defineProperty。如果要监听所有属性的话，则需要通过递归遍历，对每个子属性都defineProperty。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data || <span class="keyword">typeof</span> data !== <span class="string">"object"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = data;</span><br><span class="line">    <span class="keyword">this</span>.walk(data);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性遍历</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    walk: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="built_in">Object</span>.keys(data).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">            self.defineReactive(data, key, data[key]);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    defineReactive: <span class="function"><span class="keyword">function</span>(<span class="params">data, key, val</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        observe(val);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">            enumerable: <span class="literal">true</span>,</span><br><span class="line">            configurable: <span class="literal">true</span>,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> val;</span><br><span class="line">            &#125;,</span><br><span class="line">            set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (newVal === val) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                val = newVal;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"属性："</span> + key + <span class="string">"被监听了，现在值为："</span> + newVal);</span><br><span class="line"></span><br><span class="line">                updateView(newVal);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        updateView(val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Observer(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听数据</span></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新视图</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; val</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateView</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $name = <span class="built_in">document</span>.querySelector(<span class="string">"#name"</span>);</span><br><span class="line">    $name.innerHTML = val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myvm = <span class="keyword">new</span> MyVue(&#123;</span><br><span class="line">    el: <span class="string">"#demo"</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        name: <span class="string">"hello word"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/93FC8BA149764033996B07C9031FBE2D/6483" alt="image"></p><h3 id="4、实现Dep"><a href="#4、实现Dep" class="headerlink" title="4、实现Dep"></a>4、实现Dep</h3><p>在流程介绍中，我们需要创建一个可以订阅者的订阅器Dep，主要负责手机订阅者，属性变化的时候执行相应的订阅者，更新函数。下面稍加改造Observer，就可以插入我们的订阅器。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    defineReactive: <span class="function"><span class="keyword">function</span>(<span class="params">data, key, val</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dep = <span class="keyword">new</span> Dep();</span><br><span class="line"></span><br><span class="line">        observe(val);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">            enumerable: <span class="literal">true</span>,</span><br><span class="line">            configurable: <span class="literal">true</span>,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否需要添加订阅者 什么时候添加订阅者呢？ 与实际页面DOM有关联的data属性才添加相应的订阅者</span></span><br><span class="line">                <span class="keyword">if</span> (Dep.target) &#123;</span><br><span class="line">                    <span class="comment">// 添加一个订阅者</span></span><br><span class="line">                    dep.addSub(Dep.target);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> val;</span><br><span class="line">            &#125;,</span><br><span class="line">            set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (newVal === val) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                val = newVal;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"属性："</span> + key + <span class="string">"被监听了，现在值为："</span> + newVal);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 通知所有订阅者</span></span><br><span class="line">                dep.notify(newVal);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        updateView(val);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 订阅器标识本身实例</span></span><br><span class="line">        Dep.target = dep;</span><br><span class="line">        <span class="comment">// 强行执行getter，往订阅器中添加订阅者</span></span><br><span class="line">        <span class="keyword">var</span> v = data[key];</span><br><span class="line">        <span class="comment">// 释放自己</span></span><br><span class="line">        Dep.target = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Observer(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订阅器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Dep</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.subs = [];</span><br><span class="line">    <span class="keyword">this</span>.target = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dep.prototype = &#123;</span><br><span class="line">    addSub: <span class="function"><span class="keyword">function</span>(<span class="params">sub</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subs.push(sub);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"this.subs:"</span>, <span class="keyword">this</span>.subs);</span><br><span class="line">    &#125;,</span><br><span class="line">    notify: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subs.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">sub</span>) </span>&#123;</span><br><span class="line">            sub.update(data);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    update: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        updateView(val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>PS:将订阅器Dep添加到一个订阅者设计到getter里面，是为了让Watcher初始化进行触发。</p><h3 id="5、实现Watcher"><a href="#5、实现Watcher" class="headerlink" title="5、实现Watcher"></a>5、实现Watcher</h3><p>订阅者Watcher在初始化的时候需要将自己添加到订阅器Dep中，那该如何添加呢？我们已经知道监听器Observer是在get函数执行添加了订阅者Watcher的操作，所以我们只要在订阅者Watcher初始化的时候触发对应的get函数去执行添加订阅者操作。那么，怎样去触发get函数？很简单，只需获取对应的属性值就可以触发了，因为我们已经用Object.defineProperty监听了所有属性。vue在这里做了个技巧处理，就是咋我们添加订阅者的时候，做一个判断，判断是否是事先缓存好的Dep.target，在订阅者添加成功后，把target重置null即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订阅者</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; vm vue对象</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; exp 属性值</span></span><br><span class="line"><span class="comment"> * @param &#123;Function&#125; cb 回调函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Watcher</span>(<span class="params">vm, exp, cb</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.vm = vm;</span><br><span class="line">    <span class="keyword">this</span>.exp = exp;</span><br><span class="line">    <span class="keyword">this</span>.cb = cb;</span><br><span class="line">    <span class="comment">// 将自己添加到订阅器</span></span><br><span class="line">    <span class="keyword">this</span>.value = <span class="keyword">this</span>.get();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Watcher.prototype = &#123;</span><br><span class="line">    update: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.run();</span><br><span class="line">    &#125;,</span><br><span class="line">    run: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> value = <span class="keyword">this</span>.vm.data[<span class="keyword">this</span>.exp];</span><br><span class="line">        <span class="keyword">var</span> oldVal = <span class="keyword">this</span>.value;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (value !== oldVal) &#123;</span><br><span class="line">            <span class="keyword">this</span>.value = value;</span><br><span class="line">            <span class="keyword">this</span>.cb.call(<span class="keyword">this</span>.vm, value, oldVal);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 缓存自己 做个标记</span></span><br><span class="line">        Dep.target = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 强制执行监听器里的get函数</span></span><br><span class="line">        <span class="comment">// this.vm.data[this.exp] 调用getter，添加一个订阅者sub，存入到全局变量subs</span></span><br><span class="line">        <span class="keyword">var</span> value = <span class="keyword">this</span>.vm.data[<span class="keyword">this</span>.exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 释放自己</span></span><br><span class="line">        Dep.target = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> $name = <span class="built_in">document</span>.querySelector(<span class="string">"#name"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给name属性添加一个订阅者到订阅器中，当属性发生变化后，触发回调</span></span><br><span class="line">    <span class="keyword">var</span> w = <span class="keyword">new</span> Watcher(<span class="keyword">this</span>, <span class="string">"name"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        $name.innerHTML = val;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里，其实已经实现了我们的双向数据绑定：能够根据初始数据初始化页面特定元素，同时当数据改变也能更新视图。</p><h3 id="5、实现Compile"><a href="#5、实现Compile" class="headerlink" title="5、实现Compile"></a>5、实现Compile</h3><p>步骤4整个过程都能有去解析DOM节点，而是直接固定节点进行替换。接下来我们就来实现一个解析器，完成一些解析和绑定工作。</p><ol><li>获取页面的DOM节点，遍历存入到文档碎片对象中；</li><li>解析出文本节点，匹配&#123;&#123;&#125;&#125;（暂时只做”&#123;&#123;&#125;&#125;”的解析），用初始化数据替换，并添加相应订阅者；</li><li>分离出节点的指令v-on、v-bind和v-model，绑定相应的事件和函数；</li></ol><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/BD96748FED95467A8B44B1AFFB499D44/6764" alt="image"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编译器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; el 根元素</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; vm vue对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Compile</span>(<span class="params">el, vm</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.vm = vm;</span><br><span class="line">    <span class="keyword">this</span>.el = <span class="built_in">document</span>.querySelector(el);</span><br><span class="line">    <span class="keyword">this</span>.fragment = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>.init();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Compile.prototype = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.el) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"this.el:"</span>, <span class="keyword">this</span>.el);</span><br><span class="line">            <span class="comment">// 移除页面元素生成文档碎片</span></span><br><span class="line">            <span class="keyword">this</span>.fragment = <span class="keyword">this</span>.nodeToFragment(<span class="keyword">this</span>.el);</span><br><span class="line">            <span class="comment">// 编译文档碎片</span></span><br><span class="line">            <span class="keyword">this</span>.compileElement(<span class="keyword">this</span>.fragment);</span><br><span class="line">            <span class="keyword">this</span>.el.appendChild(<span class="keyword">this</span>.fragment);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"DOM Selector is not exist"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 页面DOM节点转化成文档碎片</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    nodeToFragment: <span class="function"><span class="keyword">function</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> fragment = <span class="built_in">document</span>.createDocumentFragment();</span><br><span class="line">        <span class="keyword">var</span> child = el.firstChild;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 此处添加打印，出来的不是页面中原始的DOM，而是编译后的？</span></span><br><span class="line">        <span class="comment">// NodeList是引用关系，在编译后相应的值被替换了，这里打印出来的NodeList是后来被引用更新了的</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"el:"</span>, el);</span><br><span class="line">        <span class="comment">// console.log("el.firstChild:", el.firstChild.nodeValue);</span></span><br><span class="line">        <span class="keyword">while</span> (child) &#123;</span><br><span class="line">            <span class="comment">// append后，原el上的子节点被删除了，挂载在文档碎片上</span></span><br><span class="line">            fragment.appendChild(child);</span><br><span class="line">            child = el.firstChild;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译文档碎片，遍历到当前是文本节点则去编译文本节点，如果当前是元素节点，并且存在子节点，则继续递归遍历</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileElement: <span class="function"><span class="keyword">function</span>(<span class="params">fragment</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> childNodes = fragment.childNodes;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        [].slice.call(childNodes).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// var reg = /\&#123;\&#123;\s*(.+)\s*\&#125;\&#125;/g;</span></span><br><span class="line">            <span class="keyword">var</span> reg = <span class="regexp">/\&#123;\&#123;\s*((?:.|\n)+?)\s*\&#125;\&#125;/g</span>;</span><br><span class="line">            <span class="keyword">var</span> text = node.textContent;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (self.isElementNode(node)) &#123;</span><br><span class="line">                self.compileAttr(node);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (self.isTextNode(node) &amp;&amp; reg.test(text)) &#123;</span><br><span class="line">                reg.lastIndex = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">/* var match;</span></span><br><span class="line"><span class="comment">                while(match = reg.exec(text)) &#123;</span></span><br><span class="line"><span class="comment">                    self.compileText(node, match[1]);</span></span><br><span class="line"><span class="comment">                &#125; */</span></span><br><span class="line"></span><br><span class="line">                self.compileText(node, reg.exec(text)[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (node.childNodes &amp;&amp; node.childNodes.length) &#123;</span><br><span class="line">                self.compileElement(node);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileAttr: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> nodeAttrs = node.attributes;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Array</span>.prototype.forEach.call(nodeAttrs, <span class="function"><span class="keyword">function</span>(<span class="params">attr</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> attrName = attr.name;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 只对vue本身指令进行操作</span></span><br><span class="line">            <span class="keyword">if</span> (self.isDirective(attrName)) &#123;</span><br><span class="line">                <span class="keyword">var</span> exp = attr.value;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// v-on指令</span></span><br><span class="line">                <span class="keyword">if</span> (self.isOnDirective(attrName)) &#123;</span><br><span class="line">                    self.compileOn(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// v-bind指令</span></span><br><span class="line">                <span class="keyword">if</span>(self.isBindDirective(attrName)) &#123;</span><br><span class="line">                    self.compileBind(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// v-model</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (self.isModelDirective(attrName)) &#123;</span><br><span class="line">                    self.compileModel(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                node.removeAttribute(attrName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译文档碎片节点文本，即对标记替换</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileText: <span class="function"><span class="keyword">function</span>(<span class="params">node, exp</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> exps = exp.split(<span class="string">"."</span>);</span><br><span class="line">        <span class="keyword">var</span> initText = <span class="keyword">this</span>.vm.data[exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化视图</span></span><br><span class="line">        <span class="keyword">this</span>.updateText(node, initText);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加一个订阅者到订阅器</span></span><br><span class="line">        <span class="keyword">var</span> w = <span class="keyword">new</span> Watcher(<span class="keyword">this</span>.vm, exp, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">            self.updateText(node, val);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-on指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileOn: <span class="function"><span class="keyword">function</span>(<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// @xxx v-on:xxx</span></span><br><span class="line">        <span class="keyword">var</span> onRE = <span class="regexp">/^@|^v-on:/</span>;</span><br><span class="line">        <span class="keyword">var</span> eventType = attrName.replace(onRE, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> cb = vm.methods[exp];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (eventType &amp;&amp; cb) &#123;</span><br><span class="line">            node.addEventListener(eventType, cb.bind(vm), <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-bind指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileBind: <span class="function"><span class="keyword">function</span> (<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// :xxx v-bind:xxx</span></span><br><span class="line">        <span class="keyword">var</span> bindRE = <span class="regexp">/^:|^v-bind:/</span>;</span><br><span class="line">        <span class="keyword">var</span> attr = attrName.replace(bindRE, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> val = vm.data[exp];</span><br><span class="line"></span><br><span class="line">        node.setAttribute(attr, val);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-model指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileModel: <span class="function"><span class="keyword">function</span>(<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> val = <span class="keyword">this</span>.vm.data[exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化视图</span></span><br><span class="line">        <span class="keyword">this</span>.modelUpdater(node, val);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加一个订阅者到订阅器</span></span><br><span class="line">        <span class="keyword">new</span> Watcher(<span class="keyword">this</span>.vm, exp, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            self.modelUpdater(node, value);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绑定input事件</span></span><br><span class="line">        node.addEventListener(<span class="string">"input"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> newVal = e.target.value;</span><br><span class="line">            <span class="keyword">if</span> (val === newVal) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            self.vm.data[exp] = newVal;</span><br><span class="line">            <span class="comment">// val = newVal;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新文档碎片相应的文本节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    updateText: <span class="function"><span class="keyword">function</span>(<span class="params">node, val</span>) </span>&#123;</span><br><span class="line">        node.textContent = <span class="keyword">typeof</span> val === <span class="string">"undefined"</span> ? <span class="string">""</span> : val;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * model更新节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    modelUpdater: <span class="function"><span class="keyword">function</span>(<span class="params">node, val, oldVal</span>) </span>&#123;</span><br><span class="line">        node.value = <span class="keyword">typeof</span> val == <span class="string">"undefined"</span> ? <span class="string">""</span> : val;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是vue指令，包括v-xxx:,:xxx,@xxx</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dirRE = <span class="regexp">/^v-|^@|^:/</span>;</span><br><span class="line">        <span class="keyword">return</span> dirRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-on指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isOnDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> onRE = <span class="regexp">/^v-on:|^@/</span>;</span><br><span class="line">        <span class="keyword">return</span> onRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-bind指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isBindDirective: <span class="function"><span class="keyword">function</span> (<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> bindRE = <span class="regexp">/^v-bind:|^:/</span>;</span><br><span class="line">        <span class="keyword">return</span> bindRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-model指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isModelDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> mdRE = <span class="regexp">/^v-model/</span>;</span><br><span class="line">        <span class="keyword">return</span> mdRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断元素节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isElementNode: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> node.nodeType == <span class="number">1</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文本节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isTextNode: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> node.nodeType == <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.methods = options.methods;</span><br><span class="line"></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Compile(options.el, <span class="keyword">this</span>.vm);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们就可以调用指令v-bind、v-on和v-model。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="undefined">            color: red;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-bind:class</span>=<span class="string">"myColor"</span>&gt;</span>&amp;#123;&amp;#123; name &amp;#125;&amp;#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">v-model</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"clickOk"</span>&gt;</span>Ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> myvm = <span class="keyword">new</span> MyVue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">"#demo"</span>,</span></span><br><span class="line"><span class="undefined">    data: &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">"hello word"</span>,</span></span><br><span class="line"><span class="javascript">        myColor: <span class="string">"red"</span></span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="javascript">        clickOk: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">"I am OK"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    myvm.data.name = <span class="string">"wawawa...vue was born"</span>;</span></span><br><span class="line"><span class="undefined">&#125;, 2000);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/0442953EE78A48C3B26FFE48B1731582/6629" alt="image"></p><h3 id="5、其他"><a href="#5、其他" class="headerlink" title="5、其他"></a>5、其他</h3><h4 id="5-1-proxy代理data"><a href="#5-1-proxy代理data" class="headerlink" title="5.1 proxy代理data"></a>5.1 proxy代理data</h4><p>可能注意到了，我们不管是在赋值还是取值，都是在myvm.data.someAttr上操作的，而在vue上我们习惯直接myvm.someAttr这种形式。怎样实现呢？同样，我们可以用Object.defineProperty对data所有属性做一个代理，即访问vue实例属性时，代理到data上。很简单，实现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 将数据拓展到vue的根，方便读取和设置</span><br><span class="line"> */</span><br><span class="line">MyVue.prototype.proxy = function(key) &#123;</span><br><span class="line">    var self = this;</span><br><span class="line"></span><br><span class="line">    Object.defineProperty(this, key, &#123;</span><br><span class="line">        enumerable: true,</span><br><span class="line">        configurable: true,</span><br><span class="line">        get: function proxyGetter() &#123;</span><br><span class="line">            return self.data[key];</span><br><span class="line">        &#125;,</span><br><span class="line">        set: function proxySetter(newVal) &#123;</span><br><span class="line">            self.data[key] = newVal;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/71B50262A5944F928CDA8CFD8944A538/6670" alt="image"></p><h4 id="5-2-parsePath"><a href="#5-2-parsePath" class="headerlink" title="5.2 parsePath"></a>5.2 parsePath</h4><p>上面对于data的操作只是到对于简单的基本类型属性，对于对象属性的改变该怎么更新到位呢？其实，只要深度遍历对象属性路径，就可以找到要访问属性值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据对象属性路径，最终获取值</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; obj 对象</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; path 路径</span></span><br><span class="line"><span class="comment"> * return 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parsePath</span>(<span class="params">obj, path</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bailRE = <span class="regexp">/[^\w.$]/</span>;</span><br><span class="line">    <span class="keyword">if</span> (bailRE.test(path)) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> segments = path.split(<span class="string">'.'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; segments.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!obj) &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        obj = obj[segments[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用这个方法替换我们的所有取值操作<br>vm[exp] =&gt; parsePath(vm, exp)</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/BB5F59CFD0244D4991E13B5D35F88AF3/6709" alt="image"></p><h3 id="6、新增属性的双向数据绑定"><a href="#6、新增属性的双向数据绑定" class="headerlink" title="6、新增属性的双向数据绑定"></a>6、新增属性的双向数据绑定</h3><h4 id="6-1-给对象添加属性"><a href="#6-1-给对象添加属性" class="headerlink" title="6.1 给对象添加属性"></a>6.1 给对象添加属性</h4><p>Vue 不允许在已经创建的实例上动态添加新的根级响应式属性 (root-level reactive property)。然而它可以使用 Vue.set(object, key, value) 方法将响应属性添加到嵌套的对象上。<br>也就是我们需要在Vue原型上添加一个set方法去设置新添加的属性，新属性同样要进行监听和添加订阅者。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue的set方法，用于外部新增属性 Vue.$set(target, key, val)</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; target 数据</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; key 属性</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; val 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params">target, key, val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(target)) &#123;</span><br><span class="line">        target.length = <span class="built_in">Math</span>.max(target.length, key);</span><br><span class="line">        target.splice(key, <span class="number">1</span>, val);</span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (target.hasOwnProperty(key)) &#123;</span><br><span class="line">        target[key] = val;</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> ob = (target).$Observer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!ob) &#123;</span><br><span class="line">        target[key] = val;</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对新增属性定义监听</span></span><br><span class="line">    ob.defineReactive(target, key, val);</span><br><span class="line"></span><br><span class="line">    ob.dep.notify();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyVue.prototype.$set = set;</span><br></pre></td></tr></table></figure><h4 id="6-1-给数组对象添加属性"><a href="#6-1-给数组对象添加属性" class="headerlink" title="6.1 给数组对象添加属性"></a>6.1 给数组对象添加属性</h4><p>把数组看成一个特殊的对象，就很容易理解了，对于unshift、push和splice变异方法是添加了对象的属性的，需要对新加的属性进行监听和添加订阅者。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arrKeys = [<span class="string">"push"</span>, <span class="string">"pop"</span>, <span class="string">"shift"</span>, <span class="string">"unshift"</span>, <span class="string">"splice"</span>, <span class="string">"sort"</span>, <span class="string">"reverse"</span>];</span><br><span class="line"><span class="keyword">var</span> extendArr = [];</span><br><span class="line"></span><br><span class="line">arrKeys.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">    def(extendArr, key, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result,</span><br><span class="line">            arrProto = <span class="built_in">Array</span>.prototype,</span><br><span class="line">            ob = <span class="keyword">this</span>.$Observer,</span><br><span class="line">            arr = arrProto.slice.call(<span class="built_in">arguments</span>),</span><br><span class="line">            inserted,</span><br><span class="line">            index;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"push"</span>:</span><br><span class="line">                inserted = arr;</span><br><span class="line">                index = <span class="keyword">this</span>.length;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"unshift"</span>:</span><br><span class="line">                inserted = arr;</span><br><span class="line">                index = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"splice"</span>:</span><br><span class="line">                inserted = arr.slice(<span class="number">2</span>);</span><br><span class="line">                index = arr[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        result = arrProto[key].apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听新增数组对象属性</span></span><br><span class="line">        <span class="keyword">if</span> (inserted) &#123;</span><br><span class="line">            ob.observeArray(inserted);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ob.dep.notify();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arrayKeys = <span class="built_in">Object</span>.getOwnPropertyNames(extendArr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.dep = <span class="keyword">new</span> Dep();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data || <span class="keyword">typeof</span> data !== <span class="string">"object"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在每个object上添加一个observer</span></span><br><span class="line">    def(data, <span class="string">"$Observer"</span>, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 继承变异方法</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(data)) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把数组变异方法的处理，添加到原型链上</span></span><br><span class="line">        data.__proto__ = extendArr;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听数组对象属性</span></span><br><span class="line">        <span class="keyword">this</span>.observeArray(data);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">        <span class="keyword">this</span>.walk(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    observeArray: <span class="function"><span class="keyword">function</span>(<span class="params">items</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"items:"</span>, items);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, l = items.length; i &lt; l; i++) &#123;</span><br><span class="line">            observe(items[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue-cli中遇到的坑</title>
      <link href="/yelee/2017/09/02/vue-cli%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
      <url>/yelee/2017/09/02/vue-cli%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yelee\assets\css\APlayer.min.css"><script src="\yelee\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Vue-cli-脚手架"><a href="#Vue-cli-脚手架" class="headerlink" title="Vue-cli 脚手架"></a>Vue-cli 脚手架</h2><p>项目构建自动化，错误查起来越来越不知所措，坑很多，踩过后要记录，防止踩第二遍</p><h4 id="vue-单文件-import-css-文件，不加-会报错"><a href="#vue-单文件-import-css-文件，不加-会报错" class="headerlink" title="vue 单文件@import css 文件，不加~会报错"></a>vue 单文件@import css 文件，不加<code>~</code>会报错</h4><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">@import &apos;assets/css/variable&apos;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[HMR] bundle has 1 errors</span><br><span class="line">172:176 ./~/css-loader?&#123;&quot;minimize&quot;:false,&quot;sourceMap&quot;:false&#125;!./~/vue-loader/lib/style-compiler?&#123;&quot;vue&quot;:true,&quot;id&quot;:&quot;data-v-be4708e4&quot;,&quot;scoped&quot;:true,&quot;hasInlineConfig&quot;:false&#125;!./~/stylus-loader?&#123;&quot;sourceMap&quot;:false&#125;!./~/vue-loader/lib/selector.js?type=styles&amp;index=0!./src/components/views/programs/Programs.vue</span><br><span class="line">Module build failed: Error: D:\appSoft\wampserver\wamp64\www\iHomed_vue\src\components\views\programs\Programs.vue:200:9</span><br><span class="line">   196| &#125;</span><br><span class="line">   197| &lt;/script&gt;</span><br><span class="line">   198|</span><br><span class="line">   199| &lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">   200| @import &apos;assets/css/variable&apos;</span><br><span class="line">----------------^</span><br><span class="line">   201|</span><br></pre></td></tr></table></figure><p>正确写法<code>@import &#39;~assets/css/variable&#39;</code></p><h4 id="vue-cli-中-config-index-js-配置说明"><a href="#vue-cli-中-config-index-js-配置说明" class="headerlink" title="vue-cli 中 config/index.js 配置说明"></a>vue-cli 中 config/index.js 配置说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  build: &#123;</span><br><span class="line">    env: require(&apos;./prod.env&apos;), // 使用 config/prod.env.js 中定义的编译环境</span><br><span class="line">    index: path.resolve(__dirname, &apos;../dist/index.html&apos;), // 编译输入的 index.html 文件</span><br><span class="line">    assetsRoot: path.resolve(__dirname, &apos;../dist&apos;), // 编译输出的静态资源路径</span><br><span class="line">    assetsSubDirectory: &apos;static&apos;, // 编译输出的二级目录</span><br><span class="line">    assetsPublicPath: &apos;/&apos;, // 编译发布的根目录，可配置为资源服务器域名或 CDN 域名</span><br><span class="line">    productionSourceMap: true, // 是否开启 cssSourceMap</span><br><span class="line">    // Gzip off by default as many popular static hosts such as</span><br><span class="line">    // Surge or Netlify already gzip all static assets for you.</span><br><span class="line">    // Before setting to `true`, make sure to:</span><br><span class="line">    // npm install --save-dev compression-webpack-plugin</span><br><span class="line">    productionGzip: false, // 是否开启 gzip</span><br><span class="line">    productionGzipExtensions: [&apos;js&apos;, &apos;css&apos;], // 需要使用 gzip 压缩的文件扩展名</span><br><span class="line">    // Run the build command with an extra argument to</span><br><span class="line">    // View the bundle analyzer report after build finishes:</span><br><span class="line">    // `npm run build --report`</span><br><span class="line">    // Set to `true` or `false` to always turn it on or off</span><br><span class="line">    bundleAnalyzerReport: process.env.npm_config_report</span><br><span class="line">  &#125;,</span><br><span class="line">  dev: &#123; // dev 环境</span><br><span class="line">    env: require(&apos;./dev.env&apos;), // 使用 config/dev.env.js 中定义的编译环境</span><br><span class="line">    port: 8084, // 运行测试页面的端口</span><br><span class="line">    autoOpenBrowser: true, // 自动在浏览器中打开</span><br><span class="line">    assetsSubDirectory: &apos;static&apos;, // 编译输出的二级目录</span><br><span class="line">    assetsPublicPath: &apos;/&apos;, // 编译发布的根目录，可配置为资源服务器域名或 CDN 域名</span><br><span class="line">    proxyTable: &#123;&#125;, // 需要 proxyTable 代理的接口（可跨域）</span><br><span class="line">    // CSS Sourcemaps off by default because relative paths are &quot;buggy&quot;</span><br><span class="line">    // with this option, according to the CSS-Loader README</span><br><span class="line">    // (https://github.com/webpack/css-loader#sourcemaps)</span><br><span class="line">    // In our experience, they generally work as expected,</span><br><span class="line">    // just be aware of this issue when enabling this option.</span><br><span class="line">    cssSourceMap: false  // 是否开启 cssSourceMap</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>曾经不易理解的两点<code>assetsSubDirectory</code>和<code>assetsPublicPath</code></p><ol><li><p>assetsSubDirectory<br>被 webpack 编译处理过的资源文件都会在这个 build.assetsRoot 目录下，如果 assetsRoot 值是<code>&quot;/web/app&quot;</code>，assetsSubDirectory 值为<code>&quot;static&quot;</code>，那么，webpack 将把所有资源编译到<code>web/app/static</code>目录下</p></li><li><p>assetsPublicPath<br>这个是通过 http 服务器运行的 url 路径，大多数情况下，这个是根目录（/）。如果你的后台框架对静态资源 url 前缀有要求，你仅需改变这个参数。比如不用本地的，而用线上的 CDN。</p></li></ol><h4 id="父子组件嵌套，各个钩子函数触发顺序"><a href="#父子组件嵌套，各个钩子函数触发顺序" class="headerlink" title="父子组件嵌套，各个钩子函数触发顺序"></a>父子组件嵌套，各个钩子函数触发顺序</h4><p>偶然看到这个问题：vue 中父子组件各个钩子函数触发顺序是怎样的？一时还真背问到了，在项目中添加打印才发现是这样子的</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/E40E6B0ED1F5479F909A69469C83D99A/12039" alt=""></p><p>顺序是：先依次触发父级组件<code>beforeCreate</code>、<code>create</code>和<code>beforeMounte</code>，再依次触发子级组件<code>beforeCreate</code>、<code>create</code>、<code>beforeMounte</code>和<code>mounted</code>，最后父级组件<code>mounted</code></p><h4 id="父子组件之间通信，兄弟组件之间通信"><a href="#父子组件之间通信，兄弟组件之间通信" class="headerlink" title="父子组件之间通信，兄弟组件之间通信"></a>父子组件之间通信，兄弟组件之间通信</h4><p>这个问题基本清晰，在这归纳一下</p><h5 id="1-父组件数据传给子组件"><a href="#1-父组件数据传给子组件" class="headerlink" title="1. 父组件数据传给子组件"></a>1. 父组件数据传给子组件</h5><p>通过<code>props</code>属性传递</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent-component</span> <span class="attr">:parent-data</span>=<span class="string">"pdata"</span>&gt;</span><span class="tag">&lt;/<span class="name">parent-component</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    parentData: &#123;</span><br><span class="line">      type: <span class="built_in">String</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="string">''</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-子组件传数据给父组件"><a href="#2-子组件传数据给父组件" class="headerlink" title="2. 子组件传数据给父组件"></a>2. 子组件传数据给父组件</h5><p>使用<code>$emit</code>派发</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent-component</span> <span class="attr">:parent-data:sync</span>=<span class="string">"pdata"</span> @<span class="attr">handle-callback</span>=<span class="string">"handlerCallback"</span>&gt;</span><span class="tag">&lt;/<span class="name">parent-component</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handlerCallback(params) &#123;</span><br><span class="line">      <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'handleCallback'</span>, params)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'update:parentData'</span>, someData)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-兄弟组件数据传递"><a href="#3-兄弟组件数据传递" class="headerlink" title="3. 兄弟组件数据传递"></a>3. 兄弟组件数据传递</h5><ol><li>对于大型项目，用 vue 官方推荐的 vuex</li><li><p>EventBus</p><ul><li><p>提取 bus.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">const</span> bus = <span class="keyword">new</span> Vue()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> bus</span><br></pre></td></tr></table></figure></li><li><p>兄弟组件 1 发送数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">'./bus'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'busEvent1'</span>, someData)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>兄弟组件 2 接收数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">'./bus'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$on(<span class="string">'busEvent1'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(data)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>子组件 A <code>$emit</code>派发某个事件，再由父组件<code>@handle-callback=&quot;handlerCallback&quot;</code>监听获取数据，然后，父组件<code>$refs</code>直接访问到子组件 B 的方法，从而间接实现从子组件 A 到子组件 B 的数据传递</p></li></ol><h4 id="props-在子组件中被重写报错"><a href="#props-在子组件中被重写报错" class="headerlink" title="props 在子组件中被重写报错"></a>props 在子组件中被重写报错</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue.esm.js?<span class="number">06e7</span>:<span class="number">591</span> [Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop<span class="string">'s value. Prop being mutated: "isShow"</span></span><br></pre></td></tr></table></figure><p><strong>解决方案</strong><br><code>props</code>传过来的参数通过<code>Vue.$emit</code>提交修改</p><h4 id="在props和data中使用this"><a href="#在props和data中使用this" class="headerlink" title="在props和data中使用this"></a>在<code>props</code>和<code>data</code>中使用<code>this</code></h4><p>在 Vue2.2.2 或更高版本才能这样使用，低于这个版本时，注入的值会在<code>props</code>和<code>data</code>初始化之后得到。</p><h4 id="对于高阶插件-组件库，解决组件与其子孙组件数据传输问题"><a href="#对于高阶插件-组件库，解决组件与其子孙组件数据传输问题" class="headerlink" title="对于高阶插件/组件库，解决组件与其子孙组件数据传输问题"></a>对于高阶插件/组件库，解决组件与其子孙组件数据传输问题</h4><ol><li><p>解决方案一：<code>$attrs</code>和<code>$listener</code></p><p>使用属性和方法不通过<code>props</code>传递，在子孙组件中直接用<code>$attrs</code>和<code>$listeners</code>接收。不过支持 v2.4.0+。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父级组件</span></span><br><span class="line">&lt;ul id=<span class="string">"app6"</span>&gt;</span><br><span class="line">&lt;item</span><br><span class="line"><span class="class"><span class="keyword">class</span></span>=<span class="string">"item"</span></span><br><span class="line">:model=<span class="string">"treeData"</span></span><br><span class="line">:count=<span class="string">"123"</span></span><br><span class="line">@abc=<span class="string">"function()&#123;&#125;"</span></span><br><span class="line">&gt;<span class="xml"><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 子孙组件</span></span><br><span class="line"><span class="regexp">inheritAttrs: false,</span></span><br><span class="line"><span class="regexp">created () &#123;</span></span><br><span class="line"><span class="regexp">    let attrs = this.$attrs;</span></span><br><span class="line"><span class="regexp">    console.log('mode:', attrs.mode);</span></span><br><span class="line"><span class="regexp">    console.log('count:', attrs.count);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    let listeners = this.$listeners;</span></span><br><span class="line"><span class="regexp">    console.log('bac:', listeners.abc);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>解决方案二：<code>provide/inject</code></p><p>父级组件传入<code>provide</code>数据选项，子孙组件注入<code>inject</code>数据。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line">provide: &#123;</span><br><span class="line">  foo: <span class="string">'bar'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子孙组件</span></span><br><span class="line">inject: [<span class="string">'foo'</span>] <span class="comment">// or inject: &#123; name: 'foo', defult: '' &#125;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue-cli </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
