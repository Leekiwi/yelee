<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>项目结构tree图</title>
      <link href="/2018/10/13/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%9B%BE/"/>
      <url>/2018/10/13/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%9B%BE/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="目录结构介绍"><a href="#目录结构介绍" class="headerlink" title="目录结构介绍"></a>目录结构介绍</h2><blockquote><p>vue-cli2.0</p></blockquote><a id="more"></a><pre><code>|-- build                            // webpack配置文件|-- config                           // 项目打包路径|-- src                              // 源码目录|   |-- components                   // 组件|       |-- common                   // 公共组件|           |-- bus.js                // Event Bus|           |-- Header.vue           // 公共头部|           |-- Home.vue                // 公共路由入口|           |-- Sidebar.vue          // 公共左边栏|           |-- Tags.vue                // 页面切换标签组件|       |-- page                        // 主要路由页面|           |-- 403.vue|           |-- 404.vue|           |-- BaseCharts.vue       // 基础图表|           |-- BaseForm.vue         // 基础表单|           |-- BaseTable.vue        // 基础表格|           |-- DashBoard.vue        // 系统首页|           |-- DragList.vue         // 拖拽列表组件|           |-- Icon.vue             // 自定义图标组件|           |-- Login.vue               // 登录|           |-- Markdown.vue         // markdown组件|           |-- Premission.vue       // 权限测试组件|           |-- Upload.vue           // 图片上传|           |-- VueEditor.vue        // 富文本编辑器|   |-- App.vue                      // 页面入口文件|   |-- main.js                      // 程序入口文件，加载各种公共组件|-- .babelrc                         // ES6语法编译配置|-- .editorconfig                    // 代码编写规格|-- .gitignore                       // 忽略的文件|-- index.html                       // 入口html文件|-- package.json                     // 项目及工具的依赖配置文件|-- README.md                        // 说明</code></pre>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实用 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>npm报错：error code EINTEGRITY</title>
      <link href="/2018/10/13/npm%E6%8A%A5%E9%94%99%EF%BC%9Aerror-code-EINTEGRITY/"/>
      <url>/2018/10/13/npm%E6%8A%A5%E9%94%99%EF%BC%9Aerror-code-EINTEGRITY/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天 npm install 时候遇到类似的错误</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法:"></a>解决办法:</h3><blockquote><p>一、升级 npm<br><code>npm i -g npm</code><br><a id="more"></a><br>二、删除 package-lock.json</p></blockquote><blockquote><p>三、删除缓存目录下的所有数据<br><code>npm cache clean –force</code></p></blockquote><blockquote><p>四、验证缓存数据的有效性和完整性，清理垃圾数据<br><code>npm cache verify</code></p></blockquote><blockquote><p>五、包问题<br>包是在 windows 下发布的，在 linux 安装错误。<br>排查方法：看日志，去除相关的包配置，再安装测试</p></blockquote><p>一般到第四步即可完美解决</p>]]></content>
      
      <categories>
          
          <category> 工作常见问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端</title>
      <link href="/2018/09/13/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"/>
      <url>/2018/09/13/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="security">  <div class="input-container">  <input type="password" class="form-control" id="pass" placeholder="请输入密码以访问" />    <label for="pass">请输入密码以访问</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      <categories>
          
          <category> 前端面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端面试 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ES6中简约强大数组操作组合</title>
      <link href="/2018/09/07/ES6%E4%B8%AD%E7%AE%80%E7%BA%A6%E5%BC%BA%E5%A4%A7%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%BB%84%E5%90%88/"/>
      <url>/2018/09/07/ES6%E4%B8%AD%E7%AE%80%E7%BA%A6%E5%BC%BA%E5%A4%A7%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%BB%84%E5%90%88/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ES6-数组新增方法"><a href="#ES6-数组新增方法" class="headerlink" title="ES6 数组新增方法"></a>ES6 数组新增方法</h2><h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h3><p><code>array.reduce(callback[, initialValue])</code></p><a id="more"></a><p>数组求和</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br><span class="line">numbers.reduce(<span class="function">(<span class="params">prev, cur, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'prev: '</span> + prev + <span class="string">'; '</span> + <span class="string">'cur: '</span> + cur + <span class="string">';'</span>)</span><br><span class="line">  <span class="keyword">return</span> prev + cur</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">prev: <span class="number">10</span></span><br><span class="line">cur: <span class="number">20</span></span><br><span class="line">prev: <span class="number">30</span></span><br><span class="line">cur: <span class="number">30</span></span><br><span class="line">prev: <span class="number">60</span></span><br><span class="line">cur: <span class="number">40</span></span><br></pre></td></tr></table></figure><p>这第二个参数就是设置 prev 的初始类型和初始值，比如为 0，就表示 prev 的初始值为 number 类型，值为 0，因此，reduce 的最终结果也会是 number 类型。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br><span class="line">numbers.reduce(<span class="function">(<span class="params">prev, cur, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'prev: '</span> + prev + <span class="string">'; '</span> + <span class="string">'cur: '</span> + cur + <span class="string">';'</span>)</span><br><span class="line">  <span class="keyword">return</span> prev + cur</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">prev: <span class="number">0</span></span><br><span class="line">cur: <span class="number">10</span></span><br><span class="line">prev: <span class="number">10</span></span><br><span class="line">cur: <span class="number">20</span></span><br><span class="line">prev: <span class="number">30</span></span><br><span class="line">cur: <span class="number">30</span></span><br><span class="line">prev: <span class="number">60</span></span><br><span class="line">cur: <span class="number">40</span></span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.zhangxinxu.com/wordpress/2013/04/es5%E6%96%B0%E5%A2%9E%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/" target="_blank" rel="noopener">https://www.zhangxinxu.com/wordpress/2013/04/es5%E6%96%B0%E5%A2%9E%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/</a></p><p><a href="https://segmentfault.com/a/1190000005921341" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005921341</a></p><p><a href="https://segmentfault.com/a/1190000013972464" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013972464</a></p><p><a href="https://segmentfault.com/a/1190000013121115" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013121115</a></p>]]></content>
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>干掉状态从session到token</title>
      <link href="/2018/09/07/%E5%B9%B2%E6%8E%89%E7%8A%B6%E6%80%81%E4%BB%8Esession%E5%88%B0token/"/>
      <url>/2018/09/07/%E5%B9%B2%E6%8E%89%E7%8A%B6%E6%80%81%E4%BB%8Esession%E5%88%B0token/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="美好的旧时光"><a href="#美好的旧时光" class="headerlink" title="美好的旧时光"></a>美好的旧时光</h2><p>我经常怀念三十年前那美好的旧时光， 工作很轻松， 生活很悠闲。</p><p>上班的时候偶尔有些 HTTP 的请求发到我这里， 我简单的看一下， 取出相对应的 html 文档，图片，发回去就可以了， 然后就可以继续喝茶聊天。</p><a id="more"></a><p>我的创造者们对我很好， 他们制定的一个简单 HTTP 协议， 就是请求加响应， 尤其是我不用记住是谁刚刚发了 HTTP 请求， 每个请求对我来说都是全新的！</p><p>邮件服务器很羡慕我， 他说：老弟，你的生活太惬意了， 哪像我， 每次有人从客户端访问邮箱， 我都得专门给他建立一个会话， 来处理他发的消息， 你倒好， 完全不用管理会话。</p><p>这是由应用的特性决定的， 如果邮件服务器不管理会话， 那多个人之间的邮件消息就会完全混到一起了， 乱作一团了。</p><p>而 30 年前的 Web 基本上就是文档的浏览而已， 既然是浏览，我作为一个服务器， 为什么要记住谁在一段时间里都浏览了什么文档呢？</p><p>2</p><h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><p>但是好日子没持续多久， 很快大家就不满足于静态的 Html 文档了， 交互式的 Web 应用开始兴起， 尤其是论坛， 在线购物等网站。</p><p>我马上就遇到了和邮件服务器一样的问题， 那就是必须管理会话，必须记住哪些人登录系统， 哪些人往自己的购物车中放了商品， 也就是说我必须把每个人区分开。</p><p>这对我来说是个不小的挑战， 由于 HTTP 协议的无状态特性， 我必须加点小手段，才能完成会话管理。</p><p>我想出的办法就是给大家发一个会话标识(session id), 说白了就是一个随机的字符串，每个人收到的都不一样， 每次大家向我发起 HTTP 请求的时候，把这个字符串给一并捎过来， 这样我就能区分开谁是谁了。</p><p>3</p><h2 id="沉重的负担"><a href="#沉重的负担" class="headerlink" title="沉重的负担"></a>沉重的负担</h2><p>大家都很高兴， 可是我就不爽了。</p><p>每个人只需要保存自己的 session id，而我需要保存所有人的 session id ！ 如果访问我的人多了， 就得由成千上万，甚至几十万个。</p><p>这对我来说是一个巨大的开销 ， 严重的限制了我的扩展能力， 比如说我用两个机器组成了一个集群， 小 F 通过机器 A 登录了系统， 那 session id 会保存在机器 A 上， 假设小 F 的下一次请求被转发到机器 B 怎么办？ 机器 B 可没有小 F 的 session id 啊。</p><p>有时候我会采用一点小伎俩： <strong>session sticky</strong> ， 就是让小 F 的请求一直粘连在机器 A 上， 但是这也不管用， 要是机器 A 挂掉了， 还得转到机器 B 去。</p><p>那我只好做 session 的复制了， 把 session id 在两个机器之间搬来搬去， 快累死了。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vNJe66yhKRkVOxqS9gxftlwCuh8yicUcPPFaMMLv0oia9Xzf5IutmIPwQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><blockquote><ul><li>后来有个叫 <strong>Memcached</strong> 的给我支了招： 把 session id 集中存储到一个地方， 所有的机器都来访问这个地方的数据， 这样一来，就不用复制了， 但是增加了单点失败的可能性， 要是那个负责 session 的机器挂了， 所有人都得重新登录一遍， 估计得被人骂死。</li></ul></blockquote><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vwDyicwnvVayaKBpxXY4W5mUgQDwHD7Iwu3yY2OhV4qXG49oMbIgQP0A/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>我也尝试把这个单点的机器也搞出集群，增加可靠性， 但不管如何， 这小小的 session 对我来说是一个沉重的负担。</p><p>4</p><h3 id="时间换空间"><a href="#时间换空间" class="headerlink" title="时间换空间"></a>时间换空间</h3><p>这几天的晚上我一直在思考， 我为什么要保存这可恶的 session 呢， 只让每个客户端去保存该多好？</p><p>可是如果我不保存这些 session id , 我怎么验证客户端发给我的 session id 的确是我生成的呢？ 如果我不去验证，我都不知道他们是不是合法登录的用户， 那些不怀好意的家伙们就可以伪造 session id , 为所欲为了。</p><p>嗯，对了，关键点就是验证 ！</p><blockquote><ul><li>比如说， 小 F 已经登录了系统， 我给他发一个 <strong>令牌(token)</strong>， 里边包含了小 F 的 user id， 下一次小 F 再次通过 Http 请求访问我的时候， 把这个 token 通过 Http header 带过来不就可以了。</li></ul></blockquote><p>不过这和 session id 没有本质区别啊， 任何人都可以可以伪造， 所以我得想点儿办法， 让别人伪造不了。</p><blockquote><ul><li><strong>那就对数据做一个签名吧， 比如说我用 HMAC-SHA256 算法，加上一个只有我才知道的密钥， 对数据做一个签名， 把这个签名和数据一起作为 token ， 由于密钥别人不知道， 就无法伪造 token 了。</strong></li></ul></blockquote><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vicfOmZHQhQ7e6Wjk7licKBMh38rPZfnEQxAibWXjY84P0icEVoFU51ibwiaQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>这个 token 我不保存， 当小 F 把这个 token 给我发过来的时候，我再用同样的 HMAC-SHA256 算法和同样的密钥，对数据再计算一次签名， 和 token 中的签名做个比较， 如果相同， 我就知道小 F 已经登录过了，并且可以直接取到小 F 的 user id , 如果不相同， 数据部分肯定被人篡改过， 我就告诉发送者： 对不起，没有认证。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6ULYaJ4jzPaPeibAKbBdpJ73vNJe66yhKRkVOxqS9gxftlwCuh8yicUcPPFaMMLv0oia9Xzf5IutmIPwQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="此处输入图片的描述"></p><p>Token 中的数据是明文保存的（虽然我会用 Base64 做下编码， 但那不是加密）， 还是可以被别人看到的， 所以我不能在其中保存像密码这样的敏感信息。</p><p>当然， 如果一个人的 token 被别人偷走了， 那我也没办法， 我也会认为小偷就是合法用户， 这其实和一个人的 session id 被别人偷走是一样的。</p><blockquote><ul><li>这样一来， 我就不保存 session id 了， <strong>我只是生成 token , 然后验证 token ， 我用我的 CPU 计算时间获取了我的 session 存储空间 ！</strong></li></ul></blockquote><p>解除了 session id 这个负担， 可以说是无事一身轻， 我的机器集群现在可以轻松地做水平扩展， 用户访问量增大， 直接加机器就行。 这种无状态的感觉实在是太好了！</p><p>（完）</p>]]></content>
      
      <categories>
          
          <category> 状态保持 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>element-ui更换主题和按需引入组件</title>
      <link href="/2018/09/04/element-ui%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5%E7%BB%84%E4%BB%B6/"/>
      <url>/2018/09/04/element-ui%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5%E7%BB%84%E4%BB%B6/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="element-ui-使用初体验"><a href="#element-ui-使用初体验" class="headerlink" title="element-ui 使用初体验"></a>element-ui 使用初体验</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>手上有些项目用的<code>element-ui</code>，刚好有空琢磨一下怎么减小打包文件大小和打包速度方面，为了演示实验，用 vue-cli 生成初始项目，在这仅对 element-ui 主题和组件方面来优化。</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack vuecli</span><br></pre></td></tr></table></figure><h3 id="完整引入"><a href="#完整引入" class="headerlink" title="完整引入"></a>完整引入</h3><p>完整地将 ui 和样式引入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span></span><br></pre></td></tr></table></figure><p>在页面简单使用三个组件，看看效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"block"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"demonstration"</span>&gt;</span>区分颜色<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-rate</span> <span class="attr">v-model</span>=<span class="string">"value1"</span> <span class="attr">:colors</span>=<span class="string">"['#99A9BF', '#F7BA2A', '#FF9900']"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-rate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">icon</span>=<span class="string">"el-icon-search"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"success"</span> <span class="attr">icon</span>=<span class="string">"el-icon-check"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"info"</span> <span class="attr">icon</span>=<span class="string">"el-icon-message"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"warning"</span> <span class="attr">icon</span>=<span class="string">"el-icon-star-off"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"danger"</span> <span class="attr">icon</span>=<span class="string">"el-icon-delete"</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/gb/element-ui更换主题和按需引入组件/0.bmp" alt=""></p><p>再看一下打包后的资源大小情况<code>npm run build --report</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: fa47514a97341329a7c0</span><br><span class="line">Version: webpack 3.11.0</span><br><span class="line">Time: 20363ms</span><br><span class="line">                                                  Asset       Size  Chunks                    Chunk Names</span><br><span class="line">                 static/fonts/element-icons.6f0a763.ttf      11 kB          [emitted]</span><br><span class="line">               static/js/vendor.5efcf828140d5dbedda9.js     714 kB       0  [emitted]  [big]  vendor</span><br><span class="line">                  static/js/app.a4a31db472f653b911e7.js      12 kB       1  [emitted]         app</span><br><span class="line">             static/js/manifest.2ae2e69a05c33dfc65f8.js  857 bytes       2  [emitted]         manifest</span><br><span class="line">    static/css/app.f24bb0ae3686720fe2e00c5a2024b8f1.css     185 kB       1  [emitted]         app</span><br><span class="line">static/css/app.f24bb0ae3686720fe2e00c5a2024b8f1.css.map     267 kB          [emitted]</span><br><span class="line">           static/js/vendor.5efcf828140d5dbedda9.js.map    2.73 MB       0  [emitted]         vendor</span><br><span class="line">              static/js/app.a4a31db472f653b911e7.js.map    22.8 kB       1  [emitted]         app</span><br><span class="line">         static/js/manifest.2ae2e69a05c33dfc65f8.js.map    4.97 kB       2  [emitted]         manifest</span><br><span class="line">                                             index.html  508 bytes          [emitted]</span><br></pre></td></tr></table></figure><p>发现打包后提取公共模块<code>static/js/vendor.js</code>有 714kb</p><p>再看一下各个模块占用情况：</p><p><img src="/gb/element-ui更换主题和按需引入组件/1.bmp" alt=""></p><p>发现<code>elment-ui.common.js</code>占用最大。所有模块资源总共有 708kb。怎么才能减小打包后的大小呢？很容易就会想到 ui 的引入和样式的引入中，实际我们只使用了三个组件，却整体都被打包了，在这里引入这三个组件即可。</p><h3 id="按需引入组件样式"><a href="#按需引入组件样式" class="headerlink" title="按需引入组件样式"></a>按需引入组件样式</h3><p>新建一个<code>element-variables.scss</code>文件（为什么是 SCSS 文件，后面自定义主题会用到）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/*icon字体路径变量*/</span><br><span class="line">$--font-path: &quot;~element-ui/lib/theme-chalk/fonts&quot;;</span><br><span class="line"></span><br><span class="line">/*按需引入用到的组件的scss文件和基础scss文件*/</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/base.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/rate.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/button.scss&quot;;</span><br><span class="line">@import &quot;~element-ui/packages/theme-chalk/src/row.scss&quot;;</span><br></pre></td></tr></table></figure><h3 id="按需引入组件"><a href="#按需引入组件" class="headerlink" title="按需引入组件"></a>按需引入组件</h3><p>新建一个<code>elementConfig.js</code>文件，将项目用到的 element 组件引入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Rate, Row, Button &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  install(V) &#123;</span><br><span class="line">    V.use(Rate)</span><br><span class="line">    V.use(Button)</span><br><span class="line">    V.use(Row)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第一次优化后打包分析"><a href="#第一次优化后打包分析" class="headerlink" title="第一次优化后打包分析"></a>第一次优化后打包分析</h3><p>将以上<code>element-variables.scss</code>和<code>elementConfig.js</code>引入到<code>main.js</code>中。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'@/assets/js/elementConfig'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'@/assets/css/element-variables.scss'</span></span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI)</span><br></pre></td></tr></table></figure><p>貌似上面一切都很顺理成章，打包后大小会减小。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: <span class="number">3</span>ba9b74482f121efd3aa</span><br><span class="line">Version: webpack <span class="number">3.11</span><span class="number">.0</span></span><br><span class="line">Time: <span class="number">18854</span>ms</span><br><span class="line">                                                  Asset       Size  Chunks                    Chunk Names</span><br><span class="line">                 <span class="keyword">static</span>/fonts/element-icons<span class="number">.6</span>f0a763.ttf      <span class="number">11</span> kB          [emitted]</span><br><span class="line">               <span class="keyword">static</span>/js/vendor<span class="number">.11</span>c71f168a2d61b547a0.js     <span class="number">714</span> kB       <span class="number">0</span>  [emitted]  [big]  vendor</span><br><span class="line">                  <span class="keyword">static</span>/js/app.dbb5b49dad2d42b3598c.js    <span class="number">11.2</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line">             <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js  <span class="number">857</span> bytes       <span class="number">2</span>  [emitted]         manifest</span><br><span class="line">    <span class="keyword">static</span>/css/app.bf52525d6279e7fb87b4db770d119a8d.css    <span class="number">25.7</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line"><span class="keyword">static</span>/css/app.bf52525d6279e7fb87b4db770d119a8d.css.map      <span class="number">63</span> kB          [emitted]</span><br><span class="line">           <span class="keyword">static</span>/js/vendor<span class="number">.11</span>c71f168a2d61b547a0.js.map    <span class="number">2.73</span> MB       <span class="number">0</span>  [emitted]         vendor</span><br><span class="line">              <span class="keyword">static</span>/js/app.dbb5b49dad2d42b3598c.js.map      <span class="number">21</span> kB       <span class="number">1</span>  [emitted]         app</span><br><span class="line">         <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js.map    <span class="number">4.97</span> kB       <span class="number">2</span>  [emitted]         manifest</span><br><span class="line">                                             index.html  <span class="number">508</span> bytes          [emitted]</span><br></pre></td></tr></table></figure><p>结果可知，<code>static/js/vendor.js</code>还是 714kb！</p><p>再看各个模块占用情况：</p><p><img src="/gb/element-ui更换主题和按需引入组件/2.bmp" alt=""></p><p>WHAT?竟然模块都没什么变化，岂不是竹篮打水，事与愿违。</p><h3 id="再次打包优化尝试"><a href="#再次打包优化尝试" class="headerlink" title="再次打包优化尝试"></a>再次打包优化尝试</h3><p>后来查到有人同样遇到这个问题，提出一个<a href="https://github.com/ElemeFE/element/issues/6362#issuecomment-323517538" target="_blank" rel="noopener">issues#6362</a>，原来只引入需要的<code>element-ui</code>组件，<code>webpack</code>还是把整体的 ui 库和样式都打包了，需要一个<code>webpack</code>的<code>babel</code>插件<code>babel-plugin-component</code>，这样才能真正按需引入打包。这块其实被写到官方文档更换 <a href="http://element-cn.eleme.io/#/zh-CN/component/custom-theme" target="_blank" rel="noopener">自定义主题</a> 的配置了。</p><p>于是<code>npm i babel-pugin-componet -D</code>安装后，在增加<code>.babelrc</code>文件插件配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"presets"</span>: [</span><br><span class="line">    [<span class="string">"env"</span>, &#123;</span><br><span class="line">      <span class="string">"modules"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"targets"</span>: &#123;</span><br><span class="line">        <span class="string">"browsers"</span>: [<span class="string">"&gt; 1%"</span>, <span class="string">"last 2 versions"</span>, <span class="string">"not ie &lt;= 8"</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="string">"stage-2"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"plugins"</span>: [<span class="string">"transform-vue-jsx"</span>, <span class="string">"transform-runtime"</span>, [<span class="string">"component"</span>, &#123;</span><br><span class="line">    <span class="string">"libraryName"</span>: <span class="string">"element-ui"</span>,</span><br><span class="line">    <span class="string">"styleLibraryName"</span>: <span class="string">"theme-chalk"</span></span><br><span class="line">  &#125;]]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>页面运行正常，再次打包。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hash: <span class="number">9</span>cc71dead6d7646c9ed4</span><br><span class="line">Version: webpack <span class="number">3.11</span><span class="number">.0</span></span><br><span class="line">Time: <span class="number">9963</span>ms</span><br><span class="line">                                                  Asset       Size  Chunks             Chunk Names</span><br><span class="line">                 <span class="keyword">static</span>/fonts/element-icons<span class="number">.6</span>f0a763.ttf      <span class="number">11</span> kB          [emitted]</span><br><span class="line">                  <span class="keyword">static</span>/js/app<span class="number">.77</span>c0883f4f0fc0bf5cbc.js    <span class="number">11.4</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line">               <span class="keyword">static</span>/js/vendor<span class="number">.942130</span>fd13274b901889.js     <span class="number">126</span> kB       <span class="number">1</span>  [emitted]  vendor</span><br><span class="line">             <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js  <span class="number">857</span> bytes       <span class="number">2</span>  [emitted]  manifest</span><br><span class="line">    <span class="keyword">static</span>/css/app.b140020e5dbee406ae70780b43ba7ddc.css    <span class="number">27.8</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line"><span class="keyword">static</span>/css/app.b140020e5dbee406ae70780b43ba7ddc.css.map    <span class="number">91.4</span> kB          [emitted]</span><br><span class="line">              <span class="keyword">static</span>/js/app<span class="number">.77</span>c0883f4f0fc0bf5cbc.js.map    <span class="number">21.1</span> kB       <span class="number">0</span>  [emitted]  app</span><br><span class="line">           <span class="keyword">static</span>/js/vendor<span class="number">.942130</span>fd13274b901889.js.map     <span class="number">613</span> kB       <span class="number">1</span>  [emitted]  vendor</span><br><span class="line">         <span class="keyword">static</span>/js/manifest<span class="number">.2</span>ae2e69a05c33dfc65f8.js.map    <span class="number">4.97</span> kB       <span class="number">2</span>  [emitted]  manifest</span><br><span class="line">                                             index.html  <span class="number">508</span> bytes          [emitted]</span><br></pre></td></tr></table></figure><p><code>static/js/vendor.js</code>确实变小了，126kB。再来看各个模块分析图。</p><p><img src="/gb/element-ui更换主题和按需引入组件/3.bmp" alt=""></p><p>模块总共 135.03KB，少了 5 倍！</p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p><code>element-ui</code>的<code>theme-chalk</code>使用<code>SCSS</code>编写，如果在自己的项目中也是用<code>SCSS</code>，那么可以直接在项目中改变样式变量，因此可以在前面新建的<code>element-variables.scss</code>文件用新的主题颜色变量覆盖即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/*主题颜色变量*/</span><br><span class="line">$--color-primary: #f0f;</span><br><span class="line"></span><br><span class="line">/*icon字体路径变量*/</span><br><span class="line">$--font-path: &quot;~element-ui/lib/theme-chalk/fonts&quot;;</span><br></pre></td></tr></table></figure><p>可能你已经注意到了，这里没有分别引入用到的组件样式了，是因为<code>babel-plugin-component</code>帮我们按需引入了对应的样式。</p><p>现在我们的主题就变成了</p><p><img src="/gb/element-ui更换主题和按需引入组件/4.bmp" alt=""></p><p>如果你没有用到<code>SCSS</code>，可以用<code>element-theme</code>主题编译插件，生成自定义主题文件引入。</p><p>完~ps：个人见解有限，欢迎指正。</p>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> element-ui </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端必备vscode插件</title>
      <link href="/2018/09/03/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87vscode%E6%8F%92%E4%BB%B6/"/>
      <url>/2018/09/03/%E5%89%8D%E7%AB%AF%E5%BF%85%E5%A4%87vscode%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这篇文章只要让你做一些基础的配置，把 vscode 变得更加顺手；<br>插件的需求不是一成不变，有些插件我已经移除了。。在最新的 VSCODE 1.9.1 中，<br>部分以前用插件实现的功能已经集成了，那就没有必要存在了。这里就不做推荐了复制代码</p><a id="more"></a><h1 id="必备插件"><a href="#必备插件" class="headerlink" title="必备插件"></a>必备插件</h1><hr><h2 id="功能性"><a href="#功能性" class="headerlink" title="功能性"></a>功能性</h2><ol><li>Auto Close Tag : 匹配标签，关闭对应的标签。很实用【HTML/XML】 Auto</li><li>Rename Tag : sublime 和 webstorm 也有这个内置功能，改变标签的时候同时改动开闭合标签；【HTML/XML】</li><li>beautify : 良好的拓展性，可以格式化 JSON|JS|HTML|CSS|SCSS,比内置格式化好用</li><li>Code Runner : 代码编译运行看结果，支持众多语言</li><li>colorize : 会给颜色代码增加一个当前匹配代码颜色的背景，非常好</li><li>Document This : JSDOC 注解调用，值得易用</li><li>Git History : 不得不赞的插件，谁用谁知道，功能很赞</li><li>HTML CSS Support : 这个也是必备插件之一</li><li>Path Autocomplete : 路径智能补全</li><li>Path Intellisense ： 路径智能提示</li><li>SCSS IntelliSense Preview : SCSS 智能提醒，配置强大</li><li>Syncing: 这个同步插件要比官方市场那个最高下载量的要好，支持删除同步！！！</li><li>Version Lens : 可以及时看到 package.json 内部版本的变动，很实用</li><li>Output Colorizer : 可以终端日志输出着色，实用</li></ol><h2 id="代码片段插件"><a href="#代码片段插件" class="headerlink" title="代码片段插件"></a>代码片段插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JavaScript (ES6) code snippets  : ES6的代码片段，实用</span><br><span class="line">JavaScript Snippet Pack   : ES5及以下的代码片段，实用</span><br></pre></td></tr></table></figure><h2 id="语法校验"><a href="#语法校验" class="headerlink" title="语法校验"></a>语法校验</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stylelint : 比内置的要全，更智能</span><br></pre></td></tr></table></figure><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><ol><li>Panda:用了相当久的一套颜色高亮，个人感觉很耐看</li><li>Enki Theme (Material Design Inspired) : 当前用的代码高亮，个人感觉很赞</li><li>Material Icon Theme : 一套扁平化的文件图标，内置的 seti 也很优秀，还有 simple icon 和 vscode-icons</li></ol><p>作者：爱吃 kiwi<br>链接：<a href="https://leekiwi.github.io/">https://leekiwi.github.io/</a><br>来源：github<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      <categories>
          
          <category> 实用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nodejs学习笔记</title>
      <link href="/2018/08/28/node-js-study-note/"/>
      <url>/2018/08/28/node-js-study-note/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Nodejs-学习笔记"><a href="#Nodejs-学习笔记" class="headerlink" title="Nodejs 学习笔记"></a>Nodejs 学习笔记</h2><p><strong>node 内部对模块输出 module.exports 的实现</strong></p><p>变量 module 是 Node 在加载 js 文件前准备的一个变量，并将其传入加载函数</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 准备module对象</span><br><span class="line">var module = &#123;</span><br><span class="line">    id: &apos;hello&apos;,</span><br><span class="line">    exports: &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var load = function(module) &#123;</span><br><span class="line">    // 读取的hello.js代码</span><br><span class="line">    function greet(name) &#123;</span><br><span class="line">        console.log(&apos;Hello, &apos; + name + &apos;!&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    module.exports = greet;</span><br><span class="line"></span><br><span class="line">    // hello.js代码结束</span><br><span class="line">    return module.exports;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var exported = load(module);</span><br><span class="line"></span><br><span class="line">// 保存module</span><br><span class="line">save(module, exported);</span><br></pre></td></tr></table></figure><p>默认情况下，Node 准备的 exports 变量和 module.exports 变量实际上是同一个变量，所以一下两种写法都支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// method 1</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    foo: foo,</span><br><span class="line">    bar: bar</span><br><span class="line">&#125;;</span><br><span class="line">or</span><br><span class="line">module.exports.foo = foo;</span><br><span class="line">module.exports.bar = bar;</span><br><span class="line"></span><br><span class="line">// method 2</span><br><span class="line">exports.foo = foo;</span><br><span class="line">exports.bar = bar;</span><br></pre></td></tr></table></figure><p><strong>process</strong></p><p>下一轮事件循环 回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">process.nextTick(function() &#123;</span><br><span class="line">    console.log(&apos;nextTick callback&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>程序即将退出 回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">process.on(&apos;exit&apos;, function(code) &#123;</span><br><span class="line">    console.log(&apos;about to exit with code&apos; + code);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">console.log(&apos;nextTick set&apos;);</span><br></pre></td></tr></table></figure><p><strong>readFile/readFileSync writeFile/writeFileSync stat</strong></p><p>异步读取一个文本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&apos;./hello.js&apos;, &apos;utf-8&apos;, function(err, data) &#123;</span><br><span class="line">    console.log(&apos;read file start...&apos;);</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>异步读取一个二进制文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&apos;1.jpg&apos;, function(err, data) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // 返回一个buffer对象</span><br><span class="line">        console.log(data);</span><br><span class="line">        // Buffer对象转化成字符串</span><br><span class="line">        console.log(data.toString(&apos;utf-8&apos;));</span><br><span class="line">        // 文件大小</span><br><span class="line">        console.log(data.length + &apos; bytes&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同步读取一个文件直接返回，读取错误用 try…catch 捕获</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">    var data = fs.readFileSync(&apos;./1.jpg&apos;);</span><br><span class="line">    console.log(data);</span><br><span class="line">&#125;</span><br><span class="line">catch(err) &#123;</span><br><span class="line">    console.log(err);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(&apos;readFileSync ended&apos;);</span><br></pre></td></tr></table></figure><p>异步写入一个文件，默认是以 UTF-8 编码写入文本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var data = &apos;Hello,Node.js&apos;;</span><br><span class="line">// var data = fs.readFileSync(&apos;./1.jpg&apos;);</span><br><span class="line">fs.writeFile(&apos;output.txt&apos;, data, function(err) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        console.log(&apos;write file finished&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同步写入文本到一个文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var data = &apos;Hello,Node.js,I am sync data&apos;;</span><br><span class="line">fs.writeFileSync(&apos;output.txt&apos;, data);</span><br><span class="line">console.log(&apos;writeFileSync ended&apos;);</span><br></pre></td></tr></table></figure><p>获取文件信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">fs.stat(&apos;./1.jpg&apos;, function(err, stat) &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // 是否是文件</span><br><span class="line">        console.log(&apos;isFile:&apos; + stat.isFile());</span><br><span class="line">        // 是否是目录</span><br><span class="line">        console.log(&apos;isDirectory:&apos; + stat.isDirectory());</span><br><span class="line"></span><br><span class="line">        if(stat.isFile()) &#123;</span><br><span class="line">            // 文件大小</span><br><span class="line">            console.log(&apos;size:&apos; + stat.size);</span><br><span class="line">            // 创建时间，Date对象</span><br><span class="line">            console.log(&apos;birth time:&apos; + stat.birthtime);</span><br><span class="line">            // 修改时间，Date对象</span><br><span class="line">            console.log(&apos;modified time:&apos; + stat.mtime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>PS:绝大部分需要在服务器运行期反复执行业务逻辑，必须使用异步代码服务器启动时如果需要读取配置文件，或者结束时需要写入到状态文件时，可以使用同步代码</p><p><strong>createReadStream createWriteStream pipe</strong></p><p>在 node.js 中，流也是一个对象，我们只需要响应流的事件就可以了。<br>data 事件表示流的数据已经可以读取了，end 事件表示这个流已经到末尾了，没有数据可以读取了，error 事件表示出错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var rs = fs.createReadStream(&apos;./data.txt&apos;, &apos;utf-8&apos;);</span><br><span class="line"></span><br><span class="line">// data事件可能有多次，每次传递的chunk是流的一部分数据</span><br><span class="line">rs.on(&apos;data&apos;, function(chunk) &#123;</span><br><span class="line">    console.log(&apos;data event:&apos;, chunk);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(&apos;end&apos;, function (chunk) &#123;</span><br><span class="line">    console.log(&apos;end event:&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rs.on(&apos;error&apos;, function (chunk) &#123;</span><br><span class="line">    console.log(&apos;error event:&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>以流的形式写入文件，只需要不断调用 write()方法，最后以 end()结束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var ws = fs.createWriteStream(&apos;./data.txt&apos;);</span><br><span class="line">ws.write(&apos;user stream write data\n&apos;);</span><br><span class="line">ws.write(&apos;loading...\n&apos;);</span><br><span class="line">ws.write(&apos;END&apos;);</span><br><span class="line">ws.end();</span><br></pre></td></tr></table></figure><p>pipe()把一个文件流和另一个文件流串起来，这样源文件的所有数据就自动写入到目标文件里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var rs = fs.createReadStream(&apos;./data.txt&apos;);</span><br><span class="line">var ors = fs.createReadStream(&apos;./output.txt&apos;);</span><br><span class="line">var ws = fs.createWriteStream(&apos;./output.txt&apos;);</span><br><span class="line">rs.pipe(ws);</span><br></pre></td></tr></table></figure><p>创建一个服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var server = http.createServer(function(request, response) &#123;</span><br><span class="line">    // http请求头的method和url</span><br><span class="line">    console.log(&apos;header meathod:&apos;, request.method);</span><br><span class="line">    console.log(&apos;header url:&apos;, request.url);</span><br><span class="line"></span><br><span class="line">    // 将http响应200写入response，同时设置content-type</span><br><span class="line">    response.writeHead(200, &#123;&apos;Content-Type&apos;: &apos;text/html&apos;&#125;);</span><br><span class="line"></span><br><span class="line">    // 将http响应的html内容写入response</span><br><span class="line">    response.end(&apos;&lt;h1&gt;Hello world!&lt;/h1&gt;&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">console.log(&apos;Server is running at http://localhost:8080&apos;);</span><br></pre></td></tr></table></figure><p>实现一个文件服务器，拼接访问路径读取本地文件，从命令参数获取 root 目录，默认是当前目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">var root = path.resolve(&apos;.&apos;);</span><br><span class="line">console.log(&apos;Static root dir:&apos; + root);</span><br><span class="line"></span><br><span class="line">// 创建服务器</span><br><span class="line"> var server = http.createServer(function (request, response) &#123;</span><br><span class="line">    // node提供url模块解析url字符串 获取url的path</span><br><span class="line"></span><br><span class="line">    var pathname = url.parse(request.url).pathname;</span><br><span class="line"></span><br><span class="line">    if (pathname === &apos;/favicon.ico&apos;) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    console.log(&apos;url:&apos;, url.parse(request.url));</span><br><span class="line"></span><br><span class="line">    // 获取对应本地文件路径</span><br><span class="line">    var filepath = path.join(root, pathname);</span><br><span class="line">    // 读取文件状态</span><br><span class="line">    fs.stat(filepath, function (err, stats) &#123;</span><br><span class="line">        // 文件出错</span><br><span class="line">        if (err) &#123;</span><br><span class="line">            console.log(&apos;file error!&apos;);</span><br><span class="line">            response.end(&apos;&lt;h1&gt;file error!&lt;/h1&gt;&apos;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 是文件</span><br><span class="line">        if (stats.isFile()) &#123;</span><br><span class="line">            console.log(&apos;200 &apos; + request.url);</span><br><span class="line">            response.writeHead(200);</span><br><span class="line">            // 将文件流导入response</span><br><span class="line">            fs.createReadStream(filepath).pipe(response);</span><br><span class="line">        &#125;</span><br><span class="line">        // 文件不存在</span><br><span class="line">        else &#123;</span><br><span class="line">            console.log(&apos;404 &apos; + request.url);</span><br><span class="line">            response.writeHead(404);</span><br><span class="line">            // 将文件流导入response</span><br><span class="line">            response.end(&apos;&lt;h1&gt;404 not found!&lt;/h1&gt;&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">console.info(&apos;Server is runing at http://localhost:8080/&apos;);</span><br></pre></td></tr></table></figure><p>express 是第一代流行的 web 框架，它对 Node.js 的 HTTP 进行封装，语法基于 ES5，要实现异步代码，只有一个方法：回调。</p><p>koa2 完全基于 ES7 开发，使用 Promise 配合 async 实现异步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">// 创建一个Koa对象</span><br><span class="line">const app = new Koa();</span><br><span class="line"></span><br><span class="line">// 对于任何请求，app将调用该异步函数处理请求</span><br><span class="line">// ctx是koa封装request和response变量</span><br><span class="line">// next是koa传入的将要处理下一个异步函数</span><br><span class="line">// 每个async函数称为middleware</span><br><span class="line">// app.use()顺序决定了middleware的顺序</span><br><span class="line"></span><br><span class="line">app.use(async(ctx, next) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">    fs.readFile(&apos;./data.txt&apos;, &apos;utf-8&apos;, function(err, data) &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 调用下一个middleware，如果没有调用，则下一个middleware不会执行</span><br><span class="line">    await next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.use(async(ctx, next) =&gt; &#123;</span><br><span class="line">    ctx.response.type = &apos;text/html&apos;;</span><br><span class="line">    ctx.response.body = &apos;&lt;h1&gt;Hello, koa!&lt;/h1&gt;&apos;;</span><br><span class="line">    console.log(&apos;response end&apos;);</span><br><span class="line">    // 调用下一个middleware</span><br><span class="line">    await next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(3000);</span><br><span class="line">console.log(&apos;app started at http://localhost:3000/&apos;);</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>对MVC、MVP和MVVM的简单认识</title>
      <link href="/2018/08/27/%E5%AF%B9MVC%E3%80%81MVP%E5%92%8CMVVM%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/"/>
      <url>/2018/08/27/%E5%AF%B9MVC%E3%80%81MVP%E5%92%8CMVVM%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="MVVM-的前世与今生"><a href="#MVVM-的前世与今生" class="headerlink" title="MVVM 的前世与今生"></a>MVVM 的前世与今生</h2><h3 id="1-先聊一下-MVC"><a href="#1-先聊一下-MVC" class="headerlink" title="1. 先聊一下 MVC"></a>1. 先聊一下 MVC</h3><p>MVC：Model（模型） View（视图） Controller（控制器），主要是基于分层的目的，让彼此的职责分开。</p><p>View 通过 Controller 和 Model 联系，Controller 是 View 和 Model 的协调者，view 和 Model 不直接联系，基本联系都是单向的。</p><a id="more"></a><h3 id="2-顺带提下-MVP"><a href="#2-顺带提下-MVP" class="headerlink" title="2. 顺带提下 MVP"></a>2. 顺带提下 MVP</h3><p>MVP：是从 MVC 模式演变而来的，都是通过 Controller/Presenter 负责逻辑的处理+Model 提供数据+View 负责显示。</p><p>在 MVP 中，Presenter 完全把 View 和 Model 进行分离，主要的程序逻辑在 Presenter 里实现。并且，Presenter 和 View 是没有直接关联的，是通过定义好的接口进行交互，从而使得在变更 View 的时候可以保持 Presenter 不变。</p><h3 id="3-再聊聊-MVVN"><a href="#3-再聊聊-MVVN" class="headerlink" title="3. 再聊聊 MVVN"></a>3. 再聊聊 MVVN</h3><p>MVVM：Model + View + ViewModel，把 MVC 中的 Controller 和 MVP 中的 Presenter 改成 ViewModel</p><p>view 的变化会自动更新到 ViewModel，ViewModel 的变化也会自动同步到 View 上显示。这种自动同步是因为 ViewModel 中的属性实现了 Observer，当属性变更时都能触发对应操作。</p><ul><li>View 是 HTML 文本的 js 模板；</li><li>ViewModel 是业务逻辑层（一切 js 可视业务逻辑，比如表单按钮提交，自定义事件的注册和处理逻辑都在 viewmodel 里面负责监控俩边的数据）；</li><li>Model 数据层，对数据的处理（与后台数据交互的增删改查）</li></ul><p>提一下我熟悉的 MVVM 框架：vue.js，Vue.js 是一个构建数据驱动的 web 界面的渐进式框架。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。核心是一个响应的数据绑定系统。</p><h3 id="4-一句话总结下不同之处"><a href="#4-一句话总结下不同之处" class="headerlink" title="4. 一句话总结下不同之处"></a>4. 一句话总结下不同之处</h3><p>MVC 中联系是单向的，MVP 中 P 和 V 通过接口交互，MVVP 的联系是双向的</p>]]></content>
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CDN原理介绍</title>
      <link href="/2018/08/27/CDN%E5%8E%9F%E7%90%86%E7%90%86%E8%A7%A3/"/>
      <url>/2018/08/27/CDN%E5%8E%9F%E7%90%86%E7%90%86%E8%A7%A3/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CDN-原理剖析"><a href="#CDN-原理剖析" class="headerlink" title="CDN 原理剖析"></a>CDN 原理剖析</h2><blockquote><blockquote><p>内容分发网络（Content delivery network 或 Content distribution network，缩写：CDN）是指一种通过互联网互相连接的电脑网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、视频、应用程序及其他文件发送给用户，来提供高性能、可扩展性及低成本的网络内容传递给用户。</p></blockquote></blockquote><a id="more"></a><blockquote><h3 id="为什么需要-CDN"><a href="#为什么需要-CDN" class="headerlink" title="为什么需要 CDN"></a>为什么需要 CDN</h3><p>根本上的原因是，访问速度对互联网应用的用户体验、口碑、甚至说直接的营收都有巨大的影响，任何的企业都渴望自己站点有更快的访问速度。而 HTTP 传输时延对 web 的访问速度的影响很大，在绝大多数情况下是起决定性作用的，这是由 TCP/IP 协议的一些特点决定的。物理层上的原因是光速有限、信道有限，协议上的原因有丢包、慢启动、拥塞控制等。</p><p>要提高访问速度，最简单的做法当然就是多设置几个服务器，让终端用户离服务器“更近”。典型的例子是各类下载网站在不同地域不同运营商设置镜像站，或者是像 Google 那样设置多个数据中心。但是多设几个服务器的问题也不少，一是多地部署时的困难，二是一致性没法保障，三则是管理困难、成本很高。实际上，在排除多地容灾等特殊需求的情况下，对大多数公司这种做法是不太可取的。当然，这种方案真正做好了，甚至是比后续所说的使用 CDN 要好的。</p><p>CDN 是一种公共服务，他本身有很多台位于不同地域、接入不同运营商的服务器，而所谓的使用 CDN 实质上就是让 CDN 作为网站的门面，用户访问到的是 CDN 服务器，而不是直接访问到网站。由于 CDN 内部对 TCP 的优化、对静态资源的缓存、预取，加上用户访问 CDN 时，会被智能地分配到最近的节点，降低大量延迟，让访问速度可以得到很大提升。</p><h3 id="CDN-的原理"><a href="#CDN-的原理" class="headerlink" title="CDN 的原理"></a>CDN 的原理</h3><blockquote><p>CDN 做了两件事，一是让用户访问最近的节点，二是从缓存或者源站获取资源</p></blockquote><p>CDN 有个源站的概念，源站就是提供内容的站点(网站的真实服务器), 从源站取内容的过程叫做回源。</p><p>每次访问的具体流程如图（以最普通的 CDN 为例）</p><p><img src="https://cloud.githubusercontent.com/assets/5894477/22008791/4edc00b0-dcb9-11e6-9663-ed19a3fa3182.png" alt="流程图"></p><p>具体举个例子：</p><p>用户在首次访问 <a href="https://assets-cdn.github.com/pinned-octocat.svg" target="_blank" rel="noopener">https://assets-cdn.github.com/pinned-octocat.svg</a> , 假设不委托 local DNS 服务器递归查询，会经历以下几个过程</p><ol><li>浏览器检查本地有没有这个东东的有效缓存，有则使用缓存，没有有效缓存则进行对<code>assets-cdn.github.com</code>的 DNS 查询，获得一个 CNAME 记录, <code>igithub.map.fastly.net</code>,值得注意的是，多个加速域名可以解析到同一个 CNAME，CDN 回源和缓存的时候考虑到了 hostname，+1；</li><li>进行对<code>github.map.fastly.net</code>的 DNS 查询，获得一个 A/AAAA 记录，给出地址<code>103.245.222.133</code>（视网站不同返回的不一样，可以有多个）, 这一步对 CDN 来说时十分重要的，它给出了离用户最近的边缘节点；</li><li>浏览器选一个返回的地址，然后进行真正的 http 请求，开始向<code>103.245.222.133</code>握手，握手完了把 http 请求头也发给了该边缘服务器;</li><li>边缘服务器检查自己的 cache 里面有没有<code>https://assets-cdn.github.com/pinned-octocat.svg</code>这个资源，有则返回给用户，如果没有，向 CDN 中心服务器发起请求;</li><li>CDN 中心服务器检查自己的 cache 里面有没有这个资源，有则返回给边缘服务器，没有则回源;</li><li>中心服务器发现客户配置了<code>github.map.fastly.net</code>的回源地址(这个只有 cdn 会知道，假设是<code>xxx.xxx.xxx.xxx</code>)，就把 http 请求发到源站地址上，源站返回后返回给请求方;</li></ol><p>可以看出 CDN 加速的原理很大部分是跟 DNS 挂钩在一起的，CDN 供应商几乎一定需要一个智能 DNS 服务器。CDN 可以拿到所有的明文数据，所以对数据安全性、保密性要求比较高的企业会选择自建 CDN 或者设置 NS 记录，指向自建的智能 DNS 服务器。</p><p>上述步骤每一步都可以缓存，注意是每一步！ 所以 CDN 要清除缓存很难，因为有很多服务器上的缓存要清除。无论是用户对边缘服务器的请求，还是 CDN 服务器的回源都可以使用 https。</p><p>注意，实际环境中图中每个服务器都可以是集群，甚至 CDN 分区域中心和总中心。</p></blockquote>]]></content>
      
      <categories>
          
          <category> 用户体验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端性能优化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vscode 实现设备上设置统一</title>
      <link href="/2018/08/24/vscode%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5/"/>
      <url>/2018/08/24/vscode%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一键同步-vscode-上的插件"><a href="#一键同步-vscode-上的插件" class="headerlink" title="一键同步 vscode 上的插件"></a>一键同步 vscode 上的插件</h2><p>准备工作：电脑上需安装 VSCode，拥有一个 github 账户。实现同步的功能主要依赖于 VSCode 插件 “Settings Sync”</p><h1 id="Setting-Sync-可同步包含的所有扩展和完整的用户文件夹"><a href="#Setting-Sync-可同步包含的所有扩展和完整的用户文件夹" class="headerlink" title="Setting Sync 可同步包含的所有扩展和完整的用户文件夹"></a>Setting Sync 可同步包含的所有扩展和完整的用户文件夹</h1><a id="more"></a><ol><li>设置文件</li><li>快捷键设置文件</li><li>Launch File</li><li>Snippets Folder</li><li>VSCode 扩展设置</li><li>工作空间</li></ol><h1 id="Setting-Sync-快捷键"><a href="#Setting-Sync-快捷键" class="headerlink" title="Setting Sync 快捷键"></a>Setting Sync 快捷键</h1><ol><li>上传： <code>Shift + Alt + U</code> (Sync: Update / Upload Settings)</li><li>下载： <code>Shift + Alt + D</code> (Sync: Download Settings)</li></ol><p>如果快捷键有冲突，可<code>Ctrl + K + S</code>快捷键设置配置其它快捷键 或 <code>Ctrl + P / F1</code> 在命令窗口输入 &gt;sync 即会出现相应命令供选择<br><img src="https://upload-images.jianshu.io/upload_images/7323128-6b887c855f200189.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170824104107261-1046727224.png"></p><h1 id="Step1-安装-同步插件”Settings-Sync”"><a href="#Step1-安装-同步插件”Settings-Sync”" class="headerlink" title="Step1. 安装 同步插件”Settings Sync”"></a>Step1. 安装 同步插件”Settings Sync”</h1><p><img src="https://upload-images.jianshu.io/upload_images/7323128-78990ea142e0f083.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823100639527-466207576.png"></p><h1 id="Step2-进入-github-gt-Settings-在左侧-Developer-settings-gt-Personal-access-tokens"><a href="#Step2-进入-github-gt-Settings-在左侧-Developer-settings-gt-Personal-access-tokens" class="headerlink" title="Step2. 进入 github -&gt; Settings 在左侧 Developer settings -&gt; Personal access tokens"></a>Step2. 进入 github -&gt; Settings 在左侧 Developer settings -&gt; Personal access tokens</h1><p><img src="https://upload-images.jianshu.io/upload_images/7323128-72b710b21917ce93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101018886-1450593067.png"></p><h1 id="Step3-点击按钮-Generate-new-token-新增一个-token"><a href="#Step3-点击按钮-Generate-new-token-新增一个-token" class="headerlink" title="Step3. 点击按钮 Generate new token 新增一个 token"></a>Step3. 点击按钮 Generate new token 新增一个 token</h1><p>图 1:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-a9e06366f6acbf24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101243980-1384930832.png"><br>图 2:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-2f69bf05699ce6a7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101418527-2001799760.png"><br>图 3:<br><img src="https://upload-images.jianshu.io/upload_images/7323128-8d5ebc31a1a3cd97.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170823101508918-1034003796.png"><br>记住你自己生成的 token 值，在 VSCode 配置上回用得到，最好找个笔记保存下来。</p><h1 id="Step4-回到-VSCode-配置将-token-配置到本地"><a href="#Step4-回到-VSCode-配置将-token-配置到本地" class="headerlink" title="Step4. 回到 VSCode 配置将 token 配置到本地"></a>Step4. 回到 VSCode 配置将 token 配置到本地</h1><p>(Sync: Update / Uplaod Settings) <code>Shift + Alt + U</code> 在弹窗里输入你的 token， 回车后会生成 syncSummary.txt 文件</p><p><img src="https://upload-images.jianshu.io/upload_images/7323128-4561bc7955172c6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="635400-20170824103332230-1621543570.png"></p><p>syncSummary.txt 文件会存储 VSCode 的设置及所安装的插件列表<br>有点类似 package.json 这样形式的文件<br>可以将自己的 token 分享到自己的团队里面去，这样团队可以共用一套设置。</p><h1 id="Step5-设置上同步下载设置"><a href="#Step5-设置上同步下载设置" class="headerlink" title="Step5. 设置上同步下载设置"></a>Step5. 设置上同步下载设置</h1><p>(Sync: Download Settings) <code>Shift + Alt + D</code> 在弹窗里输入你的 gist 值，稍后片刻便可同步成功</p><h1 id="Step6-如果要重置同步设置，变更其它-token"><a href="#Step6-如果要重置同步设置，变更其它-token" class="headerlink" title="Step6. 如果要重置同步设置，变更其它 token"></a>Step6. 如果要重置同步设置，变更其它 token</h1><p><code>Ctrl+P / F1</code> 弹出输入&gt;sync,即可重新配置你的其它 token 来同步</p>]]></content>
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> setting </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>正则表达式</title>
      <link href="/2018/08/22/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2018/08/22/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="正则规则汇总"><a href="#正则规则汇总" class="headerlink" title="正则规则汇总"></a>正则规则汇总</h2><p>对字符串的处理，一般分为字符串操作和正则操作。</p><h5 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h5><ul><li>str.search(regStr) 返回 regStr 在 str 中第一个出现的位置</li><li>str.replace(regStr,newStr) 返回替换在 str 中 regStr 后字符串</li></ul><a id="more"></a><ul><li>str.substring(n1,n2) 返回 str 从 n1 位置到 n2 位置前一个字符串</li><li>str.chartAt(n) 返回 n 位置字符</li><li>str.split(regStr) 返回以 regStr 隔开的数组</li><li>str.match(reg) 返回在 str 中符合正则 reg 的字符串数组</li></ul><h5 id="正则操作"><a href="#正则操作" class="headerlink" title="正则操作"></a>正则操作</h5><p>var reg=new RegExp(regStr,’i’); //创建正则对象</p><p>var reg=/regStr/i; //隐式创建正则对象</p><ul><li>reg.test(str) str 是否包含 reg 返回 true/false</li><li>reg.exec(str) 返回匹配到的字符串和最后一次的匹配字符串最后位置的下一个索引</li></ul><h4 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h4><ol><li>/a|b/ a 或 b</li><li>/[abc]/ a 或 b 或 c</li><li>/[a-zA-Z0-9]/ 所有数字和字母</li><li>/[^a-za-z0-9]/ 除了数字和字母</li><li>/.+/ 任意字符</li><li>/\d/ 等价于/[0-9]/ 数字</li><li>/\w/ 等价于/[a-z0-9_]/ 数字、字母和下划线</li><li>/\s/ 等价于/“ “/ 空格</li><li>/\D/ 等价于/[^0-9]/ 非数字</li><li>/\W/ 等价于/[^a-z0-9_]/ 除了数字、字母和划线</li><li>/\S/ 等价于/[^” “]/ 除了空格</li><li>/\d{n,m}/ 数字最少出现 n 次，最多出现 m 次</li><li>/\d{1,}/ 等价于/\d+/ 数字最少出现 1 次</li><li>/\d{0,}/ 等价于/\d*/ 数字最少出现 0 次</li><li>/\d{0,1}/ 等价于/\d?/ 数字最多出现 1 次</li><li>/^\d$/ 以数字开头且以数字结尾</li><li>/[\u4e00-\u9fa5]/ 汉字匹配范围</li><li>\b 单词边界</li><li>\B 非单词边界</li><li>?=n 匹配任何其后紧接指定字符串 n 的字符串</li><li>?!n 匹配任何其后没有紧接指定字符串 n 的字符串</li></ol><h4 id="疑难点"><a href="#疑难点" class="headerlink" title="疑难点"></a>疑难点</h4><p>在个人接触正则过程中遇到的一些不易理解的地方</p><blockquote><p>用圆括号将所有选择项括起来，相邻的选择项之间用|分隔。但用圆括号会有一个副作用，是相关的匹配会被缓存，此时可用?:放在第一个选项前来消除这种副作用。其中?:是非捕获元之一，还有两个非捕获元是?=和?!，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。</p></blockquote><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>(?:pattern)</td><td>匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 “或” 字符 (\</td><td>) 来组合一个模式的各个部分是很有用。例如， ‘industr(?:y\</td><td>ies) 就是一个比 ‘industry\</td><td>industries’ 更简略的表达式。</td></tr><tr><td>(?=pattern</td><td>正向预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，’Windows (?=95\</td><td>98\</td><td>NT\</td><td>2000)’ 能匹配 “Windows 2000” 中的 “Windows” ，但不能匹配 “Windows 3.1” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td>(?!pattern)</td><td>负向预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如’Windows (?!95\</td><td>98\</td><td>NT\</td><td>2000)’ 能匹配 “Windows 3.1” 中的 “Windows”，但不能匹配 “Windows 2000” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr></tbody></table><p>一直对正则中的 match 和 exec 不易分清，下面来做一下比较。</p><h5 id="1-match"><a href="#1-match" class="headerlink" title="1. match"></a>1. match</h5><p>match 方法属于 String 正则表达方法</p><p>语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.match(regexp)</span><br></pre></td></tr></table></figure><p>str：要进行匹配的字符串</p><p>regexp：一个正则表达式(或者由 RegExp()构造成的正则表达式)</p><p>match 的用法主要区分就是正则表达式是否有全局标示 g</p><ol><li><p>如果有 g 全局标志，那么返回的数组保存的是，所有匹配的内容。</p></li><li><p>如果没有 g 全局标志，那么返回的数组 arr.arr[0]保存的是完整的匹配.arr[1]保存的是第一个括号里捕获的字串，依此类推 arr[n]保存的是第 n 个括号捕获的内容。</p></li></ol><h5 id="2-exec"><a href="#2-exec" class="headerlink" title="2. exec"></a>2. exec</h5><p>与 match 方法不同 exec 属于正则表达式的方法</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var result1 = regexp.exec(str);</span><br></pre></td></tr></table></figure><p>regexp：正则表达式</p><p>str：要匹配的字串</p><p>exec 与 match 的关联就是 exec（g 有没有都无影响）就等价于不含有 g 全局标志的 match，即返回数组 arr[0]为匹配的完整串，其余的为括号里捕获的字符串。</p><p>但如果有 g 对 exec 本身的影响是，当一个具有 g 的正则表达式调用 exec()时，他将该对象的 lastIndex 设置到紧接这匹配子串的字符位置。当第二次调用 exec 时将从<br>lastIndex 所指示的字符位置开始检索，利用这个特点可以反复调用 exec 遍历所有匹配，等价于 match 具有 g 标志。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arrmatch = str.match(reg);</span><br><span class="line">for(var i =0; i &lt; arrmatch.length; i++)&#123;</span><br><span class="line">    document.write(arrmatch[i] +&quot;----&gt;&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可见上面的 exec 和 match 是等价的.</p><p>reg.exec(str) 返回匹配到的字符串和最后一次的匹配字符串最后位置的下一个索引如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var str = &quot;abc123bef345olj89,ed&quot;;</span><br><span class="line">var reg = /\d+/g;</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br><span class="line"></span><br><span class="line">console.log(reg.exec(str));</span><br><span class="line">console.log(reg.lastIndex);</span><br></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li><p>主要区分 match 具有 g 和没有 g 的区别，没有 g 的时候与 exec 是等价的。</p></li><li><p>而 exec 返回的串类型不受 g 影响，但具有 g 时候会驱动 lastIndex 可以模拟遍历所有匹配，可以与 match 具有 g 的时候等价。</p></li></ul><h4 id="顺便加强理解"><a href="#顺便加强理解" class="headerlink" title="顺便加强理解"></a>顺便加强理解</h4><ol><li>ip 正则表达式<br>格式由”.”分割成四段，每一段范围是 0-255，拿出其中一段进行分析</li></ol><table><thead><tr><th>范围</th><th>表达式</th></tr></thead><tbody><tr><td>0-9</td><td>\d</td></tr><tr><td>10-99</td><td>[1-9]\d</td></tr><tr><td>100-199</td><td>1\d{2}</td></tr><tr><td>200-249</td><td>2[0-4]\d</td></tr><tr><td>250-255</td><td>25[0-5]</td></tr></tbody></table><p>所以，其中一段构成的正则表达式是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5]</span><br></pre></td></tr></table></figure><p>，<br>整个 ip 正则为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d&#123;2&#125;|2[0-4]\d|25[0-5])$/</span><br></pre></td></tr></table></figure><ol start="2"><li>同理端口号范围是 0-65535</li></ol><table><thead><tr><th>范围</th><th>表达式</th></tr></thead><tbody><tr><td>0-9</td><td>\d</td></tr><tr><td>10-99</td><td>[1-9]\d</td></tr><tr><td>100-999</td><td>[1-9]\d{2}</td></tr><tr><td>1000-9999</td><td>[1-9]\d{3}</td></tr><tr><td>10000-59999</td><td>[1-5]\d{4}</td></tr><tr><td>60000-64999</td><td>6[0-4]\d{3}</td></tr><tr><td>65000-65499</td><td>65[0-4]\d{2}</td></tr><tr><td>65500-65529</td><td>655[0-2]\d</td></tr><tr><td>65530-65535</td><td>65553[0-5]</td></tr></tbody></table><p>所以，整个端口号正则为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/\d|[1-9]\d&#123;1,3&#125;|[1-5]d&#123;4&#125;|6[0-4]\d&#123;3&#125;|65[0-4]\d&#123;2&#125;|655[0-2]\d|65553[0-5]/</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript 正则 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>理解同步、异步和事件循环</title>
      <link href="/2018/08/20/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
      <url>/2018/08/20/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="JavaScript-运行机制"><a href="#JavaScript-运行机制" class="headerlink" title="JavaScript 运行机制"></a>JavaScript 运行机制</h2><ol><li>所有同步任务都在主线程上执行，形成一个执行栈；</li></ol><a id="more"></a><ol start="2"><li><p>主线程发起异步请求，相应的工作线程就会去执行异步任务，主线程可以继续执行后面的代码；</p></li><li><p>主线程之外，还存在一个”任务队列”（task queue）。只要异步任务有了运行结果，就在”任务队列”之中放置一个事件，也就是一个消息；</p></li><li><p>一旦”执行栈”中的所有同步任务执行完毕，系统就会读取”任务队列”，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行；</p></li><li><p>主线程把当前的事件执行完成之后，再去读取任务队列，如此反复重复执行，这样就行程了事件循环。</p></li></ol><h4 id="1、单线程"><a href="#1、单线程" class="headerlink" title="1、单线程"></a>1、单线程</h4><p>JS 引擎在解释和执行 JavaScript 代码线程只有一个，叫做<strong>主线程</strong>。<br>但实际还存在其他线程，如：处理 Ajax 请求线程，处理 DOM 事件线程，定时器线程，和文件读写线程等，叫做<strong>工作线程</strong>。</p><h4 id="2、同步和异步"><a href="#2、同步和异步" class="headerlink" title="2、同步和异步"></a>2、同步和异步</h4><p>同步：如果函数返回的时候，调用者就能够得到预期结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.sqrt(2);</span><br></pre></td></tr></table></figure><p>异步：函数返回的时候，调用者还不能够得到预期结果，而是需要通过一定手段得到。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(&quot;foo.txt&quot;, &quot;utf8&quot;, function(err, data)&#123;</span><br><span class="line">    console.log(data)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上面代码中，我们希望 fs.readFile 函数读取文件，并打印出来，但是在 fs.readFile 函数返回时，我们期望的结果并不会发生，而是要等文件全部读取完成之后。</p><h5 id="异步-AJAX："><a href="#异步-AJAX：" class="headerlink" title="异步 AJAX："></a>异步 AJAX：</h5><blockquote><p>主线程：“你好，AJAX 线程。请你帮我发个 HTTP 请求吧，我把请求地址和参数都给你了。”</p></blockquote><blockquote><p>AJAX 线程：“好的，主线程。我马上去发，但可能要花点儿时间呢，你可以先去忙别的。”</p></blockquote><blockquote><p>主线程：：“谢谢，你拿到响应后告诉我一声啊。”</p></blockquote><blockquote><p>(接着，主线程做其他事情去了。一顿饭的时间后，它收到了响应到达的通知。)</p></blockquote><h5 id="同步-AJAX："><a href="#同步-AJAX：" class="headerlink" title="同步 AJAX："></a>同步 AJAX：</h5><blockquote><p>主线程：“你好，AJAX 线程。请你帮我发个 HTTP 请求吧，我把请求地址和参数都给你了。”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>主线程：：“喂，AJAX 线程，你怎么不说话？”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>主线程：：“喂！喂喂喂！”</p></blockquote><blockquote><p>AJAX 线程：“……”</p></blockquote><blockquote><p>(一炷香的时间后)</p></blockquote><blockquote><p>主线程：：“喂！求你说句话吧！”</p></blockquote><blockquote><p>AJAX 线程：“主线程，不好意思，我在工作的时候不能说话。你的请求已经发完了，拿到响应数据了，给你。”</p></blockquote><p>正因为 JavaScript 时单线程，同步容易造成阻塞，所以，对于耗时和操作事件不确定操作，使用异步就成了必然选择。</p><h4 id="3、异步过程"><a href="#3、异步过程" class="headerlink" title="3、异步过程"></a>3、异步过程</h4><p>一个异步过程通常时这样的：</p><blockquote><p>主线程发起一个异步请求，相应的工作线程接收线程请求并告知主线程已收到；主线程可以继续执行后面的代码，同时工作线程执行异步任务；工作线程完成工作后，通知主线程；主线程收到通知后，执行一定动作（调用回调函数）。</p></blockquote><p>异步函数通常具有一下形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A(arg..., callbackFn)</span><br></pre></td></tr></table></figure><p>他可以叫做异步过程的<strong>发起函数</strong>，或者叫做异步任务<strong>注册函数</strong>。</p><p>从主线程的角度看，一个一度过程包括两个要素：</p><ul><li>发起函数（注册函数）</li><li>回到函数</li></ul><h4 id="4、消息队列和事件循环"><a href="#4、消息队列和事件循环" class="headerlink" title="4、消息队列和事件循环"></a>4、消息队列和事件循环</h4><p>异步过程中，工作线程在异步操作完成后需要通知主线程。那么这个通知机制时怎样实现的呢？答案是利用消息队列和事件循环。</p><p>一句话概括：</p><blockquote><p>工作线程将消息放到消息队列，主线程通过事件循环过程去取消息。</p></blockquote><p>消息队列：消息队列是一个先进先出的队列，放着各种消息。</p><p>事件循环：事件循环是指主线程从消息队列中取消息，执行的过程。</p><p>实际上，主线程只会做一件事，就是从消息队列里面取消息、执行消息，再去消息，再执行。当消息队列为空时，就会等待知道消息队列变成非空。而且主线程只有在将当前的消息执行完成后，才会去取下一个消息。这种机制就叫做事件循环机制，取一个消息并执行的过程叫做一次循环。</p><p>消息队列中放的消息是什么东西？消息的具体结构当然跟具体的实现有关，可以认为：</p><blockquote><p>消息就是注册异步任务时添加的回调函数。</p></blockquote><p>以异步 Ajax 为例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&apos;http://segmentfault.com&apos;, function(resp) &#123;</span><br><span class="line">    console.log(&apos;我是响应：&apos;, resp);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>主线程发起 Ajax 请求后，会继续执行其他代码。Ajax 线程负责请求 segmentfault.com，拿到响应后，它会把响应封装成一个 JavaScript 对象，然后构成一条消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var message = function() &#123;</span><br><span class="line">    callbackFn();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 callbackFn 就是前面代码中成功响应时的回调函数。</p><p>主线程在执行完当前循环中所有代码后，就会到消息队列取出这条消息（也就是 message 函数），并执行它，到此为止，就完成了工作线程对主线程的通知，回调函数也就得到了执行。如果一开始主线程就没有提供回调函数，Ajax 线程在收到 HTTP 响应后，也就没有必要通知主线程，从而没必要往消息队列放消息。</p><blockquote><p>异步过程的回调函数，一定不在当前这一轮事件循环中执行。</p></blockquote><h4 id="5、异步与事件"><a href="#5、异步与事件" class="headerlink" title="5、异步与事件"></a>5、异步与事件</h4><blockquote><p>消息队列中的每条消息实际上都对应着一个事件</p></blockquote><p>有一类很重要的异步过程：DOM 事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var button = document.getElement(&apos;#btn&apos;);</span><br><span class="line">button.addEventListener(&apos;click&apos;, function(e) &#123;</span><br><span class="line">    console.log();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>从事件的角度来看，上述代码表示：在按钮上添加了一个鼠标单击事件的事件监听器；当用户点击按钮时，鼠标单击事件触发，事件监听器函数被调用。</p><p>从异步过程的角度看，addEventListener 函数就是异步过程的发起函数，事件监听器函数就是异步过程的回调函数。事件触发时，表示异步任务完成，会将事件监听器函数封装成一条消息放到消息队列中，等待主线程执行。</p><p>事件的概念实际上并不是必须的，事件机制实际上就是异步过程的通知机制。我觉得它的存在是为了编程接口对开发者更友好。</p><p>另一方面，所有的异步过程也都可以用事件来描述。例如：setTimeout 可以看成对应一个时间到了！的事件。前文的 setTimeout(fn, 1000);可以看成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timer.addEventListener(&apos;timeout&apos;, 1000, fn);</span><br></pre></td></tr></table></figure><blockquote><p>工作线程是生产者，主线程是消费者(只有一个消费者)。工作线程执行异步任务，执行完成后把对应的回调函数封装成一条消息放到消息队列中；主线程不断地从消息队列中取消息并执行，当消息队列空时主线程阻塞，直到消息队列再次非空。</p></blockquote><h4 id="6、macrotasks-与-microtasks-的区别"><a href="#6、macrotasks-与-microtasks-的区别" class="headerlink" title="6、macrotasks 与 microtasks 的区别"></a>6、macrotasks 与 microtasks 的区别</h4><blockquote><p>macrotasks: setTimeout setInterval setImmediate I/O UI 渲染</p></blockquote><blockquote><p>microtasks: Promise process.nextTick Object.observe MutationObserver</p></blockquote><p>microtask 会在当前循环中执行完成,而 macrotask 会在下一个循环中执行</p>]]></content>
      
      <categories>
          
          <category> js高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git简记</title>
      <link href="/2018/07/27/Git%E7%AE%80%E8%AE%B0/"/>
      <url>/2018/07/27/Git%E7%AE%80%E8%AE%B0/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Git-食用手册"><a href="#Git-食用手册" class="headerlink" title="Git 食用手册"></a>Git 食用手册</h2><h3 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h3><p>最近有个项目比较赶，于是决定 8 个人一个并行完成，单独把项目拿出来用 gitea 管理，没人分一个模块开发，对应也给分支，效果不过，从中也帮助自己重新温习了一下 git 的使用，小记一下。</p><a id="more"></a><h3 id="1-安装和使用"><a href="#1-安装和使用" class="headerlink" title="1. 安装和使用"></a>1. 安装和使用</h3><ul><li><p>在 MAC 上，安装 homebrew，然后通过<a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">homebrew</a> 安装 Git。</p><blockquote><p>在 MAC 上另一种安装方法，从 AppStore 安装 Xcode，Xcode 集成了 Git，不过默认没有安装，你需要运行 Xcode，选择菜单“Xcode”-&gt;“Preferences”，在弹出窗口中找到“Downloads”，选择“Command Line Tools”，点“Install”就可以完成安装了。</p></blockquote></li><li><p>在 Windows 上，下载<a href="http://rj.baidu.com/soft/detail/40642.html" target="_blank" rel="noopener">安装包</a>，默认下一步，安装完成即可。</p></li><li><p>安装完后自报家门</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;wuwhs&quot;</span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>创建版本库<br>初始化一个 Git 仓库，使用<code>git init</code>命令。添加文件到 Git 仓库，分两步：</p><ol><li>第一步，使用命令<code>git add &lt;file&gt;</code>，注意，可反复多次使用，添加多个文件；</li><li>第二步，使用命令<code>git commit</code>，完成。</li></ol></li></ul><h3 id="2-时光穿梭"><a href="#2-时光穿梭" class="headerlink" title="2. 时光穿梭"></a>2. 时光穿梭</h3><p><img src="https://note.youdao.com/yws/public/resource/813e8f68e489060d70ccfdff42b3aecc/xmlnote/8849F03FF3934C8087DA9645B9BD9C5F/14633" alt=""></p><ul><li><p>如果<code>git status</code>告诉你有文件被修改过，用<code>git diff</code>可以查看修改内容。</p></li><li><p>HEAD 指向的版本就是当前版本，因此，Git 允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</p></li><li><p>穿梭前，用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本。</p></li><li><p>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本，<code>git log --pretty=oneline --abbrev-commit</code>在一行显示缩写提交号。</p></li><li><p>场景 1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p></li><li><p>当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD file</code>，就回到了场景 1，第二步按场景 1 操作。</p></li><li><p>命令<code>git rm</code>用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。</p></li></ul><h3 id="3-远程仓库"><a href="#3-远程仓库" class="headerlink" title="3. 远程仓库"></a>3. 远程仓库</h3><ul><li><p>创建 SSH Key。<code>$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code>。</p></li><li><p>登陆 GitHub，打开“Account settings”，“SSH Keys”页面。<br>然后，点“Add SSH Key”，填上任意 Title，在 Key 文本框里粘贴 id_rsa.pub 文件的内容。</p></li><li><p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>。</p></li><li><p>关联后，使用命令<code>git push -u origin master</code>第一次推送 master 分支的所有内容。</p></li><li><p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改。</p></li><li><p>要克隆一个仓库，首先必须知道仓库的地址，然后使用<code>git clone</code>命令克隆。</p></li></ul><h3 id="4-分支管理"><a href="#4-分支管理" class="headerlink" title="4. 分支管理"></a>4. 分支管理</h3><ul><li><p>Git 鼓励大量使用分支。</p></li><li><p>查看分支：<code>git branch</code>。</p></li><li><p>创建分支：<code>git branch &lt;name&gt;</code>。</p></li><li><p>切换分支：<code>git checkout &lt;name&gt;</code>。</p></li><li><p>创建+切换到当前分支：<code>git checkout -b &lt;name&gt;</code>。</p></li><li><p>合并某分支到当前分支：<code>git merge &lt;name&gt;</code>。</p></li><li><p>删除分支：<code>git branch -d &lt;name&gt;</code>。</p></li><li><p>当 Git 无法自动合并分支时，就必须首先剞劂冲突，解决冲突后，再提交，合并完成用<code>git log --graph</code>命令可以看到分支合并图。</p></li><li><p>合并分支时，加上<code>--no-ff</code>参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而<code>fash-forward</code>合并就看不出来曾经做过合并。</p></li><li><p>当手头工作没有完成时，先把工作现场<code>git stash</code>一下，然后去修复 bug，修复后，再<code>git stash list</code>查看历史 stash，一是用<code>git stash apply</code>恢复，但恢复后，stash 内容并不删除，你需要用<code>git stash drop</code>来删除；另一种方式是用<code>git stash pop</code>，恢复的同时把 stash 内容也删了。</p></li><li><p>查看远程库信息，使用<code>git remote -v</code>。</p></li><li><p>从本地推送分支，使用<code>git push origin branch-name</code>，如果失败，先用<code>git pull</code>抓取远程的新提交。</p></li><li><p>再本地创建和远程分支对应的分支，使用<code>git checkout -b branch-name origin/branch-name</code>，本地和远程分支的名称最好一致。</p></li><li><p>从远程抓取分支，使用<code>git pull</code>，如果有冲突，要先处理冲突。</p></li></ul><h3 id="5-标签"><a href="#5-标签" class="headerlink" title="5. 标签"></a>5. 标签</h3><ul><li><p>命令<code>git tag &lt;name&gt;</code>用于新建一个标签，默认为<code>HEAD</code>,也可以指定一个 commit id。</p></li><li><p><code>git tag -a &lt;tagname&gt; -m &quot;balabala...&quot;</code>可以指定标签信息。</p></li><li><p><code>git tag -s &lt;tagname&gt; -m &quot;balabala...&quot;</code>可以用 PGP 签名标签。</p></li><li><p>命令<code>git tag</code>可以查看所有标签。</p></li><li><p>命令<code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签。</p></li><li><p>命令<code>git push origin --tags</code>可以推送全部未推送过的本地标签。</p></li><li><p>命令<code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签。</p></li><li><p>命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>可以删除一个远程标签。</p></li></ul><h3 id="6-举个应用栗子"><a href="#6-举个应用栗子" class="headerlink" title="6. 举个应用栗子"></a>6. 举个应用栗子</h3><ol><li>最初在远程创建项目仓库有<code>master</code>和<code>develp</code>分支，参与开发人员先在自己一个文件夹下，调出<code>git Bash</code>，然后输入命令<code>git init</code>，再把仓库<code>git clone</code>下来</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www</span><br><span class="line">$ git init</span><br><span class="line">Initialized empty Git repository in D:/appSoft/wampserver/wamp64/www/.git/</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www (master)</span><br><span class="line">$ git clone git@github.com:wuwhs/demo.git</span><br><span class="line">Cloning into &apos;demo&apos;...</span><br><span class="line">Warning: Permanently added the RSA host key for IP address &apos;13.229.188.59&apos; to the list of known hosts.</span><br><span class="line">warning: You appear to have cloned an empty repository.</span><br><span class="line">Checking connectivity... done.</span><br></pre></td></tr></table></figure><ol start="2"><li><code>cd demo</code>进入<code>clone</code>下载的目录里，用<code>git branch develop</code>在本地创建一个对应的<code>develop</code>分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www (master)</span><br><span class="line">$ cd demo</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch</span><br><span class="line">* master</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch develop</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git branch</span><br><span class="line">  develop</span><br><span class="line">* master</span><br></pre></td></tr></table></figure><p>再次用<code>git branch</code>查看已经新建了一个<code>develop</code>分支</p><ol start="3"><li><code>git checkout develop</code>切换到当前<code>develop</code>分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git checkout develop</span><br><span class="line">Switched to branch &apos;develop&apos;</span><br></pre></td></tr></table></figure><ol start="4"><li>用<code>git pull origin develop:develop</code>，即：<code>git pull origin &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code>，当本地和远程分支名相同时，可以简写成一个，也就是<code>git pull origin develop</code>，拉取远程<code>develop</code>分支完成，然后开发人员就可以在这个分支上工作了</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull origin develop:develop</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   7ff2cb0..7ab2842  develop    -&gt; develop</span><br><span class="line">   7ff2cb0..7ab2842  develop    -&gt; origin/develop</span><br><span class="line">warning: fetch updated the current branch head.</span><br><span class="line">fast-forwarding your working tree from</span><br><span class="line">commit 7ff2cb0627be357fa15db4e38e1bfe8fc820b8ec.</span><br><span class="line">Already up-to-date.</span><br></pre></td></tr></table></figure><ol start="5"><li>当一天了工作完成，要提交到远程分支，首先要拉取一下别人提交的代码，防止版本冲突</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Compressing objects: 100% (2/2), done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   f848dc7..d696375  develop    -&gt; origin/develop</span><br><span class="line">Updating f848dc7..d696375</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><p>PS：直接偷懒<code>pull</code>可能会出现没有找到<code>tracking</code>的分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">There is no tracking information for the current branch.</span><br><span class="line">Please specify which branch you want to merge with.</span><br><span class="line">See git-pull(1) for details.</span><br><span class="line"></span><br><span class="line">git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class="line"></span><br><span class="line">If you wish to set tracking information for this branch you can do so with:</span><br><span class="line"></span><br><span class="line">git branch --set-upstream-to=origin/&lt;branch&gt; develop</span><br></pre></td></tr></table></figure><p>这时候要手动添加一下对应分支依赖<code>git branch --set-upstream-to=origin/&lt;branch&gt; develop</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git branch --set-upstream-to=origin/develop develop</span><br><span class="line">Branch develop set up to track remote branch develop from origin.</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git pull</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Compressing objects: 100% (2/2), done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), done.</span><br><span class="line">From github.com:wuwhs/demo</span><br><span class="line">   f848dc7..d696375  develop    -&gt; origin/develop</span><br><span class="line">Updating f848dc7..d696375</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><ol start="6"><li>将本地分支提交到对应远程分支上，<code>git push origin develop:develop</code>，即：<code>git push origin &lt;远程主机&gt;&lt;本地分支名&gt;:&lt;远程分支名&gt;</code>，如果名称一样可以简写，也就是<code>git push origin develop</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git push origin develop:develop</span><br><span class="line">Counting objects: 9, done.</span><br><span class="line">Delta compression using up to 4 threads.</span><br><span class="line">Compressing objects: 100% (5/5), done.</span><br><span class="line">Writing objects: 100% (9/9), 759 bytes | 0 bytes/s, done.</span><br><span class="line">Total 9 (delta 1), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (1/1), done.</span><br><span class="line">To git@github.com:wuwhs/demo.git</span><br><span class="line">   d696375..3c00c0c  develop -&gt; develop</span><br></pre></td></tr></table></figure><ol start="7"><li>项目测试 OK 了，本地分支合并到<code>master</code>分支上，要用到<code>git merge &lt;branch&gt;</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (develop)</span><br><span class="line">$ git checkout master</span><br><span class="line">Switched to branch &apos;master&apos;</span><br><span class="line"></span><br><span class="line">MINGW32 /d/appSoft/wampserver/wamp64/www/demo (master)</span><br><span class="line">$ git merge develop</span><br><span class="line">Updating c4d0377..3c00c0c</span><br><span class="line">Fast-forward</span><br><span class="line"> demo.txt | 9 +++++++++</span><br><span class="line"> 1 file changed, 9 insertions(+)</span><br></pre></td></tr></table></figure><p>常用的操作就以上七步了，当然会有不同情形的应用。</p><h3 id="7-附录：git-cheat-sheet"><a href="#7-附录：git-cheat-sheet" class="headerlink" title="7. 附录：git-cheat-sheet"></a>7. 附录：git-cheat-sheet</h3><p>一般而言，常用的就是以上那些命令，有人专门的整理了一份比较全一点的文档 git-cheat-sheet，方便查阅。</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>列出当前配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --list</span><br></pre></td></tr></table></figure><p>列出 repository 配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --local --list</span><br></pre></td></tr></table></figure><p>列出全局配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global --list</span><br></pre></td></tr></table></figure><p>列出系统配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --system --list</span><br></pre></td></tr></table></figure><p>设置用户名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;[firstname lastname]&quot;</span><br></pre></td></tr></table></figure><p>设置用户邮箱：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email &quot;[valid-email]&quot;</span><br></pre></td></tr></table></figure><p>设置 git 命令输出为彩色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global color.ui auto</span><br></pre></td></tr></table></figure><p>设置 git 使用的文本编辑器设：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global core.editor vi</span><br></pre></td></tr></table></figure><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>Repository 配置对应的配置文件路径[–local]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;repo&gt;/.git/config</span><br></pre></td></tr></table></figure><p>用户全局配置对应的配置文件路径[–global]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.gitconfig</span><br></pre></td></tr></table></figure><p>系统配置对应的配置文件路径[–local]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/gitconfig</span><br></pre></td></tr></table></figure><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p>复制一个已创建的仓库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 通过 SSH</span><br><span class="line">$ git clone ssh://user@domain.com/repo.git</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#通过 HTTP</span><br><span class="line">$ git clone http://domain.com/user/repo.git</span><br></pre></td></tr></table></figure><p>创建一个新的本地仓库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><h4 id="本地修改"><a href="#本地修改" class="headerlink" title="本地修改"></a>本地修改</h4><p>显示工作路径下已修改的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure><p>显示与上次提交版本文件的不同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff</span><br></pre></td></tr></table></figure><p>把当前所有修改添加到下次提交中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure><p>把对某个文件的修改添加到下次提交中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add -p &lt;file&gt;</span><br></pre></td></tr></table></figure><p>提交本地的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -a</span><br></pre></td></tr></table></figure><p>提交之前已标记的变化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit</span><br></pre></td></tr></table></figure><p>附加消息提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &apos;message here&apos;</span><br></pre></td></tr></table></figure><p>提交，并将提交时间设置为之前的某个日期:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --date=&quot;`date --date=&apos;n day ago&apos;`&quot; -am &quot;Commit Message&quot;</span><br></pre></td></tr></table></figure><p>修改上次提交<br>（请勿修改已发布的提交记录!）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit --amend</span><br></pre></td></tr></table></figure><p>修改上次提交的 committer date：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIT_COMMITTER_DATE=&quot;date&quot; git commit --amend</span><br></pre></td></tr></table></figure><p>修改上次提交的 author date：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend --date=&quot;date&quot;</span><br></pre></td></tr></table></figure><p>把当前分支中未提交的修改移动到其他分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git checkout branch2</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><p>将 stashed changes 应用到当前分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash apply</span><br></pre></td></tr></table></figure><p>删除最新一次的 stashed changes：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash drop</span><br></pre></td></tr></table></figure><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>从当前目录的所有文件中查找文本内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git grep &quot;Hello&quot;</span><br></pre></td></tr></table></figure><p>在某一版本中搜索文本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git grep &quot;Hello&quot; v2.5</span><br></pre></td></tr></table></figure><h4 id="提交历史"><a href="#提交历史" class="headerlink" title="提交历史"></a>提交历史</h4><p>从最新提交开始，显示所有的提交记录（显示 hash， 作者信息，提交的标题和时间）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log</span><br></pre></td></tr></table></figure><p>显示所有提交（仅显示提交的 hash 和 message）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline</span><br></pre></td></tr></table></figure><p>显示某个用户的所有提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --author=&quot;username&quot;</span><br></pre></td></tr></table></figure><p>显示某个文件的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log -p &lt;file&gt;</span><br></pre></td></tr></table></figure><p>仅显示远端分支与远端分支提交记录的差集：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline &lt;origin/master&gt;..&lt;remote/master&gt; --left-right</span><br></pre></td></tr></table></figure><p>谁，在什么时间，修改了文件的什么内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git blame &lt;file&gt;</span><br></pre></td></tr></table></figure><p>显示 reflog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog show</span><br></pre></td></tr></table></figure><p>删除 reflog：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog delete</span><br></pre></td></tr></table></figure><h4 id="分支与标签"><a href="#分支与标签" class="headerlink" title="分支与标签"></a>分支与标签</h4><p>列出所有的分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br></pre></td></tr></table></figure><p>列出所有的远端分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -r</span><br></pre></td></tr></table></figure><p>切换分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>创建并切换到新分支:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>基于当前分支创建新分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch &lt;new-branch&gt;</span><br></pre></td></tr></table></figure><p>基于远程分支创建新的可追溯的分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch --track &lt;new-branch&gt; &lt;remote-branch&gt;</span><br></pre></td></tr></table></figure><p>删除本地分支:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -d &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>强制删除一个本地分支：<br>将会丢失未合并的修改！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -D &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>给当前版本打标签：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><p>给当前版本打标签并附加消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><h4 id="更新与发布"><a href="#更新与发布" class="headerlink" title="更新与发布"></a>更新与发布</h4><p>列出当前配置的远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br></pre></td></tr></table></figure><p>显示远程端的信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote show &lt;remote&gt;</span><br></pre></td></tr></table></figure><p>添加新的远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add &lt;remote&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>下载远程端版本，但不合并到 HEAD 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch &lt;remote&gt;</span><br></pre></td></tr></table></figure><p>下载远程端版本，并自动与 HEAD 版本合并：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote pull &lt;remote&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>将远程端版本合并到本地版本中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin master</span><br></pre></td></tr></table></figure><p>以 rebase 方式将远端分支与本地合并：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>将本地版本发布到远程端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push remote &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>删除远程端分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git push &lt;remote&gt; :&lt;branch&gt; (since Git v1.5.0)</span><br><span class="line"># or</span><br><span class="line">git push &lt;remote&gt; --delete &lt;branch&gt; (since Git v1.7.0)</span><br></pre></td></tr></table></figure><p>发布标签:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push --tags</span><br></pre></td></tr></table></figure><p>合并与重置(Rebase)<br>将分支合并到当前 HEAD 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>将当前 HEAD 版本重置到分支中:<br>请勿重置已发布的提交!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase &lt;branch&gt;</span><br></pre></td></tr></table></figure><p>退出重置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase --abort</span><br></pre></td></tr></table></figure><p>解决冲突后继续重置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase --continue</span><br></pre></td></tr></table></figure><p>使用配置好的 merge tool 解决冲突：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git mergetool</span><br></pre></td></tr></table></figure><p>在编辑器中手动解决冲突后，标记文件为已解决冲突：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git add &lt;resolved-file&gt;</span><br><span class="line">$ git rm &lt;resolved-file&gt;</span><br></pre></td></tr></table></figure><p>合并提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rebase -i &lt;commit-just-before-first&gt;</span><br></pre></td></tr></table></figure><p>把上面的内容替换为下面的内容：</p><p>原内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pick &lt;commit_id&gt;</span><br><span class="line">pick &lt;commit_id2&gt;</span><br><span class="line">pick &lt;commit_id3&gt;</span><br></pre></td></tr></table></figure><p>替换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pick &lt;commit_id&gt;</span><br><span class="line">squash &lt;commit_id2&gt;</span><br><span class="line">squash &lt;commit_id3&gt;</span><br></pre></td></tr></table></figure><h4 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h4><p>放弃工作目录下的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard HEAD</span><br></pre></td></tr></table></figure><p>移除缓存区的所有文件（i.e. 撤销上次 git add）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset HEAD</span><br></pre></td></tr></table></figure><p>放弃某个文件的所有本地修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout HEAD &lt;file&gt;</span><br></pre></td></tr></table></figure><p>重置一个提交（通过创建一个截然不同的新提交）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git revert &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到指定的版本，并抛弃该版本之后的所有修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>用远端分支强制覆盖本地分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard &lt;remote/branch&gt; e.g., upstream/master, origin/my-feature</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到上一次提交的版本，并将之后的修改标记为未添加到缓存区的修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>将 HEAD 重置到上一次提交的版本，并保留未提交的本地修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --keep &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>删除添加.gitignore 文件前错误提交的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git rm -r --cached .</span><br><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;remove xyz file&quot;</span><br></pre></td></tr></table></figure><p>完~</p><p>可参考文章：</p><ol><li><a href="http://rogerdudler.github.io/git-guide/" target="_blank" rel="noopener">git-guide</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰 git 教程</a></li><li><a href="https://www.git-scm.com/" target="_blank" rel="noopener">git-scm</a></li><li><a href="https://blog.csdn.net/github_37515447/article/details/56840610" target="_blank" rel="noopener">Git Cheat Sheet 中文版</a></li></ol>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>搞定css三列布局</title>
      <link href="/2018/07/22/%E6%90%9E%E5%AE%9Acss%E4%B8%89%E5%88%97%E5%B8%83%E5%B1%80/"/>
      <url>/2018/07/22/%E6%90%9E%E5%AE%9Acss%E4%B8%89%E5%88%97%E5%B8%83%E5%B1%80/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="三列布局"><a href="#三列布局" class="headerlink" title="三列布局"></a>三列布局</h2><blockquote><p>谈到布局，首先就要想到定位，当别人问我，css 的 position 定位有哪些取值，分别表示什么意思？呃…..</p></blockquote><h3 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h3><p>position 有六个属性值：static、relative、absolute、fixed、sticky 和 inherit。</p><a id="more"></a><ul><li>static（默认）：元素框正常生成。块级元素生成一个矩形框，作为文档流的一部分；行内元素则会创建一个或多个行框，置于父级元素中。</li><li>relative：元素框相对于之前正常文档流中的位置发生偏移，并且原先的位置仍然被占据。发生偏移的时候，可能会覆盖其他元素。</li><li>absolute：元素框不再占有文档位置，并且相对于包含块进行偏移（所谓包含块就是最近一级外层元素 position 不为 static 的元素）。</li><li>fixed：元素框不再占有文档流位置，并且相对于视窗进行定位。</li><li>sticky：css3 新增属性值，粘性定位，相当于 relative 和 fixed 的混合。最初会被当作是 relative，相对原来位置进行偏移；一旦超过一定的阈值，会被当成 fixed 定位，相对于视口定位。</li></ul><h3 id="三列布局-1"><a href="#三列布局-1" class="headerlink" title="三列布局"></a>三列布局</h3><p>三列布局，其中一列宽度自适应，在 PC 端最常用之一，搞定了三列布局，其他一样的套路。</p><h5 id="方式一：浮动布局"><a href="#方式一：浮动布局" class="headerlink" title="方式一：浮动布局"></a>方式一：浮动布局</h5><p>缺点：html 结构不正确,当包含区域宽度小于左右框之和，右边框会被挤下来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.float .center &#123;</span><br><span class="line">        /* left: 300px;</span><br><span class="line">        right: 300px; */</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式二：定位布局"><a href="#方式二：定位布局" class="headerlink" title="方式二：定位布局"></a>方式二：定位布局</h4><p>缺点：要求父级要有非 static 定位，如果没有，左右框容易偏移出去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.position &#123;</span><br><span class="line">        position: relative;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .left &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .right &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        right: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.position .center &#123;</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">        overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout position&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是浮动定位右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式三：表格布局"><a href="#方式三：表格布局" class="headerlink" title="方式三：表格布局"></a>方式三：表格布局</h4><p>缺点：没什么缺点，恐惧 table</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.table &#123;</span><br><span class="line">        display: table;</span><br><span class="line">        width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table &gt; article &#123;</span><br><span class="line">        display: table-cell;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .center &#123;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.table .right &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout table&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是表格布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式四：flex-弹性布局"><a href="#方式四：flex-弹性布局" class="headerlink" title="方式四：flex 弹性布局"></a>方式四：flex 弹性布局</h4><p>缺点：兼容性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.flex &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        flex-shrink: 0; /* 不缩小 */</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .center &#123;</span><br><span class="line">        flex-grow: 1; /* 增大 */</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.flex .right &#123;</span><br><span class="line">        flex-shrink: 0; /* 不缩小 */</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout flex&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是flex弹性布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式五：grid-栅格布局"><a href="#方式五：grid-栅格布局" class="headerlink" title="方式五：grid 栅格布局"></a>方式五：grid 栅格布局</h4><p>缺点：兼容性 Firefox 52, Safari 10.1, Chrome 57, Opera 44</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.grid &#123;</span><br><span class="line">        display: grid;</span><br><span class="line">        grid-template-columns: 300px 1fr 300px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .left &#123;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .center &#123;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.grid .right &#123;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout grid&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局中间框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是grid栅格布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="方式六：圣杯布局"><a href="#方式六：圣杯布局" class="headerlink" title="方式六：圣杯布局"></a>方式六：圣杯布局</h4><p>缺点：需要多加一层标签，html 顺序不对，占用了布局框的 margin 属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .tree-columns-layout.cup:after &#123;</span><br><span class="line">        clear: both;</span><br><span class="line">        content: &quot;&quot;;</span><br><span class="line">        display: table;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .center &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line">        float: left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .center &gt; div &#123;</span><br><span class="line">        margin: 0 300px;</span><br><span class="line">        overflow: auto;</span><br><span class="line">        background-color: #aa0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .left &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -100%;</span><br><span class="line">        background-color: #a00;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .tree-columns-layout.cup .right &#123;</span><br><span class="line">        width: 300px;</span><br><span class="line">        float: left;</span><br><span class="line">        margin-left: -300px;</span><br><span class="line">        background-color: #0aa;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;tree-columns-layout cup&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;h1&gt;我是圣杯布局中间框&lt;/h1&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是圣杯布局左框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;h1&gt;我是圣杯布局右框&lt;/h1&gt;</span><br><span class="line">    &lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> 布局 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>水平且垂直居中方法（9种）</title>
      <link href="/2018/06/01/%E6%B0%B4%E5%B9%B3%E4%B8%94%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%EF%BC%889%E7%A7%8D%EF%BC%89/"/>
      <url>/2018/06/01/%E6%B0%B4%E5%B9%B3%E4%B8%94%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%EF%BC%889%E7%A7%8D%EF%BC%89/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="水平且垂直居中方法有哪些？"><a href="#水平且垂直居中方法有哪些？" class="headerlink" title="水平且垂直居中方法有哪些？"></a>水平且垂直居中方法有哪些？</h2><p>这在实际工作中经常用到，小记一下。</p><h4 id="演示-HTML-结构"><a href="#演示-HTML-结构" class="headerlink" title="演示 HTML 结构"></a>演示 HTML 结构</h4><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span> <span class="attr">class</span>=<span class="string">"div"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>i<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/gb/水平且垂直居中方法（9种）/0.bmp" alt=""></p><p>一般的，水平居中相对垂直居中简单很多，对于内联元素，父级元素设置<code>text-align: center;</code>；对于块级元素，子级元素设置<code>margin: 0 auto;</code>。以下结合水平居中强调实现垂直居中。</p><h4 id="1、已知父级元素宽高，父级元素定位非-static，子级元素定位设为position-absolute-fixed，再利用margin、left和top属性居中。"><a href="#1、已知父级元素宽高，父级元素定位非-static，子级元素定位设为position-absolute-fixed，再利用margin、left和top属性居中。" class="headerlink" title="1、已知父级元素宽高，父级元素定位非 static，子级元素定位设为position: absolute/fixed，再利用margin、left和top属性居中。"></a>1、已知父级元素宽高，父级元素定位非 static，子级元素定位设为<code>position: absolute/fixed</code>，再利用<code>margin</code>、<code>left</code>和<code>top</code>属性居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：需要已知父级元素固定宽高，才能确定<code>margin-left</code>和<code>margin-right</code>。</p><h4 id="2、子级元素是内联元素，父级元素设置line-height属性垂直居中。"><a href="#2、子级元素是内联元素，父级元素设置line-height属性垂直居中。" class="headerlink" title="2、子级元素是内联元素，父级元素设置line-height属性垂直居中。"></a>2、子级元素是内联元素，父级元素设置<code>line-height</code>属性垂直居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">120px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: normal;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：需要已知父级元素的固定高度，才可以确定<code>line-height</code>。</p><h4 id="3、子级元素是内联元素，父级元素用display-table-cell-和vertical-align-middle-属性实现垂直居中。"><a href="#3、子级元素是内联元素，父级元素用display-table-cell-和vertical-align-middle-属性实现垂直居中。" class="headerlink" title="3、子级元素是内联元素，父级元素用display: table-cell;和vertical-align: middle;属性实现垂直居中。"></a>3、子级元素是内联元素，父级元素用<code>display: table-cell;</code>和<code>vertical-align: middle;</code>属性实现垂直居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>inline-block</code>、<code>table-cell</code>不兼容 ie67</p><h4 id="4、对于子级是块级元素，父级元素同样用display-table-cell-和vertical-align-middle-属性实现垂直居中，水平方向居中用margin-0-auto-。"><a href="#4、对于子级是块级元素，父级元素同样用display-table-cell-和vertical-align-middle-属性实现垂直居中，水平方向居中用margin-0-auto-。" class="headerlink" title="4、对于子级是块级元素，父级元素同样用display: table-cell;和vertical-align: middle;属性实现垂直居中，水平方向居中用margin: 0 auto;。"></a>4、对于子级是块级元素，父级元素同样用<code>display: table-cell;</code>和<code>vertical-align: middle;</code>属性实现垂直居中，水平方向居中用<code>margin: 0 auto;</code>。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>table-cell</code>不兼容 ie67</p><h4 id="5、利用-css3-translate特性：位移是基于元素宽高的。"><a href="#5、利用-css3-translate特性：位移是基于元素宽高的。" class="headerlink" title="5、利用 css3 translate特性：位移是基于元素宽高的。"></a>5、利用 css3 <code>translate</code>特性：位移是基于元素宽高的。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">-ms-transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，<code>translate</code>属性兼容 IE9+</p><h4 id="6、当父级是浮动的，用display-table-cell-会失效，这时需要包三层，第一层display-table-，第二层display-table-cell-第三次居中层"><a href="#6、当父级是浮动的，用display-table-cell-会失效，这时需要包三层，第一层display-table-，第二层display-table-cell-第三次居中层" class="headerlink" title="6、当父级是浮动的，用display: table-cell;会失效，这时需要包三层，第一层display: table;，第二层display: table-cell; 第三次居中层"></a>6、当父级是浮动的，用<code>display: table-cell;</code>会失效，这时需要包三层，第一层<code>display: table;</code>，第二层<code>display: table-cell;</code> 第三次居中层</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="comment">/* text-align: center; */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div3</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="comment">/* display: inline-block; */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff00ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，但 HTML 标签层数较多。</p><h4 id="7、绝对定位加四边定位为-0。"><a href="#7、绝对定位加四边定位为-0。" class="headerlink" title="7、绝对定位加四边定位为 0。"></a>7、绝对定位加四边定位为 0。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，但把定位属性全用上了</p><h4 id="8、利用-flex-布局justify-content-center-和align-items-center-属性居中。"><a href="#8、利用-flex-布局justify-content-center-和align-items-center-属性居中。" class="headerlink" title="8、利用 flex 布局justify-content: center;和align-items: center;属性居中。"></a>8、利用 flex 布局<code>justify-content: center;</code>和<code>align-items: center;</code>属性居中。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，兼容 IE10+</p><h4 id="9、利用-grid-布局，划分成-3x3-栅格，第二行第二列格子垂直水平居中"><a href="#9、利用-grid-布局，划分成-3x3-栅格，第二行第二列格子垂直水平居中" class="headerlink" title="9、利用 grid 布局，划分成 3x3 栅格，第二行第二列格子垂直水平居中"></a>9、利用 grid 布局，划分成 3x3 栅格，第二行第二列格子垂直水平居中</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffff00</span>;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">  <span class="attribute">grid-row-start</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">grid-column-start</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：无需要确定父级元素的宽高，兼容性 Firefox 52, Safari 10.1, Chrome 57, Opera 44</p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>深入理解BFC</title>
      <link href="/2018/05/21/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3BFC/"/>
      <url>/2018/05/21/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3BFC/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="BFC-概念"><a href="#BFC-概念" class="headerlink" title="BFC 概念"></a>BFC 概念</h2><h2 id="1、相关定义"><a href="#1、相关定义" class="headerlink" title="1、相关定义"></a>1、相关定义</h2><h3 id="1-1-Formatting-context"><a href="#1-1-Formatting-context" class="headerlink" title="1.1 Formatting context"></a>1.1 Formatting context</h3><p>Formatting context 是 W3C CSS2.1 规定中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素如何定位，以及和其他元素的关系和相互作用。最常见的 Formatting context 有 Block formatting context（简称 BFC）和 Inline formatting context（简称 IFC）。<br>css2.1 中只有 BFC 和 IFC，css3 中还增加了 GFC 和 FFC。</p><a id="more"></a><h3 id="1-2-BFC-定义"><a href="#1-2-BFC-定义" class="headerlink" title="1.2 BFC 定义"></a>1.2 BFC 定义</h3><p>BFC(Block formatting context)直译为“块级格式化上下文”。它是独立的渲染区域，只有 Block-level box 参与，它规定了内部的 Block-level Box 如何布局，并且与这个区域外部毫不相干。</p><h3 id="1-3-BFC-布局规则："><a href="#1-3-BFC-布局规则：" class="headerlink" title="1.3 BFC 布局规则："></a>1.3 BFC 布局规则：</h3><ul><li>内部的 Box 会在垂直方向，一个接一个地放置；</li><li>Box 垂直方向地距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠</li><li>每个元素的 margin box 的左边，与包含块 border box 的左边相接触（对于从左往右的格式化，否则相反）。即便存在浮动也是如此。</li><li>BFC 的区域不会与 float box 重叠。</li><li>BFC 就是页面的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</li><li>计算 BFC 的高度时，浮动元素页参与计算。<br>-</li></ul><h2 id="2、作用"><a href="#2、作用" class="headerlink" title="2、作用"></a>2、作用</h2><h3 id="2-1-可生成-BFC-的元素"><a href="#2-1-可生成-BFC-的元素" class="headerlink" title="2.1 可生成 BFC 的元素"></a>2.1 可生成 BFC 的元素</h3><ul><li>根元素 html；</li><li>float 属性不为 none；</li><li>position 为 absolute 或 fixed；</li><li>display 为 inline-block， table-cell，table-caption，flex， inline-flex；</li><li>overflow 不为 visible；</li></ul><h3 id="2-2-场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。"><a href="#2-2-场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。" class="headerlink" title="2.2 场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。"></a>2.2 场景一：对于两栏或三栏浮动自适应布局，包含块边接触问题。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .left-center-right.float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: rgba(0, 0, 0, 0.7);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .left-center-right.float .center &#123;</span><br><span class="line">        background-color: rgb(13, 218, 233);</span><br><span class="line">        height: 200px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .left-center-right.float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;left-center-right float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;我是左边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;我是右边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;center&quot;&gt;我是中间区域块&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p>中间自适应栏边界会延展左右浮动区域<br><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/67CD3941EFC8420AAB3D54CB766DE219/7159" alt="image"></p><p>此时需要把中间栏变成 BFC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.left-center-right.float .center &#123;</span><br><span class="line">    background-color: rgb(13, 218, 233);</span><br><span class="line">    height: 200px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/97EE88BCB7AC428E95F9F9A5580639A7/7175" alt="image"></p><h3 id="2-3-场景二：子级元素有浮动，父级元素塌陷问题"><a href="#2-3-场景二：子级元素有浮动，父级元素塌陷问题" class="headerlink" title="2.3 场景二：子级元素有浮动，父级元素塌陷问题"></a>2.3 场景二：子级元素有浮动，父级元素塌陷问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .all-children-float .left &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: rgba(0, 0, 0, 0.7);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .all-children-float .right &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;all-children-float&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;left&quot;&gt;我是左边区域块&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;right&quot;&gt;我是右边区域块&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/1B737A83C8D04BF9B0ABDE2EF28DF0E6/7190" alt="image"></p><p>此时需要将父级元素变成 BFC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.all-children-float &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/D00321F3DC9C4D578E6C89DD23DB0AB2/7200" alt="image"></p><h3 id="2-3-场景三：垂直方向-margin-出现重合"><a href="#2-3-场景三：垂直方向-margin-出现重合" class="headerlink" title="2.3 场景三：垂直方向 margin 出现重合"></a>2.3 场景三：垂直方向 margin 出现重合</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .verticle-block .block1 &#123;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(13, 218, 233);</span><br><span class="line">        margin: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .verticle-block .block2 &#123;</span><br><span class="line">        width: 150px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        background-color: rgb(189, 109, 109);</span><br><span class="line">        margin: 30px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section class=&quot;verticle-block&quot;&gt;</span><br><span class="line">    &lt;article class=&quot;block1&quot;&gt;我是区域块1&lt;/article&gt;</span><br><span class="line">    &lt;article class=&quot;block2&quot;&gt;我是区域块2&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><blockquote><p>Box 垂直方向的距离 margin 决定，属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠。</p></blockquote><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/4C9FBEC4951F4006939CD8AAEC698B21/7214" alt="image"></p><p>我们的做法是包一层标签，并转化成 BFC。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.wrapper1 &#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;section class=&quot;verticle-block&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;wrapper1&quot;&gt;</span><br><span class="line">        &lt;article class=&quot;block1&quot;&gt;我是区域块1&lt;/article&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;article class=&quot;block2&quot;&gt;我是区域块2&lt;/article&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/56A0200CB1424C20AB9930AA4CAC44E2/7217" alt="image"></p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css BFC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>css中的一些坑</title>
      <link href="/2018/05/06/css%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
      <url>/2018/05/06/css%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CSS-踩坑记"><a href="#CSS-踩坑记" class="headerlink" title="CSS 踩坑记"></a>CSS 踩坑记</h2><h4 id="1、如果子元素全部设置为浮动，则父元素是塌陷的"><a href="#1、如果子元素全部设置为浮动，则父元素是塌陷的" class="headerlink" title="1、如果子元素全部设置为浮动，则父元素是塌陷的"></a>1、如果子元素全部设置为浮动，则父元素是塌陷的</h4><ol><li>在元素末尾加块级空元素设置 clear:both；<a id="more"></a></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.last</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- more --><ol start="2"><li>在父级容器设置 before/after 模拟一个块级空元素</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>父级容器直接设置 overflow: auto/hidden;</li></ol><h4 id="2、普通文档流中块级垂直外边距合并"><a href="#2、普通文档流中块级垂直外边距合并" class="headerlink" title="2、普通文档流中块级垂直外边距合并"></a>2、普通文档流中块级垂直外边距合并</h4><p>解决办法：用 padding 代替，或改成 inline-block，或改成 float，或绝对定位</p><h4 id="3、使用-transition-闪屏"><a href="#3、使用-transition-闪屏" class="headerlink" title="3、使用 transition 闪屏"></a>3、使用 transition 闪屏</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">  <span class="attribute">-webkit-backface-visibility</span>: hidden;</span><br><span class="line">  <span class="attribute">-webkit-perspective</span>: <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过渡动画在没有启动硬件加速的情况下，会出现抖动现象，解决方案：用 translated3d、translateZ、transform 自动启动硬件加速，即改为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">translated3d</span>(0, 0, 0);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translated3d</span>(0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ps:硬件加速导致 cpu 性能占用增加，电池电量消耗加大</p><h4 id="4、超出内容用”…”表示"><a href="#4、超出内容用”…”表示" class="headerlink" title="4、超出内容用”…”表示"></a>4、超出内容用”…”表示</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line-clamp"</span>&gt;</span></span><br><span class="line">来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容，来点展示内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line-clamp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">  <span class="attribute">-webkit-line-clamp</span>: <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>-webkit-line-clamp 用来限制在一个块元素显示的文本的行数</li><li>display: -webkit-box; 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示</li><li>-webkit-box-orient 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式</li></ol><p>缺点：<br>只有移动端和 webkit 浏览器支持</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/7959E51B5140437DA4C084E6B8E7472E/12000" alt=""></p><p>还不够，最后末尾最好有点渐变到”…”</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/D7C74A4FC9624AC7A638FC223AFF6926/12008" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line-clamp</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.line-clamp</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">'...'</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(to right, transparent, #fff 55%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>将 height 设置为 line-height 整数倍，防止超出文字露出</li><li>ie10+才支持 linear-gradient 属性</li></ol><p>缺点：</p><p>当文字少于区域大小时，也会出现省略号</p><h4 id="输入框-placeholder-文字带颜色"><a href="#输入框-placeholder-文字带颜色" class="headerlink" title="输入框 placeholder 文字带颜色"></a>输入框 placeholder 文字带颜色</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* WebKit browsers */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-moz-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Mozilla Firefox 19+ */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:-ms-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Internet Explorer 10+ */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#009a61</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>移动端适配-rem</title>
      <link href="/2018/04/27/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D-rem/"/>
      <url>/2018/04/27/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D-rem/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="通过封装-rem-js-动态获取屏幕宽度"><a href="#通过封装-rem-js-动态获取屏幕宽度" class="headerlink" title="通过封装 rem.js,动态获取屏幕宽度"></a>通过封装 rem.js,动态获取屏幕宽度</h2><blockquote><p>通过 js 去动态计算根元素的 font-size，这样所有设备分辨率都能兼容适应</p></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">//designWidth:设计稿的实际宽度值，需要根据实际设置</span><br><span class="line">//maxWidth:制作稿的最大宽度值，需要根据实际设置</span><br><span class="line">//这段js的最后面有两个参数记得要设置，一个为设计稿实际宽度，一个为制作稿最大宽度，例如设计稿为750，最大宽度为750，则为(750,750)</span><br><span class="line">;</span><br><span class="line">(function(designWidth, maxWidth) &#123;</span><br><span class="line">    var doc = document,</span><br><span class="line">        win = window,</span><br><span class="line">        docEl = doc.documentElement,</span><br><span class="line">        remStyle = document.createElement(&quot;style&quot;),</span><br><span class="line">        tid;</span><br><span class="line"></span><br><span class="line">    function refreshRem() &#123;</span><br><span class="line">        var width = docEl.getBoundingClientRect().width;</span><br><span class="line">        maxWidth = maxWidth || 540;</span><br><span class="line">        width &gt; maxWidth &amp;&amp; (width = maxWidth);</span><br><span class="line">        var rem = width * 100 / designWidth;</span><br><span class="line">        remStyle.innerHTML = &apos;html&#123;font-size:&apos; + rem + &apos;px;&#125;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (docEl.firstElementChild) &#123;</span><br><span class="line">        docEl.firstElementChild.appendChild(remStyle);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        var wrap = doc.createElement(&quot;div&quot;);</span><br><span class="line">        wrap.appendChild(remStyle);</span><br><span class="line">        doc.write(wrap.innerHTML);</span><br><span class="line">        wrap = null;</span><br><span class="line">    &#125;</span><br><span class="line">    //要等 wiewport 设置好后才能执行 refreshRem，不然 refreshRem 会执行2次；</span><br><span class="line">    refreshRem();</span><br><span class="line"></span><br><span class="line">    win.addEventListener(&quot;resize&quot;, function() &#123;</span><br><span class="line">        clearTimeout(tid); //防止执行两次</span><br><span class="line">        tid = setTimeout(refreshRem, 300);</span><br><span class="line">    &#125;, false);</span><br><span class="line"></span><br><span class="line">    win.addEventListener(&quot;pageshow&quot;, function(e) &#123;</span><br><span class="line">        if (e.persisted) &#123; // 浏览器后退的时候重新计算</span><br><span class="line">            clearTimeout(tid);</span><br><span class="line">            tid = setTimeout(refreshRem, 300);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, false);</span><br><span class="line"></span><br><span class="line">    if (doc.readyState === &quot;complete&quot;) &#123;</span><br><span class="line">        doc.body.style.fontSize = &quot;16px&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        doc.addEventListener(&quot;DOMContentLoaded&quot;, function(e) &#123;</span><br><span class="line">            doc.body.style.fontSize = &quot;16px&quot;;</span><br><span class="line">        &#125;, false);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(640, 750);</span><br></pre></td></tr></table></figure><blockquote><p>当然也可以用 media query 设置适配集中主流的屏幕尺寸</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">html &#123;</span><br><span class="line">    font-size : 20px;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 401px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 25px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 428px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 26.75px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 481px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 30px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 569px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 35px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 641px)&#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size: 40px !important;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>提供一个移动端 base.css</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">body,</span><br><span class="line">dl,</span><br><span class="line">dd,</span><br><span class="line">ul,</span><br><span class="line">ol,</span><br><span class="line">h1,</span><br><span class="line">h2,</span><br><span class="line">h3,</span><br><span class="line">h4,</span><br><span class="line">h5,</span><br><span class="line">h6,</span><br><span class="line">pre,</span><br><span class="line">form,</span><br><span class="line">input,</span><br><span class="line">textarea,</span><br><span class="line">p,</span><br><span class="line">hr,</span><br><span class="line">thead,</span><br><span class="line">tbody,</span><br><span class="line">tfoot,</span><br><span class="line">th,</span><br><span class="line">td &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ul,</span><br><span class="line">ol &#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a &#123;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html &#123;</span><br><span class="line">    -ms-text-size-adjust: none;</span><br><span class="line">    -webkit-text-size-adjust: none;</span><br><span class="line">    text-size-adjust: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    line-height: 1.5;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body,</span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">select,</span><br><span class="line">textarea &#123;</span><br><span class="line">    font-family: &apos;helvetica neue&apos;, tahoma, &apos;hiragino sans gb&apos;, stheiti, &apos;wenquanyi micro hei&apos;, \5FAE\8F6F\96C5\9ED1, \5B8B\4F53, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b,</span><br><span class="line">strong &#123;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">i,</span><br><span class="line">em &#123;</span><br><span class="line">    font-style: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table &#123;</span><br><span class="line">    border-collapse: collapse;</span><br><span class="line">    border-spacing: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table th,</span><br><span class="line">table td &#123;</span><br><span class="line">    border: 1px solid #ddd;</span><br><span class="line">    padding: 5px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table th &#123;</span><br><span class="line">    font-weight: inherit;</span><br><span class="line">    border-bottom-width: 2px;</span><br><span class="line">    border-bottom-color: #ccc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">img &#123;</span><br><span class="line">    border: 0 none;</span><br><span class="line">    width: auto\9;</span><br><span class="line">    max-width: 100%;</span><br><span class="line">    vertical-align: top;</span><br><span class="line">    height: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">select,</span><br><span class="line">textarea &#123;</span><br><span class="line">    font-family: inherit;</span><br><span class="line">    font-size: 100%;</span><br><span class="line">    margin: 0;</span><br><span class="line">    vertical-align: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">html input[type=&quot;button&quot;],</span><br><span class="line">input[type=&quot;reset&quot;],</span><br><span class="line">input[type=&quot;submit&quot;] &#123;</span><br><span class="line">    -webkit-appearance: button;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button[disabled],</span><br><span class="line">input[disabled] &#123;</span><br><span class="line">    cursor: default;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;checkbox&quot;],</span><br><span class="line">input[type=&quot;radio&quot;] &#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;search&quot;] &#123;</span><br><span class="line">    -webkit-appearance: textfield;</span><br><span class="line">    -moz-box-sizing: content-box;</span><br><span class="line">    -webkit-box-sizing: content-box;</span><br><span class="line">    box-sizing: content-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type=&quot;search&quot;]::-webkit-search-decoration &#123;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input:focus &#123;</span><br><span class="line">    outline: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">select[size],</span><br><span class="line">select[multiple],</span><br><span class="line">select[size][multiple] &#123;</span><br><span class="line">    border: 1px solid #AAA;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">article,</span><br><span class="line">aside,</span><br><span class="line">details,</span><br><span class="line">figcaption,</span><br><span class="line">figure,</span><br><span class="line">footer,</span><br><span class="line">header,</span><br><span class="line">hgroup,</span><br><span class="line">main,</span><br><span class="line">nav,</span><br><span class="line">section,</span><br><span class="line">summary &#123;</span><br><span class="line">    display: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">audio,</span><br><span class="line">canvas,</span><br><span class="line">video,</span><br><span class="line">progress &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    background: #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input::-webkit-input-speech-button &#123;</span><br><span class="line">    display: none</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button,</span><br><span class="line">input,</span><br><span class="line">textarea &#123;</span><br><span class="line">    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> mobile </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue的数据驱动原理及简单实现</title>
      <link href="/2017/09/10/vue%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E5%8E%9F%E7%90%86%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/"/>
      <url>/2017/09/10/vue%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E5%8E%9F%E7%90%86%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Vue双向数据绑定原理"><a href="#Vue双向数据绑定原理" class="headerlink" title="Vue双向数据绑定原理"></a>Vue双向数据绑定原理</h2><h3 id="1、目标实现"><a href="#1、目标实现" class="headerlink" title="1、目标实现"></a>1、目标实现</h3><ol><li>理解双向数据绑定原理；</li><li>实现 &#123;&#123; &#125;&#125;、v-model和基本事件指令v-bind（:）、v-on（@）；</li><li>新增属性的双向绑定处理；<a id="more"></a></li></ol><h3 id="2、双向数据绑定原理"><a href="#2、双向数据绑定原理" class="headerlink" title="2、双向数据绑定原理"></a>2、双向数据绑定原理</h3><p>vue实现对数据的双向绑定，通过对数据劫持结合发布者-订阅者模式实现的。</p><h4 id="2-1-Object-defineProperty"><a href="#2-1-Object-defineProperty" class="headerlink" title="2.1 Object.defineProperty"></a>2.1 Object.defineProperty</h4><p>vue通过Object.defineProperty来实现数据劫持，会对数据对象每个属性添加对应的get和set方法，对数据进行读取和赋值操作就分别调用get和set方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">    enumerable: <span class="literal">true</span>,</span><br><span class="line">    configurable: <span class="literal">true</span>,</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;,</span><br><span class="line">    set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>我们可以将一些方法放到里面，从而完成对数据的监听（劫持）和视图的同步更新。</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/F8D35A0DDA0C438990651233F3954DD3/6460" alt="image"></p><h4 id="2-2-过程说明"><a href="#2-2-过程说明" class="headerlink" title="2.2 过程说明"></a>2.2 过程说明</h4><p>实现双向数据绑定，首先要对数据进行数据监听，需要一个监听器Observer，监听所有属性。如果属性发生变化，会调用setter和getter，再去告诉订阅者Watcher是否需要更新。由于订阅者有很多个，我们需要一个消息订阅器Dep来专门收集这些订阅者，然后在监听器Observer和订阅者Watcher之间进行统一管理。还有，我们需要一个指令解析器Complie，对每个元素进行扫描和解析，将相关指令对应初始化成一个订阅者Watcher，并替换模板数据或绑定相应函数。当订阅者Watcher接收到相应属性的变化，就会执行对应的更新函数，从而更新视图。</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/A6333A71A8E243A38EAD196BB13F9EE7/6463" alt="image"></p><h3 id="3、实现Observer"><a href="#3、实现Observer" class="headerlink" title="3、实现Observer"></a>3、实现Observer</h3><p>Observer是一个数据监听器，核心方法是我们提到过的Object.defineProperty。如果要监听所有属性的话，则需要通过递归遍历，对每个子属性都defineProperty。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data || <span class="keyword">typeof</span> data !== <span class="string">"object"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = data;</span><br><span class="line">    <span class="keyword">this</span>.walk(data);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性遍历</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    walk: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="built_in">Object</span>.keys(data).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">            self.defineReactive(data, key, data[key]);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    defineReactive: <span class="function"><span class="keyword">function</span>(<span class="params">data, key, val</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        observe(val);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">            enumerable: <span class="literal">true</span>,</span><br><span class="line">            configurable: <span class="literal">true</span>,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> val;</span><br><span class="line">            &#125;,</span><br><span class="line">            set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (newVal === val) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                val = newVal;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"属性："</span> + key + <span class="string">"被监听了，现在值为："</span> + newVal);</span><br><span class="line"></span><br><span class="line">                updateView(newVal);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        updateView(val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Observer(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听数据</span></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新视图</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; val</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateView</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $name = <span class="built_in">document</span>.querySelector(<span class="string">"#name"</span>);</span><br><span class="line">    $name.innerHTML = val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myvm = <span class="keyword">new</span> MyVue(&#123;</span><br><span class="line">    el: <span class="string">"#demo"</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        name: <span class="string">"hello word"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/93FC8BA149764033996B07C9031FBE2D/6483" alt="image"></p><h3 id="4、实现Dep"><a href="#4、实现Dep" class="headerlink" title="4、实现Dep"></a>4、实现Dep</h3><p>在流程介绍中，我们需要创建一个可以订阅者的订阅器Dep，主要负责手机订阅者，属性变化的时候执行相应的订阅者，更新函数。下面稍加改造Observer，就可以插入我们的订阅器。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    defineReactive: <span class="function"><span class="keyword">function</span>(<span class="params">data, key, val</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dep = <span class="keyword">new</span> Dep();</span><br><span class="line"></span><br><span class="line">        observe(val);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(data, key, &#123;</span><br><span class="line">            enumerable: <span class="literal">true</span>,</span><br><span class="line">            configurable: <span class="literal">true</span>,</span><br><span class="line">            get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否需要添加订阅者 什么时候添加订阅者呢？ 与实际页面DOM有关联的data属性才添加相应的订阅者</span></span><br><span class="line">                <span class="keyword">if</span> (Dep.target) &#123;</span><br><span class="line">                    <span class="comment">// 添加一个订阅者</span></span><br><span class="line">                    dep.addSub(Dep.target);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> val;</span><br><span class="line">            &#125;,</span><br><span class="line">            set: <span class="function"><span class="keyword">function</span>(<span class="params">newVal</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (newVal === val) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                val = newVal;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"属性："</span> + key + <span class="string">"被监听了，现在值为："</span> + newVal);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 通知所有订阅者</span></span><br><span class="line">                dep.notify(newVal);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        updateView(val);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 订阅器标识本身实例</span></span><br><span class="line">        Dep.target = dep;</span><br><span class="line">        <span class="comment">// 强行执行getter，往订阅器中添加订阅者</span></span><br><span class="line">        <span class="keyword">var</span> v = data[key];</span><br><span class="line">        <span class="comment">// 释放自己</span></span><br><span class="line">        Dep.target = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Observer(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订阅器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Dep</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.subs = [];</span><br><span class="line">    <span class="keyword">this</span>.target = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dep.prototype = &#123;</span><br><span class="line">    addSub: <span class="function"><span class="keyword">function</span>(<span class="params">sub</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subs.push(sub);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"this.subs:"</span>, <span class="keyword">this</span>.subs);</span><br><span class="line">    &#125;,</span><br><span class="line">    notify: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subs.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">sub</span>) </span>&#123;</span><br><span class="line">            sub.update(data);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    update: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        updateView(val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>PS:将订阅器Dep添加到一个订阅者设计到getter里面，是为了让Watcher初始化进行触发。</p><h3 id="5、实现Watcher"><a href="#5、实现Watcher" class="headerlink" title="5、实现Watcher"></a>5、实现Watcher</h3><p>订阅者Watcher在初始化的时候需要将自己添加到订阅器Dep中，那该如何添加呢？我们已经知道监听器Observer是在get函数执行添加了订阅者Watcher的操作，所以我们只要在订阅者Watcher初始化的时候触发对应的get函数去执行添加订阅者操作。那么，怎样去触发get函数？很简单，只需获取对应的属性值就可以触发了，因为我们已经用Object.defineProperty监听了所有属性。vue在这里做了个技巧处理，就是咋我们添加订阅者的时候，做一个判断，判断是否是事先缓存好的Dep.target，在订阅者添加成功后，把target重置null即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订阅者</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; vm vue对象</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; exp 属性值</span></span><br><span class="line"><span class="comment"> * @param &#123;Function&#125; cb 回调函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Watcher</span>(<span class="params">vm, exp, cb</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.vm = vm;</span><br><span class="line">    <span class="keyword">this</span>.exp = exp;</span><br><span class="line">    <span class="keyword">this</span>.cb = cb;</span><br><span class="line">    <span class="comment">// 将自己添加到订阅器</span></span><br><span class="line">    <span class="keyword">this</span>.value = <span class="keyword">this</span>.get();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Watcher.prototype = &#123;</span><br><span class="line">    update: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.run();</span><br><span class="line">    &#125;,</span><br><span class="line">    run: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> value = <span class="keyword">this</span>.vm.data[<span class="keyword">this</span>.exp];</span><br><span class="line">        <span class="keyword">var</span> oldVal = <span class="keyword">this</span>.value;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (value !== oldVal) &#123;</span><br><span class="line">            <span class="keyword">this</span>.value = value;</span><br><span class="line">            <span class="keyword">this</span>.cb.call(<span class="keyword">this</span>.vm, value, oldVal);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 缓存自己 做个标记</span></span><br><span class="line">        Dep.target = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 强制执行监听器里的get函数</span></span><br><span class="line">        <span class="comment">// this.vm.data[this.exp] 调用getter，添加一个订阅者sub，存入到全局变量subs</span></span><br><span class="line">        <span class="keyword">var</span> value = <span class="keyword">this</span>.vm.data[<span class="keyword">this</span>.exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 释放自己</span></span><br><span class="line">        Dep.target = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> $name = <span class="built_in">document</span>.querySelector(<span class="string">"#name"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给name属性添加一个订阅者到订阅器中，当属性发生变化后，触发回调</span></span><br><span class="line">    <span class="keyword">var</span> w = <span class="keyword">new</span> Watcher(<span class="keyword">this</span>, <span class="string">"name"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        $name.innerHTML = val;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里，其实已经实现了我们的双向数据绑定：能够根据初始数据初始化页面特定元素，同时当数据改变也能更新视图。</p><h3 id="5、实现Compile"><a href="#5、实现Compile" class="headerlink" title="5、实现Compile"></a>5、实现Compile</h3><p>步骤4整个过程都能有去解析DOM节点，而是直接固定节点进行替换。接下来我们就来实现一个解析器，完成一些解析和绑定工作。</p><ol><li>获取页面的DOM节点，遍历存入到文档碎片对象中；</li><li>解析出文本节点，匹配&#123;&#123;&#125;&#125;（暂时只做”&#123;&#123;&#125;&#125;”的解析），用初始化数据替换，并添加相应订阅者；</li><li>分离出节点的指令v-on、v-bind和v-model，绑定相应的事件和函数；</li></ol><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/BD96748FED95467A8B44B1AFFB499D44/6764" alt="image"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编译器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; el 根元素</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; vm vue对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Compile</span>(<span class="params">el, vm</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.vm = vm;</span><br><span class="line">    <span class="keyword">this</span>.el = <span class="built_in">document</span>.querySelector(el);</span><br><span class="line">    <span class="keyword">this</span>.fragment = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>.init();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Compile.prototype = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.el) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"this.el:"</span>, <span class="keyword">this</span>.el);</span><br><span class="line">            <span class="comment">// 移除页面元素生成文档碎片</span></span><br><span class="line">            <span class="keyword">this</span>.fragment = <span class="keyword">this</span>.nodeToFragment(<span class="keyword">this</span>.el);</span><br><span class="line">            <span class="comment">// 编译文档碎片</span></span><br><span class="line">            <span class="keyword">this</span>.compileElement(<span class="keyword">this</span>.fragment);</span><br><span class="line">            <span class="keyword">this</span>.el.appendChild(<span class="keyword">this</span>.fragment);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"DOM Selector is not exist"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 页面DOM节点转化成文档碎片</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    nodeToFragment: <span class="function"><span class="keyword">function</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> fragment = <span class="built_in">document</span>.createDocumentFragment();</span><br><span class="line">        <span class="keyword">var</span> child = el.firstChild;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 此处添加打印，出来的不是页面中原始的DOM，而是编译后的？</span></span><br><span class="line">        <span class="comment">// NodeList是引用关系，在编译后相应的值被替换了，这里打印出来的NodeList是后来被引用更新了的</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"el:"</span>, el);</span><br><span class="line">        <span class="comment">// console.log("el.firstChild:", el.firstChild.nodeValue);</span></span><br><span class="line">        <span class="keyword">while</span> (child) &#123;</span><br><span class="line">            <span class="comment">// append后，原el上的子节点被删除了，挂载在文档碎片上</span></span><br><span class="line">            fragment.appendChild(child);</span><br><span class="line">            child = el.firstChild;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译文档碎片，遍历到当前是文本节点则去编译文本节点，如果当前是元素节点，并且存在子节点，则继续递归遍历</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileElement: <span class="function"><span class="keyword">function</span>(<span class="params">fragment</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> childNodes = fragment.childNodes;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        [].slice.call(childNodes).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// var reg = /\&#123;\&#123;\s*(.+)\s*\&#125;\&#125;/g;</span></span><br><span class="line">            <span class="keyword">var</span> reg = <span class="regexp">/\&#123;\&#123;\s*((?:.|\n)+?)\s*\&#125;\&#125;/g</span>;</span><br><span class="line">            <span class="keyword">var</span> text = node.textContent;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (self.isElementNode(node)) &#123;</span><br><span class="line">                self.compileAttr(node);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (self.isTextNode(node) &amp;&amp; reg.test(text)) &#123;</span><br><span class="line">                reg.lastIndex = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">/* var match;</span></span><br><span class="line"><span class="comment">                while(match = reg.exec(text)) &#123;</span></span><br><span class="line"><span class="comment">                    self.compileText(node, match[1]);</span></span><br><span class="line"><span class="comment">                &#125; */</span></span><br><span class="line"></span><br><span class="line">                self.compileText(node, reg.exec(text)[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (node.childNodes &amp;&amp; node.childNodes.length) &#123;</span><br><span class="line">                self.compileElement(node);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileAttr: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> nodeAttrs = node.attributes;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Array</span>.prototype.forEach.call(nodeAttrs, <span class="function"><span class="keyword">function</span>(<span class="params">attr</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> attrName = attr.name;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 只对vue本身指令进行操作</span></span><br><span class="line">            <span class="keyword">if</span> (self.isDirective(attrName)) &#123;</span><br><span class="line">                <span class="keyword">var</span> exp = attr.value;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// v-on指令</span></span><br><span class="line">                <span class="keyword">if</span> (self.isOnDirective(attrName)) &#123;</span><br><span class="line">                    self.compileOn(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// v-bind指令</span></span><br><span class="line">                <span class="keyword">if</span>(self.isBindDirective(attrName)) &#123;</span><br><span class="line">                    self.compileBind(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// v-model</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (self.isModelDirective(attrName)) &#123;</span><br><span class="line">                    self.compileModel(node, self.vm, exp, attrName);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                node.removeAttribute(attrName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译文档碎片节点文本，即对标记替换</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileText: <span class="function"><span class="keyword">function</span>(<span class="params">node, exp</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> exps = exp.split(<span class="string">"."</span>);</span><br><span class="line">        <span class="keyword">var</span> initText = <span class="keyword">this</span>.vm.data[exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化视图</span></span><br><span class="line">        <span class="keyword">this</span>.updateText(node, initText);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加一个订阅者到订阅器</span></span><br><span class="line">        <span class="keyword">var</span> w = <span class="keyword">new</span> Watcher(<span class="keyword">this</span>.vm, exp, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">            self.updateText(node, val);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-on指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileOn: <span class="function"><span class="keyword">function</span>(<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// @xxx v-on:xxx</span></span><br><span class="line">        <span class="keyword">var</span> onRE = <span class="regexp">/^@|^v-on:/</span>;</span><br><span class="line">        <span class="keyword">var</span> eventType = attrName.replace(onRE, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> cb = vm.methods[exp];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (eventType &amp;&amp; cb) &#123;</span><br><span class="line">            node.addEventListener(eventType, cb.bind(vm), <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-bind指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileBind: <span class="function"><span class="keyword">function</span> (<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// :xxx v-bind:xxx</span></span><br><span class="line">        <span class="keyword">var</span> bindRE = <span class="regexp">/^:|^v-bind:/</span>;</span><br><span class="line">        <span class="keyword">var</span> attr = attrName.replace(bindRE, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> val = vm.data[exp];</span><br><span class="line"></span><br><span class="line">        node.setAttribute(attr, val);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编译v-model指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    compileModel: <span class="function"><span class="keyword">function</span>(<span class="params">node, vm, exp, attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> val = <span class="keyword">this</span>.vm.data[exp];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化视图</span></span><br><span class="line">        <span class="keyword">this</span>.modelUpdater(node, val);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加一个订阅者到订阅器</span></span><br><span class="line">        <span class="keyword">new</span> Watcher(<span class="keyword">this</span>.vm, exp, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            self.modelUpdater(node, value);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绑定input事件</span></span><br><span class="line">        node.addEventListener(<span class="string">"input"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> newVal = e.target.value;</span><br><span class="line">            <span class="keyword">if</span> (val === newVal) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            self.vm.data[exp] = newVal;</span><br><span class="line">            <span class="comment">// val = newVal;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新文档碎片相应的文本节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    updateText: <span class="function"><span class="keyword">function</span>(<span class="params">node, val</span>) </span>&#123;</span><br><span class="line">        node.textContent = <span class="keyword">typeof</span> val === <span class="string">"undefined"</span> ? <span class="string">""</span> : val;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * model更新节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    modelUpdater: <span class="function"><span class="keyword">function</span>(<span class="params">node, val, oldVal</span>) </span>&#123;</span><br><span class="line">        node.value = <span class="keyword">typeof</span> val == <span class="string">"undefined"</span> ? <span class="string">""</span> : val;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是vue指令，包括v-xxx:,:xxx,@xxx</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dirRE = <span class="regexp">/^v-|^@|^:/</span>;</span><br><span class="line">        <span class="keyword">return</span> dirRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-on指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isOnDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> onRE = <span class="regexp">/^v-on:|^@/</span>;</span><br><span class="line">        <span class="keyword">return</span> onRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-bind指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isBindDirective: <span class="function"><span class="keyword">function</span> (<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> bindRE = <span class="regexp">/^v-bind:|^:/</span>;</span><br><span class="line">        <span class="keyword">return</span> bindRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性是否是v-model指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isModelDirective: <span class="function"><span class="keyword">function</span>(<span class="params">attrName</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> mdRE = <span class="regexp">/^v-model/</span>;</span><br><span class="line">        <span class="keyword">return</span> mdRE.test(attrName);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断元素节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isElementNode: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> node.nodeType == <span class="number">1</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文本节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    isTextNode: <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> node.nodeType == <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; options 所有入参</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.vm = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = options.data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.methods = options.methods;</span><br><span class="line"></span><br><span class="line">    observe(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> Compile(options.el, <span class="keyword">this</span>.vm);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们就可以调用指令v-bind、v-on和v-model。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="undefined">            color: red;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-bind:class</span>=<span class="string">"myColor"</span>&gt;</span>&amp;#123;&amp;#123; name &amp;#125;&amp;#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">v-model</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"clickOk"</span>&gt;</span>Ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> myvm = <span class="keyword">new</span> MyVue(&#123;</span></span><br><span class="line"><span class="javascript">    el: <span class="string">"#demo"</span>,</span></span><br><span class="line"><span class="undefined">    data: &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">"hello word"</span>,</span></span><br><span class="line"><span class="javascript">        myColor: <span class="string">"red"</span></span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="javascript">        clickOk: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">"I am OK"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    myvm.data.name = <span class="string">"wawawa...vue was born"</span>;</span></span><br><span class="line"><span class="undefined">&#125;, 2000);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/0442953EE78A48C3B26FFE48B1731582/6629" alt="image"></p><h3 id="5、其他"><a href="#5、其他" class="headerlink" title="5、其他"></a>5、其他</h3><h4 id="5-1-proxy代理data"><a href="#5-1-proxy代理data" class="headerlink" title="5.1 proxy代理data"></a>5.1 proxy代理data</h4><p>可能注意到了，我们不管是在赋值还是取值，都是在myvm.data.someAttr上操作的，而在vue上我们习惯直接myvm.someAttr这种形式。怎样实现呢？同样，我们可以用Object.defineProperty对data所有属性做一个代理，即访问vue实例属性时，代理到data上。很简单，实现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 将数据拓展到vue的根，方便读取和设置</span><br><span class="line"> */</span><br><span class="line">MyVue.prototype.proxy = function(key) &#123;</span><br><span class="line">    var self = this;</span><br><span class="line"></span><br><span class="line">    Object.defineProperty(this, key, &#123;</span><br><span class="line">        enumerable: true,</span><br><span class="line">        configurable: true,</span><br><span class="line">        get: function proxyGetter() &#123;</span><br><span class="line">            return self.data[key];</span><br><span class="line">        &#125;,</span><br><span class="line">        set: function proxySetter(newVal) &#123;</span><br><span class="line">            self.data[key] = newVal;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/71B50262A5944F928CDA8CFD8944A538/6670" alt="image"></p><h4 id="5-2-parsePath"><a href="#5-2-parsePath" class="headerlink" title="5.2 parsePath"></a>5.2 parsePath</h4><p>上面对于data的操作只是到对于简单的基本类型属性，对于对象属性的改变该怎么更新到位呢？其实，只要深度遍历对象属性路径，就可以找到要访问属性值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据对象属性路径，最终获取值</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; obj 对象</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; path 路径</span></span><br><span class="line"><span class="comment"> * return 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parsePath</span>(<span class="params">obj, path</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bailRE = <span class="regexp">/[^\w.$]/</span>;</span><br><span class="line">    <span class="keyword">if</span> (bailRE.test(path)) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> segments = path.split(<span class="string">'.'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; segments.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!obj) &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        obj = obj[segments[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用这个方法替换我们的所有取值操作<br>vm[exp] =&gt; parsePath(vm, exp)</p><p><img src="https://note.youdao.com/yws/public/resource/b9cdada69234d36736d09235b516171c/xmlnote/BB5F59CFD0244D4991E13B5D35F88AF3/6709" alt="image"></p><h3 id="6、新增属性的双向数据绑定"><a href="#6、新增属性的双向数据绑定" class="headerlink" title="6、新增属性的双向数据绑定"></a>6、新增属性的双向数据绑定</h3><h4 id="6-1-给对象添加属性"><a href="#6-1-给对象添加属性" class="headerlink" title="6.1 给对象添加属性"></a>6.1 给对象添加属性</h4><p>Vue 不允许在已经创建的实例上动态添加新的根级响应式属性 (root-level reactive property)。然而它可以使用 Vue.set(object, key, value) 方法将响应属性添加到嵌套的对象上。<br>也就是我们需要在Vue原型上添加一个set方法去设置新添加的属性，新属性同样要进行监听和添加订阅者。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * vue的set方法，用于外部新增属性 Vue.$set(target, key, val)</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; target 数据</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; key 属性</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; val 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params">target, key, val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(target)) &#123;</span><br><span class="line">        target.length = <span class="built_in">Math</span>.max(target.length, key);</span><br><span class="line">        target.splice(key, <span class="number">1</span>, val);</span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (target.hasOwnProperty(key)) &#123;</span><br><span class="line">        target[key] = val;</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> ob = (target).$Observer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!ob) &#123;</span><br><span class="line">        target[key] = val;</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对新增属性定义监听</span></span><br><span class="line">    ob.defineReactive(target, key, val);</span><br><span class="line"></span><br><span class="line">    ob.dep.notify();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyVue.prototype.$set = set;</span><br></pre></td></tr></table></figure><h4 id="6-1-给数组对象添加属性"><a href="#6-1-给数组对象添加属性" class="headerlink" title="6.1 给数组对象添加属性"></a>6.1 给数组对象添加属性</h4><p>把数组看成一个特殊的对象，就很容易理解了，对于unshift、push和splice变异方法是添加了对象的属性的，需要对新加的属性进行监听和添加订阅者。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arrKeys = [<span class="string">"push"</span>, <span class="string">"pop"</span>, <span class="string">"shift"</span>, <span class="string">"unshift"</span>, <span class="string">"splice"</span>, <span class="string">"sort"</span>, <span class="string">"reverse"</span>];</span><br><span class="line"><span class="keyword">var</span> extendArr = [];</span><br><span class="line"></span><br><span class="line">arrKeys.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">    def(extendArr, key, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result,</span><br><span class="line">            arrProto = <span class="built_in">Array</span>.prototype,</span><br><span class="line">            ob = <span class="keyword">this</span>.$Observer,</span><br><span class="line">            arr = arrProto.slice.call(<span class="built_in">arguments</span>),</span><br><span class="line">            inserted,</span><br><span class="line">            index;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"push"</span>:</span><br><span class="line">                inserted = arr;</span><br><span class="line">                index = <span class="keyword">this</span>.length;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"unshift"</span>:</span><br><span class="line">                inserted = arr;</span><br><span class="line">                index = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"splice"</span>:</span><br><span class="line">                inserted = arr.slice(<span class="number">2</span>);</span><br><span class="line">                index = arr[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        result = arrProto[key].apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听新增数组对象属性</span></span><br><span class="line">        <span class="keyword">if</span> (inserted) &#123;</span><br><span class="line">            ob.observeArray(inserted);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ob.dep.notify();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arrayKeys = <span class="built_in">Object</span>.getOwnPropertyNames(extendArr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器构造函数</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data 被监听数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.dep = <span class="keyword">new</span> Dep();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data || <span class="keyword">typeof</span> data !== <span class="string">"object"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在每个object上添加一个observer</span></span><br><span class="line">    def(data, <span class="string">"$Observer"</span>, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 继承变异方法</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(data)) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把数组变异方法的处理，添加到原型链上</span></span><br><span class="line">        data.__proto__ = extendArr;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听数组对象属性</span></span><br><span class="line">        <span class="keyword">this</span>.observeArray(data);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">        <span class="keyword">this</span>.walk(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Observer.prototype = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    observeArray: <span class="function"><span class="keyword">function</span>(<span class="params">items</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"items:"</span>, items);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, l = items.length; i &lt; l; i++) &#123;</span><br><span class="line">            observe(items[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue-cli中遇到的坑</title>
      <link href="/2017/09/02/vue-cli%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
      <url>/2017/09/02/vue-cli%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Vue-cli-脚手架"><a href="#Vue-cli-脚手架" class="headerlink" title="Vue-cli 脚手架"></a>Vue-cli 脚手架</h2><p>项目构建自动化，错误查起来越来越不知所措，坑很多，踩过后要记录，防止踩第二遍</p><h4 id="vue-单文件-import-css-文件，不加-会报错"><a href="#vue-单文件-import-css-文件，不加-会报错" class="headerlink" title="vue 单文件@import css 文件，不加~会报错"></a>vue 单文件@import css 文件，不加<code>~</code>会报错</h4><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">@import &apos;assets/css/variable&apos;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[HMR] bundle has 1 errors</span><br><span class="line">172:176 ./~/css-loader?&#123;&quot;minimize&quot;:false,&quot;sourceMap&quot;:false&#125;!./~/vue-loader/lib/style-compiler?&#123;&quot;vue&quot;:true,&quot;id&quot;:&quot;data-v-be4708e4&quot;,&quot;scoped&quot;:true,&quot;hasInlineConfig&quot;:false&#125;!./~/stylus-loader?&#123;&quot;sourceMap&quot;:false&#125;!./~/vue-loader/lib/selector.js?type=styles&amp;index=0!./src/components/views/programs/Programs.vue</span><br><span class="line">Module build failed: Error: D:\appSoft\wampserver\wamp64\www\iHomed_vue\src\components\views\programs\Programs.vue:200:9</span><br><span class="line">   196| &#125;</span><br><span class="line">   197| &lt;/script&gt;</span><br><span class="line">   198|</span><br><span class="line">   199| &lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">   200| @import &apos;assets/css/variable&apos;</span><br><span class="line">----------------^</span><br><span class="line">   201|</span><br></pre></td></tr></table></figure><p>正确写法<code>@import &#39;~assets/css/variable&#39;</code></p><h4 id="vue-cli-中-config-index-js-配置说明"><a href="#vue-cli-中-config-index-js-配置说明" class="headerlink" title="vue-cli 中 config/index.js 配置说明"></a>vue-cli 中 config/index.js 配置说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  build: &#123;</span><br><span class="line">    env: require(&apos;./prod.env&apos;), // 使用 config/prod.env.js 中定义的编译环境</span><br><span class="line">    index: path.resolve(__dirname, &apos;../dist/index.html&apos;), // 编译输入的 index.html 文件</span><br><span class="line">    assetsRoot: path.resolve(__dirname, &apos;../dist&apos;), // 编译输出的静态资源路径</span><br><span class="line">    assetsSubDirectory: &apos;static&apos;, // 编译输出的二级目录</span><br><span class="line">    assetsPublicPath: &apos;/&apos;, // 编译发布的根目录，可配置为资源服务器域名或 CDN 域名</span><br><span class="line">    productionSourceMap: true, // 是否开启 cssSourceMap</span><br><span class="line">    // Gzip off by default as many popular static hosts such as</span><br><span class="line">    // Surge or Netlify already gzip all static assets for you.</span><br><span class="line">    // Before setting to `true`, make sure to:</span><br><span class="line">    // npm install --save-dev compression-webpack-plugin</span><br><span class="line">    productionGzip: false, // 是否开启 gzip</span><br><span class="line">    productionGzipExtensions: [&apos;js&apos;, &apos;css&apos;], // 需要使用 gzip 压缩的文件扩展名</span><br><span class="line">    // Run the build command with an extra argument to</span><br><span class="line">    // View the bundle analyzer report after build finishes:</span><br><span class="line">    // `npm run build --report`</span><br><span class="line">    // Set to `true` or `false` to always turn it on or off</span><br><span class="line">    bundleAnalyzerReport: process.env.npm_config_report</span><br><span class="line">  &#125;,</span><br><span class="line">  dev: &#123; // dev 环境</span><br><span class="line">    env: require(&apos;./dev.env&apos;), // 使用 config/dev.env.js 中定义的编译环境</span><br><span class="line">    port: 8084, // 运行测试页面的端口</span><br><span class="line">    autoOpenBrowser: true, // 自动在浏览器中打开</span><br><span class="line">    assetsSubDirectory: &apos;static&apos;, // 编译输出的二级目录</span><br><span class="line">    assetsPublicPath: &apos;/&apos;, // 编译发布的根目录，可配置为资源服务器域名或 CDN 域名</span><br><span class="line">    proxyTable: &#123;&#125;, // 需要 proxyTable 代理的接口（可跨域）</span><br><span class="line">    // CSS Sourcemaps off by default because relative paths are &quot;buggy&quot;</span><br><span class="line">    // with this option, according to the CSS-Loader README</span><br><span class="line">    // (https://github.com/webpack/css-loader#sourcemaps)</span><br><span class="line">    // In our experience, they generally work as expected,</span><br><span class="line">    // just be aware of this issue when enabling this option.</span><br><span class="line">    cssSourceMap: false  // 是否开启 cssSourceMap</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>曾经不易理解的两点<code>assetsSubDirectory</code>和<code>assetsPublicPath</code></p><ol><li><p>assetsSubDirectory<br>被 webpack 编译处理过的资源文件都会在这个 build.assetsRoot 目录下，如果 assetsRoot 值是<code>&quot;/web/app&quot;</code>，assetsSubDirectory 值为<code>&quot;static&quot;</code>，那么，webpack 将把所有资源编译到<code>web/app/static</code>目录下</p></li><li><p>assetsPublicPath<br>这个是通过 http 服务器运行的 url 路径，大多数情况下，这个是根目录（/）。如果你的后台框架对静态资源 url 前缀有要求，你仅需改变这个参数。比如不用本地的，而用线上的 CDN。</p></li></ol><h4 id="父子组件嵌套，各个钩子函数触发顺序"><a href="#父子组件嵌套，各个钩子函数触发顺序" class="headerlink" title="父子组件嵌套，各个钩子函数触发顺序"></a>父子组件嵌套，各个钩子函数触发顺序</h4><p>偶然看到这个问题：vue 中父子组件各个钩子函数触发顺序是怎样的？一时还真背问到了，在项目中添加打印才发现是这样子的</p><p><img src="https://note.youdao.com/yws/public/resource/bb7792e904a30442f11cb6c88c33cce8/xmlnote/E40E6B0ED1F5479F909A69469C83D99A/12039" alt=""></p><p>顺序是：先依次触发父级组件<code>beforeCreate</code>、<code>create</code>和<code>beforeMounte</code>，再依次触发子级组件<code>beforeCreate</code>、<code>create</code>、<code>beforeMounte</code>和<code>mounted</code>，最后父级组件<code>mounted</code></p><h4 id="父子组件之间通信，兄弟组件之间通信"><a href="#父子组件之间通信，兄弟组件之间通信" class="headerlink" title="父子组件之间通信，兄弟组件之间通信"></a>父子组件之间通信，兄弟组件之间通信</h4><p>这个问题基本清晰，在这归纳一下</p><h5 id="1-父组件数据传给子组件"><a href="#1-父组件数据传给子组件" class="headerlink" title="1. 父组件数据传给子组件"></a>1. 父组件数据传给子组件</h5><p>通过<code>props</code>属性传递</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent-component</span> <span class="attr">:parent-data</span>=<span class="string">"pdata"</span>&gt;</span><span class="tag">&lt;/<span class="name">parent-component</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    parentData: &#123;</span><br><span class="line">      type: <span class="built_in">String</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="string">''</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-子组件传数据给父组件"><a href="#2-子组件传数据给父组件" class="headerlink" title="2. 子组件传数据给父组件"></a>2. 子组件传数据给父组件</h5><p>使用<code>$emit</code>派发</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent-component</span> <span class="attr">:parent-data:sync</span>=<span class="string">"pdata"</span> @<span class="attr">handle-callback</span>=<span class="string">"handlerCallback"</span>&gt;</span><span class="tag">&lt;/<span class="name">parent-component</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handlerCallback(params) &#123;</span><br><span class="line">      <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'handleCallback'</span>, params)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'update:parentData'</span>, someData)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-兄弟组件数据传递"><a href="#3-兄弟组件数据传递" class="headerlink" title="3. 兄弟组件数据传递"></a>3. 兄弟组件数据传递</h5><ol><li>对于大型项目，用 vue 官方推荐的 vuex</li><li><p>EventBus</p><ul><li><p>提取 bus.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">const</span> bus = <span class="keyword">new</span> Vue()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> bus</span><br></pre></td></tr></table></figure></li><li><p>兄弟组件 1 发送数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">'./bus'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'busEvent1'</span>, someData)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>兄弟组件 2 接收数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">'./bus'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>.$on(<span class="string">'busEvent1'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(data)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>子组件 A <code>$emit</code>派发某个事件，再由父组件<code>@handle-callback=&quot;handlerCallback&quot;</code>监听获取数据，然后，父组件<code>$refs</code>直接访问到子组件 B 的方法，从而间接实现从子组件 A 到子组件 B 的数据传递</p></li></ol><h4 id="props-在子组件中被重写报错"><a href="#props-在子组件中被重写报错" class="headerlink" title="props 在子组件中被重写报错"></a>props 在子组件中被重写报错</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue.esm.js?<span class="number">06e7</span>:<span class="number">591</span> [Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop<span class="string">'s value. Prop being mutated: "isShow"</span></span><br></pre></td></tr></table></figure><p><strong>解决方案</strong><br><code>props</code>传过来的参数通过<code>Vue.$emit</code>提交修改</p><h4 id="在props和data中使用this"><a href="#在props和data中使用this" class="headerlink" title="在props和data中使用this"></a>在<code>props</code>和<code>data</code>中使用<code>this</code></h4><p>在 Vue2.2.2 或更高版本才能这样使用，低于这个版本时，注入的值会在<code>props</code>和<code>data</code>初始化之后得到。</p><h4 id="对于高阶插件-组件库，解决组件与其子孙组件数据传输问题"><a href="#对于高阶插件-组件库，解决组件与其子孙组件数据传输问题" class="headerlink" title="对于高阶插件/组件库，解决组件与其子孙组件数据传输问题"></a>对于高阶插件/组件库，解决组件与其子孙组件数据传输问题</h4><ol><li><p>解决方案一：<code>$attrs</code>和<code>$listener</code></p><p>使用属性和方法不通过<code>props</code>传递，在子孙组件中直接用<code>$attrs</code>和<code>$listeners</code>接收。不过支持 v2.4.0+。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父级组件</span></span><br><span class="line">&lt;ul id=<span class="string">"app6"</span>&gt;</span><br><span class="line">&lt;item</span><br><span class="line"><span class="class"><span class="keyword">class</span></span>=<span class="string">"item"</span></span><br><span class="line">:model=<span class="string">"treeData"</span></span><br><span class="line">:count=<span class="string">"123"</span></span><br><span class="line">@abc=<span class="string">"function()&#123;&#125;"</span></span><br><span class="line">&gt;<span class="xml"><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 子孙组件</span></span><br><span class="line"><span class="regexp">inheritAttrs: false,</span></span><br><span class="line"><span class="regexp">created () &#123;</span></span><br><span class="line"><span class="regexp">    let attrs = this.$attrs;</span></span><br><span class="line"><span class="regexp">    console.log('mode:', attrs.mode);</span></span><br><span class="line"><span class="regexp">    console.log('count:', attrs.count);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    let listeners = this.$listeners;</span></span><br><span class="line"><span class="regexp">    console.log('bac:', listeners.abc);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>解决方案二：<code>provide/inject</code></p><p>父级组件传入<code>provide</code>数据选项，子孙组件注入<code>inject</code>数据。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line">provide: &#123;</span><br><span class="line">  foo: <span class="string">'bar'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子孙组件</span></span><br><span class="line">inject: [<span class="string">'foo'</span>] <span class="comment">// or inject: &#123; name: 'foo', defult: '' &#125;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue-cli </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
